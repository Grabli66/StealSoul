var $hx_exports = typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this;
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this;
var $hxClasses = $hxClasses || {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class HxOverrides {
	static strDate(s) {
		switch(s.length) {
		case 8:
			let k = s.split(":");
			let d = new Date();
			d["setTime"](0);
			d["setUTCHours"](k[0]);
			d["setUTCMinutes"](k[1]);
			d["setUTCSeconds"](k[2]);
			return d;
		case 10:
			let k1 = s.split("-");
			return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
		case 19:
			let k2 = s.split(" ");
			let y = k2[0].split("-");
			let t = k2[1].split(":");
			return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
		default:
			throw haxe_Exception.thrown("Invalid date format : " + s);
		}
	}
	static cca(s,index) {
		let x = s.charCodeAt(index);
		if(x != x) {
			return undefined;
		}
		return x;
	}
	static substr(s,pos,len) {
		if(len == null) {
			len = s.length;
		} else if(len < 0) {
			if(pos == 0) {
				len = s.length + len;
			} else {
				return "";
			}
		}
		return s.substr(pos,len);
	}
	static remove(a,obj) {
		let i = a.indexOf(obj);
		if(i == -1) {
			return false;
		}
		a.splice(i,1);
		return true;
	}
	static now() {
		return Date.now();
	}
}
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
class Lambda {
	static array(it) {
		let a = [];
		let i = $getIterator(it);
		while(i.hasNext()) {
			let i1 = i.next();
			a.push(i1);
		}
		return a;
	}
}
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
class Main {
	static main() {
		iron_object_BoneAnimation.skinMaxBones = 33;
		iron_object_LightObject.cascadeCount = 4;
		iron_object_LightObject.cascadeSplitFactor = 0.800000011920929;
		armory_system_Starter.main("GameScene",0,false,true,false,1920,1080,1,true,armory_renderpath_RenderPathCreator.get);
	}
}
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Math.__name__ = "Math";
class Reflect {
	static field(o,field) {
		try {
			return o[field];
		} catch( _g ) {
			return null;
		}
	}
	static setProperty(o,field,value) {
		let tmp;
		let tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[field] = value;
		}
	}
	static fields(o) {
		let a = [];
		if(o != null) {
			let hasOwnProperty = Object.prototype.hasOwnProperty;
			for( var f in o ) {
			if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
				a.push(f);
			}
			}
		}
		return a;
	}
	static isFunction(f) {
		if(typeof(f) == "function") {
			return !(f.__name__ || f.__ename__);
		} else {
			return false;
		}
	}
	static isObject(v) {
		if(v == null) {
			return false;
		}
		let t = typeof(v);
		if(!(t == "string" || t == "object" && v.__enum__ == null)) {
			if(t == "function") {
				return (v.__name__ || v.__ename__) != null;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
}
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		if(x != null) {
			let _g = 0;
			let _g1 = x.length;
			while(_g < _g1) {
				let i = _g++;
				let c = x.charCodeAt(i);
				if(c <= 8 || c >= 14 && c != 32 && c != 45) {
					let nc = x.charCodeAt(i + 1);
					let v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
					if(isNaN(v)) {
						return null;
					} else {
						return v;
					}
				}
			}
		}
		return null;
	}
	static random(x) {
		if(x <= 0) {
			return 0;
		} else {
			return Math.floor(Math.random() * x);
		}
	}
}
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
class StringTools {
	static replace(s,sub,by) {
		return s.split(sub).join(by);
	}
}
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
class Type {
	static createInstance(cl,args) {
		let ctor = Function.prototype.bind.apply(cl,[null].concat(args));
		return new (ctor);
	}
	static createEnum(e,constr,params) {
		let f = Reflect.field(e,constr);
		if(f == null) {
			throw haxe_Exception.thrown("No such constructor " + constr);
		}
		if(Reflect.isFunction(f)) {
			if(params == null) {
				throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
			}
			return f.apply(e,params);
		}
		if(params != null && params.length != 0) {
			throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
		}
		return f;
	}
	static getInstanceFields(c) {
		let result = [];
		while(c != null) {
			let _g = 0;
			let _g1 = Object.getOwnPropertyNames(c.prototype);
			while(_g < _g1.length) {
				let name = _g1[_g];
				++_g;
				switch(name) {
				case "__class__":case "__properties__":case "constructor":
					break;
				default:
					if(result.indexOf(name) == -1) {
						result.push(name);
					}
				}
			}
			c = c.__super__;
		}
		return result;
	}
}
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
class UInt {
	static gt(a,b) {
		let aNeg = a < 0;
		let bNeg = b < 0;
		if(aNeg != bNeg) {
			return aNeg;
		} else {
			return a > b;
		}
	}
	static gte(a,b) {
		let aNeg = a < 0;
		let bNeg = b < 0;
		if(aNeg != bNeg) {
			return aNeg;
		} else {
			return a >= b;
		}
	}
	static toFloat(this1) {
		let int = this1;
		if(int < 0) {
			return 4294967296.0 + int;
		} else {
			return int + 0.0;
		}
	}
}
var arm_MoveDirection = $hxEnums["arm.MoveDirection"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"arm.MoveDirection",toString:$estr}
	,Forward: {_hx_name:"Forward",_hx_index:1,__enum__:"arm.MoveDirection",toString:$estr}
	,Backward: {_hx_name:"Backward",_hx_index:2,__enum__:"arm.MoveDirection",toString:$estr}
};
arm_MoveDirection.__constructs__ = [arm_MoveDirection.None,arm_MoveDirection.Forward,arm_MoveDirection.Backward];
var arm_SideDirection = $hxEnums["arm.SideDirection"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"arm.SideDirection",toString:$estr}
	,Left: {_hx_name:"Left",_hx_index:1,__enum__:"arm.SideDirection",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:2,__enum__:"arm.SideDirection",toString:$estr}
};
arm_SideDirection.__constructs__ = [arm_SideDirection.None,arm_SideDirection.Left,arm_SideDirection.Right];
var arm_AnimationState = $hxEnums["arm.AnimationState"] = { __ename__:true,__constructs__:null
	,Atack: {_hx_name:"Atack",_hx_index:0,__enum__:"arm.AnimationState",toString:$estr}
	,Block: {_hx_name:"Block",_hx_index:1,__enum__:"arm.AnimationState",toString:$estr}
	,Idle: {_hx_name:"Idle",_hx_index:2,__enum__:"arm.AnimationState",toString:$estr}
	,Walk: ($_=function(move,side) { return {_hx_index:3,move:move,side:side,__enum__:"arm.AnimationState",toString:$estr}; },$_._hx_name="Walk",$_.__params__ = ["move","side"],$_)
	,Run: ($_=function(move) { return {_hx_index:4,move:move,__enum__:"arm.AnimationState",toString:$estr}; },$_._hx_name="Run",$_.__params__ = ["move"],$_)
	,Roll: ($_=function(move,side) { return {_hx_index:5,move:move,side:side,__enum__:"arm.AnimationState",toString:$estr}; },$_._hx_name="Roll",$_.__params__ = ["move","side"],$_)
};
arm_AnimationState.__constructs__ = [arm_AnimationState.Atack,arm_AnimationState.Block,arm_AnimationState.Idle,arm_AnimationState.Walk,arm_AnimationState.Run,arm_AnimationState.Roll];
class iron_Trait {
	constructor() {
		if(iron_Trait._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this._render2D = null;
		this._render = null;
		this._lateUpdate = null;
		this._update = null;
		this._remove = null;
		this._init = null;
		this._add = null;
		this.name = "";
	}
	remove() {
		this.object.removeTrait(this);
	}
	notifyOnAdd(f) {
		if(this._add == null) {
			this._add = [];
		}
		this._add.push(f);
	}
	notifyOnInit(f) {
		if(this._init == null) {
			this._init = [];
		}
		this._init.push(f);
		iron_App.notifyOnInit(f);
	}
	notifyOnRemove(f) {
		if(this._remove == null) {
			this._remove = [];
		}
		this._remove.push(f);
	}
	notifyOnUpdate(f) {
		if(this._update == null) {
			this._update = [];
		}
		this._update.push(f);
		iron_App.notifyOnUpdate(f);
	}
	removeUpdate(f) {
		HxOverrides.remove(this._update,f);
		iron_App.removeUpdate(f);
	}
	notifyOnLateUpdate(f) {
		if(this._lateUpdate == null) {
			this._lateUpdate = [];
		}
		this._lateUpdate.push(f);
		iron_App.notifyOnLateUpdate(f);
	}
	removeLateUpdate(f) {
		HxOverrides.remove(this._lateUpdate,f);
		iron_App.removeLateUpdate(f);
	}
	notifyOnRender(f) {
		if(this._render == null) {
			this._render = [];
		}
		this._render.push(f);
		iron_App.notifyOnRender(f);
	}
	removeRender(f) {
		HxOverrides.remove(this._render,f);
		iron_App.removeRender(f);
	}
	notifyOnRender2D(f) {
		if(this._render2D == null) {
			this._render2D = [];
		}
		this._render2D.push(f);
		iron_App.notifyOnRender2D(f);
	}
	removeRender2D(f) {
		HxOverrides.remove(this._render2D,f);
		iron_App.removeRender2D(f);
	}
}
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = "iron.Trait";
Object.assign(iron_Trait.prototype, {
	__class__: iron_Trait
	,name: null
	,object: null
	,_add: null
	,_init: null
	,_remove: null
	,_update: null
	,_lateUpdate: null
	,_render: null
	,_render2D: null
});
class arm_PlayerController extends iron_Trait {
	constructor() {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.zVec = new iron_math_Vec4(0.0,0.0,1.0);
		this.xVec = new iron_math_Vec4(1.0,0.0,0.0);
		this.animState = arm_AnimationState.Idle;
		super._hx_constructor();
		let _gthis = this;
		this.notifyOnInit(function() {
			armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(_gthis,_gthis.preUpdate));
			_gthis.animation = _gthis.getAnimimation(_gthis.object);
			_gthis.body = _gthis.getRigidBody(_gthis.object);
			_gthis.camera = _gthis.object.getChild("CameraAxis");
			_gthis.transform = _gthis.object.transform;
		});
		this.notifyOnUpdate($bind(this,this.onUpdate));
	}
	getAnimimation(o) {
		if(o.animation != null) {
			return o.animation;
		}
		let _g = 0;
		let _g1 = o.children;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			let co = this.getAnimimation(c);
			if(co != null) {
				return co;
			}
		}
		return null;
	}
	getRigidBody(o) {
		let b = o.getTrait(armory_trait_physics_bullet_RigidBody);
		if(b != null) {
			return b;
		}
		let _g = 0;
		let _g1 = o.children;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			let co = this.getRigidBody(c);
			if(co != null) {
				return co;
			}
		}
		return null;
	}
	playAnimation(name,onEnd,blend) {
		if(blend == null) {
			blend = 0.4;
		}
		if(this.animation.action != name) {
			this.animation.play(name,onEnd,blend);
		}
	}
	updateAnimState() {
		let _gthis = this;
		let _g = this.animState;
		switch(_g._hx_index) {
		case 0:
			this.playAnimation("Attack1_Player",function() {
				_gthis.animState = arm_AnimationState.Idle;
			});
			break;
		case 1:
			this.playAnimation("Block1_Player");
			break;
		case 3:
			let move = _g.move;
			let side = _g.side;
			switch(move._hx_index) {
			case 0:
				switch(side._hx_index) {
				case 0:
					this.playAnimation("Idle_Player");
					break;
				case 1:
					this.playAnimation("JogLeft_Player");
					break;
				case 2:
					this.playAnimation("JogRight_Player");
					break;
				}
				break;
			case 1:
				switch(side._hx_index) {
				case 0:
					this.playAnimation("Walk_Player");
					break;
				case 1:
					this.playAnimation("JogForwardLeft_Player");
					break;
				case 2:
					this.playAnimation("JogForwardRight_Player");
					break;
				}
				break;
			case 2:
				switch(side._hx_index) {
				case 0:
					this.playAnimation("WalkBack_Player");
					break;
				case 1:
					this.playAnimation("JogBackwardLeft_Player");
					break;
				case 2:
					this.playAnimation("JogBackwardRight_Player");
					break;
				}
				break;
			}
			break;
		case 4:
			let move1 = _g.move;
			switch(move1._hx_index) {
			case 0:
				this.playAnimation("Idle_Player");
				break;
			case 1:
				this.playAnimation("Run_Player");
				break;
			case 2:
				this.playAnimation("Idle_Player");
				break;
			}
			break;
		default:
			this.playAnimation("Idle_Player");
		}
	}
	updateInput() {
		let kb = iron_system_Input.getKeyboard();
		let mo = iron_system_Input.getMouse();
		let _g = this.animState;
		switch(_g._hx_index) {
		case 0:
			this.updateAnimState();
			return;
		case 5:
			let _g1 = _g.move;
			let _g2 = _g.side;
			this.updateAnimState();
			return;
		default:
		}
		this.animState = arm_AnimationState.Idle;
		if(mo.down(iron_system_Keyboard.keyCode(37))) {
			this.animState = arm_AnimationState.Atack;
		} else if(mo.down(iron_system_Keyboard.keyCode(39))) {
			this.animState = arm_AnimationState.Block;
		} else if(kb.down(iron_system_Keyboard.keyCode(87))) {
			if(kb.down(iron_system_Keyboard.keyCode(16))) {
				this.animState = arm_AnimationState.Run(arm_MoveDirection.Forward);
			} else {
				let side = arm_SideDirection.None;
				if(kb.down(iron_system_Keyboard.keyCode(65))) {
					side = arm_SideDirection.Left;
				} else if(kb.down(iron_system_Keyboard.keyCode(68))) {
					side = arm_SideDirection.Right;
				}
				this.animState = arm_AnimationState.Walk(arm_MoveDirection.Forward,side);
			}
		} else if(kb.down(iron_system_Keyboard.keyCode(83))) {
			let side = arm_SideDirection.None;
			if(kb.down(iron_system_Keyboard.keyCode(65))) {
				side = arm_SideDirection.Left;
			} else if(kb.down(iron_system_Keyboard.keyCode(68))) {
				side = arm_SideDirection.Right;
			}
			this.animState = arm_AnimationState.Walk(arm_MoveDirection.Backward,side);
		} else if(kb.down(iron_system_Keyboard.keyCode(65))) {
			this.animState = arm_AnimationState.Walk(arm_MoveDirection.None,arm_SideDirection.Left);
		} else if(kb.down(iron_system_Keyboard.keyCode(68))) {
			this.animState = arm_AnimationState.Walk(arm_MoveDirection.None,arm_SideDirection.Right);
		}
		this.updateAnimState();
	}
	onUpdate() {
		this.updateInput();
	}
	preUpdate() {
		if(iron_system_Input.occupied || !this.body.ready) {
			return;
		}
		let mo = iron_system_Input.getMouse();
		let kb = iron_system_Input.getKeyboard();
		if(mo.down() && !mo.locked) {
			mo.lock();
		}
		if(kb.down(iron_system_Keyboard.keyCode(27))) {
			mo.unlock();
		}
		this.camera.transform.rotate(this.zVec,-mo.movementY / 250);
		this.transform.rotate(this.zVec,-mo.movementX / 250);
		this.body.syncTransform();
	}
}
$hxClasses["arm.PlayerController"] = arm_PlayerController;
arm_PlayerController.__name__ = "arm.PlayerController";
arm_PlayerController.__super__ = iron_Trait;
Object.assign(arm_PlayerController.prototype, {
	__class__: arm_PlayerController
	,animState: null
	,animation: null
	,body: null
	,camera: null
	,transform: null
	,xVec: null
	,zVec: null
});
class armory_data_Config {
	static load(done) {
		try {
			iron_data_Data.getBlob("config.arm",function(blob) {
				armory_data_Config.configLoaded = true;
				armory_data_Config.raw = JSON.parse(blob.toString());
				done();
			});
		} catch( _g ) {
			done();
		}
	}
	static save() {
		let path = iron_data_Data.dataPath + "config.arm";
		let bytes = haxe_io_Bytes.ofString(JSON.stringify(armory_data_Config.raw));
		Krom.fileSaveBytes(path,bytes.b.bufferValue);
	}
}
$hxClasses["armory.data.Config"] = armory_data_Config;
armory_data_Config.__name__ = "armory.data.Config";
class armory_logicnode_LogicNode {
	constructor(tree) {
		this.name = "";
		this.outputs = [];
		this.inputs = [];
		this.tree = tree;
	}
	watch(b) {
		let nodes = armory_trait_internal_DebugConsole.watchNodes;
		if(b) {
			nodes.push(this);
		} else {
			HxOverrides.remove(nodes,this);
		}
	}
	preallocInputs(amount) {
		this.inputs.length = amount;
	}
	preallocOutputs(amount) {
		this.outputs.length = amount;
		let _g = 0;
		let _g1 = this.outputs.length;
		while(_g < _g1) {
			let i = _g++;
			this.outputs[i] = [];
		}
	}
	run(from) {
	}
	runOutput(i) {
		if(i >= this.outputs.length) {
			return;
		}
		let _g = 0;
		let _g1 = this.outputs[i];
		while(_g < _g1.length) {
			let outLink = _g1[_g];
			++_g;
			outLink.toNode.run(outLink.toIndex);
		}
	}
	get(from) {
		return this;
	}
	set(value) {
	}
	static addLink(fromNode,toNode,fromIndex,toIndex) {
		let link = new armory_logicnode_LogicNodeLink(fromNode,toNode,fromIndex,toIndex);
		if(toNode.inputs.length <= toIndex) {
			toNode.inputs.length = toIndex + 1;
		}
		toNode.inputs[toIndex] = link;
		let fromNodeOuts = fromNode.outputs;
		let outLen = fromNodeOuts.length;
		if(outLen <= fromIndex) {
			fromNodeOuts.length = fromIndex + 1;
			let _g = outLen;
			let _g1 = fromIndex + 1;
			while(_g < _g1) {
				let i = _g++;
				fromNodeOuts[i] = [];
			}
		}
		fromNodeOuts[fromIndex].push(link);
		return link;
	}
}
$hxClasses["armory.logicnode.LogicNode"] = armory_logicnode_LogicNode;
armory_logicnode_LogicNode.__name__ = "armory.logicnode.LogicNode";
Object.assign(armory_logicnode_LogicNode.prototype, {
	__class__: armory_logicnode_LogicNode
	,tree: null
	,inputs: null
	,outputs: null
	,name: null
});
class armory_logicnode_LogicNodeLink {
	constructor(fromNode,toNode,fromIndex,toIndex) {
		this.fromNode = fromNode;
		this.toNode = toNode;
		this.fromIndex = fromIndex;
		this.toIndex = toIndex;
	}
	get() {
		return this.fromNode.get(this.fromIndex);
	}
	set(value) {
		this.fromNode.set(value);
	}
}
$hxClasses["armory.logicnode.LogicNodeLink"] = armory_logicnode_LogicNodeLink;
armory_logicnode_LogicNodeLink.__name__ = "armory.logicnode.LogicNodeLink";
Object.assign(armory_logicnode_LogicNodeLink.prototype, {
	__class__: armory_logicnode_LogicNodeLink
	,fromNode: null
	,toNode: null
	,fromIndex: null
	,toIndex: null
});
class armory_logicnode_LogicTree extends iron_Trait {
	constructor() {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.paused = false;
		this.loopContinue = false;
		this.loopBreak = false;
		super._hx_constructor();
	}
	add() {
	}
	pause() {
		if(this.paused) {
			return;
		}
		this.paused = true;
		if(this._update != null) {
			let _g = 0;
			let _g1 = this._update;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeUpdate(f);
			}
		}
		if(this._lateUpdate != null) {
			let _g = 0;
			let _g1 = this._lateUpdate;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeLateUpdate(f);
			}
		}
	}
	resume() {
		if(!this.paused) {
			return;
		}
		this.paused = false;
		if(this._update != null) {
			let _g = 0;
			let _g1 = this._update;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.notifyOnUpdate(f);
			}
		}
		if(this._lateUpdate != null) {
			let _g = 0;
			let _g1 = this._lateUpdate;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.notifyOnLateUpdate(f);
			}
		}
	}
}
$hxClasses["armory.logicnode.LogicTree"] = armory_logicnode_LogicTree;
armory_logicnode_LogicTree.__name__ = "armory.logicnode.LogicTree";
armory_logicnode_LogicTree.__super__ = iron_Trait;
Object.assign(armory_logicnode_LogicTree.prototype, {
	__class__: armory_logicnode_LogicTree
	,loopBreak: null
	,loopContinue: null
	,paused: null
});
class armory_math_Helper {
	static getAngle(va,vb) {
		let x = 0.0;
		let y = 0.0;
		let z = 1.0;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let vn_x = x;
		let vn_y = y;
		let vn_z = z;
		let vn_w = 1.0;
		let dot = va.x * vb.x + va.y * vb.y + va.z * vb.z;
		let det = va.x * vb.y * vn_z + vb.x * vn_y * va.z + vn_x * va.y * vb.z - va.z * vb.y * vn_x - vb.z * vn_y * va.x - vn_z * va.y * vb.x;
		return Math.atan2(det,dot);
	}
	static moveTowards(current,target,delta) {
		let v1 = new iron_math_Vec4(current.x,current.y,current.z,current.w);
		let x = target.x;
		let y = target.y;
		let z = target.z;
		let w = target.w;
		if(w == null) {
			w = 1.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let v2_x = x;
		let v2_y = y;
		let v2_z = z;
		let v2_w = w;
		let x1 = v2_x;
		let y1 = v2_y;
		let z1 = v2_z;
		let w1 = v2_w;
		if(w1 == null) {
			w1 = 1.0;
		}
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let v_x = x1;
		let v_y = y1;
		let v_z = z1;
		let v_w = w1;
		v_x -= v1.x;
		v_y -= v1.y;
		v_z -= v1.z;
		let length = Math.sqrt(v_x * v_x + v_y * v_y + v_z * v_z);
		if(length <= delta || length == 0.0) {
			v1.x = v2_x;
			v1.y = v2_y;
			v1.z = v2_z;
			v1.w = v2_w;
		} else {
			let f = 1.0 / length * delta;
			v_x *= f;
			v_y *= f;
			v_z *= f;
			v1.x += v_x;
			v1.y += v_y;
			v1.z += v_z;
		}
		return v1;
	}
	static radToDeg(radians) {
		return 180 / Math.PI * radians;
	}
	static degToRad(degrees) {
		return Math.PI / 180 * degrees;
	}
	static roundfp(f,precision) {
		if(precision == null) {
			precision = 2;
		}
		f *= Math.pow(10,precision);
		return Math.round(f) / Math.pow(10,precision);
	}
	static clamp(f,min,max) {
		if(f < min) {
			return min;
		} else if(f > max) {
			return max;
		} else {
			return f;
		}
	}
	static clampInt(f,min,max) {
		if(f < min) {
			return min;
		} else if(f > max) {
			return max;
		} else {
			return f;
		}
	}
	static map(value,leftMin,leftMax,rightMin,rightMax) {
		return rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin);
	}
	static mapInt(value,leftMin,leftMax,rightMin,rightMax) {
		let result = rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin) | 0;
		return result;
	}
	static mapClamped(value,leftMin,leftMax,rightMin,rightMax) {
		if(value >= leftMax) {
			return rightMax;
		}
		if(value <= leftMin) {
			return rightMin;
		}
		return rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin);
	}
	static sign(value) {
		if(value == 0) {
			return 0;
		}
		if(value < 0) {
			return -1.0;
		} else {
			return 1.0;
		}
	}
	static log2(v) {
		return Math.log(v) * 1.44269504089;
	}
}
$hxClasses["armory.math.Helper"] = armory_math_Helper;
armory_math_Helper.__name__ = "armory.math.Helper";
class armory_object_TransformExtension {
	static overlap(t1,t2) {
		if(t1.world.self._30 + t1.dim.x / 2 > t2.world.self._30 - t2.dim.x / 2 && t1.world.self._30 - t1.dim.x / 2 < t2.world.self._30 + t2.dim.x / 2 && t1.world.self._31 + t1.dim.y / 2 > t2.world.self._31 - t2.dim.y / 2 && t1.world.self._31 - t1.dim.y / 2 < t2.world.self._31 + t2.dim.y / 2 && t1.world.self._32 + t1.dim.z / 2 > t2.world.self._32 - t2.dim.z / 2) {
			return t1.world.self._32 - t1.dim.z / 2 < t2.world.self._32 + t2.dim.z / 2;
		} else {
			return false;
		}
	}
	static getWorldPosition(t) {
		return new iron_math_Vec4(t.world.self._30,t.world.self._31,t.world.self._32,1.0);
	}
	static getWorldVecFromLocal(t,localVec) {
		let _this = new iron_math_Vec4(localVec.x,localVec.y,localVec.z,localVec.w);
		let m = t.worldUnpack;
		let x = _this.x;
		let y = _this.y;
		let z = _this.z;
		let w = _this.w;
		_this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
		_this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
		_this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
		_this.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
		return _this;
	}
	static getLocalVecFromWorld(t,worldVec) {
		let _this = new iron_math_Vec4(worldVec.x,worldVec.y,worldVec.z,worldVec.w);
		let _this1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		let m = t.worldUnpack;
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		let m1;
		if(det == 0.0) {
			_this1.self._00 = 1.0;
			_this1.self._01 = 0.0;
			_this1.self._02 = 0.0;
			_this1.self._03 = 0.0;
			_this1.self._10 = 0.0;
			_this1.self._11 = 1.0;
			_this1.self._12 = 0.0;
			_this1.self._13 = 0.0;
			_this1.self._20 = 0.0;
			_this1.self._21 = 0.0;
			_this1.self._22 = 1.0;
			_this1.self._23 = 0.0;
			_this1.self._30 = 0.0;
			_this1.self._31 = 0.0;
			_this1.self._32 = 0.0;
			_this1.self._33 = 1.0;
			m1 = _this1;
		} else {
			det = 1.0 / det;
			_this1.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this1.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this1.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this1.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this1.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this1.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this1.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this1.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this1.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this1.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this1.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this1.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this1.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this1.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this1.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this1.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			m1 = _this1;
		}
		let x = _this.x;
		let y = _this.y;
		let z = _this.z;
		let w = _this.w;
		_this.x = m1.self._00 * x + m1.self._10 * y + m1.self._20 * z + m1.self._30 * w;
		_this.y = m1.self._01 * x + m1.self._11 * y + m1.self._21 * z + m1.self._31 * w;
		_this.z = m1.self._02 * x + m1.self._12 * y + m1.self._22 * z + m1.self._32 * w;
		_this.w = m1.self._03 * x + m1.self._13 * y + m1.self._23 * z + m1.self._33 * w;
		return _this;
	}
	static worldVecToOrientation(t,worldVec) {
		let _this = t.world;
		let x = _this.self._00;
		let y = _this.self._01;
		let z = _this.self._02;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let right_x = x;
		let right_y = y;
		let right_z = z;
		let right_w = 1.0;
		let n = Math.sqrt(right_x * right_x + right_y * right_y + right_z * right_z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			right_x *= invN;
			right_y *= invN;
			right_z *= invN;
		}
		let f = worldVec.x;
		right_x *= f;
		right_y *= f;
		right_z *= f;
		let _this1 = t.world;
		let x1 = _this1.self._10;
		let y1 = _this1.self._11;
		let z1 = _this1.self._12;
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let look_x = x1;
		let look_y = y1;
		let look_z = z1;
		let look_w = 1.0;
		let n1 = Math.sqrt(look_x * look_x + look_y * look_y + look_z * look_z);
		if(n1 > 0.0) {
			let invN = 1.0 / n1;
			look_x *= invN;
			look_y *= invN;
			look_z *= invN;
		}
		let f1 = worldVec.y;
		look_x *= f1;
		look_y *= f1;
		look_z *= f1;
		let _this2 = t.world;
		let x2 = _this2.self._20;
		let y2 = _this2.self._21;
		let z2 = _this2.self._22;
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let up_x = x2;
		let up_y = y2;
		let up_z = z2;
		let up_w = 1.0;
		let n2 = Math.sqrt(up_x * up_x + up_y * up_y + up_z * up_z);
		if(n2 > 0.0) {
			let invN = 1.0 / n2;
			up_x *= invN;
			up_y *= invN;
			up_z *= invN;
		}
		let f2 = worldVec.z;
		up_x *= f2;
		up_y *= f2;
		up_z *= f2;
		let _this3 = new iron_math_Vec4();
		_this3.x += right_x;
		_this3.y += right_y;
		_this3.z += right_z;
		let _this4 = _this3;
		_this4.x += look_x;
		_this4.y += look_y;
		_this4.z += look_z;
		let _this5 = _this4;
		_this5.x += up_x;
		_this5.y += up_y;
		_this5.z += up_z;
		return _this5;
	}
	static getWorldVectorAlongLocalAxis(t,worldVec) {
		let localVec = new iron_math_Vec4();
		let _this = t.world;
		let x = _this.self._00;
		let y = _this.self._01;
		let z = _this.self._02;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let v_x = x;
		let v_y = y;
		let v_z = z;
		let v_w = 1.0;
		let n = Math.sqrt(v_x * v_x + v_y * v_y + v_z * v_z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			v_x *= invN;
			v_y *= invN;
			v_z *= invN;
		}
		localVec.x = worldVec.x * v_x + worldVec.y * v_y + worldVec.z * v_z;
		let _this1 = t.world;
		let x1 = _this1.self._10;
		let y1 = _this1.self._11;
		let z1 = _this1.self._12;
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let v_x1 = x1;
		let v_y1 = y1;
		let v_z1 = z1;
		let v_w1 = 1.0;
		let n1 = Math.sqrt(v_x1 * v_x1 + v_y1 * v_y1 + v_z1 * v_z1);
		if(n1 > 0.0) {
			let invN = 1.0 / n1;
			v_x1 *= invN;
			v_y1 *= invN;
			v_z1 *= invN;
		}
		localVec.y = worldVec.x * v_x1 + worldVec.y * v_y1 + worldVec.z * v_z1;
		let _this2 = t.world;
		let x2 = _this2.self._20;
		let y2 = _this2.self._21;
		let z2 = _this2.self._22;
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let v_x2 = x2;
		let v_y2 = y2;
		let v_z2 = z2;
		let v_w2 = 1.0;
		let n2 = Math.sqrt(v_x2 * v_x2 + v_y2 * v_y2 + v_z2 * v_z2);
		if(n2 > 0.0) {
			let invN = 1.0 / n2;
			v_x2 *= invN;
			v_y2 *= invN;
			v_z2 *= invN;
		}
		localVec.z = worldVec.x * v_x2 + worldVec.y * v_y2 + worldVec.z * v_z2;
		return localVec;
	}
}
$hxClasses["armory.object.TransformExtension"] = armory_object_TransformExtension;
armory_object_TransformExtension.__name__ = "armory.object.TransformExtension";
class armory_object_Uniforms {
	static register() {
		iron_object_Uniforms.externalTextureLinks = [armory_object_Uniforms.textureLink];
		iron_object_Uniforms.externalVec2Links = [armory_object_Uniforms.vec2Link];
		iron_object_Uniforms.externalVec3Links = [armory_object_Uniforms.vec3Link];
		iron_object_Uniforms.externalVec4Links = [];
		iron_object_Uniforms.externalFloatLinks = [armory_object_Uniforms.floatLink];
		iron_object_Uniforms.externalIntLinks = [];
	}
	static textureLink(object,mat,link) {
		switch(link) {
		case "_morphDataNor":
			return (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphDataNor;
		case "_morphDataPos":
			return (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphDataPos;
		case "_nishitaLUT":
			if(armory_renderpath_Nishita.data == null) {
				armory_renderpath_Nishita.recompute(iron_Scene.active.world);
			}
			return armory_renderpath_Nishita.data.lut;
		}
		let this1 = iron_RenderPath.active.renderTargets;
		let key = link.endsWith("_depth") ? HxOverrides.substr(link,0,link.length - 6) : link;
		let target = this1.h[key];
		if(target != null) {
			return target.image;
		} else {
			return null;
		}
	}
	static vec3Link(object,mat,link) {
		let v = null;
		return v;
	}
	static vec2Link(object,mat,link) {
		let v = null;
		if(link == "_nishitaDensity") {
			let w = iron_Scene.active.world;
			if(w != null) {
				v = iron_object_Uniforms.helpVec;
				v.x = w.raw.nishita_density.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				v.y = w.raw.nishita_density.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
		}
		return v;
	}
	static floatLink(object,mat,link) {
		if(link == "_debugFloat") {
			return armory_trait_internal_DebugConsole.debugFloat;
		}
		return null;
	}
}
$hxClasses["armory.object.Uniforms"] = armory_object_Uniforms;
armory_object_Uniforms.__name__ = "armory.object.Uniforms";
class armory_renderpath_Downsampler {
	constructor(path,shaderPassHandle,maxNumMips) {
		this.path = path;
		this.shaderPassHandle = shaderPassHandle;
		this.maxNumMips = maxNumMips;
		this.mipmaps = [];
		this.mipmaps.length = maxNumMips;
	}
	getMipmaps() {
		return this.mipmaps;
	}
	static create(path,shaderPassHandle,rtName,maxNumMips) {
		if(maxNumMips == null) {
			maxNumMips = 10;
		}
		if(!armory_renderpath_Downsampler.isRegistered) {
			armory_renderpath_Downsampler.isRegistered = true;
			iron_object_Uniforms.externalIntLinks.push(armory_renderpath_Downsampler.intLink);
		}
		return new armory_renderpath__$Downsampler_DownsamplerFragment(path,shaderPassHandle,rtName,maxNumMips);
	}
	static intLink(object,mat,link) {
		switch(link) {
		case "_downsampleCurrentMip":
			return armory_renderpath_Downsampler.currentMipLevel;
		case "_downsampleNumMips":
			return armory_renderpath_Downsampler.numMipLevels;
		default:
			return null;
		}
	}
}
$hxClasses["armory.renderpath.Downsampler"] = armory_renderpath_Downsampler;
armory_renderpath_Downsampler.__name__ = "armory.renderpath.Downsampler";
Object.assign(armory_renderpath_Downsampler.prototype, {
	__class__: armory_renderpath_Downsampler
	,path: null
	,shaderPassHandle: null
	,maxNumMips: null
	,mipmaps: null
});
class armory_renderpath__$Downsampler_DownsamplerFragment extends armory_renderpath_Downsampler {
	constructor(path,shaderPassHandle,rtName,maxNumMips) {
		super(path,shaderPassHandle,maxNumMips);
		let prevScale = 1.0;
		let _g = 0;
		let _g1 = maxNumMips;
		while(_g < _g1) {
			let i = _g++;
			let t = new iron_RenderTargetRaw();
			t.name = rtName + "_mip_" + i;
			t.width = 0;
			t.height = 0;
			prevScale *= 0.5;
			t.scale = prevScale;
			t.format = "RGBA64";
			this.mipmaps[i] = path.createRenderTarget(t);
		}
		path.loadShader(shaderPassHandle);
	}
	dispatch(srcImageName,numMips) {
		if(numMips == null) {
			numMips = 0;
		}
		armory_math_Helper.clampInt(numMips,0,this.maxNumMips);
		if(numMips == 0) {
			numMips = this.maxNumMips;
		}
		let srcImageRT = this.path.renderTargets.h[srcImageName];
		if(srcImageRT == null) {
			armory_system_Assert.throwAssertionError("srcImageRT != null","Could not find render target with name " + srcImageName,{ fileName : "Sources/armory/renderpath/Downsampler.hx", lineNumber : 90, className : "armory.renderpath._Downsampler.DownsamplerFragment", methodName : "dispatch"});
		}
		let srcImage = srcImageRT.image;
		if(srcImage == null) {
			armory_system_Assert.throwAssertionError("srcImage != null",null,{ fileName : "Sources/armory/renderpath/Downsampler.hx", lineNumber : 93, className : "armory.renderpath._Downsampler.DownsamplerFragment", methodName : "dispatch"});
		}
		armory_renderpath_Downsampler.numMipLevels = numMips;
		let _g = 0;
		let _g1 = numMips;
		while(_g < _g1) {
			let i = _g++;
			armory_renderpath_Downsampler.currentMipLevel = i;
			this.path.setTarget(this.mipmaps[i].raw.name);
			this.path.clearTarget();
			this.path.bindTarget(i == 0 ? srcImageName : this.mipmaps[i - 1].raw.name,"tex");
			this.path.drawShader(this.shaderPassHandle);
		}
	}
}
$hxClasses["armory.renderpath._Downsampler.DownsamplerFragment"] = armory_renderpath__$Downsampler_DownsamplerFragment;
armory_renderpath__$Downsampler_DownsamplerFragment.__name__ = "armory.renderpath._Downsampler.DownsamplerFragment";
armory_renderpath__$Downsampler_DownsamplerFragment.__super__ = armory_renderpath_Downsampler;
Object.assign(armory_renderpath__$Downsampler_DownsamplerFragment.prototype, {
	__class__: armory_renderpath__$Downsampler_DownsamplerFragment
});
class armory_renderpath_Inc {
	static init(_path) {
		armory_renderpath_Inc.path = _path;
	}
	static bindShadowMap() {
		let _g = 0;
		let _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			let l = _g1[_g];
			++_g;
			if(!l.visible || l.data.raw.type != "sun") {
				continue;
			}
			let n = "shadowMap";
			armory_renderpath_Inc.path.bindTarget(n,n);
			break;
		}
		let _g2 = 0;
		let _g3 = armory_renderpath_Inc.pointIndex;
		while(_g2 < _g3) {
			let i = _g2++;
			let n = "shadowMapPoint[" + i + "]";
			armory_renderpath_Inc.path.bindTarget(n,n);
		}
		let _g4 = 0;
		let _g5 = armory_renderpath_Inc.spotIndex;
		while(_g4 < _g5) {
			let i = _g4++;
			let n = "shadowMapSpot[" + i + "]";
			armory_renderpath_Inc.path.bindTarget(n,n);
		}
	}
	static shadowMapName(light) {
		switch(light.data.raw.type) {
		case "point":
			return "shadowMapPoint[" + armory_renderpath_Inc.pointIndex + "]";
		case "sun":
			return "shadowMap";
		default:
			return "shadowMapSpot[" + armory_renderpath_Inc.spotIndex + "]";
		}
	}
	static getShadowMap(l) {
		let target = armory_renderpath_Inc.shadowMapName(l);
		let rt = armory_renderpath_Inc.path.renderTargets.h[target];
		if(rt == null) {
			if(armory_renderpath_Inc.path.light.data.raw.shadowmap_cube) {
				let size = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
				let t = new iron_RenderTargetRaw();
				t.name = target;
				t.width = size;
				t.height = size;
				t.format = "DEPTH16";
				t.is_cubemap = true;
				rt = armory_renderpath_Inc.path.createRenderTarget(t);
			} else {
				let sizew = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
				let sizeh = sizew;
				if(l.data.raw.type == "sun") {
					sizew *= iron_object_LightObject.cascadeCount;
				}
				let t = new iron_RenderTargetRaw();
				t.name = target;
				t.width = sizew;
				t.height = sizeh;
				t.format = "DEPTH16";
				rt = armory_renderpath_Inc.path.createRenderTarget(t);
			}
		}
		return target;
	}
	static drawShadowMap() {
		armory_renderpath_Inc.pointIndex = 0;
		armory_renderpath_Inc.spotIndex = 0;
		let _g = 0;
		let _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			let l = _g1[_g];
			++_g;
			if(!l.visible) {
				continue;
			}
			armory_renderpath_Inc.path.light = l;
			let shadowmap = armory_renderpath_Inc.getShadowMap(l);
			let faces = l.data.raw.shadowmap_cube ? 6 : 1;
			let _g2 = 0;
			let _g3 = faces;
			while(_g2 < _g3) {
				let i = _g2++;
				if(faces > 1) {
					armory_renderpath_Inc.path.currentFace = i;
				}
				armory_renderpath_Inc.path.setTarget(shadowmap);
				armory_renderpath_Inc.path.clearTarget(null,1.0);
				if(l.data.raw.cast_shadow) {
					armory_renderpath_Inc.path.drawMeshes("shadowmap");
				}
			}
			armory_renderpath_Inc.path.currentFace = -1;
			if(l.data.raw.type == "point") {
				armory_renderpath_Inc.pointIndex++;
			} else if(l.data.raw.type == "spot" || l.data.raw.type == "area") {
				armory_renderpath_Inc.spotIndex++;
			}
		}
	}
	static applyConfig() {
	}
	static getCubeSize() {
		return 512;
	}
	static getCascadeSize() {
		return 1024;
	}
	static getVoxelRes() {
		return 0;
	}
	static getVoxelResZ() {
		return 0.0;
	}
	static getSuperSampling() {
		return armory_renderpath_Inc.superSample;
	}
	static getHdrFormat() {
		return "RGBA64";
	}
	static getDisplayp() {
		return null;
	}
	static setupEndFrameCallback() {
		if(!armory_renderpath_Inc.callBackSetup) {
			armory_renderpath_Inc.callBackSetup = true;
			iron_App.endFrameCallbacks.push(armory_renderpath_Inc.endFrame);
		}
	}
	static beginShadowsLogicProfile() {
		armory_renderpath_Inc.setupEndFrameCallback();
		armory_renderpath_Inc.startShadowsLogicTime = kha_Scheduler.realTime();
	}
	static beginShadowsRenderProfile() {
		armory_renderpath_Inc.startShadowsRenderTime = kha_Scheduler.realTime();
	}
	static endShadowsLogicProfile() {
		armory_renderpath_Inc.shadowsLogicTime += kha_Scheduler.realTime() - armory_renderpath_Inc.startShadowsLogicTime - armory_renderpath_Inc.shadowsRenderTime;
	}
	static endShadowsRenderProfile() {
		armory_renderpath_Inc.shadowsRenderTime += kha_Scheduler.realTime() - armory_renderpath_Inc.startShadowsRenderTime;
	}
	static endFrame() {
		armory_renderpath_Inc.shadowsLogicTime = 0;
		armory_renderpath_Inc.shadowsRenderTime = 0;
	}
}
$hxClasses["armory.renderpath.Inc"] = armory_renderpath_Inc;
armory_renderpath_Inc.__name__ = "armory.renderpath.Inc";
class armory_renderpath_Nishita {
	static recompute(world) {
		if(world == null || world.raw.nishita_density == null) {
			return;
		}
		if(armory_renderpath_Nishita.data == null) {
			armory_renderpath_Nishita.data = new armory_renderpath_NishitaData();
		}
		let density = world.raw.nishita_density;
		armory_renderpath_Nishita.data.computeLUT(new iron_math_Vec3(density.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),density.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),density.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN)));
	}
	static setDensity(world,densityAir,densityDust,densityOzone) {
		if(world == null) {
			return;
		}
		if(world.raw.nishita_density == null) {
			world.raw.nishita_density = kha_arrays_Float32Array._new(3);
		}
		let density = world.raw.nishita_density;
		let v = armory_math_Helper.clamp(densityAir,0,10);
		density.setFloat32(0,v,true);
		let v1 = armory_math_Helper.clamp(densityDust,0,10);
		density.setFloat32(4,v1,true);
		let v2 = armory_math_Helper.clamp(densityOzone,0,10);
		density.setFloat32(8,v2,true);
		armory_renderpath_Nishita.recompute(world);
	}
}
$hxClasses["armory.renderpath.Nishita"] = armory_renderpath_Nishita;
armory_renderpath_Nishita.__name__ = "armory.renderpath.Nishita";
class iron_math_Vec3 {
	constructor(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
	}
	cross(v) {
		let ax = this.x;
		let ay = this.y;
		let az = this.z;
		let vx = v.x;
		let vy = v.y;
		let vz = v.z;
		this.x = ay * vz - az * vy;
		this.y = az * vx - ax * vz;
		this.z = ax * vy - ay * vx;
		return this;
	}
	crossvecs(a,b) {
		let ax = a.x;
		let ay = a.y;
		let az = a.z;
		let bx = b.x;
		let by = b.y;
		let bz = b.z;
		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;
		return this;
	}
	set(x,y,z) {
		this.x = x;
		this.y = y;
		this.z = z;
		return this;
	}
	add(v) {
		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		return this;
	}
	addf(x,y,z) {
		this.x += x;
		this.y += y;
		this.z += z;
		return this;
	}
	addvecs(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		return this;
	}
	subvecs(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		return this;
	}
	normalize() {
		let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			this.x *= invN;
			this.y *= invN;
			this.z *= invN;
		}
		return this;
	}
	mult(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
		return this;
	}
	dot(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z;
	}
	setFrom(v) {
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		return this;
	}
	clone() {
		return new iron_math_Vec3(this.x,this.y,this.z);
	}
	lerp(from,to,s) {
		this.x = from.x + (to.x - from.x) * s;
		this.y = from.y + (to.y - from.y) * s;
		this.z = from.z + (to.z - from.z) * s;
		return this;
	}
	applyproj(m) {
		let x = this.x;
		let y = this.y;
		let z = this.z;
		let d = 1.0 / (m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33);
		this.x = (m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30) * d;
		this.y = (m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31) * d;
		this.z = (m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32) * d;
		return this;
	}
	applymat(m) {
		let x = this.x;
		let y = this.y;
		let z = this.z;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
		return this;
	}
	equals(v) {
		if(this.x == v.x && this.y == v.y) {
			return this.z == v.z;
		} else {
			return false;
		}
	}
	length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	sub(v) {
		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		return this;
	}
	exp(v) {
		this.x = Math.exp(v.x);
		this.y = Math.exp(v.y);
		this.z = Math.exp(v.z);
		return this;
	}
	distanceTo(p) {
		return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y) + (p.z - this.z) * (p.z - this.z));
	}
	clamp(min,max) {
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l < min) {
			let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				this.x *= invN;
				this.y *= invN;
				this.z *= invN;
			}
			let _this = this;
			_this.x *= min;
			_this.y *= min;
			_this.z *= min;
		} else if(l > max) {
			let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				this.x *= invN;
				this.y *= invN;
				this.z *= invN;
			}
			let _this = this;
			_this.x *= max;
			_this.y *= max;
			_this.z *= max;
		}
		return this;
	}
	toString() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	static distance(v1,v2) {
		let vx = v1.x - v2.x;
		let vy = v1.y - v2.y;
		let vz = v1.z - v2.z;
		return Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	static distancef(v1x,v1y,v1z,v2x,v2y,v2z) {
		let vx = v1x - v2x;
		let vy = v1y - v2y;
		let vz = v1z - v2z;
		return Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	static xAxis() {
		return new iron_math_Vec3(1.0,0.0,0.0);
	}
	static yAxis() {
		return new iron_math_Vec3(0.0,1.0,0.0);
	}
	static zAxis() {
		return new iron_math_Vec3(0.0,0.0,1.0);
	}
}
$hxClasses["iron.math.Vec3"] = iron_math_Vec3;
iron_math_Vec3.__name__ = "iron.math.Vec3";
Object.assign(iron_math_Vec3.prototype, {
	__class__: iron_math_Vec3
	,x: null
	,y: null
	,z: null
});
class armory_renderpath_NishitaData {
	constructor() {
	}
	getOzoneDensity(height) {
		if(height < 10000.0 || height >= 40000.0) {
			return 0.0;
		}
		if(height < 25000.0) {
			return (height - 10000.0) / 15000.0;
		}
		return -((height - 40000.0) / 15000.0);
	}
	raySphereIntersection(rayOrigin,rayDirection,sphereRadius) {
		let a = rayDirection.x * rayDirection.x + rayDirection.y * rayDirection.y + rayDirection.z * rayDirection.z;
		let b = 2.0 * (rayDirection.x * rayOrigin.x + rayDirection.y * rayOrigin.y + rayDirection.z * rayOrigin.z);
		let c = rayOrigin.x * rayOrigin.x + rayOrigin.y * rayOrigin.y + rayOrigin.z * rayOrigin.z - sphereRadius * sphereRadius;
		let d = b * b - 4.0 * a * c;
		if(d < 0.0) {
			return new iron_math_Vec2(1e5,-1e5);
		}
		return new iron_math_Vec2((-b - Math.sqrt(d)) / (2.0 * a),(-b + Math.sqrt(d)) / (2.0 * a));
	}
	computeLUT(density) {
		let this1 = new Float32Array(armory_renderpath_NishitaData.lutHeightSteps * armory_renderpath_NishitaData.lutAngleSteps * 4);
		let imageData = this1;
		let _g = 0;
		let _g1 = armory_renderpath_NishitaData.lutHeightSteps;
		while(_g < _g1) {
			let x = _g++;
			let height = x / (armory_renderpath_NishitaData.lutHeightSteps - 1);
			height *= height;
			height *= armory_renderpath_NishitaData.radiusAtmo * 1000;
			let _g1 = 0;
			let _g2 = armory_renderpath_NishitaData.lutAngleSteps;
			while(_g1 < _g2) {
				let y = _g1++;
				let sunTheta = y / (armory_renderpath_NishitaData.lutAngleSteps - 1) * 2 - 1;
				sunTheta = (sunTheta == 0 ? 0 : sunTheta < 0 ? -1.0 : 1.0) * sunTheta * sunTheta;
				sunTheta = sunTheta * Math.PI / 2 + Math.PI / 2;
				let jODepth = this.sampleSecondaryRay(height,sunTheta,density);
				let pixelIndex = (x + y * armory_renderpath_NishitaData.lutHeightSteps) * 4;
				imageData[pixelIndex] = jODepth.x;
				imageData[pixelIndex + 1] = jODepth.y;
				imageData[pixelIndex + 2] = jODepth.z;
				imageData[pixelIndex + 3] = 1.0;
			}
		}
		this.lut = kha_Image.fromBytes(haxe_io_Bytes.ofData(imageData.buffer),armory_renderpath_NishitaData.lutHeightSteps,armory_renderpath_NishitaData.lutAngleSteps,2,0);
	}
	sampleSecondaryRay(height,sunTheta,density) {
		let radiusPlanetMeters = armory_renderpath_NishitaData.radiusPlanet * 1000;
		let x = 0;
		let y = 0;
		let z = height + radiusPlanetMeters;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let iPos_x = x;
		let iPos_y = y;
		let iPos_z = z;
		let _this = new iron_math_Vec3(0.0,Math.sin(sunTheta),Math.cos(sunTheta));
		let n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			_this.x *= invN;
			_this.y *= invN;
			_this.z *= invN;
		}
		let pSun = _this;
		let jTime = 0.0;
		let _this1 = new iron_math_Vec3(iPos_x,iPos_y,iPos_z);
		_this1.x *= 0.001;
		_this1.y *= 0.001;
		_this1.z *= 0.001;
		let jStepSize = this.raySphereIntersection(_this1,pSun,armory_renderpath_NishitaData.radiusAtmo).y / armory_renderpath_NishitaData.jSteps;
		jStepSize *= 1000;
		let jODepth_x = 0.0;
		let jODepth_y = 0.0;
		let jODepth_z = 0.0;
		let _g = 0;
		let _g1 = armory_renderpath_NishitaData.jSteps;
		while(_g < _g1) {
			let i = _g++;
			let x = iPos_x;
			let y = iPos_y;
			let z = iPos_z;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let jPos_x = x;
			let jPos_y = y;
			let jPos_z = z;
			let x1 = pSun.x;
			let y1 = pSun.y;
			let z1 = pSun.z;
			if(z1 == null) {
				z1 = 0.0;
			}
			if(y1 == null) {
				y1 = 0.0;
			}
			if(x1 == null) {
				x1 = 0.0;
			}
			let v_x = x1;
			let v_y = y1;
			let v_z = z1;
			let f = jTime + jStepSize * 0.5;
			v_x *= f;
			v_y *= f;
			v_z *= f;
			jPos_x += v_x;
			jPos_y += v_y;
			jPos_z += v_z;
			let jHeight = Math.sqrt(jPos_x * jPos_x + jPos_y * jPos_y + jPos_z * jPos_z) - radiusPlanetMeters;
			let optDepthRayleigh = Math.exp(-jHeight / armory_renderpath_NishitaData.rayleighScale) * density.x;
			let optDepthMie = Math.exp(-jHeight / armory_renderpath_NishitaData.mieScale) * density.y;
			let optDepthOzone = this.getOzoneDensity(jHeight) * density.z;
			jODepth_x += optDepthRayleigh;
			jODepth_y += optDepthMie;
			jODepth_z += optDepthOzone;
			jTime += jStepSize;
		}
		jODepth_x *= jStepSize;
		jODepth_y *= jStepSize;
		jODepth_z *= jStepSize;
		let jAttenuation = new iron_math_Vec3();
		let mie = armory_renderpath_NishitaData.mieCoeff * jODepth_y;
		jAttenuation.x += mie;
		jAttenuation.y += mie;
		jAttenuation.z += mie;
		let _this2 = armory_renderpath_NishitaData.rayleighCoeff;
		let x1 = _this2.x;
		let y1 = _this2.y;
		let z1 = _this2.z;
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let v_x = x1;
		let v_y = y1;
		let v_z = z1;
		let f = jODepth_x;
		v_x *= f;
		v_y *= f;
		v_z *= f;
		jAttenuation.x += v_x;
		jAttenuation.y += v_y;
		jAttenuation.z += v_z;
		let _this3 = armory_renderpath_NishitaData.ozoneCoeff;
		let x2 = _this3.x;
		let y2 = _this3.y;
		let z2 = _this3.z;
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let v_x1 = x2;
		let v_y1 = y2;
		let v_z1 = z2;
		let f1 = jODepth_z;
		v_x1 *= f1;
		v_y1 *= f1;
		v_z1 *= f1;
		jAttenuation.x += v_x1;
		jAttenuation.y += v_y1;
		jAttenuation.z += v_z1;
		jAttenuation.x *= -1;
		jAttenuation.y *= -1;
		jAttenuation.z *= -1;
		let v = jAttenuation;
		jAttenuation.x = Math.exp(v.x);
		jAttenuation.y = Math.exp(v.y);
		jAttenuation.z = Math.exp(v.z);
		return jAttenuation;
	}
}
$hxClasses["armory.renderpath.NishitaData"] = armory_renderpath_NishitaData;
armory_renderpath_NishitaData.__name__ = "armory.renderpath.NishitaData";
Object.assign(armory_renderpath_NishitaData.prototype, {
	__class__: armory_renderpath_NishitaData
	,lut: null
});
class armory_renderpath_Postprocess {
	static vec3Link(object,mat,link) {
		let v = null;
		switch(link) {
		case "_PPComp1":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.camera_uniforms[0];
			v.y = armory_renderpath_Postprocess.camera_uniforms[1];
			v.z = armory_renderpath_Postprocess.camera_uniforms[2];
			break;
		case "_PPComp10":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.ssr_uniforms[3];
			v.y = armory_renderpath_Postprocess.ssr_uniforms[4];
			v.z = 0;
			break;
		case "_PPComp11":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.bloom_uniforms[2];
			v.y = 0;
			v.z = 0;
			break;
		case "_PPComp12":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.ssao_uniforms[0];
			v.y = armory_renderpath_Postprocess.ssao_uniforms[1];
			v.z = armory_renderpath_Postprocess.ssao_uniforms[2];
			break;
		case "_PPComp13":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.chromatic_aberration_uniforms[0];
			v.y = armory_renderpath_Postprocess.chromatic_aberration_uniforms[1];
			v.z = 0;
			break;
		case "_PPComp14":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.camera_uniforms[10];
			v.y = armory_renderpath_Postprocess.camera_uniforms[12];
			v.z = armory_renderpath_Postprocess.camera_uniforms[13];
			break;
		case "_PPComp2":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.camera_uniforms[3];
			v.y = armory_renderpath_Postprocess.camera_uniforms[4];
			v.z = armory_renderpath_Postprocess.camera_uniforms[5];
			break;
		case "_PPComp3":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.camera_uniforms[6];
			v.y = armory_renderpath_Postprocess.camera_uniforms[7];
			v.z = armory_renderpath_Postprocess.camera_uniforms[8];
			break;
		case "_PPComp4":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.camera_uniforms[9] | 0;
			v.y = armory_renderpath_Postprocess.camera_uniforms[11];
			v.z = armory_renderpath_Postprocess.tonemapper_uniforms[0];
			break;
		case "_PPComp5":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.tonemapper_uniforms[1];
			v.y = armory_renderpath_Postprocess.tonemapper_uniforms[2];
			v.z = armory_renderpath_Postprocess.tonemapper_uniforms[3];
			break;
		case "_PPComp6":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.tonemapper_uniforms[4];
			v.y = armory_renderpath_Postprocess.lenstexture_uniforms[0];
			v.z = armory_renderpath_Postprocess.lenstexture_uniforms[1];
			break;
		case "_PPComp7":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.lenstexture_uniforms[2];
			v.y = armory_renderpath_Postprocess.lenstexture_uniforms[3];
			v.z = armory_renderpath_Postprocess.lenstexture_uniforms[4];
			break;
		case "_PPComp9":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.ssr_uniforms[0];
			v.y = armory_renderpath_Postprocess.ssr_uniforms[1];
			v.z = armory_renderpath_Postprocess.ssr_uniforms[2];
			break;
		case "_globalContrast":
			let ppm_index = 3;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index][2];
			break;
		case "_globalGain":
			let ppm_index1 = 5;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index1][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index1][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index1][2];
			break;
		case "_globalGamma":
			let ppm_index2 = 4;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index2][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index2][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index2][2];
			break;
		case "_globalOffset":
			let ppm_index3 = 6;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index3][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index3][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index3][2];
			break;
		case "_globalSaturation":
			let ppm_index4 = 2;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index4][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index4][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index4][2];
			break;
		case "_globalTint":
			let ppm_index5 = 1;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index5][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index5][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index5][2];
			break;
		case "_globalWeight":
			let ppm_index6 = 0;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index6][0];
			v.y = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index6][1];
			v.z = armory_renderpath_Postprocess.colorgrading_global_uniforms[ppm_index6][2];
			break;
		case "_highlightContrast":
			let ppm_index7 = 1;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index7][0];
			v.y = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index7][1];
			v.z = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index7][2];
			break;
		case "_highlightGain":
			let ppm_index8 = 3;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index8][0];
			v.y = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index8][1];
			v.z = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index8][2];
			break;
		case "_highlightGamma":
			let ppm_index9 = 2;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index9][0];
			v.y = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index9][1];
			v.z = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index9][2];
			break;
		case "_highlightOffset":
			let ppm_index10 = 4;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index10][0];
			v.y = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index10][1];
			v.z = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index10][2];
			break;
		case "_highlightSaturation":
			let ppm_index11 = 0;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index11][0];
			v.y = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index11][1];
			v.z = armory_renderpath_Postprocess.colorgrading_highlight_uniforms[ppm_index11][2];
			break;
		case "_midtoneContrast":
			let ppm_index12 = 1;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index12][0];
			v.y = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index12][1];
			v.z = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index12][2];
			break;
		case "_midtoneGain":
			let ppm_index13 = 3;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index13][0];
			v.y = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index13][1];
			v.z = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index13][2];
			break;
		case "_midtoneGamma":
			let ppm_index14 = 2;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index14][0];
			v.y = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index14][1];
			v.z = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index14][2];
			break;
		case "_midtoneOffset":
			let ppm_index15 = 4;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index15][0];
			v.y = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index15][1];
			v.z = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index15][2];
			break;
		case "_midtoneSaturation":
			let ppm_index16 = 0;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index16][0];
			v.y = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index16][1];
			v.z = armory_renderpath_Postprocess.colorgrading_midtone_uniforms[ppm_index16][2];
			break;
		case "_shadowContrast":
			let ppm_index17 = 1;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index17][0];
			v.y = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index17][1];
			v.z = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index17][2];
			break;
		case "_shadowGain":
			let ppm_index18 = 3;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index18][0];
			v.y = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index18][1];
			v.z = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index18][2];
			break;
		case "_shadowGamma":
			let ppm_index19 = 2;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index19][0];
			v.y = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index19][1];
			v.z = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index19][2];
			break;
		case "_shadowOffset":
			let ppm_index20 = 4;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index20][0];
			v.y = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index20][1];
			v.z = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index20][2];
			break;
		case "_shadowSaturation":
			let ppm_index21 = 0;
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index21][0];
			v.y = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index21][1];
			v.z = armory_renderpath_Postprocess.colorgrading_shadow_uniforms[ppm_index21][2];
			break;
		}
		return v;
	}
	static vec4Link(object,mat,link) {
		let v = null;
		switch(link) {
		case "_BloomThresholdData":
			if(armory_renderpath_Downsampler.currentMipLevel == 0) {
				v = iron_object_Uniforms.helpVec;
				v.x = armory_renderpath_Postprocess.bloom_uniforms[0];
				v.y = v.x - armory_renderpath_Postprocess.bloom_uniforms[1];
				v.z = 2 * armory_renderpath_Postprocess.bloom_uniforms[1];
				v.w = 0.25 / (armory_renderpath_Postprocess.bloom_uniforms[1] + 6.2e-5);
			}
			break;
		case "_PPComp15":
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_Postprocess.letterbox_uniforms[0][0];
			v.y = armory_renderpath_Postprocess.letterbox_uniforms[0][1];
			v.z = armory_renderpath_Postprocess.letterbox_uniforms[0][2];
			v.w = armory_renderpath_Postprocess.letterbox_uniforms[1][0];
			break;
		}
		return v;
	}
	static init() {
		iron_object_Uniforms.externalVec3Links.push(armory_renderpath_Postprocess.vec3Link);
		iron_object_Uniforms.externalVec4Links.push(armory_renderpath_Postprocess.vec4Link);
	}
}
$hxClasses["armory.renderpath.Postprocess"] = armory_renderpath_Postprocess;
armory_renderpath_Postprocess.__name__ = "armory.renderpath.Postprocess";
class armory_renderpath_RenderPathDeferred {
	static setTargetMeshes() {
		armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0",["gbuffer1"]);
	}
	static drawMeshes() {
		armory_renderpath_RenderPathDeferred.path.drawMeshes("mesh");
	}
	static applyConfig() {
		armory_renderpath_Inc.applyConfig();
	}
	static init(_path) {
		armory_renderpath_RenderPathDeferred.path = _path;
		armory_renderpath_RenderPathDeferred.path.createDepthBuffer("main","DEPTH24");
		let t = new iron_RenderTargetRaw();
		t.name = "gbuffer0";
		t.width = 0;
		t.height = 0;
		t.displayp = null;
		t.format = "RGBA64";
		t.scale = armory_renderpath_Inc.superSample;
		t.depth_buffer = "main";
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
		let t1 = new iron_RenderTargetRaw();
		t1.name = "tex";
		t1.width = 0;
		t1.height = 0;
		t1.displayp = null;
		t1.format = "RGBA64";
		t1.scale = armory_renderpath_Inc.superSample;
		t1.depth_buffer = "main";
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t1);
		let t2 = new iron_RenderTargetRaw();
		t2.name = "buf";
		t2.width = 0;
		t2.height = 0;
		t2.displayp = null;
		t2.format = "RGBA64";
		t2.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t2);
		let t3 = new iron_RenderTargetRaw();
		t3.name = "gbuffer1";
		t3.width = 0;
		t3.height = 0;
		t3.displayp = null;
		t3.format = "RGBA64";
		t3.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t3);
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/deferred_light/deferred_light");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/ssao_pass/ssao_pass");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
		let t4 = new iron_RenderTargetRaw();
		t4.name = "singlea";
		t4.width = 0;
		t4.height = 0;
		t4.displayp = null;
		t4.format = "R8";
		t4.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t4);
		let t5 = new iron_RenderTargetRaw();
		t5.name = "singleb";
		t5.width = 0;
		t5.height = 0;
		t5.displayp = null;
		t5.format = "R8";
		t5.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t5);
		let t6 = new iron_RenderTargetRaw();
		t6.name = "bufa";
		t6.width = 0;
		t6.height = 0;
		t6.displayp = null;
		t6.format = "RGBA32";
		t6.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t6);
		let t7 = new iron_RenderTargetRaw();
		t7.name = "bufb";
		t7.width = 0;
		t7.height = 0;
		t7.displayp = null;
		t7.format = "RGBA32";
		t7.scale = armory_renderpath_Inc.superSample;
		armory_renderpath_RenderPathDeferred.path.createRenderTarget(t7);
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/compositor_pass/compositor_pass");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
		armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
	}
	static commands() {
		armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0");
		armory_renderpath_RenderPathDeferred.path.clearTarget(null,1.0);
		armory_renderpath_RenderPathCreator.setTargetMeshes();
		armory_renderpath_RenderPathCreator.drawMeshes();
		if(armory_data_Config.raw.rp_ssgi != false) {
			armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
			armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
			armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/ssao_pass/ssao_pass");
			armory_renderpath_RenderPathDeferred.path.setTarget("singleb");
			armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","tex");
			armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
			armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
			armory_renderpath_RenderPathDeferred.path.bindTarget("singleb","tex");
			armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
		}
		armory_renderpath_Inc.drawShadowMap();
		armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer1");
		armory_renderpath_RenderPathDeferred.path.setTarget("tex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer1","gbuffer1");
		if(armory_data_Config.raw.rp_ssgi != false) {
			armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","ssaotex");
		} else {
			armory_renderpath_RenderPathDeferred.path.bindTarget("empty_white","ssaotex");
		}
		let voxelao_pass = false;
		armory_renderpath_Inc.bindShadowMap();
		if(voxelao_pass) {
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light_VoxelAOvar");
		} else {
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light");
		}
		armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer0");
		if(iron_Scene.active.raw.world_ref != null) {
			armory_renderpath_RenderPathDeferred.path.setTarget("tex");
			armory_renderpath_RenderPathDeferred.path.drawSkydome("shader_datas/World_" + iron_Scene.active.raw.world_ref + "/World_" + iron_Scene.active.raw.world_ref);
		}
		let framebuffer = "";
		armory_renderpath_RenderPathCreator.finalTarget = armory_renderpath_RenderPathDeferred.path.currentTarget;
		let target = "";
		target = "buf";
		armory_renderpath_RenderPathDeferred.path.setTarget(target);
		armory_renderpath_RenderPathDeferred.path.bindTarget("tex","tex");
		let isProbe = false;
		if(!isProbe) {
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/compositor_pass/compositor_pass");
		} else {
			armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/copy_pass/copy_pass");
		}
		armory_renderpath_RenderPathDeferred.path.setTarget("bufa");
		armory_renderpath_RenderPathDeferred.path.clearTarget(0);
		armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
		armory_renderpath_RenderPathDeferred.path.setTarget("bufb");
		armory_renderpath_RenderPathDeferred.path.clearTarget(0);
		armory_renderpath_RenderPathDeferred.path.bindTarget("bufa","edgesTex");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
		armory_renderpath_RenderPathDeferred.path.setTarget(framebuffer);
		armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("bufb","blendTex");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
	}
	static setupDepthTexture() {
		armory_renderpath_RenderPathDeferred.path.setDepthFrom("gbuffer0","gbuffer1");
		armory_renderpath_RenderPathDeferred.path.depthToRenderTarget.h["main"] = armory_renderpath_RenderPathDeferred.path.renderTargets.h["tex"];
		armory_renderpath_RenderPathDeferred.path.setTarget("depthtex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("_main","tex");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/copy_pass/copy_pass");
		armory_renderpath_RenderPathDeferred.path.setDepthFrom("gbuffer0","tex");
		armory_renderpath_RenderPathDeferred.path.depthToRenderTarget.h["main"] = armory_renderpath_RenderPathDeferred.path.renderTargets.h["gbuffer0"];
		armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0",["gbuffer1"]);
		armory_renderpath_RenderPathDeferred.path.bindTarget("depthtex","depthtex");
	}
}
$hxClasses["armory.renderpath.RenderPathDeferred"] = armory_renderpath_RenderPathDeferred;
armory_renderpath_RenderPathDeferred.__name__ = "armory.renderpath.RenderPathDeferred";
class armory_renderpath_RenderPathCreator {
	static get() {
		armory_renderpath_RenderPathCreator.path = new iron_RenderPath();
		armory_renderpath_Inc.init(armory_renderpath_RenderPathCreator.path);
		armory_renderpath_RenderPathDeferred.init(armory_renderpath_RenderPathCreator.path);
		armory_renderpath_RenderPathCreator.path.commands = function() {
			armory_renderpath_RenderPathDeferred.commands();
			armory_renderpath_RenderPathCreator.commands();
		};
		armory_renderpath_RenderPathCreator.path.setupDepthTexture = armory_renderpath_RenderPathDeferred.setupDepthTexture;
		return armory_renderpath_RenderPathCreator.path;
	}
}
armory_renderpath_RenderPathCreator.commands = function() {
};
$hxClasses["armory.renderpath.RenderPathCreator"] = armory_renderpath_RenderPathCreator;
armory_renderpath_RenderPathCreator.__name__ = "armory.renderpath.RenderPathCreator";
class armory_system_Assert {
	static throwAssertionError(exprString,message,pos) {
		throw new armory_system_ArmAssertionException(exprString,message,null,pos);
	}
}
$hxClasses["armory.system.Assert"] = armory_system_Assert;
armory_system_Assert.__name__ = "armory.system.Assert";
class haxe_Exception extends Error {
	constructor(message,previous,native) {
		super(message);
		this.message = message;
		this.__previousException = previous;
		this.__nativeException = native != null ? native : this;
	}
	unwrap() {
		return this.__nativeException;
	}
	toString() {
		return this.get_message();
	}
	get_message() {
		return this.message;
	}
	get_native() {
		return this.__nativeException;
	}
	static caught(value) {
		if(((value) instanceof haxe_Exception)) {
			return value;
		} else if(((value) instanceof Error)) {
			return new haxe_Exception(value.message,null,value);
		} else {
			return new haxe_ValueException(value,null,value);
		}
	}
	static thrown(value) {
		if(((value) instanceof haxe_Exception)) {
			return value.get_native();
		} else if(((value) instanceof Error)) {
			return value;
		} else {
			let e = new haxe_ValueException(value);
			return e;
		}
	}
}
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.__super__ = Error;
Object.assign(haxe_Exception.prototype, {
	__class__: haxe_Exception
	,__skipStack: null
	,__nativeException: null
	,__previousException: null
	,__properties__: {get_native: "get_native",get_message: "get_message"}
});
class haxe_exceptions_PosException extends haxe_Exception {
	constructor(message,previous,pos) {
		super(message,previous);
		if(pos == null) {
			this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
		} else {
			this.posInfos = pos;
		}
	}
	toString() {
		return "" + super.toString() + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
}
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
Object.assign(haxe_exceptions_PosException.prototype, {
	__class__: haxe_exceptions_PosException
	,posInfos: null
});
class armory_system_ArmAssertionException extends haxe_exceptions_PosException {
	constructor(exprString,message,previous,pos) {
		let optMsg = message != null ? "\n\tMessage: " + message : "";
		super("\n" + ("Failed assertion:" + optMsg + "\n\tExpression: (" + exprString + ")"),previous,pos);
	}
	static formatMessage(exprString,message) {
		let optMsg = message != null ? "\n\tMessage: " + message : "";
		return "Failed assertion:" + optMsg + "\n\tExpression: (" + exprString + ")";
	}
}
$hxClasses["armory.system.ArmAssertionException"] = armory_system_ArmAssertionException;
armory_system_ArmAssertionException.__name__ = "armory.system.ArmAssertionException";
armory_system_ArmAssertionException.__super__ = haxe_exceptions_PosException;
Object.assign(armory_system_ArmAssertionException.prototype, {
	__class__: armory_system_ArmAssertionException
});
class armory_system_AssertLevel {
	static fromExpr(e) {
		let _g = e.expr;
		if(_g._hx_index == 0) {
			let _g1 = _g.c;
			if(_g1._hx_index == 3) {
				let v = _g1.s;
				return armory_system_AssertLevel.fromString(v);
			} else {
				throw new haxe_Exception("Unsupported expression: " + Std.string(e));
			}
		} else {
			throw new haxe_Exception("Unsupported expression: " + Std.string(e));
		}
	}
	static fromString(s) {
		if(s == null) {
			return 2;
		} else {
			switch(s) {
			case "Error":
				return 1;
			case "NoAssertions":
				return 2;
			case "Warning":
				return 0;
			default:
				throw new haxe_Exception("Could not convert \"" + s + "\" to AssertLevel");
			}
		}
	}
}
class armory_system_Starter {
	static main(scene,mode,resize,min,max,w,h,msaa,vsync,getRenderPath) {
		let tasks = 0;
		let start = function() {
			if(tasks > 0) {
				return;
			}
			if(armory_data_Config.raw == null) {
				armory_data_Config.raw = { };
			}
			let c = armory_data_Config.raw;
			if(c.window_mode == null) {
				c.window_mode = mode;
			}
			if(c.window_resizable == null) {
				c.window_resizable = resize;
			}
			if(c.window_minimizable == null) {
				c.window_minimizable = min;
			}
			if(c.window_maximizable == null) {
				c.window_maximizable = max;
			}
			if(c.window_w == null) {
				c.window_w = w;
			}
			if(c.window_h == null) {
				c.window_h = h;
			}
			if(c.window_scale == null) {
				c.window_scale = 1.0;
			}
			if(c.window_msaa == null) {
				c.window_msaa = msaa;
			}
			if(c.window_vsync == null) {
				c.window_vsync = vsync;
			}
			armory_object_Uniforms.register();
			let windowMode = c.window_mode == 0 ? 0 : 1;
			let windowFeatures = 0;
			if(c.window_resizable) {
				windowFeatures |= 1;
			}
			if(c.window_maximizable) {
				windowFeatures |= 4;
			}
			if(c.window_minimizable) {
				windowFeatures |= 2;
			}
			kha_System.start(new kha_SystemOptions("SteelSoul",c.window_w,c.window_h,new kha_WindowOptions(null,-1,-1,800,600,-1,true,windowFeatures,windowMode),new kha_FramebufferOptions(60,c.window_vsync,32,16,8,c.window_msaa)),function($window) {
				iron_App.init(function() {
					iron_Scene.setActive(scene,function(object) {
						iron_RenderPath.setActive(getRenderPath());
					});
				});
			});
		};
		let loadLibAmmo = function(name) {
			kha_Assets.loadBlobFromPath(name,function(b) {
				(1,eval)(b.toString());
				Ammo({print:function(s){iron.log(s);},instantiateWasm:function(imports,successCallback) {
					var wasmbin = Krom.loadBlob('ammo.wasm.wasm');
					var module = new WebAssembly.Module(wasmbin);
					var inst = new WebAssembly.Instance(module,imports);
					successCallback(inst);
					return inst.exports;
				}}).then(function(){ tasks--; start();});
			},null,{ fileName : "Sources/armory/system/Starter.hx", lineNumber : 78, className : "armory.system.Starter", methodName : "main"});
		};
		tasks = 1;
		tasks += 1;
		loadLibAmmo("ammo.wasm.js");
		tasks -= 1;
		start();
	}
}
$hxClasses["armory.system.Starter"] = armory_system_Starter;
armory_system_Starter.__name__ = "armory.system.Starter";
class armory_trait_internal_CameraController extends iron_Trait {
	constructor() {
		if(iron_Trait._hx_skip_constructor) {
			super();
			return;
		}
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.jump = false;
		this.moveRight = false;
		this.moveLeft = false;
		this.moveBackward = false;
		this.moveForward = false;
		super._hx_constructor();
		let _gthis = this;
		iron_Scene.active.notifyOnInit(function() {
			_gthis.transform = _gthis.object.transform;
			_gthis.body = _gthis.object.getTrait(armory_trait_physics_bullet_RigidBody);
			_gthis.camera = js_Boot.__cast(_gthis.object.getChildOfType(iron_object_CameraObject) , iron_object_CameraObject);
		});
		this.notifyOnUpdate(function() {
			let keyboard = iron_system_Input.getKeyboard();
			_gthis.moveForward = keyboard.down("w");
			_gthis.moveRight = keyboard.down("d");
			_gthis.moveBackward = keyboard.down("s");
			_gthis.moveLeft = keyboard.down("a");
			_gthis.jump = keyboard.started("space");
		});
	}
}
$hxClasses["armory.trait.internal.CameraController"] = armory_trait_internal_CameraController;
armory_trait_internal_CameraController.__name__ = "armory.trait.internal.CameraController";
armory_trait_internal_CameraController.__super__ = iron_Trait;
Object.assign(armory_trait_internal_CameraController.prototype, {
	__class__: armory_trait_internal_CameraController
	,transform: null
	,body: null
	,camera: null
	,moveForward: null
	,moveBackward: null
	,moveLeft: null
	,moveRight: null
	,jump: null
});
class armory_trait_ThirdPersonController extends armory_trait_internal_CameraController {
	constructor(animObject,idle,run) {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor(animObject,idle,run);
	}
	_hx_constructor(animObject,idle,run) {
		if(run == null) {
			run = "run";
		}
		if(idle == null) {
			idle = "idle";
		}
		if(animObject == null) {
			animObject = "";
		}
		this.dir = new iron_math_Vec4();
		this.zVec = new iron_math_Vec4(0.0,0.0,1.0);
		this.xVec = new iron_math_Vec4(1.0,0.0,0.0);
		super._hx_constructor();
		this.animObject = animObject;
		this.idleAction = idle;
		this.runAction = run;
		this.currentAction = this.idleAction;
		iron_Scene.active.notifyOnInit($bind(this,this.init));
	}
	findAnimation(o) {
		if(o.animation != null) {
			return o;
		}
		let _g = 0;
		let _g1 = o.children;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			let co = this.findAnimation(c);
			if(co != null) {
				return co;
			}
		}
		return null;
	}
	init() {
		if(this.animObject == "") {
			this.arm = this.findAnimation(this.object);
		} else {
			this.arm = this.object.getChild(this.animObject);
		}
		armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(this,this.preUpdate));
		this.notifyOnUpdate($bind(this,this.update));
		this.notifyOnRemove($bind(this,this.removed));
	}
	preUpdate() {
		if(iron_system_Input.occupied || !this.body.ready) {
			return;
		}
		let mouse = iron_system_Input.getMouse();
		if(mouse.down()) {
			this.camera.transform.rotate(this.xVec,mouse.movementY / 250);
			this.transform.rotate(this.zVec,-mouse.movementX / 250);
			this.camera.buildMatrix();
			this.body.syncTransform();
		}
	}
	removed() {
		armory_trait_physics_bullet_PhysicsWorld.active.removePreUpdate($bind(this,this.preUpdate));
	}
	update() {
		if(!this.body.ready) {
			return;
		}
		if(this.jump) {
			this.body.applyImpulse(new iron_math_Vec4(0,0,20));
		}
		let _this = this.dir;
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 1.0;
		if(this.moveForward) {
			let _this = this.dir;
			let _this1 = this.transform.world;
			let x = _this1.self._10;
			let y = _this1.self._11;
			let z = _this1.self._12;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y;
			let v_z = z;
			let v_w = 1.0;
			_this.x += v_x;
			_this.y += v_y;
			_this.z += v_z;
		}
		if(this.moveBackward) {
			let _this = this.dir;
			let _this1 = this.transform.world;
			let x = _this1.self._10;
			let y = _this1.self._11;
			let z = _this1.self._12;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y;
			let v_z = z;
			let v_w = 1.0;
			v_x *= -1;
			v_y *= -1;
			v_z *= -1;
			_this.x += v_x;
			_this.y += v_y;
			_this.z += v_z;
		}
		if(this.moveLeft) {
			let _this = this.dir;
			let _this1 = this.transform.world;
			let x = _this1.self._00;
			let y = _this1.self._01;
			let z = _this1.self._02;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y;
			let v_z = z;
			let v_w = 1.0;
			v_x *= -1;
			v_y *= -1;
			v_z *= -1;
			_this.x += v_x;
			_this.y += v_y;
			_this.z += v_z;
		}
		if(this.moveRight) {
			let _this = this.dir;
			let _this1 = this.transform.world;
			let x = _this1.self._00;
			let y = _this1.self._01;
			let z = _this1.self._02;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y;
			let v_z = z;
			let v_w = 1.0;
			_this.x += v_x;
			_this.y += v_y;
			_this.z += v_z;
		}
		let btvec = this.body.getLinearVelocity();
		this.body.setLinearVelocity(0.0,0.0,btvec.z - 1.0);
		if(this.moveForward || this.moveBackward || this.moveLeft || this.moveRight) {
			if(this.currentAction != this.runAction) {
				this.arm.animation.play(this.runAction,null,0.2);
				this.currentAction = this.runAction;
			}
			let _this = this.dir;
			_this.x *= -2.8;
			_this.y *= -2.8;
			_this.z *= -2.8;
			this.body.activate();
			this.body.setLinearVelocity(this.dir.x,this.dir.y,btvec.z - 1.0);
		} else if(this.currentAction != this.idleAction) {
			this.arm.animation.play(this.idleAction,null,0.2);
			this.currentAction = this.idleAction;
		}
		this.body.setAngularFactor(0,0,0);
		this.camera.buildMatrix();
	}
}
$hxClasses["armory.trait.ThirdPersonController"] = armory_trait_ThirdPersonController;
armory_trait_ThirdPersonController.__name__ = "armory.trait.ThirdPersonController";
armory_trait_ThirdPersonController.__super__ = armory_trait_internal_CameraController;
Object.assign(armory_trait_ThirdPersonController.prototype, {
	__class__: armory_trait_ThirdPersonController
	,animObject: null
	,idleAction: null
	,runAction: null
	,currentAction: null
	,arm: null
	,xVec: null
	,zVec: null
	,dir: null
});
class armory_trait_WalkNavigation extends iron_Trait {
	constructor() {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.ease = 1.0;
		this.yvec = new iron_math_Vec4();
		this.xvec = new iron_math_Vec4();
		this.dir = new iron_math_Vec4();
		this.speed = 5.0;
		super._hx_constructor();
		this.notifyOnInit($bind(this,this.init));
	}
	init() {
		this.keyboard = iron_system_Input.getKeyboard();
		this.gamepad = iron_system_Input.getGamepad();
		this.mouse = iron_system_Input.getMouse();
		try {
			this.camera = js_Boot.__cast(this.object , iron_object_CameraObject);
		} catch( _g ) {
			let _g1 = haxe_Exception.caught(_g).unwrap();
			if(typeof(_g1) == "string") {
				let msg = _g1;
				haxe_Log.trace("Error occurred: " + msg + "\nWalkNavigation trait should be used with a camera object.",{ fileName : "Sources/armory/trait/WalkNavigation.hx", lineNumber : 38, className : "armory.trait.WalkNavigation", methodName : "init"});
			} else {
				throw _g;
			}
		}
		if(this.camera != null) {
			this.notifyOnUpdate($bind(this,this.update));
		}
	}
	update() {
		if(!armory_trait_WalkNavigation.enabled || iron_system_Input.occupied) {
			return;
		}
		let moveForward = this.keyboard.down("w") || this.keyboard.down("up");
		let moveBackward = this.keyboard.down("s") || this.keyboard.down("down");
		let strafeLeft = this.keyboard.down("a") || this.keyboard.down("left");
		let strafeRight = this.keyboard.down("d") || this.keyboard.down("right");
		let strafeUp = this.keyboard.down("e");
		let strafeDown = this.keyboard.down("q");
		let fast = this.keyboard.down("shift") ? 2.0 : this.keyboard.down("alt") ? 0.5 : 1.0;
		if(this.gamepad != null) {
			let leftStickY = Math.abs(this.gamepad.leftStick.y) > 0.05;
			let leftStickX = Math.abs(this.gamepad.leftStick.x) > 0.05;
			let r1 = this.gamepad.down("r1") > 0.0;
			let l1 = this.gamepad.down("l1") > 0.0;
			let rightStickX = Math.abs(this.gamepad.rightStick.x) > 0.1;
			let rightStickY = Math.abs(this.gamepad.rightStick.y) > 0.1;
			if(leftStickY || leftStickX || r1 || l1 || rightStickX || rightStickY) {
				let _this = this.dir;
				_this.x = 0;
				_this.y = 0;
				_this.z = 0;
				_this.w = 1.0;
				if(leftStickY) {
					let _this = this.yvec;
					let _this1 = this.camera;
					let x = -_this1.transform.local.self._20;
					let y = -_this1.transform.local.self._21;
					let z = -_this1.transform.local.self._22;
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					let v_x = x;
					let v_y = y;
					let v_z = z;
					let v_w = 1.0;
					_this.x = v_x;
					_this.y = v_y;
					_this.z = v_z;
					_this.w = v_w;
					let _this2 = this.yvec;
					let f = this.gamepad.leftStick.y;
					_this2.x *= f;
					_this2.y *= f;
					_this2.z *= f;
					let _this3 = this.dir;
					let v = this.yvec;
					_this3.x += v.x;
					_this3.y += v.y;
					_this3.z += v.z;
				}
				if(leftStickX) {
					let _this = this.xvec;
					let _this1 = this.camera;
					let x = _this1.transform.local.self._00;
					let y = _this1.transform.local.self._01;
					let z = _this1.transform.local.self._02;
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					let v_x = x;
					let v_y = y;
					let v_z = z;
					let v_w = 1.0;
					_this.x = v_x;
					_this.y = v_y;
					_this.z = v_z;
					_this.w = v_w;
					let _this2 = this.xvec;
					let f = this.gamepad.leftStick.x;
					_this2.x *= f;
					_this2.y *= f;
					_this2.z *= f;
					let _this3 = this.dir;
					let v = this.xvec;
					_this3.x += v.x;
					_this3.y += v.y;
					_this3.z += v.z;
				}
				if(r1) {
					let _this = this.dir;
					_this.x += 0;
					_this.y += 0;
					_this.z += 1;
				}
				if(l1) {
					let _this = this.dir;
					_this.x += 0;
					_this.y += 0;
					_this.z += -1;
				}
				let d = iron_system_Time.get_delta() * this.speed * fast;
				this.camera.transform.move(this.dir,d);
				if(rightStickX) {
					this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.gamepad.rightStick.x / 15.0);
				}
				if(rightStickY) {
					let _this = this.camera;
					this.camera.transform.rotate(new iron_math_Vec4(_this.transform.local.self._00,_this.transform.local.self._01,_this.transform.local.self._02),this.gamepad.rightStick.y / 15.0);
				}
			}
		}
		if(moveForward || moveBackward || strafeRight || strafeLeft || strafeUp || strafeDown) {
			this.ease += iron_system_Time.get_delta() * 15;
			if(this.ease > 1.0) {
				this.ease = 1.0;
			}
			let _this = this.dir;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			if(moveForward) {
				let _this = this.dir;
				let _this1 = this.camera;
				let x = -_this1.transform.local.self._20;
				let y = -_this1.transform.local.self._21;
				let z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let inlVec4_x = x;
				let inlVec4_y = y;
				let inlVec4_z = z;
				let inlVec4_w = 1.0;
				let _this2 = this.camera;
				let x1 = -_this2.transform.local.self._20;
				let y1 = -_this2.transform.local.self._21;
				let z1 = -_this2.transform.local.self._22;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let inlVec4_x1 = x1;
				let inlVec4_y1 = y1;
				let inlVec4_z1 = z1;
				let inlVec4_w1 = 1.0;
				let _this3 = this.camera;
				let x2 = -_this3.transform.local.self._20;
				let y2 = -_this3.transform.local.self._21;
				let z2 = -_this3.transform.local.self._22;
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let inlVec4_x2 = x2;
				let inlVec4_y2 = y2;
				let inlVec4_z2 = z2;
				let inlVec4_w2 = 1.0;
				_this.x += inlVec4_x;
				_this.y += inlVec4_y1;
				_this.z += inlVec4_z2;
			}
			if(moveBackward) {
				let _this = this.dir;
				let _this1 = this.camera;
				let x = -_this1.transform.local.self._20;
				let y = -_this1.transform.local.self._21;
				let z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let inlVec4_x = x;
				let inlVec4_y = y;
				let inlVec4_z = z;
				let inlVec4_w = 1.0;
				let _this2 = this.camera;
				let x1 = -_this2.transform.local.self._20;
				let y1 = -_this2.transform.local.self._21;
				let z1 = -_this2.transform.local.self._22;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let inlVec4_x1 = x1;
				let inlVec4_y1 = y1;
				let inlVec4_z1 = z1;
				let inlVec4_w1 = 1.0;
				let _this3 = this.camera;
				let x2 = -_this3.transform.local.self._20;
				let y2 = -_this3.transform.local.self._21;
				let z2 = -_this3.transform.local.self._22;
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let inlVec4_x2 = x2;
				let inlVec4_y2 = y2;
				let inlVec4_z2 = z2;
				let inlVec4_w2 = 1.0;
				_this.x += -inlVec4_x;
				_this.y += -inlVec4_y1;
				_this.z += -inlVec4_z2;
			}
			if(strafeRight) {
				let _this = this.dir;
				let _this1 = this.camera;
				let x = _this1.transform.local.self._00;
				let y = _this1.transform.local.self._01;
				let z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let inlVec4_x = x;
				let inlVec4_y = y;
				let inlVec4_z = z;
				let inlVec4_w = 1.0;
				let _this2 = this.camera;
				let x1 = _this2.transform.local.self._00;
				let y1 = _this2.transform.local.self._01;
				let z1 = _this2.transform.local.self._02;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let inlVec4_x1 = x1;
				let inlVec4_y1 = y1;
				let inlVec4_z1 = z1;
				let inlVec4_w1 = 1.0;
				let _this3 = this.camera;
				let x2 = _this3.transform.local.self._00;
				let y2 = _this3.transform.local.self._01;
				let z2 = _this3.transform.local.self._02;
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let inlVec4_x2 = x2;
				let inlVec4_y2 = y2;
				let inlVec4_z2 = z2;
				let inlVec4_w2 = 1.0;
				_this.x += inlVec4_x;
				_this.y += inlVec4_y1;
				_this.z += inlVec4_z2;
			}
			if(strafeLeft) {
				let _this = this.dir;
				let _this1 = this.camera;
				let x = _this1.transform.local.self._00;
				let y = _this1.transform.local.self._01;
				let z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let inlVec4_x = x;
				let inlVec4_y = y;
				let inlVec4_z = z;
				let inlVec4_w = 1.0;
				let _this2 = this.camera;
				let x1 = _this2.transform.local.self._00;
				let y1 = _this2.transform.local.self._01;
				let z1 = _this2.transform.local.self._02;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let inlVec4_x1 = x1;
				let inlVec4_y1 = y1;
				let inlVec4_z1 = z1;
				let inlVec4_w1 = 1.0;
				let _this3 = this.camera;
				let x2 = _this3.transform.local.self._00;
				let y2 = _this3.transform.local.self._01;
				let z2 = _this3.transform.local.self._02;
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let inlVec4_x2 = x2;
				let inlVec4_y2 = y2;
				let inlVec4_z2 = z2;
				let inlVec4_w2 = 1.0;
				_this.x += -inlVec4_x;
				_this.y += -inlVec4_y1;
				_this.z += -inlVec4_z2;
			}
			if(strafeUp) {
				let _this = this.dir;
				_this.x += 0;
				_this.y += 0;
				_this.z += 1;
			}
			if(strafeDown) {
				let _this = this.dir;
				_this.x += 0;
				_this.y += 0;
				_this.z += -1;
			}
		} else {
			this.ease -= iron_system_Time.get_delta() * 20.0 * this.ease;
			if(this.ease < 0.0) {
				this.ease = 0.0;
			}
		}
		if(this.mouse.wheelDelta < 0) {
			this.speed *= 1.1;
		} else if(this.mouse.wheelDelta > 0) {
			this.speed *= 0.9;
			if(this.speed < 0.5) {
				this.speed = 0.5;
			}
		}
		let d = iron_system_Time.get_delta() * this.speed * fast * this.ease;
		if(d > 0.0) {
			this.camera.transform.move(this.dir,d);
		}
		if(this.mouse.down()) {
			this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.mouse.movementX / 200);
			let _this = this.camera;
			this.camera.transform.rotate(new iron_math_Vec4(_this.transform.local.self._00,_this.transform.local.self._01,_this.transform.local.self._02),-this.mouse.movementY / 200);
		}
	}
}
$hxClasses["armory.trait.WalkNavigation"] = armory_trait_WalkNavigation;
armory_trait_WalkNavigation.__name__ = "armory.trait.WalkNavigation";
armory_trait_WalkNavigation.__super__ = iron_Trait;
Object.assign(armory_trait_WalkNavigation.prototype, {
	__class__: armory_trait_WalkNavigation
	,speed: null
	,dir: null
	,xvec: null
	,yvec: null
	,ease: null
	,camera: null
	,keyboard: null
	,gamepad: null
	,mouse: null
});
class iron_App {
	constructor(done) {
		done();
		kha_System.notifyOnFrames(iron_App.render);
		kha_Scheduler.addTimeTask(iron_App.update,0,iron_system_Time.get_delta());
	}
	static w() {
		return kha_System.windowWidth();
	}
	static h() {
		return kha_System.windowHeight();
	}
	static x() {
		return 0;
	}
	static y() {
		return 0;
	}
	static init(done) {
		new iron_App(done);
	}
	static reset() {
		iron_App.traitInits = [];
		iron_App.traitUpdates = [];
		iron_App.traitLateUpdates = [];
		iron_App.traitRenders = [];
		iron_App.traitRenders2D = [];
		if(iron_App.onResets != null) {
			let _g = 0;
			let _g1 = iron_App.onResets;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f();
			}
		}
	}
	static update() {
		if(iron_Scene.active == null || !iron_Scene.active.ready) {
			return;
		}
		if(iron_App.pauseUpdates) {
			return;
		}
		iron_App.startTime = kha_Scheduler.realTime();
		iron_Scene.active.updateFrame();
		let i = 0;
		let l = iron_App.traitUpdates.length;
		while(i < l) {
			if(iron_App.traitInits.length > 0) {
				let _g = 0;
				let _g1 = iron_App.traitInits;
				while(_g < _g1.length) {
					let f = _g1[_g];
					++_g;
					if(iron_App.traitInits.length > 0) {
						f();
					} else {
						break;
					}
				}
				iron_App.traitInits.splice(0,iron_App.traitInits.length);
			}
			iron_App.traitUpdates[i]();
			if(l <= iron_App.traitUpdates.length) {
				++i;
			} else {
				l = iron_App.traitUpdates.length;
			}
		}
		i = 0;
		l = iron_App.traitLateUpdates.length;
		while(i < l) {
			iron_App.traitLateUpdates[i]();
			if(l <= iron_App.traitLateUpdates.length) {
				++i;
			} else {
				l = iron_App.traitLateUpdates.length;
			}
		}
		if(iron_App.onEndFrames != null) {
			let _g = 0;
			let _g1 = iron_App.onEndFrames;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f();
			}
		}
		iron_object_Animation.endFrame();
		let _g = 0;
		let _g1 = iron_App.endFrameCallbacks;
		while(_g < _g1.length) {
			let cb = _g1[_g];
			++_g;
			cb();
		}
		iron_App.updateTime = kha_Scheduler.realTime() - iron_App.startTime;
		if(iron_App.lastw == -1) {
			iron_App.lastw = iron_App.w();
			iron_App.lasth = iron_App.h();
		}
		if(iron_App.lastw != iron_App.w() || iron_App.lasth != iron_App.h()) {
			if(iron_App.onResize != null) {
				iron_App.onResize();
			} else if(iron_Scene.active != null && iron_Scene.active.camera != null) {
				iron_Scene.active.camera.buildProjection();
			}
		}
		iron_App.lastw = iron_App.w();
		iron_App.lasth = iron_App.h();
	}
	static render(frames) {
		let frame = frames[0];
		iron_App.framebuffer = frame;
		iron_system_Time.update();
		if(iron_Scene.active == null || !iron_Scene.active.ready) {
			iron_App.render2D(frame);
			return;
		}
		iron_App.startTime = kha_Scheduler.realTime();
		if(iron_App.traitInits.length > 0) {
			let _g = 0;
			let _g1 = iron_App.traitInits;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				if(iron_App.traitInits.length > 0) {
					f();
				} else {
					break;
				}
			}
			iron_App.traitInits.splice(0,iron_App.traitInits.length);
		}
		iron_Scene.active.renderFrame(frame.get_g4());
		let _g = 0;
		let _g1 = iron_App.traitRenders;
		while(_g < _g1.length) {
			let f = _g1[_g];
			++_g;
			if(iron_App.traitRenders.length > 0) {
				f(frame.get_g4());
			} else {
				break;
			}
		}
		iron_App.render2D(frame);
		iron_App.renderPathTime = kha_Scheduler.realTime() - iron_App.startTime;
	}
	static render2D(frame) {
		if(iron_App.traitRenders2D.length > 0) {
			frame.get_g2().begin(false);
			let _g = 0;
			let _g1 = iron_App.traitRenders2D;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				if(iron_App.traitRenders2D.length > 0) {
					f(frame.get_g2());
				} else {
					break;
				}
			}
			frame.get_g2().end();
		}
	}
	static notifyOnInit(f) {
		iron_App.traitInits.push(f);
	}
	static removeInit(f) {
		HxOverrides.remove(iron_App.traitInits,f);
	}
	static notifyOnUpdate(f) {
		iron_App.traitUpdates.push(f);
	}
	static removeUpdate(f) {
		HxOverrides.remove(iron_App.traitUpdates,f);
	}
	static notifyOnLateUpdate(f) {
		iron_App.traitLateUpdates.push(f);
	}
	static removeLateUpdate(f) {
		HxOverrides.remove(iron_App.traitLateUpdates,f);
	}
	static notifyOnRender(f) {
		iron_App.traitRenders.push(f);
	}
	static removeRender(f) {
		HxOverrides.remove(iron_App.traitRenders,f);
	}
	static notifyOnRender2D(f) {
		iron_App.traitRenders2D.push(f);
	}
	static removeRender2D(f) {
		HxOverrides.remove(iron_App.traitRenders2D,f);
	}
	static notifyOnReset(f) {
		if(iron_App.onResets == null) {
			iron_App.onResets = [];
		}
		iron_App.onResets.push(f);
	}
	static removeReset(f) {
		HxOverrides.remove(iron_App.onResets,f);
	}
	static notifyOnEndFrame(f) {
		if(iron_App.onEndFrames == null) {
			iron_App.onEndFrames = [];
		}
		iron_App.onEndFrames.push(f);
	}
	static removeEndFrame(f) {
		HxOverrides.remove(iron_App.onEndFrames,f);
	}
}
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = "iron.App";
Object.assign(iron_App.prototype, {
	__class__: iron_App
});
class iron_data_Data {
	constructor() {
	}
	static deleteAll() {
		let h = iron_data_Data.cachedMeshes.h;
		let c_h = h;
		let c_keys = Object.keys(h);
		let c_length = c_keys.length;
		let c_current = 0;
		while(c_current < c_length) {
			let c = c_h[c_keys[c_current++]];
			c.delete();
		}
		iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
		let h1 = iron_data_Data.cachedShaders.h;
		let c_h1 = h1;
		let c_keys1 = Object.keys(h1);
		let c_length1 = c_keys1.length;
		let c_current1 = 0;
		while(c_current1 < c_length1) {
			let c = c_h1[c_keys1[c_current1++]];
			c.delete();
		}
		iron_data_Data.cachedShaders = new haxe_ds_StringMap();
		iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
		iron_data_Data.cachedLights = new haxe_ds_StringMap();
		iron_data_Data.cachedCameras = new haxe_ds_StringMap();
		iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
		iron_data_Data.cachedParticles = new haxe_ds_StringMap();
		iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
		if(iron_RenderPath.active != null) {
			iron_RenderPath.active.unload();
		}
		let h2 = iron_data_Data.cachedBlobs.h;
		let c_h2 = h2;
		let c_keys2 = Object.keys(h2);
		let c_length2 = c_keys2.length;
		let c_current2 = 0;
		while(c_current2 < c_length2) {
			let c = c_h2[c_keys2[c_current2++]];
			c.unload();
		}
		iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
		let h3 = iron_data_Data.cachedImages.h;
		let c_h3 = h3;
		let c_keys3 = Object.keys(h3);
		let c_length3 = c_keys3.length;
		let c_current3 = 0;
		while(c_current3 < c_length3) {
			let c = c_h3[c_keys3[c_current3++]];
			c.unload();
		}
		iron_data_Data.cachedImages = new haxe_ds_StringMap();
		let h4 = iron_data_Data.cachedSounds.h;
		let c_h4 = h4;
		let c_keys4 = Object.keys(h4);
		let c_length4 = c_keys4.length;
		let c_current4 = 0;
		while(c_current4 < c_length4) {
			let c = c_h4[c_keys4[c_current4++]];
			c.unload();
		}
		iron_data_Data.cachedSounds = new haxe_ds_StringMap();
		let h5 = iron_data_Data.cachedVideos.h;
		let c_h5 = h5;
		let c_keys5 = Object.keys(h5);
		let c_length5 = c_keys5.length;
		let c_current5 = 0;
		while(c_current5 < c_length5) {
			let c = c_h5[c_keys5[c_current5++]];
			c.unload();
		}
		iron_data_Data.cachedVideos = new haxe_ds_StringMap();
		let h6 = iron_data_Data.cachedFonts.h;
		let c_h6 = h6;
		let c_keys6 = Object.keys(h6);
		let c_length6 = c_keys6.length;
		let c_current6 = 0;
		while(c_current6 < c_length6) {
			let c = c_h6[c_keys6[c_current6++]];
			c.unload();
		}
		iron_data_Data.cachedFonts = new haxe_ds_StringMap();
	}
	static getMesh(file,name,done) {
		let handle = file + name;
		let cached = iron_data_Data.cachedMeshes.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingMeshes.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingMeshes.h[handle] = [done];
		iron_data_MeshData.parse(file,name,function(b) {
			iron_data_Data.cachedMeshes.h[handle] = b;
			b.handle = handle;
			let _g = 0;
			let _g1 = iron_data_Data.loadingMeshes.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingMeshes;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static deleteMesh(handle) {
		let mesh = iron_data_Data.cachedMeshes.h[handle];
		if(mesh == null) {
			return;
		}
		mesh.delete();
		let _this = iron_data_Data.cachedMeshes;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static getLight(file,name,done) {
		let handle = file + name;
		let cached = iron_data_Data.cachedLights.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingLights.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingLights.h[handle] = [done];
		iron_data_LightData.parse(file,name,function(b) {
			iron_data_Data.cachedLights.h[handle] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingLights.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingLights;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static getCamera(file,name,done) {
		let handle = file + name;
		let cached = iron_data_Data.cachedCameras.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingCameras.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingCameras.h[handle] = [done];
		iron_data_CameraData.parse(file,name,function(b) {
			iron_data_Data.cachedCameras.h[handle] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingCameras.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingCameras;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static getMaterial(file,name,done) {
		let handle = file + name;
		let cached = iron_data_Data.cachedMaterials.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingMaterials.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingMaterials.h[handle] = [done];
		iron_data_MaterialData.parse(file,name,function(b) {
			iron_data_Data.cachedMaterials.h[handle] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingMaterials.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingMaterials;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static getParticle(file,name,done) {
		let handle = file + name;
		let cached = iron_data_Data.cachedParticles.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingParticles.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingParticles.h[handle] = [done];
		iron_data_ParticleData.parse(file,name,function(b) {
			iron_data_Data.cachedParticles.h[handle] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingParticles.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingParticles;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static getWorld(file,name,done) {
		if(name == null) {
			done(null);
			return;
		}
		let handle = file + name;
		let cached = iron_data_Data.cachedWorlds.h[handle];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingWorlds.h[handle];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingWorlds.h[handle] = [done];
		iron_data_WorldData.parse(file,name,function(b) {
			iron_data_Data.cachedWorlds.h[handle] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingWorlds.h[handle];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingWorlds;
			if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
				delete(_this.h[handle]);
			}
		});
	}
	static getShader(file,name,done,overrideContext) {
		let cacheName = name;
		if(overrideContext != null) {
			cacheName += "2";
		}
		let cached = iron_data_Data.cachedShaders.h[cacheName];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingShaders.h[cacheName];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingShaders.h[cacheName] = [done];
		iron_data_ShaderData.parse(file,name,function(b) {
			iron_data_Data.cachedShaders.h[cacheName] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingShaders.h[cacheName];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingShaders;
			if(Object.prototype.hasOwnProperty.call(_this.h,cacheName)) {
				delete(_this.h[cacheName]);
			}
		},overrideContext);
	}
	static getSceneRaw(file,done) {
		let cached = iron_data_Data.cachedSceneRaws.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingSceneRaws.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingSceneRaws.h[file] = [done];
		let compressed = file.endsWith(".lz4");
		let isJson = file.endsWith(".json");
		let ext = compressed || isJson || file.endsWith(".arm") ? "" : ".arm";
		iron_data_Data.getBlob(file + ext,function(b) {
			let parsed = null;
			if(isJson) {
				let s = b.toString();
				if(s.charAt(0) == "{") {
					parsed = JSON.parse(s);
				} else {
					let i = new haxe_io_BytesInput(b.toBytes());
					i.set_bigEndian(false);
					parsed = iron_system_ArmPack.read(i);
				}
			} else {
				let i = new haxe_io_BytesInput(b.toBytes());
				i.set_bigEndian(false);
				parsed = iron_system_ArmPack.read(i);
			}
			iron_data_Data.returnSceneRaw(file,parsed);
		});
	}
	static returnSceneRaw(file,parsed) {
		iron_data_Data.cachedSceneRaws.h[file] = parsed;
		let _g = 0;
		let _g1 = iron_data_Data.loadingSceneRaws.h[file];
		while(_g < _g1.length) {
			let f = _g1[_g];
			++_g;
			f(parsed);
		}
		let _this = iron_data_Data.loadingSceneRaws;
		if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
			delete(_this.h[file]);
		}
	}
	static getMeshRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getLightRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getCameraRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getMaterialRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getParticleRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getWorldRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getShaderRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getSpeakerRawByName(datas,name) {
		if(name == "") {
			return datas[0];
		}
		let _g = 0;
		while(_g < datas.length) {
			let dat = datas[_g];
			++_g;
			if(dat.name == name) {
				return dat;
			}
		}
		return null;
	}
	static getBlob(file,done) {
		let cached = iron_data_Data.cachedBlobs.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingBlobs.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingBlobs.h[file] = [done];
		let tmp;
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			tmp = file;
		} else {
			let slash = file.lastIndexOf("/");
			tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
		}
		kha_Assets.loadBlobFromPath(tmp,function(b) {
			iron_data_Data.cachedBlobs.h[file] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingBlobs.h[file];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingBlobs;
			if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
				delete(_this.h[file]);
			}
			iron_data_Data.assetsLoaded++;
		},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 424, className : "iron.data.Data", methodName : "getBlob"});
	}
	static deleteBlob(handle) {
		let blob = iron_data_Data.cachedBlobs.h[handle];
		if(blob == null) {
			return;
		}
		blob.unload();
		let _this = iron_data_Data.cachedBlobs;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static getImage(file,done,readable,format) {
		if(format == null) {
			format = "RGBA32";
		}
		if(readable == null) {
			readable = false;
		}
		let cached = iron_data_Data.cachedImages.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingImages.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingImages.h[file] = [done];
		let tmp;
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			tmp = file;
		} else {
			let slash = file.lastIndexOf("/");
			tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
		}
		kha_Assets.loadImageFromPath(tmp,readable,function(b) {
			iron_data_Data.cachedImages.h[file] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingImages.h[file];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingImages;
			if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
				delete(_this.h[file]);
			}
			iron_data_Data.assetsLoaded++;
		},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 473, className : "iron.data.Data", methodName : "getImage"});
	}
	static deleteImage(handle) {
		let image = iron_data_Data.cachedImages.h[handle];
		if(image == null) {
			return;
		}
		image.unload();
		let _this = iron_data_Data.cachedImages;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static getSound(file,done) {
		if(file.endsWith(".wav")) {
			file = file.substring(0,file.length - 4) + ".ogg";
		}
		let cached = iron_data_Data.cachedSounds.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingSounds.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingSounds.h[file] = [done];
		let tmp;
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			tmp = file;
		} else {
			let slash = file.lastIndexOf("/");
			tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
		}
		kha_Assets.loadSoundFromPath(tmp,function(b) {
			b.uncompress(function() {
				iron_data_Data.cachedSounds.h[file] = b;
				let _g = 0;
				let _g1 = iron_data_Data.loadingSounds.h[file];
				while(_g < _g1.length) {
					let f = _g1[_g];
					++_g;
					f(b);
				}
				let _this = iron_data_Data.loadingSounds;
				if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
					delete(_this.h[file]);
				}
				iron_data_Data.assetsLoaded++;
			});
		},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 513, className : "iron.data.Data", methodName : "getSound"});
	}
	static deleteSound(handle) {
		let sound = iron_data_Data.cachedSounds.h[handle];
		if(sound == null) {
			return;
		}
		sound.unload();
		let _this = iron_data_Data.cachedSounds;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static getVideo(file,done) {
		let cached = iron_data_Data.cachedVideos.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingVideos.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingVideos.h[file] = [done];
		let tmp;
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			tmp = file;
		} else {
			let slash = file.lastIndexOf("/");
			tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
		}
		kha_Assets.loadVideoFromPath(tmp,function(b) {
			iron_data_Data.cachedVideos.h[file] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingVideos.h[file];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingVideos;
			if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
				delete(_this.h[file]);
			}
			iron_data_Data.assetsLoaded++;
		},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 555, className : "iron.data.Data", methodName : "getVideo"});
	}
	static deleteVideo(handle) {
		let video = iron_data_Data.cachedVideos.h[handle];
		if(video == null) {
			return;
		}
		video.unload();
		let _this = iron_data_Data.cachedVideos;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static getFont(file,done) {
		let cached = iron_data_Data.cachedFonts.h[file];
		if(cached != null) {
			done(cached);
			return;
		}
		let loading = iron_data_Data.loadingFonts.h[file];
		if(loading != null) {
			loading.push(done);
			return;
		}
		iron_data_Data.loadingFonts.h[file] = [done];
		let tmp;
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			tmp = file;
		} else {
			let slash = file.lastIndexOf("/");
			tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
		}
		kha_Assets.loadFontFromPath(tmp,function(b) {
			iron_data_Data.cachedFonts.h[file] = b;
			let _g = 0;
			let _g1 = iron_data_Data.loadingFonts.h[file];
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f(b);
			}
			let _this = iron_data_Data.loadingFonts;
			if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
				delete(_this.h[file]);
			}
			iron_data_Data.assetsLoaded++;
		},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 585, className : "iron.data.Data", methodName : "getFont"});
	}
	static deleteFont(handle) {
		let font = iron_data_Data.cachedFonts.h[handle];
		if(font == null) {
			return;
		}
		font.unload();
		let _this = iron_data_Data.cachedFonts;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	}
	static isAbsolute(file) {
		if(!(file.charAt(0) == "/" || file.charAt(1) == ":")) {
			if(file.charAt(0) == "\\") {
				return file.charAt(1) == "\\";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static isUp(file) {
		if(file.charAt(0) == ".") {
			return file.charAt(1) == ".";
		} else {
			return false;
		}
	}
	static baseName(path) {
		let slash = path.lastIndexOf("/");
		if(slash >= 0) {
			return HxOverrides.substr(path,slash + 1,null);
		} else {
			return path;
		}
	}
	static resolvePath(file) {
		if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
			return file;
		}
		let slash = file.lastIndexOf("/");
		if(slash >= 0) {
			return HxOverrides.substr(file,slash + 1,null);
		} else {
			return file;
		}
	}
}
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = "iron.data.Data";
Object.assign(iron_data_Data.prototype, {
	__class__: iron_data_Data
});
class iron_system_Input {
	static reset() {
		iron_system_Input.occupied = false;
		if(iron_system_Input.mouse != null) {
			iron_system_Input.mouse.reset();
		}
		if(iron_system_Input.pen != null) {
			iron_system_Input.pen.reset();
		}
		if(iron_system_Input.keyboard != null) {
			iron_system_Input.keyboard.reset();
		}
		let _g = 0;
		let _g1 = iron_system_Input.gamepads;
		while(_g < _g1.length) {
			let gamepad = _g1[_g];
			++_g;
			gamepad.reset();
		}
	}
	static endFrame() {
		if(iron_system_Input.mouse != null) {
			iron_system_Input.mouse.endFrame();
		}
		if(iron_system_Input.pen != null) {
			iron_system_Input.pen.endFrame();
		}
		if(iron_system_Input.keyboard != null) {
			iron_system_Input.keyboard.endFrame();
		}
		let _g = 0;
		let _g1 = iron_system_Input.gamepads;
		while(_g < _g1.length) {
			let gamepad = _g1[_g];
			++_g;
			gamepad.endFrame();
		}
		if(iron_system_Input.virtualButtons != null) {
			let h = iron_system_Input.virtualButtons.h;
			let vb_h = h;
			let vb_keys = Object.keys(h);
			let vb_length = vb_keys.length;
			let vb_current = 0;
			while(vb_current < vb_length) {
				let vb = vb_h[vb_keys[vb_current++]];
				vb.started = vb.released = false;
			}
		}
	}
	static getMouse() {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		if(iron_system_Input.mouse == null) {
			iron_system_Input.mouse = new iron_system_Mouse();
		}
		return iron_system_Input.mouse;
	}
	static getPen() {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		if(iron_system_Input.pen == null) {
			iron_system_Input.pen = new iron_system_Pen();
		}
		return iron_system_Input.pen;
	}
	static getSurface() {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		return iron_system_Input.getMouse();
	}
	static getKeyboard() {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		if(iron_system_Input.keyboard == null) {
			iron_system_Input.keyboard = new iron_system_Keyboard();
		}
		return iron_system_Input.keyboard;
	}
	static getGamepad(i) {
		if(i == null) {
			i = 0;
		}
		if(i >= 4) {
			return null;
		}
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		while(iron_system_Input.gamepads.length <= i) iron_system_Input.gamepads.push(new iron_system_Gamepad(iron_system_Input.gamepads.length));
		if(iron_system_Input.gamepads[i].connected) {
			return iron_system_Input.gamepads[i];
		} else {
			return null;
		}
	}
	static getSensor() {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		if(iron_system_Input.sensor == null) {
			iron_system_Input.sensor = new iron_system_Sensor();
		}
		return iron_system_Input.sensor;
	}
	static getVirtualButton(virtual) {
		if(!iron_system_Input.registered) {
			iron_system_Input.registered = true;
			iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
			iron_App.notifyOnReset(iron_system_Input.reset);
			kha_System.notifyOnApplicationState(function() {
				iron_system_Input.getMouse().reset();
			},null,null,null,null);
		}
		if(iron_system_Input.virtualButtons == null) {
			return null;
		}
		return iron_system_Input.virtualButtons.h[virtual];
	}
	static register() {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
		kha_System.notifyOnApplicationState(function() {
			iron_system_Input.getMouse().reset();
		},null,null,null,null);
	}
}
$hxClasses["iron.system.Input"] = iron_system_Input;
iron_system_Input.__name__ = "iron.system.Input";
class iron_object_Object {
	constructor() {
		if(iron_object_Object._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.isEmpty = false;
		this.properties = null;
		this.culledShadow = false;
		this.culledMesh = false;
		this.culled = false;
		this.visibleShadow = true;
		this.visibleMesh = true;
		this.visible = true;
		this.animation = null;
		this.lods = null;
		this.children = [];
		this.parent = null;
		this.traits = [];
		this.constraints = null;
		this.name = "";
		this.raw = null;
		this.uid = iron_object_Object.uidCounter++;
		this.urandom = iron_object_Object.seededRandom();
		this.transform = new iron_object_Transform(this);
		this.isEmpty = js_Boot.getClass(this) == iron_object_Object;
		if(this.isEmpty && iron_Scene.active != null) {
			iron_Scene.active.empties.push(this);
		}
	}
	setParent(parentObject,parentInverse,keepTransform) {
		if(keepTransform == null) {
			keepTransform = false;
		}
		if(parentInverse == null) {
			parentInverse = false;
		}
		if(parentObject == this || parentObject == this.parent) {
			return;
		}
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			if(keepTransform) {
				this.transform.applyParent();
			}
			this.parent = null;
			this.transform.buildMatrix();
		}
		if(parentObject == null) {
			parentObject = iron_Scene.active.sceneParent;
		}
		this.parent = parentObject;
		this.parent.children.push(this);
		if(parentInverse) {
			this.transform.applyParentInverse();
		}
	}
	addChild(o,parentInverse) {
		if(parentInverse == null) {
			parentInverse = false;
		}
		o.setParent(this,parentInverse,false);
	}
	removeChild(o,keepTransform) {
		if(keepTransform == null) {
			keepTransform = false;
		}
		o.setParent(null,false,keepTransform);
	}
	remove() {
		if(this.isEmpty && iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.empties,this);
		}
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
	}
	getChild(name) {
		if(this.name == name) {
			return this;
		} else {
			let _g = 0;
			let _g1 = this.children;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				let r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	getChildren(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(!recursive) {
			return this.children;
		}
		let retChildren = this.children.slice();
		let _g = 0;
		let _g1 = this.children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			retChildren = retChildren.concat(child.getChildren(recursive));
		}
		return retChildren;
	}
	getChildOfType(type) {
		if(js_Boot.__instanceof(this,type)) {
			return this;
		} else {
			let _g = 0;
			let _g1 = this.children;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				let r = c.getChildOfType(type);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	addTrait(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			let _g = 0;
			let _g1 = t._add;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	removeTrait(t) {
		if(t._init != null) {
			let _g = 0;
			let _g1 = t._init;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			let _g = 0;
			let _g1 = t._update;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeUpdate(f);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			let _g = 0;
			let _g1 = t._lateUpdate;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeLateUpdate(f);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			let _g = 0;
			let _g1 = t._render;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeRender(f);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			let _g = 0;
			let _g1 = t._render2D;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				iron_App.removeRender2D(f);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			let _g = 0;
			let _g1 = t._remove;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
	}
	getTrait(c) {
		let _g = 0;
		let _g1 = this.traits;
		while(_g < _g1.length) {
			let t = _g1[_g];
			++_g;
			if(js_Boot.getClass(t) == c) {
				return t;
			}
		}
		return null;
	}
	getParentArmature(name) {
		let _g = 0;
		let _g1 = iron_Scene.active.animations;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.armature != null && a.armature.name == name) {
				return a;
			}
		}
		return null;
	}
	setupAnimation(oactions) {
		let _gthis = this;
		if(this.raw.parent_bone != null) {
			iron_Scene.active.notifyOnInit(function() {
				let banim = _gthis.getParentArmature(_gthis.parent.name);
				if(banim != null) {
					banim.addBoneChild(_gthis.raw.parent_bone,_gthis);
				}
			});
		}
		if(oactions == null) {
			return;
		}
		this.animation = new iron_object_ObjectAnimation(this,oactions);
	}
	setupMorphTargets() {
	}
	static seededRandom() {
		iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
		return iron_object_Object.seed / 233280.0;
	}
}
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = "iron.object.Object";
Object.assign(iron_object_Object.prototype, {
	__class__: iron_object_Object
	,uid: null
	,urandom: null
	,raw: null
	,name: null
	,transform: null
	,constraints: null
	,traits: null
	,parent: null
	,children: null
	,lods: null
	,animation: null
	,visible: null
	,visibleMesh: null
	,visibleShadow: null
	,culled: null
	,culledMesh: null
	,culledShadow: null
	,properties: null
	,isEmpty: null
});
class kha_math_FastMatrix4 {
	constructor(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
		this._00 = _00;
		this._10 = _10;
		this._20 = _20;
		this._30 = _30;
		this._01 = _01;
		this._11 = _11;
		this._21 = _21;
		this._31 = _31;
		this._02 = _02;
		this._12 = _12;
		this._22 = _22;
		this._32 = _32;
		this._03 = _03;
		this._13 = _13;
		this._23 = _23;
		this._33 = _33;
	}
	static fromMatrix4(m) {
		return new kha_math_FastMatrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
	}
	static orthogonalProjection(left,right,bottom,top,zn,zf) {
		let tx = -(right + left) / (right - left);
		let ty = -(top + bottom) / (top - bottom);
		let tz = -(zf + zn) / (zf - zn);
		return new kha_math_FastMatrix4(2 / (right - left),0,0,tx,0,2.0 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
	}
	static perspectiveProjection(fovY,aspect,zn,zf) {
		let uh = 1.0 / Math.tan(fovY / 2);
		let uw = uh / aspect;
		return new kha_math_FastMatrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	}
	static lookAt(eye,at,up) {
		let x = at.x - eye.x;
		let y = at.y - eye.y;
		let z = at.z - eye.z;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let _this_x = x;
		let _this_y = y;
		let _this_z = z;
		let x1 = _this_x;
		let y1 = _this_y;
		let z1 = _this_z;
		if(z1 == null) {
			z1 = 0;
		}
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		let zaxis_x = x1;
		let zaxis_y = y1;
		let zaxis_z = z1;
		let currentLength = Math.sqrt(zaxis_x * zaxis_x + zaxis_y * zaxis_y + zaxis_z * zaxis_z);
		if(currentLength != 0) {
			let mul = 1 / currentLength;
			zaxis_x *= mul;
			zaxis_y *= mul;
			zaxis_z *= mul;
		}
		let _x = zaxis_y * up.z - zaxis_z * up.y;
		let _y = zaxis_z * up.x - zaxis_x * up.z;
		let _z = zaxis_x * up.y - zaxis_y * up.x;
		let x2 = _x;
		let y2 = _y;
		let z2 = _z;
		if(z2 == null) {
			z2 = 0;
		}
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		let _this_x1 = x2;
		let _this_y1 = y2;
		let _this_z1 = z2;
		let x3 = _this_x1;
		let y3 = _this_y1;
		let z3 = _this_z1;
		if(z3 == null) {
			z3 = 0;
		}
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let xaxis_x = x3;
		let xaxis_y = y3;
		let xaxis_z = z3;
		let currentLength1 = Math.sqrt(xaxis_x * xaxis_x + xaxis_y * xaxis_y + xaxis_z * xaxis_z);
		if(currentLength1 != 0) {
			let mul = 1 / currentLength1;
			xaxis_x *= mul;
			xaxis_y *= mul;
			xaxis_z *= mul;
		}
		let _x1 = xaxis_y * zaxis_z - xaxis_z * zaxis_y;
		let _y1 = xaxis_z * zaxis_x - xaxis_x * zaxis_z;
		let _z1 = xaxis_x * zaxis_y - xaxis_y * zaxis_x;
		let x4 = _x1;
		let y4 = _y1;
		let z4 = _z1;
		if(z4 == null) {
			z4 = 0;
		}
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let yaxis_x = x4;
		let yaxis_y = y4;
		let yaxis_z = z4;
		return new kha_math_FastMatrix4(xaxis_x,xaxis_y,xaxis_z,-(xaxis_x * eye.x + xaxis_y * eye.y + xaxis_z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis_x,-zaxis_y,-zaxis_z,zaxis_x * eye.x + zaxis_y * eye.y + zaxis_z * eye.z,0,0,0,1);
	}
}
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = "kha.math.FastMatrix4";
Object.assign(kha_math_FastMatrix4.prototype, {
	__class__: kha_math_FastMatrix4
	,_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
});
class iron_math_Vec4 {
	constructor(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	cross(v) {
		let ax = this.x;
		let ay = this.y;
		let az = this.z;
		let vx = v.x;
		let vy = v.y;
		let vz = v.z;
		this.x = ay * vz - az * vy;
		this.y = az * vx - ax * vz;
		this.z = ax * vy - ay * vx;
		return this;
	}
	crossvecs(a,b) {
		let ax = a.x;
		let ay = a.y;
		let az = a.z;
		let bx = b.x;
		let by = b.y;
		let bz = b.z;
		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;
		return this;
	}
	set(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	add(v) {
		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		return this;
	}
	addf(x,y,z) {
		this.x += x;
		this.y += y;
		this.z += z;
		return this;
	}
	addvecs(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		return this;
	}
	subvecs(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		return this;
	}
	normalize() {
		let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			this.x *= invN;
			this.y *= invN;
			this.z *= invN;
		}
		return this;
	}
	mult(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
		return this;
	}
	dot(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z;
	}
	setFrom(v) {
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = v.w;
		return this;
	}
	clone() {
		return new iron_math_Vec4(this.x,this.y,this.z,this.w);
	}
	lerp(from,to,s) {
		this.x = from.x + (to.x - from.x) * s;
		this.y = from.y + (to.y - from.y) * s;
		this.z = from.z + (to.z - from.z) * s;
		return this;
	}
	applyproj(m) {
		let x = this.x;
		let y = this.y;
		let z = this.z;
		let d = 1.0 / (m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33);
		this.x = (m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30) * d;
		this.y = (m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31) * d;
		this.z = (m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32) * d;
		return this;
	}
	applymat(m) {
		let x = this.x;
		let y = this.y;
		let z = this.z;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
		return this;
	}
	applymat4(m) {
		let x = this.x;
		let y = this.y;
		let z = this.z;
		let w = this.w;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
		this.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
		return this;
	}
	applyAxisAngle(axis,angle) {
		let quat_x = 0.0;
		let quat_y = 0.0;
		let quat_z = 0.0;
		let quat_w = 1.0;
		let s = Math.sin(angle * 0.5);
		quat_x = axis.x * s;
		quat_y = axis.y * s;
		quat_z = axis.z * s;
		quat_w = Math.cos(angle * 0.5);
		let l = Math.sqrt(quat_x * quat_x + quat_y * quat_y + quat_z * quat_z + quat_w * quat_w);
		if(l == 0.0) {
			quat_x = 0;
			quat_y = 0;
			quat_z = 0;
			quat_w = 0;
		} else {
			l = 1.0 / l;
			quat_x *= l;
			quat_y *= l;
			quat_z *= l;
			quat_w *= l;
		}
		let ix = quat_w * this.x + quat_y * this.z - quat_z * this.y;
		let iy = quat_w * this.y + quat_z * this.x - quat_x * this.z;
		let iz = quat_w * this.z + quat_x * this.y - quat_y * this.x;
		let iw = -quat_x * this.x - quat_y * this.y - quat_z * this.z;
		this.x = ix * quat_w + iw * -quat_x + iy * -quat_z - iz * -quat_y;
		this.y = iy * quat_w + iw * -quat_y + iz * -quat_x - ix * -quat_z;
		this.z = iz * quat_w + iw * -quat_z + ix * -quat_y - iy * -quat_x;
		return this;
	}
	applyQuat(q) {
		let ix = q.w * this.x + q.y * this.z - q.z * this.y;
		let iy = q.w * this.y + q.z * this.x - q.x * this.z;
		let iz = q.w * this.z + q.x * this.y - q.y * this.x;
		let iw = -q.x * this.x - q.y * this.y - q.z * this.z;
		this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;
		this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;
		this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;
		return this;
	}
	equals(v) {
		if(this.x == v.x && this.y == v.y) {
			return this.z == v.z;
		} else {
			return false;
		}
	}
	almostEquals(v,prec) {
		if(Math.abs(this.x - v.x) < prec && Math.abs(this.y - v.y) < prec) {
			return Math.abs(this.z - v.z) < prec;
		} else {
			return false;
		}
	}
	length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	sub(v) {
		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		return this;
	}
	exp(v) {
		this.x = Math.exp(v.x);
		this.y = Math.exp(v.y);
		this.z = Math.exp(v.z);
		return this;
	}
	distanceTo(p) {
		return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y) + (p.z - this.z) * (p.z - this.z));
	}
	reflect(n) {
		let d = 2 * (this.x * n.x + this.y * n.y + this.z * n.z);
		this.x -= d * n.x;
		this.y -= d * n.y;
		this.z -= d * n.z;
		return this;
	}
	clamp(min,max) {
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l < min) {
			let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				this.x *= invN;
				this.y *= invN;
				this.z *= invN;
			}
			let _this = this;
			_this.x *= min;
			_this.y *= min;
			_this.z *= min;
		} else if(l > max) {
			let n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				this.x *= invN;
				this.y *= invN;
				this.z *= invN;
			}
			let _this = this;
			_this.x *= max;
			_this.y *= max;
			_this.z *= max;
		}
		return this;
	}
	toString() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	static distance(v1,v2) {
		let vx = v1.x - v2.x;
		let vy = v1.y - v2.y;
		let vz = v1.z - v2.z;
		return Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	static distancef(v1x,v1y,v1z,v2x,v2y,v2z) {
		let vx = v1x - v2x;
		let vy = v1y - v2y;
		let vz = v1z - v2z;
		return Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	static xAxis() {
		return new iron_math_Vec4(1.0,0.0,0.0);
	}
	static yAxis() {
		return new iron_math_Vec4(0.0,1.0,0.0);
	}
	static zAxis() {
		return new iron_math_Vec4(0.0,0.0,1.0);
	}
}
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = "iron.math.Vec4";
Object.assign(iron_math_Vec4.prototype, {
	__class__: iron_math_Vec4
	,x: null
	,y: null
	,z: null
	,w: null
});
class iron_math_Mat4 {
	constructor(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
		this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
	}
	compose(loc,quat,sc) {
		let x = quat.x;
		let y = quat.y;
		let z = quat.z;
		let w = quat.w;
		let x2 = x + x;
		let y2 = y + y;
		let z2 = z + z;
		let xx = x * x2;
		let xy = x * y2;
		let xz = x * z2;
		let yy = y * y2;
		let yz = y * z2;
		let zz = z * z2;
		let wx = w * x2;
		let wy = w * y2;
		let wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		let x1 = sc.x;
		let y1 = sc.y;
		let z1 = sc.z;
		this.self._00 *= x1;
		this.self._01 *= x1;
		this.self._02 *= x1;
		this.self._03 *= x1;
		this.self._10 *= y1;
		this.self._11 *= y1;
		this.self._12 *= y1;
		this.self._13 *= y1;
		this.self._20 *= z1;
		this.self._21 *= z1;
		this.self._22 *= z1;
		this.self._23 *= z1;
		this.self._30 = loc.x;
		this.self._31 = loc.y;
		this.self._32 = loc.z;
		return this;
	}
	decompose(loc,quat,scale) {
		loc.x = this.self._30;
		loc.y = this.self._31;
		loc.z = this.self._32;
		let _this = iron_math_Mat4.helpVec;
		_this.x = this.self._00;
		_this.y = this.self._01;
		_this.z = this.self._02;
		_this.w = 1.0;
		let _this1 = _this;
		scale.x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		let _this2 = iron_math_Mat4.helpVec;
		_this2.x = this.self._10;
		_this2.y = this.self._11;
		_this2.z = this.self._12;
		_this2.w = 1.0;
		let _this3 = _this2;
		scale.y = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		let _this4 = iron_math_Mat4.helpVec;
		_this4.x = this.self._20;
		_this4.y = this.self._21;
		_this4.z = this.self._22;
		_this4.w = 1.0;
		let _this5 = _this4;
		scale.z = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		let _this6 = this.self;
		let m3 = _this6._12;
		let m4 = _this6._22;
		let m5 = _this6._32;
		let m6 = _this6._13;
		let m7 = _this6._23;
		let m8 = _this6._33;
		let c00 = _this6._11 * (m4 * m8 - m5 * m7) - _this6._21 * (m3 * m8 - m5 * m6) + _this6._31 * (m3 * m7 - m4 * m6);
		let m31 = _this6._12;
		let m41 = _this6._22;
		let m51 = _this6._32;
		let m61 = _this6._13;
		let m71 = _this6._23;
		let m81 = _this6._33;
		let c01 = _this6._10 * (m41 * m81 - m51 * m71) - _this6._20 * (m31 * m81 - m51 * m61) + _this6._30 * (m31 * m71 - m41 * m61);
		let m32 = _this6._11;
		let m42 = _this6._21;
		let m52 = _this6._31;
		let m62 = _this6._13;
		let m72 = _this6._23;
		let m82 = _this6._33;
		let c02 = _this6._10 * (m42 * m82 - m52 * m72) - _this6._20 * (m32 * m82 - m52 * m62) + _this6._30 * (m32 * m72 - m42 * m62);
		let m33 = _this6._11;
		let m43 = _this6._21;
		let m53 = _this6._31;
		let m63 = _this6._12;
		let m73 = _this6._22;
		let m83 = _this6._32;
		let c03 = _this6._10 * (m43 * m83 - m53 * m73) - _this6._20 * (m33 * m83 - m53 * m63) + _this6._30 * (m33 * m73 - m43 * m63);
		if(_this6._00 * c00 - _this6._01 * c01 + _this6._02 * c02 - _this6._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = this.self._22 * invs;
		let m = iron_math_Mat4.helpMat;
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m311 = m.self._02;
		let m321 = m.self._12;
		let m331 = m.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		return this;
	}
	setLoc(v) {
		this.self._30 = v.x;
		this.self._31 = v.y;
		this.self._32 = v.z;
		return this;
	}
	fromQuat(q) {
		let x = q.x;
		let y = q.y;
		let z = q.z;
		let w = q.w;
		let x2 = x + x;
		let y2 = y + y;
		let z2 = z + z;
		let xx = x * x2;
		let xy = x * y2;
		let xz = x * z2;
		let yy = y * y2;
		let yz = y * z2;
		let zz = z * z2;
		let wx = w * x2;
		let wy = w * y2;
		let wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	setIdentity() {
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	initTranslate(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = x;
		this.self._31 = y;
		this.self._32 = z;
		this.self._33 = 1.0;
		return this;
	}
	translate(x,y,z) {
		this.self._00 += x * this.self._03;
		this.self._01 += y * this.self._03;
		this.self._02 += z * this.self._03;
		this.self._10 += x * this.self._13;
		this.self._11 += y * this.self._13;
		this.self._12 += z * this.self._13;
		this.self._20 += x * this.self._23;
		this.self._21 += y * this.self._23;
		this.self._22 += z * this.self._23;
		this.self._30 += x * this.self._33;
		this.self._31 += y * this.self._33;
		this.self._32 += z * this.self._33;
		return this;
	}
	scale(v) {
		let x = v.x;
		let y = v.y;
		let z = v.z;
		this.self._00 *= x;
		this.self._01 *= x;
		this.self._02 *= x;
		this.self._03 *= x;
		this.self._10 *= y;
		this.self._11 *= y;
		this.self._12 *= y;
		this.self._13 *= y;
		this.self._20 *= z;
		this.self._21 *= z;
		this.self._22 *= z;
		this.self._23 *= z;
		return this;
	}
	multmats3x4(a,b) {
		let a00 = a.self._00;
		let a01 = a.self._01;
		let a02 = a.self._02;
		let a03 = a.self._03;
		let a10 = a.self._10;
		let a11 = a.self._11;
		let a12 = a.self._12;
		let a13 = a.self._13;
		let a20 = a.self._20;
		let a21 = a.self._21;
		let a22 = a.self._22;
		let a23 = a.self._23;
		let a30 = a.self._30;
		let a31 = a.self._31;
		let a32 = a.self._32;
		let a33 = a.self._33;
		let b0 = b.self._00;
		let b1 = b.self._10;
		let b2 = b.self._20;
		let b3 = b.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.self._03 = 0;
		this.self._13 = 0;
		this.self._23 = 0;
		this.self._33 = 1;
		return this;
	}
	multmats(b,a) {
		let a00 = a.self._00;
		let a01 = a.self._01;
		let a02 = a.self._02;
		let a03 = a.self._03;
		let a10 = a.self._10;
		let a11 = a.self._11;
		let a12 = a.self._12;
		let a13 = a.self._13;
		let a20 = a.self._20;
		let a21 = a.self._21;
		let a22 = a.self._22;
		let a23 = a.self._23;
		let a30 = a.self._30;
		let a31 = a.self._31;
		let a32 = a.self._32;
		let a33 = a.self._33;
		let b0 = b.self._00;
		let b1 = b.self._10;
		let b2 = b.self._20;
		let b3 = b.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return this;
	}
	multmat(m) {
		let a00 = this.self._00;
		let a01 = this.self._01;
		let a02 = this.self._02;
		let a03 = this.self._03;
		let a10 = this.self._10;
		let a11 = this.self._11;
		let a12 = this.self._12;
		let a13 = this.self._13;
		let a20 = this.self._20;
		let a21 = this.self._21;
		let a22 = this.self._22;
		let a23 = this.self._23;
		let a30 = this.self._30;
		let a31 = this.self._31;
		let a32 = this.self._32;
		let a33 = this.self._33;
		let b0 = m.self._00;
		let b1 = m.self._10;
		let b2 = m.self._20;
		let b3 = m.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return this;
	}
	getInverse(m) {
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			this.self._00 = 1.0;
			this.self._01 = 0.0;
			this.self._02 = 0.0;
			this.self._03 = 0.0;
			this.self._10 = 0.0;
			this.self._11 = 1.0;
			this.self._12 = 0.0;
			this.self._13 = 0.0;
			this.self._20 = 0.0;
			this.self._21 = 0.0;
			this.self._22 = 1.0;
			this.self._23 = 0.0;
			this.self._30 = 0.0;
			this.self._31 = 0.0;
			this.self._32 = 0.0;
			this.self._33 = 1.0;
			return this;
		}
		det = 1.0 / det;
		this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
		this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
		this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
		this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
		this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
		this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
		this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
		this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
		this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
		this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
		this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
		this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
		this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
		this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
		this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
		this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		return this;
	}
	transpose() {
		let f = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = f;
		f = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = f;
		f = this.self._03;
		this.self._03 = this.self._30;
		this.self._30 = f;
		f = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = f;
		f = this.self._13;
		this.self._13 = this.self._31;
		this.self._31 = f;
		f = this.self._23;
		this.self._23 = this.self._32;
		this.self._32 = f;
		return this;
	}
	transpose3x3() {
		let f = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = f;
		f = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = f;
		f = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = f;
		return this;
	}
	clone() {
		return new iron_math_Mat4(this.self._00,this.self._10,this.self._20,this.self._30,this.self._01,this.self._11,this.self._21,this.self._31,this.self._02,this.self._12,this.self._22,this.self._32,this.self._03,this.self._13,this.self._23,this.self._33);
	}
	setF32(a,offset) {
		if(offset == null) {
			offset = 0;
		}
		this.self._00 = a.getFloat32(offset * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._10 = a.getFloat32((1 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._20 = a.getFloat32((2 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._30 = a.getFloat32((3 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._01 = a.getFloat32((4 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._11 = a.getFloat32((5 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._21 = a.getFloat32((6 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._31 = a.getFloat32((7 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._02 = a.getFloat32((8 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._12 = a.getFloat32((9 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._22 = a.getFloat32((10 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._32 = a.getFloat32((11 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._03 = a.getFloat32((12 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._13 = a.getFloat32((13 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._23 = a.getFloat32((14 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.self._33 = a.getFloat32((15 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		return this;
	}
	setFrom(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._03 = m.self._03;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._13 = m.self._13;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
		this.self._23 = m.self._23;
		this.self._30 = m.self._30;
		this.self._31 = m.self._31;
		this.self._32 = m.self._32;
		this.self._33 = m.self._33;
		return this;
	}
	getLoc() {
		return new iron_math_Vec4(this.self._30,this.self._31,this.self._32,this.self._33);
	}
	getScale() {
		return new iron_math_Vec4(Math.sqrt(this.self._00 * this.self._00 + this.self._10 * this.self._10 + this.self._20 * this.self._20),Math.sqrt(this.self._01 * this.self._01 + this.self._11 * this.self._11 + this.self._21 * this.self._21),Math.sqrt(this.self._02 * this.self._02 + this.self._12 * this.self._12 + this.self._22 * this.self._22));
	}
	mult(s) {
		this.self._00 *= s;
		this.self._10 *= s;
		this.self._20 *= s;
		this.self._30 *= s;
		this.self._01 *= s;
		this.self._11 *= s;
		this.self._21 *= s;
		this.self._31 *= s;
		this.self._02 *= s;
		this.self._12 *= s;
		this.self._22 *= s;
		this.self._32 *= s;
		this.self._03 *= s;
		this.self._13 *= s;
		this.self._23 *= s;
		this.self._33 *= s;
		return this;
	}
	toRotation() {
		let _this = iron_math_Mat4.helpVec;
		_this.x = this.self._00;
		_this.y = this.self._01;
		_this.z = this.self._02;
		_this.w = 1.0;
		let _this1 = _this;
		let scale = 1.0 / Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		this.self._00 *= scale;
		this.self._01 *= scale;
		this.self._02 *= scale;
		let _this2 = iron_math_Mat4.helpVec;
		_this2.x = this.self._10;
		_this2.y = this.self._11;
		_this2.z = this.self._12;
		_this2.w = 1.0;
		let _this3 = _this2;
		scale = 1.0 / Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		this.self._10 *= scale;
		this.self._11 *= scale;
		this.self._12 *= scale;
		let _this4 = iron_math_Mat4.helpVec;
		_this4.x = this.self._20;
		_this4.y = this.self._21;
		_this4.z = this.self._22;
		_this4.w = 1.0;
		let _this5 = _this4;
		scale = 1.0 / Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		this.self._20 *= scale;
		this.self._21 *= scale;
		this.self._22 *= scale;
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	setLookAt(eye,center,up) {
		let f0 = center.x - eye.x;
		let f1 = center.y - eye.y;
		let f2 = center.z - eye.z;
		let n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
		f0 *= n;
		f1 *= n;
		f2 *= n;
		let s0 = f1 * up.z - f2 * up.y;
		let s1 = f2 * up.x - f0 * up.z;
		let s2 = f0 * up.y - f1 * up.x;
		n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
		s0 *= n;
		s1 *= n;
		s2 *= n;
		let u0 = s1 * f2 - s2 * f1;
		let u1 = s2 * f0 - s0 * f2;
		let u2 = s0 * f1 - s1 * f0;
		let d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
		let d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
		let d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
		this.self._00 = s0;
		this.self._10 = s1;
		this.self._20 = s2;
		this.self._30 = d0;
		this.self._01 = u0;
		this.self._11 = u1;
		this.self._21 = u2;
		this.self._31 = d1;
		this.self._02 = -f0;
		this.self._12 = -f1;
		this.self._22 = -f2;
		this.self._32 = d2;
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	applyQuat(q) {
		let _this = iron_math_Mat4.helpMat;
		let x = q.x;
		let y = q.y;
		let z = q.z;
		let w = q.w;
		let x2 = x + x;
		let y2 = y + y;
		let z2 = z + z;
		let xx = x * x2;
		let xy = x * y2;
		let xz = x * z2;
		let yy = y * y2;
		let yz = y * z2;
		let zz = z * z2;
		let wx = w * x2;
		let wy = w * y2;
		let wz = w * z2;
		_this.self._00 = 1.0 - (yy + zz);
		_this.self._10 = xy - wz;
		_this.self._20 = xz + wy;
		_this.self._01 = xy + wz;
		_this.self._11 = 1.0 - (xx + zz);
		_this.self._21 = yz - wx;
		_this.self._02 = xz - wy;
		_this.self._12 = yz + wx;
		_this.self._22 = 1.0 - (xx + yy);
		_this.self._03 = 0.0;
		_this.self._13 = 0.0;
		_this.self._23 = 0.0;
		_this.self._30 = 0.0;
		_this.self._31 = 0.0;
		_this.self._32 = 0.0;
		_this.self._33 = 1.0;
		let m = iron_math_Mat4.helpMat;
		let a00 = this.self._00;
		let a01 = this.self._01;
		let a02 = this.self._02;
		let a03 = this.self._03;
		let a10 = this.self._10;
		let a11 = this.self._11;
		let a12 = this.self._12;
		let a13 = this.self._13;
		let a20 = this.self._20;
		let a21 = this.self._21;
		let a22 = this.self._22;
		let a23 = this.self._23;
		let a30 = this.self._30;
		let a31 = this.self._31;
		let a32 = this.self._32;
		let a33 = this.self._33;
		let b0 = m.self._00;
		let b1 = m.self._10;
		let b2 = m.self._20;
		let b3 = m.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
	}
	right() {
		return new iron_math_Vec4(this.self._00,this.self._01,this.self._02);
	}
	look() {
		return new iron_math_Vec4(this.self._10,this.self._11,this.self._12);
	}
	up() {
		return new iron_math_Vec4(this.self._20,this.self._21,this.self._22);
	}
	get__00() {
		return this.self._00;
	}
	set__00(f) {
		return this.self._00 = f;
	}
	get__01() {
		return this.self._01;
	}
	set__01(f) {
		return this.self._01 = f;
	}
	get__02() {
		return this.self._02;
	}
	set__02(f) {
		return this.self._02 = f;
	}
	get__03() {
		return this.self._03;
	}
	set__03(f) {
		return this.self._03 = f;
	}
	get__10() {
		return this.self._10;
	}
	set__10(f) {
		return this.self._10 = f;
	}
	get__11() {
		return this.self._11;
	}
	set__11(f) {
		return this.self._11 = f;
	}
	get__12() {
		return this.self._12;
	}
	set__12(f) {
		return this.self._12 = f;
	}
	get__13() {
		return this.self._13;
	}
	set__13(f) {
		return this.self._13 = f;
	}
	get__20() {
		return this.self._20;
	}
	set__20(f) {
		return this.self._20 = f;
	}
	get__21() {
		return this.self._21;
	}
	set__21(f) {
		return this.self._21 = f;
	}
	get__22() {
		return this.self._22;
	}
	set__22(f) {
		return this.self._22 = f;
	}
	get__23() {
		return this.self._23;
	}
	set__23(f) {
		return this.self._23 = f;
	}
	get__30() {
		return this.self._30;
	}
	set__30(f) {
		return this.self._30 = f;
	}
	get__31() {
		return this.self._31;
	}
	set__31(f) {
		return this.self._31 = f;
	}
	get__32() {
		return this.self._32;
	}
	set__32(f) {
		return this.self._32 = f;
	}
	get__33() {
		return this.self._33;
	}
	set__33(f) {
		return this.self._33 = f;
	}
	toString() {
		return "[[" + this.self._00 + ", " + this.self._10 + ", " + this.self._20 + ", " + this.self._30 + "], [" + this.self._01 + ", " + this.self._11 + ", " + this.self._21 + ", " + this.self._31 + "], [" + this.self._02 + ", " + this.self._12 + ", " + this.self._22 + ", " + this.self._32 + "], [" + this.self._03 + ", " + this.self._13 + ", " + this.self._23 + ", " + this.self._33 + "]]";
	}
	toFloat32Array() {
		let array = kha_arrays_Float32Array._new(16);
		let v = this.self._00;
		array.setFloat32(0,v,true);
		let v1 = this.self._10;
		array.setFloat32(4,v1,true);
		let v2 = this.self._20;
		array.setFloat32(8,v2,true);
		let v3 = this.self._30;
		array.setFloat32(12,v3,true);
		let v4 = this.self._01;
		array.setFloat32(16,v4,true);
		let v5 = this.self._11;
		array.setFloat32(20,v5,true);
		let v6 = this.self._21;
		array.setFloat32(24,v6,true);
		let v7 = this.self._31;
		array.setFloat32(28,v7,true);
		let v8 = this.self._02;
		array.setFloat32(32,v8,true);
		let v9 = this.self._12;
		array.setFloat32(36,v9,true);
		let v10 = this.self._22;
		array.setFloat32(40,v10,true);
		let v11 = this.self._32;
		array.setFloat32(44,v11,true);
		let v12 = this.self._03;
		array.setFloat32(48,v12,true);
		let v13 = this.self._13;
		array.setFloat32(52,v13,true);
		let v14 = this.self._23;
		array.setFloat32(56,v14,true);
		let v15 = this.self._33;
		array.setFloat32(60,v15,true);
		return array;
	}
	static fromFloat32Array(a,offset) {
		if(offset == null) {
			offset = 0;
		}
		return new iron_math_Mat4(a.getFloat32(offset * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((1 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((2 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((3 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((4 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((5 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((6 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((7 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((8 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((9 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((10 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((11 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((12 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((13 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((14 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32((15 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN));
	}
	static identity() {
		return new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	}
	static persp(fovY,aspect,zn,zf) {
		let uh = 1.0 / Math.tan(fovY / 2);
		let uw = uh / aspect;
		return new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	}
	static ortho(left,right,bottom,top,near,far) {
		let rl = right - left;
		let tb = top - bottom;
		let fn = far - near;
		let tx = -(right + left) / rl;
		let ty = -(top + bottom) / tb;
		let tz = -(far + near) / fn;
		return new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
	}
}
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = "iron.math.Mat4";
Object.assign(iron_math_Mat4.prototype, {
	__class__: iron_math_Mat4
	,self: null
	,__properties__: {set__33: "set__33",get__33: "get__33",set__32: "set__32",get__32: "get__32",set__31: "set__31",get__31: "get__31",set__30: "set__30",get__30: "get__30",set__23: "set__23",get__23: "get__23",set__22: "set__22",get__22: "get__22",set__21: "set__21",get__21: "get__21",set__20: "set__20",get__20: "get__20",set__13: "set__13",get__13: "get__13",set__12: "set__12",get__12: "get__12",set__11: "set__11",get__11: "get__11",set__10: "set__10",get__10: "get__10",set__03: "set__03",get__03: "get__03",set__02: "set__02",get__02: "get__02",set__01: "set__01",get__01: "get__01",set__00: "set__00",get__00: "get__00"}
});
class iron_math_Quat {
	constructor(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	set(x,y,z,w) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	add(q) {
		this.x += q.x;
		this.y += q.y;
		this.z += q.z;
		this.w += q.w;
		return this;
	}
	addquat(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		this.w = a.w + b.w;
		return this;
	}
	sub(q) {
		this.x -= q.x;
		this.y -= q.y;
		this.z -= q.z;
		this.w -= q.w;
		return this;
	}
	subquat(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		this.w = a.w - b.w;
		return this;
	}
	fromAxisAngle(axis,angle) {
		let s = Math.sin(angle * 0.5);
		this.x = axis.x * s;
		this.y = axis.y * s;
		this.z = axis.z * s;
		this.w = Math.cos(angle * 0.5);
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	toAxisAngle(axis) {
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		let angle = 2 * Math.acos(this.w);
		let s = Math.sqrt(1 - this.w * this.w);
		if(s < 0.001) {
			axis.x = this.x;
			axis.y = this.y;
			axis.z = this.z;
		} else {
			axis.x = this.x / s;
			axis.y = this.y / s;
			axis.z = this.z / s;
		}
		return angle;
	}
	fromMat(m) {
		let _this = iron_math_Quat.helpMat;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		let _this1 = iron_math_Quat.helpMat;
		let _this2 = iron_math_Mat4.helpVec;
		_this2.x = _this1.self._00;
		_this2.y = _this1.self._01;
		_this2.z = _this1.self._02;
		_this2.w = 1.0;
		let _this3 = _this2;
		let scale = 1.0 / Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		_this1.self._00 *= scale;
		_this1.self._01 *= scale;
		_this1.self._02 *= scale;
		let _this4 = iron_math_Mat4.helpVec;
		_this4.x = _this1.self._10;
		_this4.y = _this1.self._11;
		_this4.z = _this1.self._12;
		_this4.w = 1.0;
		let _this5 = _this4;
		scale = 1.0 / Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		_this1.self._10 *= scale;
		_this1.self._11 *= scale;
		_this1.self._12 *= scale;
		let _this6 = iron_math_Mat4.helpVec;
		_this6.x = _this1.self._20;
		_this6.y = _this1.self._21;
		_this6.z = _this1.self._22;
		_this6.w = 1.0;
		let _this7 = _this6;
		scale = 1.0 / Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z);
		_this1.self._20 *= scale;
		_this1.self._21 *= scale;
		_this1.self._22 *= scale;
		_this1.self._03 = 0.0;
		_this1.self._13 = 0.0;
		_this1.self._23 = 0.0;
		_this1.self._30 = 0.0;
		_this1.self._31 = 0.0;
		_this1.self._32 = 0.0;
		_this1.self._33 = 1.0;
		let m1 = iron_math_Quat.helpMat;
		let m11 = m1.self._00;
		let m12 = m1.self._10;
		let m13 = m1.self._20;
		let m21 = m1.self._01;
		let m22 = m1.self._11;
		let m23 = m1.self._21;
		let m31 = m1.self._02;
		let m32 = m1.self._12;
		let m33 = m1.self._22;
		let tr = m11 + m22 + m33;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	fromRotationMat(m) {
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m31 = m.self._02;
		let m32 = m.self._12;
		let m33 = m.self._22;
		let tr = m11 + m22 + m33;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	scale(scale) {
		this.x *= scale;
		this.y *= scale;
		this.z *= scale;
		this.w *= scale;
		return this;
	}
	scalequat(q,scale) {
		q.x *= scale;
		q.y *= scale;
		q.z *= scale;
		q.w *= scale;
		return q;
	}
	mult(q) {
		let q1x = this.x;
		let q1y = this.y;
		let q1z = this.z;
		let q1w = this.w;
		let q2x = q.x;
		let q2y = q.y;
		let q2z = q.z;
		let q2w = q.w;
		this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		return this;
	}
	multquats(q1,q2) {
		let q1x = q1.x;
		let q1y = q1.y;
		let q1z = q1.z;
		let q1w = q1.w;
		let q2x = q2.x;
		let q2y = q2.y;
		let q2z = q2.z;
		let q2w = q2.w;
		this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		return this;
	}
	module() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	normalize() {
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	setFrom(q) {
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;
		return this;
	}
	getEuler() {
		let a = -2 * (this.x * this.z - this.w * this.y);
		let b = this.w * this.w + this.x * this.x - this.y * this.y - this.z * this.z;
		let c = 2 * (this.x * this.y + this.w * this.z);
		let d = -2 * (this.y * this.z - this.w * this.x);
		let e = this.w * this.w - this.x * this.x + this.y * this.y - this.z * this.z;
		return new iron_math_Vec4(Math.atan2(d,e),Math.atan2(a,b),Math.asin(c));
	}
	fromEuler(x,y,z) {
		let f = x / 2;
		let c1 = Math.cos(f);
		let s1 = Math.sin(f);
		f = y / 2;
		let c2 = Math.cos(f);
		let s2 = Math.sin(f);
		f = z / 2;
		let c3 = Math.cos(f);
		let s3 = Math.sin(f);
		this.x = s1 * c2 * c3 + c1 * s2 * s3;
		this.y = c1 * s2 * c3 + s1 * c2 * s3;
		this.z = c1 * c2 * s3 - s1 * s2 * c3;
		this.w = c1 * c2 * c3 - s1 * s2 * s3;
		return this;
	}
	toEulerOrdered(p) {
		let q0 = 1.4142135623730951 * this.w;
		let q1 = 1.4142135623730951 * this.x;
		let q2 = 1.4142135623730951 * this.y;
		let q3 = 1.4142135623730951 * this.z;
		let qda = q0 * q1;
		let qdb = q0 * q2;
		let qdc = q0 * q3;
		let qaa = q1 * q1;
		let qab = q1 * q2;
		let qac = q1 * q3;
		let qbb = q2 * q2;
		let qbc = q2 * q3;
		let qcc = q3 * q3;
		let m_self__00 = 1.0 - qbb - qcc;
		let m_self__10 = qdc + qab;
		let m_self__20 = -qdb + qac;
		let m_self__01 = -qdc + qab;
		let m_self__11 = 1.0 - qaa - qcc;
		let m_self__21 = qda + qbc;
		let m_self__02 = qdb + qac;
		let m_self__12 = -qda + qbc;
		let m_self__22 = 1.0 - qaa - qbb;
		let ml = [[m_self__00,m_self__10,m_self__20],[m_self__01,m_self__11,m_self__21],[m_self__02,m_self__12,m_self__22]];
		let eull = [0,0,0];
		let i = HxOverrides.cca(p,0) - HxOverrides.cca("X",0);
		let j = HxOverrides.cca(p,1) - HxOverrides.cca("X",0);
		let k = HxOverrides.cca(p,2) - HxOverrides.cca("X",0);
		if(p.charAt(0) == "X") {
			i = 0;
		} else if(p.charAt(0) == "Y") {
			i = 1;
		} else {
			i = 2;
		}
		if(p.charAt(1) == "X") {
			j = 0;
		} else if(p.charAt(1) == "Y") {
			j = 1;
		} else {
			j = 2;
		}
		if(p.charAt(2) == "X") {
			k = 0;
		} else if(p.charAt(2) == "Y") {
			k = 1;
		} else {
			k = 2;
		}
		let cy = Math.sqrt(ml[i][i] * ml[i][i] + ml[i][j] * ml[i][j]);
		let eul1 = new iron_math_Vec4();
		if(cy > 0.016) {
			eull[i] = Math.atan2(ml[j][k],ml[k][k]);
			eull[j] = Math.atan2(-ml[i][k],cy);
			eull[k] = Math.atan2(ml[i][j],ml[i][i]);
		} else {
			eull[i] = Math.atan2(-ml[k][j],ml[j][j]);
			eull[j] = Math.atan2(-ml[i][k],cy);
			eull[k] = 0;
		}
		eul1.x = eull[0];
		eul1.y = eull[1];
		eul1.z = eull[2];
		if(p == "XZY" || p == "YXZ" || p == "ZYX") {
			eul1.x *= -1;
			eul1.y *= -1;
			eul1.z *= -1;
		}
		return eul1;
	}
	fromEulerOrdered(e,order) {
		let c1 = Math.cos(e.x / 2);
		let c2 = Math.cos(e.y / 2);
		let c3 = Math.cos(e.z / 2);
		let s1 = Math.sin(e.x / 2);
		let s2 = Math.sin(e.y / 2);
		let s3 = Math.sin(e.z / 2);
		let x = s1;
		let y = 0;
		let z = 0;
		let w = c1;
		if(w == null) {
			w = 1.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let qx_x = x;
		let qx_y = y;
		let qx_z = z;
		let qx_w = w;
		let x1 = 0;
		let y1 = s2;
		let z1 = 0;
		let w1 = c2;
		if(w1 == null) {
			w1 = 1.0;
		}
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let qy_x = x1;
		let qy_y = y1;
		let qy_z = z1;
		let qy_w = w1;
		let x2 = 0;
		let y2 = 0;
		let z2 = s3;
		let w2 = c3;
		if(w2 == null) {
			w2 = 1.0;
		}
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let qz_x = x2;
		let qz_y = y2;
		let qz_z = z2;
		let qz_w = w2;
		if(order.charAt(2) == "X") {
			this.x = qx_x;
			this.y = qx_y;
			this.z = qx_z;
			this.w = qx_w;
		} else if(order.charAt(2) == "Y") {
			this.x = qy_x;
			this.y = qy_y;
			this.z = qy_z;
			this.w = qy_w;
		} else {
			this.x = qz_x;
			this.y = qz_y;
			this.z = qz_z;
			this.w = qz_w;
		}
		if(order.charAt(1) == "X") {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qx_x;
			let q2y = qx_y;
			let q2z = qx_z;
			let q2w = qx_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		} else if(order.charAt(1) == "Y") {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qy_x;
			let q2y = qy_y;
			let q2z = qy_z;
			let q2w = qy_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		} else {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qz_x;
			let q2y = qz_y;
			let q2z = qz_z;
			let q2w = qz_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		}
		if(order.charAt(0) == "X") {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qx_x;
			let q2y = qx_y;
			let q2z = qx_z;
			let q2w = qx_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		} else if(order.charAt(0) == "Y") {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qy_x;
			let q2y = qy_y;
			let q2z = qy_z;
			let q2w = qy_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		} else {
			let q1x = this.x;
			let q1y = this.y;
			let q1z = this.z;
			let q1w = this.w;
			let q2x = qz_x;
			let q2y = qz_y;
			let q2z = qz_z;
			let q2w = qz_w;
			this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		}
		return this;
	}
	lerp(from,to,s) {
		let fromx = from.x;
		let fromy = from.y;
		let fromz = from.z;
		let fromw = from.w;
		let dot = from.x * to.x + from.y * to.y + from.z * to.z + from.w * to.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		this.x = fromx + (to.x - fromx) * s;
		this.y = fromy + (to.y - fromy) * s;
		this.z = fromz + (to.z - fromz) * s;
		this.w = fromw + (to.w - fromw) * s;
		let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	slerp(from,to,t) {
		let epsilon = 0.0005;
		let dot = from.x * to.x + from.y * to.y + from.z * to.z + from.w * to.w;
		if(dot > 1 - epsilon) {
			from.x -= to.x;
			from.y -= to.y;
			from.z -= to.z;
			from.w -= to.w;
			let _this = from;
			_this.x *= t;
			_this.y *= t;
			_this.z *= t;
			_this.w *= t;
			let q = _this;
			to.x += q.x;
			to.y += q.y;
			to.z += q.z;
			to.w += q.w;
			let result = to;
			let l = Math.sqrt(result.x * result.x + result.y * result.y + result.z * result.z + result.w * result.w);
			if(l == 0.0) {
				result.x = 0;
				result.y = 0;
				result.z = 0;
				result.w = 0;
			} else {
				l = 1.0 / l;
				result.x *= l;
				result.y *= l;
				result.z *= l;
				result.w *= l;
			}
			return result;
		}
		if(dot < 0) {
			dot = 0;
		}
		if(dot > 1) {
			dot = 1;
		}
		let theta0 = Math.acos(dot);
		let theta = theta0 * t;
		this.x *= dot;
		this.y *= dot;
		this.z *= dot;
		this.w *= dot;
		let q = this;
		to.x -= q.x;
		to.y -= q.y;
		to.z -= q.z;
		to.w -= q.w;
		let q2 = to;
		let l = Math.sqrt(q2.x * q2.x + q2.y * q2.y + q2.z * q2.z + q2.w * q2.w);
		if(l == 0.0) {
			q2.x = 0;
			q2.y = 0;
			q2.z = 0;
			q2.w = 0;
		} else {
			l = 1.0 / l;
			q2.x *= l;
			q2.y *= l;
			q2.z *= l;
			q2.w *= l;
		}
		let scale = Math.cos(theta);
		this.x *= scale;
		this.y *= scale;
		this.z *= scale;
		this.w *= scale;
		let _this = this;
		let scale1 = Math.sin(theta);
		q2.x *= scale1;
		q2.y *= scale1;
		q2.z *= scale1;
		q2.w *= scale1;
		let q1 = q2;
		_this.x += q1.x;
		_this.y += q1.y;
		_this.z += q1.z;
		_this.w += q1.w;
		let result = _this;
		let l1 = Math.sqrt(result.x * result.x + result.y * result.y + result.z * result.z + result.w * result.w);
		if(l1 == 0.0) {
			result.x = 0;
			result.y = 0;
			result.z = 0;
			result.w = 0;
		} else {
			l1 = 1.0 / l1;
			result.x *= l1;
			result.y *= l1;
			result.z *= l1;
			result.w *= l1;
		}
		return result;
	}
	dot(q) {
		return this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;
	}
	fromTo(v1,v2) {
		let a = iron_math_Quat.helpVec0;
		let dot = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;
		if(dot < -0.999999) {
			let a1 = iron_math_Quat.xAxis;
			let ax = a1.x;
			let ay = a1.y;
			let az = a1.z;
			let bx = v1.x;
			let by = v1.y;
			let bz = v1.z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
				let a1 = iron_math_Quat.yAxis;
				let ax = a1.x;
				let ay = a1.y;
				let az = a1.z;
				let bx = v1.x;
				let by = v1.y;
				let bz = v1.z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
			}
			let n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				a.x *= invN;
				a.y *= invN;
				a.z *= invN;
			}
			let angle = Math.PI;
			let s = Math.sin(angle * 0.5);
			this.x = a.x * s;
			this.y = a.y * s;
			this.z = a.z * s;
			this.w = Math.cos(angle * 0.5);
			let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
			if(l == 0.0) {
				this.x = 0;
				this.y = 0;
				this.z = 0;
				this.w = 0;
			} else {
				l = 1.0 / l;
				this.x *= l;
				this.y *= l;
				this.z *= l;
				this.w *= l;
			}
		} else if(dot > 0.999999) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 1;
		} else {
			let ax = v1.x;
			let ay = v1.y;
			let az = v1.z;
			let bx = v2.x;
			let by = v2.y;
			let bz = v2.z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			this.x = a.x;
			this.y = a.y;
			this.z = a.z;
			this.w = 1 + dot;
			let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
			if(l == 0.0) {
				this.x = 0;
				this.y = 0;
				this.z = 0;
				this.w = 0;
			} else {
				l = 1.0 / l;
				this.x *= l;
				this.y *= l;
				this.z *= l;
				this.w *= l;
			}
		}
		return this;
	}
	toString() {
		return this.x + ", " + this.y + ", " + this.z + ", " + this.w;
	}
}
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = "iron.math.Quat";
Object.assign(iron_math_Quat.prototype, {
	__class__: iron_math_Quat
	,x: null
	,y: null
	,z: null
	,w: null
});
class iron_Scene {
	constructor() {
		this.traitRemoves = [];
		this.traitInits = [];
		this.groups = null;
		this.uid = iron_Scene.uidCounter++;
		this.meshes = [];
		this.lights = [];
		this.cameras = [];
		this.speakers = [];
		this.empties = [];
		this.animations = [];
		this.tilesheets = [];
		this.armatures = [];
		this.embedded = new haxe_ds_StringMap();
		this.root = new iron_object_Object();
		this.root.name = "Root";
		this.traitInits = [];
		this.traitRemoves = [];
		this.initializing = true;
		if(iron_Scene.global == null) {
			iron_Scene.global = new iron_object_Object();
		}
	}
	remove() {
		let _g = 0;
		let _g1 = this.traitRemoves;
		while(_g < _g1.length) {
			let f = _g1[_g];
			++_g;
			f();
		}
		let _g2 = 0;
		let _g3 = this.meshes;
		while(_g2 < _g3.length) {
			let o = _g3[_g2];
			++_g2;
			o.remove();
		}
		let _g4 = 0;
		let _g5 = this.lights;
		while(_g4 < _g5.length) {
			let o = _g5[_g4];
			++_g4;
			o.remove();
		}
		let _g6 = 0;
		let _g7 = this.cameras;
		while(_g6 < _g7.length) {
			let o = _g7[_g6];
			++_g6;
			o.remove();
		}
		let _g8 = 0;
		let _g9 = this.speakers;
		while(_g8 < _g9.length) {
			let o = _g9[_g8];
			++_g8;
			o.remove();
		}
		let _g10 = 0;
		let _g11 = this.empties;
		while(_g10 < _g11.length) {
			let o = _g11[_g10];
			++_g10;
			o.remove();
		}
		this.groups = null;
		this.root.remove();
	}
	updateFrame() {
		if(!this.ready) {
			return;
		}
		let _g = 0;
		let _g1 = this.animations;
		while(_g < _g1.length) {
			let anim = _g1[_g];
			++_g;
			anim.update(iron_system_Time.get_delta());
		}
		let _g2 = 0;
		let _g3 = this.empties;
		while(_g2 < _g3.length) {
			let e = _g3[_g2];
			++_g2;
			if(e != null && e.parent != null) {
				e.transform.update();
			}
		}
	}
	renderFrame(g) {
		if(!this.ready || iron_RenderPath.active == null) {
			return;
		}
		iron_Scene.framePassed = true;
		let _g = 0;
		let _g1 = this.tilesheets;
		while(_g < _g1.length) {
			let tilesheet = _g1[_g];
			++_g;
			tilesheet.update();
		}
		if(this.camera != null) {
			this.camera.renderFrame(g);
		} else {
			iron_RenderPath.active.renderFrame(g);
		}
	}
	addObject(parent) {
		let object = new iron_object_Object();
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	getChildren(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		return this.root.getChildren(recursive);
	}
	getChild(name) {
		return this.root.getChild(name);
	}
	getTrait(c) {
		if(this.root.children.length > 0) {
			return this.root.children[0].getTrait(c);
		} else {
			return null;
		}
	}
	getMesh(name) {
		let _g = 0;
		let _g1 = this.meshes;
		while(_g < _g1.length) {
			let m = _g1[_g];
			++_g;
			if(m.name == name) {
				return m;
			}
		}
		return null;
	}
	getLight(name) {
		let _g = 0;
		let _g1 = this.lights;
		while(_g < _g1.length) {
			let l = _g1[_g];
			++_g;
			if(l.name == name) {
				return l;
			}
		}
		return null;
	}
	getCamera(name) {
		let _g = 0;
		let _g1 = this.cameras;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	getSpeaker(name) {
		let _g = 0;
		let _g1 = this.speakers;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			if(s.name == name) {
				return s;
			}
		}
		return null;
	}
	getEmpty(name) {
		let _g = 0;
		let _g1 = this.empties;
		while(_g < _g1.length) {
			let e = _g1[_g];
			++_g;
			if(e.name == name) {
				return e;
			}
		}
		return null;
	}
	getGroup(name) {
		if(this.groups == null) {
			this.groups = new haxe_ds_StringMap();
		}
		let g = this.groups.h[name];
		if(g == null) {
			g = [];
			this.groups.h[name] = g;
			let refs = this.getGroupObjectRefs(name,iron_Scene.active.raw);
			if(refs == null) {
				return g;
			}
			let _g = 0;
			while(_g < refs.length) {
				let ref = refs[_g];
				++_g;
				let c = this.getChild(ref);
				if(c != null) {
					g.push(c);
				}
			}
		}
		return g;
	}
	addMeshObject(data,materials,parent) {
		let object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	addLightObject(data,parent) {
		let object = new iron_object_LightObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	addCameraObject(data,parent) {
		let object = new iron_object_CameraObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	addSpeakerObject(data,parent) {
		let object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	addScene(sceneName,parent,done) {
		if(parent == null) {
			parent = this.addObject();
			parent.name = sceneName;
		}
		let _gthis = this;
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				let objectsTraversed = 0;
				let objectsCount = _gthis.getObjectsCount(format.objects);
				let traverseObjects = null;
				traverseObjects = function(parent,objects,parentObject,done) {
					if(objects == null) {
						return;
					}
					let _g = 0;
					let _g1 = objects.length;
					while(_g < _g1) {
						let i = _g++;
						let o = objects[i];
						if(o.spawn != null && o.spawn == false) {
							if((objectsTraversed += 1) == objectsCount) {
								done();
							}
							continue;
						}
						_gthis.createObject(o,format,parent,parentObject,function(object) {
							traverseObjects(object,o.children,o,done);
							if((objectsTraversed += 1) == objectsCount) {
								done();
							}
						});
					}
				};
				if(format.objects == null || format.objects.length == 0) {
					iron_Scene.createTraits(format.traits,parent);
					done(parent);
				} else {
					traverseObjects(parent,format.objects,null,function() {
						iron_Scene.createTraits(format.traits,parent);
						done(parent);
					});
				}
			});
		});
	}
	getObjectsCount(objects,discardNoSpawn) {
		if(discardNoSpawn == null) {
			discardNoSpawn = true;
		}
		if(objects == null) {
			return 0;
		}
		let result = objects.length;
		let _g = 0;
		while(_g < objects.length) {
			let o = objects[_g];
			++_g;
			if(discardNoSpawn && o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	spawnObject(name,parent,done,spawnChildren,srcRaw) {
		if(spawnChildren == null) {
			spawnChildren = true;
		}
		if(srcRaw == null) {
			srcRaw = this.raw;
		}
		let objectsTraversed = 0;
		let obj = iron_Scene.getRawObjectByName(srcRaw,name);
		let objectsCount = spawnChildren ? this.getObjectsCount([obj],false) : 1;
		let rootId = -1;
		let spawnObjectTree = null;
		let _gthis = this;
		spawnObjectTree = function(obj,parent,parentObject,done) {
			_gthis.createObject(obj,srcRaw,parent,parentObject,function(object) {
				if(rootId == -1) {
					rootId = object.uid;
				}
				if(spawnChildren && obj.children != null) {
					let _g = 0;
					let _g1 = obj.children;
					while(_g < _g1.length) {
						let child = _g1[_g];
						++_g;
						spawnObjectTree(child,object,obj,done);
					}
				}
				if((objectsTraversed += 1) == objectsCount && done != null) {
					while(object.uid != rootId) object = object.parent;
					done(object);
				}
			});
		};
		spawnObjectTree(obj,parent,null,done);
	}
	parseObject(sceneName,objectName,parent,done) {
		let _gthis = this;
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			let o = iron_Scene.getRawObjectByName(format,objectName);
			if(o == null) {
				done(null);
			}
			_gthis.createObject(o,format,parent,null,done);
		});
	}
	createObject(o,format,parent,parentObject,done) {
		let sceneName = format.name;
		let _gthis = this;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				let object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "light_object") {
			iron_data_Data.getLight(sceneName,o.data_ref,function(b) {
				let object = _gthis.addLightObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs == null || o.material_refs.length == 0) {
				this.createMeshObject(o,format,parent,parentObject,null,done);
			} else {
				let this1 = new Array(o.material_refs.length);
				let materials = this1;
				let materialsLoaded = 0;
				let _g = 0;
				let _g1 = o.material_refs.length;
				while(_g < _g1) {
					let i = _g++;
					let ref = o.material_refs[i];
					iron_data_Data.getMaterial(sceneName,ref,function(mat) {
						materials[i] = mat;
						materialsLoaded += 1;
						if(materialsLoaded == o.material_refs.length) {
							_gthis.createMeshObject(o,format,parent,parentObject,materials,done);
						}
					});
				}
			}
		} else if(o.type == "speaker_object") {
			let object = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object,o,done);
		} else if(o.type == "object") {
			let object = this.addObject(parent);
			this.returnObject(object,o,function(ro) {
				if(o.group_ref != null) {
					_gthis.spawnGroup(format,o.group_ref,ro,function() {
						done(ro);
					});
				} else {
					done(ro);
				}
			});
		} else {
			done(null);
		}
	}
	spawnGroup(format,groupRef,groupOwner,done,failed) {
		let spawned = 0;
		let object_refs = this.getGroupObjectRefs(groupRef,format);
		let _gthis = this;
		if(object_refs == null) {
			if(failed != null) {
				failed();
			}
		} else if(object_refs.length == 0) {
			done();
		} else {
			let _g = 0;
			while(_g < object_refs.length) {
				let object_ref = object_refs[_g];
				++_g;
				this.spawnObject(object_ref,groupOwner,function(spawnedObject) {
					if(!_gthis.isObjectInGroup(groupRef,spawnedObject.parent,format)) {
						let _g = 0;
						let _g1 = format.groups;
						while(_g < _g1.length) {
							let group = _g1[_g];
							++_g;
							if(group.name == groupRef) {
								spawnedObject.transform.applyParent();
								spawnedObject.transform.translate(-group.instance_offset.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),-group.instance_offset.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),-group.instance_offset.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
								break;
							}
						}
					}
					if((spawned += 1) == object_refs.length) {
						groupOwner.transform.reset();
						done();
					}
				},true,format);
			}
		}
	}
	getGroupObjectRefs(group_ref,format) {
		let _g = 0;
		let _g1 = format.groups;
		while(_g < _g1.length) {
			let g = _g1[_g];
			++_g;
			if(g.name == group_ref) {
				return g.object_refs;
			}
		}
		return null;
	}
	getGroupObjectsRaw(groupRef,format) {
		let objectRefs = this.getGroupObjectRefs(groupRef,format);
		let objects = [];
		if(objectRefs == null) {
			return objects;
		}
		let _g = 0;
		while(_g < objectRefs.length) {
			let objRef = objectRefs[_g];
			++_g;
			let rawObj = iron_Scene.getRawObjectByName(format,objRef);
			objects.push(rawObj);
			let childRefs = this.getChildObjectsRaw(rawObj);
			objects = objects.concat(childRefs);
		}
		return objects;
	}
	getChildObjectsRaw(rawObj,recursive) {
		if(recursive == null) {
			recursive = true;
		}
		let children = rawObj.children;
		if(children == null) {
			return [];
		}
		children = children.slice();
		if(recursive) {
			let _g = 0;
			let _g1 = rawObj.children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				let childRefs = this.getChildObjectsRaw(child);
				children = children.concat(childRefs);
			}
		}
		return children;
	}
	isObjectInGroup(groupRef,object,format) {
		let _g = 0;
		let _g1 = this.getGroupObjectsRaw(groupRef,format);
		while(_g < _g1.length) {
			let obj = _g1[_g];
			++_g;
			if(obj.name == object.name) {
				return true;
			}
		}
		return false;
	}
	isLod(raw) {
		if(raw != null && raw.lods != null) {
			return raw.lods.length > 0;
		} else {
			return false;
		}
	}
	createMeshObject(o,format,parent,parentObject,materials,done) {
		let ref = o.data_ref.split("/");
		let object_file = "";
		let data_ref = "";
		let sceneName = format.name;
		if(ref.length == 2) {
			object_file = ref[0];
			data_ref = ref[1];
		} else {
			object_file = sceneName;
			data_ref = o.data_ref;
		}
		let _gthis = this;
		if(parentObject != null && parentObject.bone_actions != null) {
			let bactions = [];
			let _g = 0;
			let _g1 = parentObject.bone_actions;
			while(_g < _g1.length) {
				let ref = _g1[_g];
				++_g;
				iron_data_Data.getSceneRaw(ref,function(action) {
					bactions.push(action);
					if(bactions.length == parentObject.bone_actions.length) {
						let armature = null;
						let _g = 0;
						let _g1 = _gthis.armatures;
						while(_g < _g1.length) {
							let a = _g1[_g];
							++_g;
							if(a.uid == parent.uid) {
								armature = a;
								break;
							}
						}
						if(armature == null) {
							let _g = 0;
							let _g1 = _gthis.armatures;
							while(_g < _g1.length) {
								let a = _g1[_g];
								++_g;
								if(a.name == parent.name) {
									parent.name += "." + parent.uid;
									break;
								}
							}
							armature = new iron_data_Armature(parent.uid,parent.name,bactions);
							_gthis.armatures.push(armature);
						}
						_gthis.returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,parentObject,o,done);
					}
				});
			}
		} else {
			this.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,parentObject,o,done);
		}
	}
	returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,parentObject,o,done) {
		let _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,function(mesh) {
			if(mesh.isSkinned) {
				let g = mesh.geom;
				if(armature != null) {
					g.addArmature(armature);
				} else {
					g.addAction(mesh.format.objects,"none");
				}
			}
			let object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.particle_refs != null) {
				let _g = 0;
				let _g1 = o.particle_refs;
				while(_g < _g1.length) {
					let ref = _g1[_g];
					++_g;
					(js_Boot.__cast(object , iron_object_MeshObject)).setupParticleSystem(sceneName,ref);
				}
			}
			if(o.tilesheet_ref != null) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupTilesheet(sceneName,o.tilesheet_ref,o.tilesheet_action_ref);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	returnObject(object,o,done) {
		let _gthis = this;
		if(object != null && o.object_actions != null) {
			let oactions = [];
			while(oactions.length < o.object_actions.length) oactions.push(null);
			let actionsLoaded = 0;
			let _g = 0;
			let _g1 = o.object_actions.length;
			while(_g < _g1) {
				let i = _g++;
				let ref = o.object_actions[i];
				if(ref == "null") {
					actionsLoaded += 1;
					continue;
				}
				iron_data_Data.getSceneRaw(ref,function(action) {
					oactions[i] = action;
					actionsLoaded += 1;
					if(actionsLoaded == o.object_actions.length) {
						_gthis.returnObjectLoaded(object,o,oactions,done);
					}
				});
			}
		} else {
			this.returnObjectLoaded(object,o,null,done);
		}
	}
	returnObjectLoaded(object,o,oactions,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTransform(o,object.transform);
			object.setupAnimation(oactions);
			object.setupMorphTargets();
			if(o.properties != null) {
				object.properties = new haxe_ds_StringMap();
				let _g = 0;
				let _g1 = o.properties;
				while(_g < _g1.length) {
					let p = _g1[_g];
					++_g;
					object.properties.h[p.name] = p.value;
				}
			}
			if(!iron_Scene.active.initializing) {
				iron_Scene.createTraits(o.traits,object);
			}
		}
		done(object);
	}
	loadEmbeddedData(datas,done) {
		if(datas == null) {
			done();
			return;
		}
		let loaded = 0;
		let _g = 0;
		while(_g < datas.length) {
			let file = datas[_g];
			++_g;
			this.embedData(file,function() {
				loaded += 1;
				if(loaded == datas.length) {
					done();
				}
			});
		}
	}
	embedData(file,done) {
		let _gthis = this;
		if(file.endsWith(".raw")) {
			iron_data_Data.getBlob(file,function(blob) {
				let b = blob.toBytes();
				let w = (Math.pow(b.length,0.33333333333333331) | 0) + 1;
				let image = kha_Image.fromBytes3D(b,w,w,w,1);
				_gthis.embedded.h[file] = image;
				done();
			});
		} else {
			iron_data_Data.getImage(file,function(image) {
				_gthis.embedded.h[file] = image;
				done();
			});
		}
	}
	notifyOnInit(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	removeInit(f) {
		HxOverrides.remove(this.traitInits,f);
	}
	notifyOnRemove(f) {
		this.traitRemoves.push(f);
	}
	static create(format,done) {
		iron_Scene.active = new iron_Scene();
		iron_Scene.active.ready = false;
		iron_Scene.active.raw = format;
		iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
			iron_Scene.active.world = world;
			iron_Scene.active.addScene(format.name,null,function(sceneObject) {
				let _g = 0;
				let _g1 = sceneObject.getChildren(true);
				while(_g < _g1.length) {
					let object = _g1[_g];
					++_g;
					iron_Scene.createTraits(object.raw.traits,object);
				}
				if(iron_Scene.active.cameras.length == 0) {
					haxe_Log.trace("No camera found for scene \"" + format.name + "\"",{ fileName : "Sources/iron/Scene.hx", lineNumber : 138, className : "iron.Scene", methodName : "create"});
				}
				iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
				iron_Scene.active.sceneParent = sceneObject;
				iron_Scene.active.ready = true;
				let _g2 = 0;
				let _g3 = iron_Scene.active.traitInits;
				while(_g2 < _g3.length) {
					let f = _g3[_g2];
					++_g2;
					f();
				}
				iron_Scene.active.traitInits = [];
				iron_Scene.active.initializing = false;
				done(sceneObject);
			});
		});
	}
	static setActive(sceneName,done) {
		if(!iron_Scene.framePassed) {
			return;
		}
		iron_Scene.framePassed = false;
		let removeWorldShader = null;
		if(iron_Scene.active != null) {
			if(iron_Scene.active.raw.world_ref != null) {
				removeWorldShader = "shader_datas/World_" + iron_Scene.active.raw.world_ref + "/World_" + iron_Scene.active.raw.world_ref;
			}
			iron_Scene.active.remove();
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			iron_Scene.create(format,function(o) {
				if(done != null) {
					done(o);
				}
				if(removeWorldShader != null) {
					iron_RenderPath.active.unloadShader(removeWorldShader);
				}
				if(format.world_ref != null) {
					iron_RenderPath.active.loadShader("shader_datas/World_" + format.world_ref + "/World_" + format.world_ref);
				}
			});
		});
	}
	static getRawObjectByName(format,name) {
		return iron_Scene.traverseObjs(format.objects,name);
	}
	static traverseObjs(children,name) {
		let _g = 0;
		while(_g < children.length) {
			let o = children[_g];
			++_g;
			if(o.name == name) {
				return o;
			}
			if(o.children != null) {
				let res = iron_Scene.traverseObjs(o.children,name);
				if(res != null) {
					return res;
				}
			}
		}
		return null;
	}
	static generateTransform(object,transform) {
		let tmp;
		if(object.transform != null) {
			let a = object.transform.values;
			tmp = new iron_math_Mat4(a.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN));
		} else {
			tmp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		}
		transform.world = tmp;
		let _this = transform.world;
		let loc = transform.loc;
		let quat = transform.rot;
		let scale = transform.scale;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		let _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		let _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this.self._10;
		_this3.y = _this.self._11;
		_this3.z = _this.self._12;
		_this3.w = 1.0;
		let _this4 = _this3;
		scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this.self._20;
		_this5.y = _this.self._21;
		_this5.z = _this.self._22;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		let _this7 = _this.self;
		let m3 = _this7._12;
		let m4 = _this7._22;
		let m5 = _this7._32;
		let m6 = _this7._13;
		let m7 = _this7._23;
		let m8 = _this7._33;
		let c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
		let m31 = _this7._12;
		let m41 = _this7._22;
		let m51 = _this7._32;
		let m61 = _this7._13;
		let m71 = _this7._23;
		let m81 = _this7._33;
		let c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
		let m32 = _this7._11;
		let m42 = _this7._21;
		let m52 = _this7._31;
		let m62 = _this7._13;
		let m72 = _this7._23;
		let m82 = _this7._33;
		let c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
		let m33 = _this7._11;
		let m43 = _this7._21;
		let m53 = _this7._31;
		let m63 = _this7._12;
		let m73 = _this7._22;
		let m83 = _this7._32;
		let c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
		if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		let m = iron_math_Mat4.helpMat;
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m311 = m.self._02;
		let m321 = m.self._12;
		let m331 = m.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		if(object.local_only != null) {
			transform.localOnly = object.local_only;
		}
		if(transform.object.parent != null) {
			transform.update();
		}
	}
	static createTraits(traits,object) {
		if(traits == null) {
			return;
		}
		let _g = 0;
		while(_g < traits.length) {
			let t = traits[_g];
			++_g;
			if(t.type == "Script") {
				let args = [];
				if(t.parameters != null) {
					let _g = 0;
					let _g1 = t.parameters;
					while(_g < _g1.length) {
						let param = _g1[_g];
						++_g;
						args.push(iron_Scene.parseArg(param));
					}
				}
				let traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
				if(traitInst == null) {
					haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "Sources/iron/Scene.hx", lineNumber : 874, className : "iron.Scene", methodName : "createTraits"});
					continue;
				}
				if(t.props != null) {
					let _g = 0;
					let _g1 = t.props.length / 3 | 0;
					while(_g < _g1) {
						let i = _g++;
						let pname = t.props[i * 3];
						let ptype = t.props[i * 3 + 1];
						let pval = t.props[i * 3 + 2];
						if(ptype.endsWith("Object") && pval != "") {
							Reflect.setProperty(traitInst,pname,iron_Scene.active.getChild(pval));
						} else {
							switch(ptype) {
							case "Vec2":
								let pVec = pval;
								Reflect.setProperty(traitInst,pname,new iron_math_Vec2(pVec.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN)));
								break;
							case "Vec3":
								let pVec1 = pval;
								Reflect.setProperty(traitInst,pname,new iron_math_Vec3(pVec1.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec1.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec1.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN)));
								break;
							case "Vec4":
								let pVec2 = pval;
								Reflect.setProperty(traitInst,pname,new iron_math_Vec4(pVec2.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN)));
								break;
							default:
								Reflect.setProperty(traitInst,pname,pval);
							}
						}
					}
				}
				object.addTrait(traitInst);
			}
		}
	}
	static parseArg(str) {
		if(str == "true") {
			return true;
		} else if(str == "false") {
			return false;
		} else if(str == "null") {
			return null;
		} else if(str.charAt(0) == "'") {
			return StringTools.replace(str,"'","");
		} else if(str.charAt(0) == "\"") {
			return StringTools.replace(str,"\"","");
		} else if(str.charAt(0) == "[") {
			str = StringTools.replace(str,"[","");
			str = StringTools.replace(str,"]","");
			str = StringTools.replace(str," ","");
			let ar = [];
			let vals = str.split(",");
			let _g = 0;
			while(_g < vals.length) {
				let v = vals[_g];
				++_g;
				ar.push(iron_Scene.parseArg(v));
			}
			return ar;
		} else if(str.charAt(0) == "{") {
			return JSON.parse(str);
		} else {
			let f = parseFloat(str);
			let i = Std.parseInt(str);
			if(f == i) {
				return i;
			} else {
				return f;
			}
		}
	}
	static createConstraints(constraints,object) {
		if(constraints == null) {
			return;
		}
		object.constraints = [];
		let _g = 0;
		while(_g < constraints.length) {
			let c = constraints[_g];
			++_g;
			let constr = new iron_object_Constraint(c);
			object.constraints.push(constr);
		}
	}
	static createTraitClassInstance(traitName,args) {
		let cname = $hxClasses[traitName];
		if(cname == null) {
			return null;
		}
		return Type.createInstance(cname,args);
	}
}
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = "iron.Scene";
Object.assign(iron_Scene.prototype, {
	__class__: iron_Scene
	,uid: null
	,raw: null
	,root: null
	,sceneParent: null
	,camera: null
	,world: null
	,meshes: null
	,lights: null
	,cameras: null
	,speakers: null
	,empties: null
	,animations: null
	,tilesheets: null
	,armatures: null
	,groups: null
	,embedded: null
	,ready: null
	,traitInits: null
	,traitRemoves: null
	,initializing: null
});
class iron_system_Time {
	static get_step() {
		if(iron_system_Time.frequency == null) {
			iron_system_Time.initFrequency();
		}
		return 1 / iron_system_Time.frequency;
	}
	static get_delta() {
		if(iron_system_Time.frequency == null) {
			iron_system_Time.initFrequency();
		}
		return 1 / iron_system_Time.frequency * iron_system_Time.scale;
	}
	static time() {
		return kha_Scheduler.time();
	}
	static realTime() {
		return kha_Scheduler.realTime();
	}
	static initFrequency() {
		iron_system_Time.frequency = kha_Display.get_primary() != null ? kha_Display.get_primary().get_frequency() : 60;
	}
	static update() {
		iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
		iron_system_Time.last = kha_Scheduler.realTime();
	}
}
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = "iron.system.Time";
iron_system_Time.__properties__ = {get_delta: "get_delta",get_step: "get_step"};
class armory_trait_internal_Bridge {
	static log(s) {
		haxe_Log.trace(s,{ fileName : "Sources/armory/trait/internal/Bridge.hx", lineNumber : 16, className : "armory.trait.internal.Bridge", methodName : "log"});
	}
}
$hxClasses["armory.trait.internal.Bridge"] = $hx_exports["iron"] = armory_trait_internal_Bridge;
armory_trait_internal_Bridge.__name__ = "armory.trait.internal.Bridge";
class armory_trait_internal_DebugConsole extends iron_Trait {
	constructor(scaleFactor,scaleDebugConsole,positionDebugConsole,visibleDebugConsole,traceWithPosition,keyCodeVisible,keyCodeScaleIn,keyCodeScaleOut) {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor(scaleFactor,scaleDebugConsole,positionDebugConsole,visibleDebugConsole,traceWithPosition,keyCodeVisible,keyCodeScaleIn,keyCodeScaleOut);
	}
	_hx_constructor(scaleFactor,scaleDebugConsole,positionDebugConsole,visibleDebugConsole,traceWithPosition,keyCodeVisible,keyCodeScaleIn,keyCodeScaleOut) {
		if(keyCodeScaleOut == null) {
			keyCodeScaleOut = 221;
		}
		if(keyCodeScaleIn == null) {
			keyCodeScaleIn = 219;
		}
		if(keyCodeVisible == null) {
			keyCodeVisible = 176;
		}
		if(traceWithPosition == null) {
			traceWithPosition = 1;
		}
		if(visibleDebugConsole == null) {
			visibleDebugConsole = 1;
		}
		if(positionDebugConsole == null) {
			positionDebugConsole = 2;
		}
		if(scaleDebugConsole == null) {
			scaleDebugConsole = 1.0;
		}
		if(scaleFactor == null) {
			scaleFactor = 1.0;
		}
		this.debugDrawSet = false;
		this.shortcutScaleOut = 221;
		this.shortcutScaleIn = 219;
		this.shortcutVisible = 176;
		this.selectedTraits = [];
		this.selectedType = "";
		this.benchTime = 0.0;
		this.benchFrames = 0;
		this.benchmark = false;
		this.graphB = null;
		this.graphA = null;
		this.graph = null;
		this.physTimeAvg = 0.0;
		this.physTime = 0.0;
		this.animTimeAvg = 0.0;
		this.animTime = 0.0;
		this.updateTimeAvg = 0.0;
		this.updateTime = 0.0;
		this.renderPathTimeAvg = 0.0;
		this.renderPathTime = 0.0;
		this.frameTimeAvgMax = 0.0;
		this.frameTimeAvgMin = 0.0;
		this.frameTimeAvg = 0.0;
		this.frames = 0;
		this.totalTime = 0.0;
		this.frameTime = 0.0;
		this.lastTime = 0.0;
		this.scaleFactor = 1.0;
		super._hx_constructor();
		this.scaleFactor = scaleFactor;
		armory_trait_internal_DebugConsole.traceWithPosition = traceWithPosition == 1;
		let _gthis = this;
		iron_data_Data.getFont("font_default.ttf",function(font) {
			armory_trait_internal_DebugConsole.ui = new zui_Zui({ scaleFactor : scaleFactor, font : font});
			armory_trait_internal_DebugConsole.setScale(scaleDebugConsole);
			armory_trait_internal_DebugConsole.setVisible(visibleDebugConsole == 1);
			armory_trait_internal_DebugConsole.setPosition(positionDebugConsole);
			_gthis.shortcutVisible = keyCodeVisible;
			_gthis.shortcutScaleIn = keyCodeScaleIn;
			_gthis.shortcutScaleOut = keyCodeScaleOut;
			_gthis.notifyOnRender2D($bind(_gthis,_gthis.render2D));
			_gthis.notifyOnUpdate($bind(_gthis,_gthis.update));
			if(armory_trait_internal_DebugConsole.haxeTrace == null) {
				armory_trait_internal_DebugConsole.haxeTrace = haxe_Log.trace;
				haxe_Log.trace = armory_trait_internal_DebugConsole.consoleTrace;
			}
			kha_input_Keyboard.get().notify(null,function(key) {
				if(key == 219) {
					armory_trait_internal_DebugConsole.debugFloat -= 0.1;
					haxe_Log.trace("debugFloat = " + armory_trait_internal_DebugConsole.debugFloat,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 109, className : "armory.trait.internal.DebugConsole", methodName : "new"});
				} else if(key == 221) {
					armory_trait_internal_DebugConsole.debugFloat += 0.1;
					haxe_Log.trace("debugFloat = " + armory_trait_internal_DebugConsole.debugFloat,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 113, className : "armory.trait.internal.DebugConsole", methodName : "new"});
				}
				if(key == _gthis.shortcutVisible) {
					armory_trait_internal_DebugConsole.visible = !armory_trait_internal_DebugConsole.visible;
				} else if(key == _gthis.shortcutScaleIn) {
					let debugScale = armory_trait_internal_DebugConsole.getScale() - 0.1;
					if(debugScale > 0.3) {
						armory_trait_internal_DebugConsole.setScale(debugScale);
					}
				} else if(key == _gthis.shortcutScaleOut) {
					let debugScale = armory_trait_internal_DebugConsole.getScale() + 0.1;
					if(debugScale < 10.0) {
						armory_trait_internal_DebugConsole.setScale(debugScale);
					}
				}
			},null);
		});
	}
	selectObject(o) {
		this.selectedObject = o;
		let _gthis = this;
		if(!this.debugDrawSet) {
			this.debugDrawSet = true;
			armory_trait_internal_DebugDraw.notifyOnRender(function(draw) {
				if(_gthis.selectedObject != null) {
					draw.bounds(_gthis.selectedObject.transform);
				}
			});
		}
	}
	updateGraph() {
		if(this.graph == null) {
			this.graphA = kha_Image.createRenderTarget(280,33);
			this.graphB = kha_Image.createRenderTarget(280,33);
			this.graph = this.graphA;
		} else {
			this.graph = this.graph == this.graphA ? this.graphB : this.graphA;
		}
		let graphPrev = this.graph == this.graphA ? this.graphB : this.graphA;
		this.graph.get_g2().begin(true,0);
		this.graph.get_g2().set_color(-1);
		this.graph.get_g2().drawImage(graphPrev,-3,0);
		let avg = Math.round(this.frameTimeAvg * 1000);
		let miss = avg > 16.7 ? (avg - 16.7) / 16.7 : 0.0;
		this.graph.get_g2().set_color(kha_Color.fromFloats(miss,1 - miss,0,1.0));
		this.graph.get_g2().fillRect(277,33 - avg,3,avg);
		this.graph.get_g2().set_color(-16777216);
		this.graph.get_g2().fillRect(277,16,3,1);
		this.graph.get_g2().end();
	}
	render2D(g) {
		let hwin = zui_Handle.global.nest(2,null);
		let htab = zui_Handle.global.nest(3,{ position : 0});
		let avg = Math.round(this.frameTimeAvg * 10000) / 10;
		armory_trait_internal_DebugConsole.fpsAvg = avg > 0 ? Math.round(1000 / avg) : 0;
		this.totalTime += this.frameTime;
		this.renderPathTime += iron_App.renderPathTime;
		this.frames++;
		if(this.totalTime > 1.0) {
			hwin.redraws = 1;
			let t = this.totalTime / this.frames;
			if(this.frameTimeAvg > 0) {
				if(t < this.frameTimeAvgMin || this.frameTimeAvgMin == 0) {
					this.frameTimeAvgMin = t;
				}
				if(t > this.frameTimeAvgMax || this.frameTimeAvgMax == 0) {
					this.frameTimeAvgMax = t;
				}
			}
			this.frameTimeAvg = t;
			if(this.benchmark) {
				this.benchFrames++;
				if(this.benchFrames > 10) {
					this.benchTime += t;
				}
				if(this.benchFrames == 20) {
					haxe_Log.trace((this.benchTime / 10 * 1000000 | 0) / 1000,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 204, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
				}
			}
			this.renderPathTimeAvg = this.renderPathTime / this.frames;
			this.updateTimeAvg = this.updateTime / this.frames;
			this.animTimeAvg = this.animTime / this.frames;
			this.physTimeAvg = this.physTime / this.frames;
			this.totalTime = 0;
			this.renderPathTime = 0;
			this.updateTime = 0;
			this.animTime = 0;
			this.physTime = 0;
			this.frames = 0;
			if(htab.position == 2) {
				g.end();
				this.updateGraph();
				g.begin(false);
			}
		}
		this.frameTime = kha_Scheduler.realTime() - this.lastTime;
		this.lastTime = kha_Scheduler.realTime();
		if(!armory_trait_internal_DebugConsole.visible) {
			return;
		}
		let ww = 280 * this.scaleFactor * armory_trait_internal_DebugConsole.getScale() | 0;
		let wx = iron_App.w() - ww;
		let wy = 0;
		let wh = iron_App.h();
		switch(armory_trait_internal_DebugConsole.positionConsole) {
		case 0:
			wx = 0;
			break;
		case 1:
			wx = Math.round(iron_App.w() / 2 - ww / 2);
			break;
		case 2:
			wx = iron_App.w() - ww;
			break;
		}
		let bindG = true;
		if(bindG) {
			g.end();
		}
		armory_trait_internal_DebugConsole.ui.begin(g);
		let _gthis = this;
		if(armory_trait_internal_DebugConsole.ui.window(hwin,wx,wy,ww,wh,true)) {
			let tmp = armory_trait_internal_DebugConsole.ui.tab(htab,"");
			if(armory_trait_internal_DebugConsole.ui.tab(htab,"Scene")) {
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(4,{ selected : true}),"Outliner")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let _this = armory_trait_internal_DebugConsole.ui;
					armory_trait_internal_DebugConsole.ui._y -= _this.t.ELEMENT_OFFSET * _this.ops.scaleFactor;
					let listX = armory_trait_internal_DebugConsole.ui._x;
					let listW = armory_trait_internal_DebugConsole.ui._w;
					let drawObjectNameInList = function(object,selected) {
						let _y = armory_trait_internal_DebugConsole.ui._y;
						armory_trait_internal_DebugConsole.ui.text(object.name);
						if(object == iron_Scene.active.camera) {
							let tagWidth = 100;
							let offsetX = listW - tagWidth;
							let prevX = armory_trait_internal_DebugConsole.ui._x;
							let prevY = armory_trait_internal_DebugConsole.ui._y;
							let prevW = armory_trait_internal_DebugConsole.ui._w;
							armory_trait_internal_DebugConsole.ui._x = listX + offsetX;
							armory_trait_internal_DebugConsole.ui._y = _y;
							armory_trait_internal_DebugConsole.ui._w = tagWidth;
							armory_trait_internal_DebugConsole.ui.g.set_color(selected ? -1 : kha_Color.fromFloats(0.941,0.914,0.329,1.0));
							armory_trait_internal_DebugConsole.ui.drawString(armory_trait_internal_DebugConsole.ui.g,"Active Camera",null,0,2);
							armory_trait_internal_DebugConsole.ui._x = prevX;
							armory_trait_internal_DebugConsole.ui._y = prevY;
							armory_trait_internal_DebugConsole.ui._w = prevW;
						}
					};
					let lineCounter = 0;
					let drawList = null;
					drawList = function(listHandle,currentObject) {
						if(currentObject.name.charAt(0) == ".") {
							return;
						}
						let b = false;
						let isLineSelected = currentObject == _gthis.selectedObject;
						if(lineCounter % 2 == 0) {
							armory_trait_internal_DebugConsole.ui.g.set_color(armory_trait_internal_DebugConsole.ui.t.SEPARATOR_COL);
							let _this = armory_trait_internal_DebugConsole.ui;
							armory_trait_internal_DebugConsole.ui.g.fillRect(0,armory_trait_internal_DebugConsole.ui._y,armory_trait_internal_DebugConsole.ui._windowW,_this.t.ELEMENT_H * _this.ops.scaleFactor);
							armory_trait_internal_DebugConsole.ui.g.set_color(-1);
						}
						if(isLineSelected) {
							armory_trait_internal_DebugConsole.ui.g.set_color(-14656100);
							let _this = armory_trait_internal_DebugConsole.ui;
							armory_trait_internal_DebugConsole.ui.g.fillRect(0,armory_trait_internal_DebugConsole.ui._y,armory_trait_internal_DebugConsole.ui._windowW,_this.t.ELEMENT_H * _this.ops.scaleFactor);
							armory_trait_internal_DebugConsole.ui.g.set_color(-1);
						}
						if(currentObject.children.length > 0) {
							armory_trait_internal_DebugConsole.ui.row([0.076923076923076927,0.92307692307692313]);
							b = armory_trait_internal_DebugConsole.ui.panel(listHandle.nest(lineCounter,{ selected : true}),"",true,false,false);
							drawObjectNameInList(currentObject,isLineSelected);
						} else {
							armory_trait_internal_DebugConsole.ui._x += 18;
							armory_trait_internal_DebugConsole.ui.g.set_color(armory_trait_internal_DebugConsole.ui.t.ACCENT_COL);
							let _this = armory_trait_internal_DebugConsole.ui;
							let _this1 = armory_trait_internal_DebugConsole.ui;
							armory_trait_internal_DebugConsole.ui.g.drawLine(armory_trait_internal_DebugConsole.ui._x - 10,armory_trait_internal_DebugConsole.ui._y + _this.t.ELEMENT_H * _this.ops.scaleFactor / 2,armory_trait_internal_DebugConsole.ui._x,armory_trait_internal_DebugConsole.ui._y + _this1.t.ELEMENT_H * _this1.ops.scaleFactor / 2);
							armory_trait_internal_DebugConsole.ui.g.set_color(-1);
							drawObjectNameInList(currentObject,isLineSelected);
							armory_trait_internal_DebugConsole.ui._x -= 18;
						}
						lineCounter += 1;
						let _this = armory_trait_internal_DebugConsole.ui;
						armory_trait_internal_DebugConsole.ui._y -= _this.t.ELEMENT_OFFSET * _this.ops.scaleFactor;
						if(armory_trait_internal_DebugConsole.ui.isReleased) {
							_gthis.selectObject(currentObject);
						}
						if(b) {
							let currentY = armory_trait_internal_DebugConsole.ui._y;
							let _g = 0;
							let _g1 = currentObject.children;
							while(_g < _g1.length) {
								let child = _g1[_g];
								++_g;
								armory_trait_internal_DebugConsole.ui.indent();
								drawList(listHandle,child);
								armory_trait_internal_DebugConsole.ui.unindent();
							}
							armory_trait_internal_DebugConsole.ui.g.set_color(armory_trait_internal_DebugConsole.ui.t.ACCENT_COL);
							let _this = armory_trait_internal_DebugConsole.ui;
							armory_trait_internal_DebugConsole.ui.g.drawLine(armory_trait_internal_DebugConsole.ui._x + 14,currentY,armory_trait_internal_DebugConsole.ui._x + 14,armory_trait_internal_DebugConsole.ui._y - _this.t.ELEMENT_H * _this.ops.scaleFactor / 2);
							armory_trait_internal_DebugConsole.ui.g.set_color(-1);
						}
					};
					let _g = 0;
					let _g1 = iron_Scene.active.root.children;
					while(_g < _g1.length) {
						let c = _g1[_g];
						++_g;
						drawList(zui_Handle.global.nest(5,null),c);
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(this.selectedObject == null) {
					this.selectedType = "";
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(6,{ selected : true}),"Properties " + this.selectedType)) {
					armory_trait_internal_DebugConsole.ui.indent();
					if(this.selectedObject != null) {
						if(((this.selectedObject) instanceof iron_object_CameraObject) && this.selectedObject != iron_Scene.active.camera) {
							armory_trait_internal_DebugConsole.ui.row([0.5,0.5]);
						}
						let h = zui_Handle.global.nest(7,null);
						h.selected = this.selectedObject.visible;
						this.selectedObject.visible = armory_trait_internal_DebugConsole.ui.check(h,"Visible");
						if(((this.selectedObject) instanceof iron_object_CameraObject) && this.selectedObject != iron_Scene.active.camera) {
							if(armory_trait_internal_DebugConsole.ui.button("Set Active Camera")) {
								iron_Scene.active.camera = this.selectedObject;
							}
						}
						let localPos = this.selectedObject.transform.loc;
						let t = this.selectedObject.transform;
						let x = t.world.self._30;
						let y = t.world.self._31;
						let z = t.world.self._32;
						let w = 1.0;
						if(w == null) {
							w = 1.0;
						}
						if(z == null) {
							z = 0.0;
						}
						if(y == null) {
							y = 0.0;
						}
						if(x == null) {
							x = 0.0;
						}
						let worldPos_x = x;
						let worldPos_y = y;
						let worldPos_z = z;
						let worldPos_w = w;
						let scale = this.selectedObject.transform.scale;
						let _this = this.selectedObject.transform.rot;
						let a = -2 * (_this.x * _this.z - _this.w * _this.y);
						let b = _this.w * _this.w + _this.x * _this.x - _this.y * _this.y - _this.z * _this.z;
						let c = 2 * (_this.x * _this.y + _this.w * _this.z);
						let d = -2 * (_this.y * _this.z - _this.w * _this.x);
						let e = _this.w * _this.w - _this.x * _this.x + _this.y * _this.y - _this.z * _this.z;
						let x1 = Math.atan2(d,e);
						let y1 = Math.atan2(a,b);
						let z1 = Math.asin(c);
						if(z1 == null) {
							z1 = 0.0;
						}
						if(y1 == null) {
							y1 = 0.0;
						}
						if(x1 == null) {
							x1 = 0.0;
						}
						let rot_x = x1;
						let rot_y = y1;
						let rot_z = z1;
						let rot_w = 1.0;
						let dim = this.selectedObject.transform.dim;
						rot_x *= 57.29579143313326;
						rot_y *= 57.29579143313326;
						rot_z *= 57.29579143313326;
						let f = 0.0;
						armory_trait_internal_DebugConsole.ui.text("Transforms");
						armory_trait_internal_DebugConsole.ui.indent();
						armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.row4);
						armory_trait_internal_DebugConsole.ui.text("World Loc");
						armory_trait_internal_DebugConsole.ui.enabled = false;
						h = zui_Handle.global.nest(8,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(worldPos_x) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"X"));
						h = zui_Handle.global.nest(9,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(worldPos_y) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Y"));
						h = zui_Handle.global.nest(10,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(worldPos_z) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Z"));
						armory_trait_internal_DebugConsole.ui.enabled = true;
						armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.row4);
						armory_trait_internal_DebugConsole.ui.text("Local Loc");
						h = zui_Handle.global.nest(11,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(localPos.x) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"X"));
						if(h.changed) {
							localPos.x = f;
						}
						h = zui_Handle.global.nest(12,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(localPos.y) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Y"));
						if(h.changed) {
							localPos.y = f;
						}
						h = zui_Handle.global.nest(13,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(localPos.z) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Z"));
						if(h.changed) {
							localPos.z = f;
						}
						armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.row4);
						armory_trait_internal_DebugConsole.ui.text("Rotation");
						h = zui_Handle.global.nest(14,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(rot_x) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"X"));
						let changed = false;
						if(h.changed) {
							changed = true;
							rot_x = f;
						}
						h = zui_Handle.global.nest(15,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(rot_y) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Y"));
						if(h.changed) {
							changed = true;
							rot_y = f;
						}
						h = zui_Handle.global.nest(16,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(rot_z) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Z"));
						if(h.changed) {
							changed = true;
							rot_z = f;
						}
						if(changed && this.selectedObject.name != "Scene") {
							rot_x *= 0.01745328888888889;
							rot_y *= 0.01745328888888889;
							rot_z *= 0.01745328888888889;
							let _this = this.selectedObject.transform.rot;
							let f = rot_x / 2;
							let c1 = Math.cos(f);
							let s1 = Math.sin(f);
							f = rot_y / 2;
							let c2 = Math.cos(f);
							let s2 = Math.sin(f);
							f = rot_z / 2;
							let c3 = Math.cos(f);
							let s3 = Math.sin(f);
							_this.x = s1 * c2 * c3 + c1 * s2 * s3;
							_this.y = c1 * s2 * c3 + s1 * c2 * s3;
							_this.z = c1 * c2 * s3 - s1 * s2 * c3;
							_this.w = c1 * c2 * c3 - s1 * s2 * s3;
							this.selectedObject.transform.buildMatrix();
							let rb = this.selectedObject.getTrait(armory_trait_physics_bullet_RigidBody);
							if(rb != null) {
								rb.syncTransform();
							}
						}
						armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.row4);
						armory_trait_internal_DebugConsole.ui.text("Scale");
						h = zui_Handle.global.nest(17,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(scale.x) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"X"));
						if(h.changed) {
							scale.x = f;
						}
						h = zui_Handle.global.nest(18,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(scale.y) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Y"));
						if(h.changed) {
							scale.y = f;
						}
						h = zui_Handle.global.nest(19,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(scale.z) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Z"));
						if(h.changed) {
							scale.z = f;
						}
						armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.row4);
						armory_trait_internal_DebugConsole.ui.text("Dimensions");
						h = zui_Handle.global.nest(20,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(dim.x) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"X"));
						if(h.changed) {
							dim.x = f;
						}
						h = zui_Handle.global.nest(21,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(dim.y) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Y"));
						if(h.changed) {
							dim.y = f;
						}
						h = zui_Handle.global.nest(22,null);
						h.text = armory_trait_internal_DebugConsole.roundfp(dim.z) + "";
						f = parseFloat(armory_trait_internal_DebugConsole.ui.textInput(h,"Z"));
						if(h.changed) {
							dim.z = f;
						}
						this.selectedObject.transform.dirty = true;
						armory_trait_internal_DebugConsole.ui.unindent();
						if(this.selectedObject.traits.length > 0) {
							armory_trait_internal_DebugConsole.ui.text("Traits:");
							armory_trait_internal_DebugConsole.ui.indent();
							let _g = 0;
							let _g1 = this.selectedObject.traits;
							while(_g < _g1.length) {
								let t = _g1[_g];
								++_g;
								armory_trait_internal_DebugConsole.ui.row([0.75,0.25]);
								let c = js_Boot.getClass(t);
								armory_trait_internal_DebugConsole.ui.text(c.__name__);
								if(armory_trait_internal_DebugConsole.ui.button("Details")) {
									if(this.selectedTraits.indexOf(t) == -1) {
										this.selectedTraits.push(t);
									}
								}
								if(armory_trait_internal_DebugConsole.ui.isHovered) {
									armory_trait_internal_DebugConsole.ui.tooltip("Open details about the trait in another window");
								}
							}
							armory_trait_internal_DebugConsole.ui.unindent();
						}
						if(this.selectedObject.name == "Scene") {
							this.selectedType = "(Scene)";
							if(iron_Scene.active.world != null) {
								let p = iron_Scene.active.world.probe;
								let tmp = armory_trait_internal_DebugConsole.ui;
								let tmp1 = zui_Handle.global.nest(23,{ value : p.raw.strength});
								p.raw.strength = tmp.slider(tmp1,"Env Strength",0.0,5.0,true);
							} else {
								armory_trait_internal_DebugConsole.ui.text("This scene has no world data to edit.");
							}
						} else if(((this.selectedObject) instanceof iron_object_LightObject)) {
							this.selectedType = "(Light)";
							let light = js_Boot.__cast(this.selectedObject , iron_object_LightObject);
							let lightHandle = zui_Handle.global.nest(24,null);
							lightHandle.value = light.data.raw.strength / 10;
							let tmp = armory_trait_internal_DebugConsole.ui.slider(lightHandle,"Strength",0.0,5.0,true);
							light.data.raw.strength = tmp * 10;
						} else if(((this.selectedObject) instanceof iron_object_CameraObject)) {
							this.selectedType = "(Camera)";
							let cam = js_Boot.__cast(this.selectedObject , iron_object_CameraObject);
							let fovHandle = zui_Handle.global.nest(25,null);
							fovHandle.value = (cam.data.raw.fov * 100 | 0) / 100;
							cam.data.raw.fov = armory_trait_internal_DebugConsole.ui.slider(fovHandle,"Field of View",0.3,2.0,true);
							if(fovHandle.changed) {
								cam.buildProjection();
							}
						} else {
							this.selectedType = "(Object)";
						}
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
			}
			if(armory_trait_internal_DebugConsole.ui.tab(htab,"" + avg + " ms")) {
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(26,{ selected : true}),"Performance")) {
					if(this.graph != null) {
						armory_trait_internal_DebugConsole.ui.image(this.graph);
					}
					armory_trait_internal_DebugConsole.ui.indent();
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Frame");
					armory_trait_internal_DebugConsole.ui.text("" + avg + " ms / " + armory_trait_internal_DebugConsole.fpsAvg + " fps",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Render-path");
					armory_trait_internal_DebugConsole.ui.text(Math.round(this.renderPathTimeAvg * 10000) / 10 + " ms",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Script");
					armory_trait_internal_DebugConsole.ui.text(Math.round((this.updateTimeAvg - this.physTimeAvg - this.animTimeAvg) * 10000) / 10 + " ms",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Animation");
					armory_trait_internal_DebugConsole.ui.text(Math.round(this.animTimeAvg * 10000) / 10 + " ms",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Physics");
					armory_trait_internal_DebugConsole.ui.text(Math.round(this.physTimeAvg * 10000) / 10 + " ms",2);
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(27,{ selected : false}),"Draw")) {
					armory_trait_internal_DebugConsole.ui.indent();
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					let numMeshes = iron_Scene.active.meshes.length;
					armory_trait_internal_DebugConsole.ui.text("Meshes");
					armory_trait_internal_DebugConsole.ui.text(numMeshes + "",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Draw calls");
					armory_trait_internal_DebugConsole.ui.text(iron_RenderPath.drawCalls + "",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Tris mesh");
					armory_trait_internal_DebugConsole.ui.text(iron_RenderPath.numTrisMesh + "",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Tris shadow");
					armory_trait_internal_DebugConsole.ui.text(iron_RenderPath.numTrisShadow + "",2);
					armory_trait_internal_DebugConsole.ui.row(armory_trait_internal_DebugConsole.lrow);
					armory_trait_internal_DebugConsole.ui.text("Culled");
					armory_trait_internal_DebugConsole.ui.text(iron_RenderPath.culled + " / " + numMeshes * 2,2);
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(28,{ selected : false}),"Render Targets")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let h = iron_RenderPath.active.renderTargets.h;
					let rt_h = h;
					let rt_keys = Object.keys(h);
					let rt_length = rt_keys.length;
					let rt_current = 0;
					while(rt_current < rt_length) {
						let rt = rt_h[rt_keys[rt_current++]];
						armory_trait_internal_DebugConsole.ui.text(rt.raw.name);
						if(rt.image != null && !rt.is3D) {
							armory_trait_internal_DebugConsole.ui.image(rt.image);
						}
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(29,{ selected : false}),"Cached Materials")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let h = iron_data_Data.cachedMaterials.h;
					let c_h = h;
					let c_keys = Object.keys(h);
					let c_length = c_keys.length;
					let c_current = 0;
					while(c_current < c_length) {
						let c = c_h[c_keys[c_current++]];
						armory_trait_internal_DebugConsole.ui.text(c.name);
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(30,{ selected : false}),"Cached Shaders")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let h = iron_data_Data.cachedShaders.h;
					let c_h = h;
					let c_keys = Object.keys(h);
					let c_length = c_keys.length;
					let c_current = 0;
					while(c_current < c_length) {
						let c = c_h[c_keys[c_current++]];
						armory_trait_internal_DebugConsole.ui.text(c.name);
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
			}
			if(armory_trait_internal_DebugConsole.ui.tab(htab,armory_trait_internal_DebugConsole.lastTraces[0] == "" ? "Console" : HxOverrides.substr(armory_trait_internal_DebugConsole.lastTraces[0],0,20))) {
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(31,{ selected : false}),"Script")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let t = armory_trait_internal_DebugConsole.ui.textInput(zui_Handle.global.nest(32,null));
					if(armory_trait_internal_DebugConsole.ui.button("Run")) {
						try {
							haxe_Log.trace("> " + t,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 852, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
							eval(t);
						} catch( _g ) {
							let e = haxe_Exception.caught(_g).unwrap();
							haxe_Log.trace(e,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 853, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
						}
					}
					armory_trait_internal_DebugConsole.ui.unindent();
				}
				if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(33,{ selected : true}),"Log")) {
					armory_trait_internal_DebugConsole.ui.indent();
					let h = zui_Handle.global.nest(34,null);
					h.selected = armory_trait_internal_DebugConsole.traceWithPosition;
					armory_trait_internal_DebugConsole.traceWithPosition = armory_trait_internal_DebugConsole.ui.check(h,"Print With Position");
					if(armory_trait_internal_DebugConsole.ui.isHovered) {
						armory_trait_internal_DebugConsole.ui.tooltip("Whether to prepend the position of print/trace statements to the printed text");
					}
					if(armory_trait_internal_DebugConsole.ui.button("Clear")) {
						armory_trait_internal_DebugConsole.lastTraces[0] = "";
						armory_trait_internal_DebugConsole.lastTraces.splice(1,armory_trait_internal_DebugConsole.lastTraces.length - 1);
					}
					if(armory_trait_internal_DebugConsole.ui.isHovered) {
						armory_trait_internal_DebugConsole.ui.tooltip("Clear the log output");
					}
					let eh = armory_trait_internal_DebugConsole.ui.t.ELEMENT_H;
					armory_trait_internal_DebugConsole.ui.t.ELEMENT_H = armory_trait_internal_DebugConsole.ui.fontSize;
					let _g = 0;
					let _g1 = armory_trait_internal_DebugConsole.lastTraces;
					while(_g < _g1.length) {
						let t = _g1[_g];
						++_g;
						armory_trait_internal_DebugConsole.ui.text(t);
					}
					armory_trait_internal_DebugConsole.ui.t.ELEMENT_H = eh;
					armory_trait_internal_DebugConsole.ui.unindent();
				}
			}
			if(armory_trait_internal_DebugConsole.watchNodes.length > 0 && armory_trait_internal_DebugConsole.ui.tab(htab,"Watch")) {
				let lineCounter = 0;
				let _g = 0;
				let _g1 = armory_trait_internal_DebugConsole.watchNodes;
				while(_g < _g1.length) {
					let n = _g1[_g];
					++_g;
					if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(35,{ selected : true}).nest(lineCounter),n.tree.object.name + "." + n.tree.name + "." + n.name + " : ")) {
						armory_trait_internal_DebugConsole.ui.indent();
						armory_trait_internal_DebugConsole.ui.g.set_color(armory_trait_internal_DebugConsole.ui.t.SEPARATOR_COL);
						let _this = armory_trait_internal_DebugConsole.ui;
						armory_trait_internal_DebugConsole.ui.g.fillRect(0,armory_trait_internal_DebugConsole.ui._y,armory_trait_internal_DebugConsole.ui._windowW,_this.t.ELEMENT_H * _this.ops.scaleFactor);
						armory_trait_internal_DebugConsole.ui.g.set_color(-1);
						armory_trait_internal_DebugConsole.ui.text(Std.string(n.get(0)));
						armory_trait_internal_DebugConsole.ui.unindent();
					}
					++lineCounter;
				}
			}
			armory_trait_internal_DebugConsole.ui.separator();
		}
		let handleWinTrait = zui_Handle.global.nest(36,null);
		let _g = 0;
		let _g1 = this.selectedTraits;
		while(_g < _g1.length) {
			let trait = _g1[_g];
			++_g;
			let objectID = trait.object.uid;
			let traitIndex = trait.object.traits.indexOf(trait);
			let handleWindow = handleWinTrait.nest(objectID).nest(traitIndex);
			wx = armory_trait_internal_DebugConsole.positionConsole == 0 ? wx + ww + 8 : wx - ww - 8;
			wy = 0;
			handleWindow.redraws = 1;
			armory_trait_internal_DebugConsole.ui.window(handleWindow,wx,wy,ww,wh,true);
			if(armory_trait_internal_DebugConsole.ui.button("Close Trait View")) {
				HxOverrides.remove(this.selectedTraits,trait);
				handleWinTrait.nest(objectID).unnest(traitIndex);
				continue;
			}
			armory_trait_internal_DebugConsole.ui.row([0.5,0.5]);
			armory_trait_internal_DebugConsole.ui.text("Trait:");
			let c = js_Boot.getClass(trait);
			armory_trait_internal_DebugConsole.ui.text(c.__name__,2);
			armory_trait_internal_DebugConsole.ui.row([0.5,0.5]);
			armory_trait_internal_DebugConsole.ui.text("Extends:");
			let tmp = armory_trait_internal_DebugConsole.ui;
			let c1 = js_Boot.getClass(trait);
			let c2 = c1.__super__;
			tmp.text(c2.__name__,2);
			armory_trait_internal_DebugConsole.ui.row([0.5,0.5]);
			armory_trait_internal_DebugConsole.ui.text("Object:");
			armory_trait_internal_DebugConsole.ui.text(trait.object.name,2);
			armory_trait_internal_DebugConsole.ui.separator();
			if(armory_trait_internal_DebugConsole.ui.panel(zui_Handle.global.nest(37,null).nest(objectID).nest(traitIndex),"Attributes")) {
				armory_trait_internal_DebugConsole.ui.indent();
				let _g = 0;
				let _g1 = Reflect.fields(trait);
				while(_g < _g1.length) {
					let fieldName = _g1[_g];
					++_g;
					armory_trait_internal_DebugConsole.ui.row([0.5,0.5]);
					armory_trait_internal_DebugConsole.ui.text(fieldName + "");
					let fieldValue = Reflect.field(trait,fieldName);
					let fieldClass = js_Boot.getClass(fieldValue);
					if(Reflect.isObject(fieldValue) && fieldClass != String) {
						if(fieldClass != null) {
							armory_trait_internal_DebugConsole.ui.text("<" + fieldClass.__name__ + ">",2);
						} else {
							armory_trait_internal_DebugConsole.ui.text("<???>",2);
						}
					} else {
						armory_trait_internal_DebugConsole.ui.text(fieldValue == null ? "null" : "" + fieldValue,2);
					}
				}
				armory_trait_internal_DebugConsole.ui.unindent();
			}
		}
		armory_trait_internal_DebugConsole.ui.end(bindG);
		if(bindG) {
			g.begin(false);
		}
	}
	update() {
		armory_trait_WalkNavigation.enabled = !(armory_trait_internal_DebugConsole.ui.isScrolling || armory_trait_internal_DebugConsole.ui.dragHandle != null);
		this.updateTime += iron_App.updateTime;
		this.animTime += iron_object_Animation.animationTime;
		this.physTime += armory_trait_physics_bullet_PhysicsWorld.physTime;
	}
	static consoleTrace(v,inf) {
		armory_trait_internal_DebugConsole.lastTraces.unshift(haxe_Log.formatOutput(v,armory_trait_internal_DebugConsole.traceWithPosition ? inf : null));
		if(armory_trait_internal_DebugConsole.lastTraces.length > 10) {
			armory_trait_internal_DebugConsole.lastTraces.pop();
		}
		armory_trait_internal_DebugConsole.haxeTrace(v,inf);
	}
	static roundfp(f,precision) {
		if(precision == null) {
			precision = 2;
		}
		f *= Math.pow(10,precision);
		return Math.round(f) / Math.pow(10,precision);
	}
	static getVisible() {
		return armory_trait_internal_DebugConsole.visible;
	}
	static setVisible(value) {
		armory_trait_internal_DebugConsole.visible = value;
	}
	static getScale() {
		return armory_trait_internal_DebugConsole.ui.ops.scaleFactor;
	}
	static setScale(value) {
		armory_trait_internal_DebugConsole.ui.setScale(value);
	}
	static setPosition(value) {
		armory_trait_internal_DebugConsole.positionConsole = value;
	}
	static getPosition() {
		return armory_trait_internal_DebugConsole.positionConsole;
	}
	static getFramerate() {
		return armory_trait_internal_DebugConsole.fpsAvg;
	}
}
$hxClasses["armory.trait.internal.DebugConsole"] = armory_trait_internal_DebugConsole;
armory_trait_internal_DebugConsole.__name__ = "armory.trait.internal.DebugConsole";
armory_trait_internal_DebugConsole.__super__ = iron_Trait;
Object.assign(armory_trait_internal_DebugConsole.prototype, {
	__class__: armory_trait_internal_DebugConsole
	,scaleFactor: null
	,lastTime: null
	,frameTime: null
	,totalTime: null
	,frames: null
	,frameTimeAvg: null
	,frameTimeAvgMin: null
	,frameTimeAvgMax: null
	,renderPathTime: null
	,renderPathTimeAvg: null
	,updateTime: null
	,updateTimeAvg: null
	,animTime: null
	,animTimeAvg: null
	,physTime: null
	,physTimeAvg: null
	,graph: null
	,graphA: null
	,graphB: null
	,benchmark: null
	,benchFrames: null
	,benchTime: null
	,selectedObject: null
	,selectedType: null
	,selectedTraits: null
	,shortcutVisible: null
	,shortcutScaleIn: null
	,shortcutScaleOut: null
	,debugDrawSet: null
});
class armory_trait_internal_DebugDraw {
	constructor() {
		this.lines = 0;
		this.strength = 0.02;
		this.color = -65536;
		armory_trait_internal_DebugDraw.inst = this;
		let structure = new kha_graphics4_VertexStructure();
		structure.add("pos",2);
		structure.add("col",2);
		this.pipeline = new kha_graphics4_PipelineState();
		this.pipeline.inputLayout = [structure];
		this.pipeline.fragmentShader = kha_Shaders.line_deferred_frag;
		this.pipeline.vertexShader = kha_Shaders.line_vert;
		this.pipeline.depthWrite = true;
		this.pipeline.depthMode = 4;
		this.pipeline.cullMode = 2;
		this.pipeline.compile();
		this.vpID = this.pipeline.getConstantLocation("ViewProjection");
		this.vp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.vertexBuffer = new kha_graphics4_VertexBuffer(1200,structure,1);
		this.indexBuffer = new kha_graphics4_IndexBuffer(1800,1);
	}
	bounds(transform) {
		armory_trait_internal_DebugDraw.objPosition = new iron_math_Vec4(transform.world.self._30,transform.world.self._31,transform.world.self._32,1.0);
		let dx = transform.dim.x / 2;
		let dy = transform.dim.y / 2;
		let dz = transform.dim.z / 2;
		let _this = transform.world;
		let x = _this.self._20;
		let y = _this.self._21;
		let z = _this.self._22;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let up_x = x;
		let up_y = y;
		let up_z = z;
		let up_w = 1.0;
		let _this1 = transform.world;
		let x1 = _this1.self._10;
		let y1 = _this1.self._11;
		let z1 = _this1.self._12;
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let look_x = x1;
		let look_y = y1;
		let look_z = z1;
		let look_w = 1.0;
		let _this2 = transform.world;
		let x2 = _this2.self._00;
		let y2 = _this2.self._01;
		let z2 = _this2.self._02;
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let right_x = x2;
		let right_y = y2;
		let right_z = z2;
		let right_w = 1.0;
		let n = Math.sqrt(up_x * up_x + up_y * up_y + up_z * up_z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			up_x *= invN;
			up_y *= invN;
			up_z *= invN;
		}
		let n1 = Math.sqrt(look_x * look_x + look_y * look_y + look_z * look_z);
		if(n1 > 0.0) {
			let invN = 1.0 / n1;
			look_x *= invN;
			look_y *= invN;
			look_z *= invN;
		}
		let n2 = Math.sqrt(right_x * right_x + right_y * right_y + right_z * right_z);
		if(n2 > 0.0) {
			let invN = 1.0 / n2;
			right_x *= invN;
			right_y *= invN;
			right_z *= invN;
		}
		let _this3 = armory_trait_internal_DebugDraw.vx;
		_this3.x = right_x;
		_this3.y = right_y;
		_this3.z = right_z;
		_this3.w = right_w;
		let _this4 = armory_trait_internal_DebugDraw.vx;
		_this4.x *= dx;
		_this4.y *= dx;
		_this4.z *= dx;
		let _this5 = armory_trait_internal_DebugDraw.vy;
		_this5.x = look_x;
		_this5.y = look_y;
		_this5.z = look_z;
		_this5.w = look_w;
		let _this6 = armory_trait_internal_DebugDraw.vy;
		_this6.x *= dy;
		_this6.y *= dy;
		_this6.z *= dy;
		let _this7 = armory_trait_internal_DebugDraw.vz;
		_this7.x = up_x;
		_this7.y = up_y;
		_this7.z = up_z;
		_this7.w = up_w;
		let _this8 = armory_trait_internal_DebugDraw.vz;
		_this8.x *= dz;
		_this8.y *= dz;
		_this8.z *= dz;
		this.lineb(-1,-1,-1,1,-1,-1);
		this.lineb(-1,1,-1,1,1,-1);
		this.lineb(-1,-1,1,1,-1,1);
		this.lineb(-1,1,1,1,1,1);
		this.lineb(-1,-1,-1,-1,1,-1);
		this.lineb(-1,-1,1,-1,1,1);
		this.lineb(1,-1,-1,1,1,-1);
		this.lineb(1,-1,1,1,1,1);
		this.lineb(-1,-1,-1,-1,-1,1);
		this.lineb(-1,1,-1,-1,1,1);
		this.lineb(1,-1,-1,1,-1,1);
		this.lineb(1,1,-1,1,1,1);
	}
	lineb(a,b,c,d,e,f) {
		let _this = armory_trait_internal_DebugDraw.v1;
		let v = armory_trait_internal_DebugDraw.objPosition;
		_this.x = v.x;
		_this.y = v.y;
		_this.z = v.z;
		_this.w = v.w;
		let _this1 = armory_trait_internal_DebugDraw.t;
		let v1 = armory_trait_internal_DebugDraw.vx;
		_this1.x = v1.x;
		_this1.y = v1.y;
		_this1.z = v1.z;
		_this1.w = v1.w;
		let _this2 = armory_trait_internal_DebugDraw.t;
		_this2.x *= a;
		_this2.y *= a;
		_this2.z *= a;
		let _this3 = armory_trait_internal_DebugDraw.v1;
		let v2 = armory_trait_internal_DebugDraw.t;
		_this3.x += v2.x;
		_this3.y += v2.y;
		_this3.z += v2.z;
		let _this4 = armory_trait_internal_DebugDraw.t;
		let v3 = armory_trait_internal_DebugDraw.vy;
		_this4.x = v3.x;
		_this4.y = v3.y;
		_this4.z = v3.z;
		_this4.w = v3.w;
		let _this5 = armory_trait_internal_DebugDraw.t;
		_this5.x *= b;
		_this5.y *= b;
		_this5.z *= b;
		let _this6 = armory_trait_internal_DebugDraw.v1;
		let v4 = armory_trait_internal_DebugDraw.t;
		_this6.x += v4.x;
		_this6.y += v4.y;
		_this6.z += v4.z;
		let _this7 = armory_trait_internal_DebugDraw.t;
		let v5 = armory_trait_internal_DebugDraw.vz;
		_this7.x = v5.x;
		_this7.y = v5.y;
		_this7.z = v5.z;
		_this7.w = v5.w;
		let _this8 = armory_trait_internal_DebugDraw.t;
		_this8.x *= c;
		_this8.y *= c;
		_this8.z *= c;
		let _this9 = armory_trait_internal_DebugDraw.v1;
		let v6 = armory_trait_internal_DebugDraw.t;
		_this9.x += v6.x;
		_this9.y += v6.y;
		_this9.z += v6.z;
		let _this10 = armory_trait_internal_DebugDraw.v2;
		let v7 = armory_trait_internal_DebugDraw.objPosition;
		_this10.x = v7.x;
		_this10.y = v7.y;
		_this10.z = v7.z;
		_this10.w = v7.w;
		let _this11 = armory_trait_internal_DebugDraw.t;
		let v8 = armory_trait_internal_DebugDraw.vx;
		_this11.x = v8.x;
		_this11.y = v8.y;
		_this11.z = v8.z;
		_this11.w = v8.w;
		let _this12 = armory_trait_internal_DebugDraw.t;
		_this12.x *= d;
		_this12.y *= d;
		_this12.z *= d;
		let _this13 = armory_trait_internal_DebugDraw.v2;
		let v9 = armory_trait_internal_DebugDraw.t;
		_this13.x += v9.x;
		_this13.y += v9.y;
		_this13.z += v9.z;
		let _this14 = armory_trait_internal_DebugDraw.t;
		let v10 = armory_trait_internal_DebugDraw.vy;
		_this14.x = v10.x;
		_this14.y = v10.y;
		_this14.z = v10.z;
		_this14.w = v10.w;
		let _this15 = armory_trait_internal_DebugDraw.t;
		_this15.x *= e;
		_this15.y *= e;
		_this15.z *= e;
		let _this16 = armory_trait_internal_DebugDraw.v2;
		let v11 = armory_trait_internal_DebugDraw.t;
		_this16.x += v11.x;
		_this16.y += v11.y;
		_this16.z += v11.z;
		let _this17 = armory_trait_internal_DebugDraw.t;
		let v12 = armory_trait_internal_DebugDraw.vz;
		_this17.x = v12.x;
		_this17.y = v12.y;
		_this17.z = v12.z;
		_this17.w = v12.w;
		let _this18 = armory_trait_internal_DebugDraw.t;
		_this18.x *= f;
		_this18.y *= f;
		_this18.z *= f;
		let _this19 = armory_trait_internal_DebugDraw.v2;
		let v13 = armory_trait_internal_DebugDraw.t;
		_this19.x += v13.x;
		_this19.y += v13.y;
		_this19.z += v13.z;
		let v14 = armory_trait_internal_DebugDraw.v1;
		let v21 = armory_trait_internal_DebugDraw.v2;
		this.line(v14.x,v14.y,v14.z,v21.x,v21.y,v21.z);
	}
	linev(v1,v2) {
		this.line(v1.x,v1.y,v1.z,v2.x,v2.y,v2.z);
	}
	line(x1,y1,z1,x2,y2,z2) {
		if(this.lines >= 300) {
			this.end();
			this.begin();
		}
		let _this = armory_trait_internal_DebugDraw.midPoint;
		_this.x = x1 + x2;
		_this.y = y1 + y2;
		_this.z = z1 + z2;
		_this.w = 1.0;
		let _this1 = armory_trait_internal_DebugDraw.midPoint;
		_this1.x *= 0.5;
		_this1.y *= 0.5;
		_this1.z *= 0.5;
		let _this2 = armory_trait_internal_DebugDraw.midLine;
		_this2.x = x1;
		_this2.y = y1;
		_this2.z = z1;
		_this2.w = 1.0;
		let _this3 = armory_trait_internal_DebugDraw.midLine;
		let v = armory_trait_internal_DebugDraw.midPoint;
		_this3.x -= v.x;
		_this3.y -= v.y;
		_this3.z -= v.z;
		let camera = iron_Scene.active.camera;
		let t = camera.transform;
		armory_trait_internal_DebugDraw.cameraLook = new iron_math_Vec4(t.world.self._30,t.world.self._31,t.world.self._32,1.0);
		let _this4 = armory_trait_internal_DebugDraw.cameraLook;
		let v1 = armory_trait_internal_DebugDraw.midPoint;
		_this4.x -= v1.x;
		_this4.y -= v1.y;
		_this4.z -= v1.z;
		let _this5 = armory_trait_internal_DebugDraw.cameraLook;
		let v2 = armory_trait_internal_DebugDraw.midLine;
		let ax = _this5.x;
		let ay = _this5.y;
		let az = _this5.z;
		let vx = v2.x;
		let vy = v2.y;
		let vz = v2.z;
		_this5.x = ay * vz - az * vy;
		_this5.y = az * vx - ax * vz;
		_this5.z = ax * vy - ay * vx;
		let lineWidth = _this5;
		let n = Math.sqrt(lineWidth.x * lineWidth.x + lineWidth.y * lineWidth.y + lineWidth.z * lineWidth.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			lineWidth.x *= invN;
			lineWidth.y *= invN;
			lineWidth.z *= invN;
		}
		let f = this.strength;
		lineWidth.x *= f;
		lineWidth.y *= f;
		lineWidth.z *= f;
		let _this6 = armory_trait_internal_DebugDraw.corner1;
		_this6.x = x1;
		_this6.y = y1;
		_this6.z = z1;
		_this6.w = 1.0;
		let _this7 = _this6;
		_this7.x += lineWidth.x;
		_this7.y += lineWidth.y;
		_this7.z += lineWidth.z;
		let _this8 = armory_trait_internal_DebugDraw.corner2;
		_this8.x = x1;
		_this8.y = y1;
		_this8.z = z1;
		_this8.w = 1.0;
		let _this9 = _this8;
		_this9.x -= lineWidth.x;
		_this9.y -= lineWidth.y;
		_this9.z -= lineWidth.z;
		let _this10 = armory_trait_internal_DebugDraw.corner3;
		_this10.x = x2;
		_this10.y = y2;
		_this10.z = z2;
		_this10.w = 1.0;
		let _this11 = _this10;
		_this11.x -= lineWidth.x;
		_this11.y -= lineWidth.y;
		_this11.z -= lineWidth.z;
		let _this12 = armory_trait_internal_DebugDraw.corner4;
		_this12.x = x2;
		_this12.y = y2;
		_this12.z = z2;
		_this12.w = 1.0;
		let _this13 = _this12;
		_this13.x += lineWidth.x;
		_this13.y += lineWidth.y;
		_this13.z += lineWidth.z;
		let i = this.lines * 24;
		let data_0 = armory_trait_internal_DebugDraw.corner1.x;
		let data_1 = armory_trait_internal_DebugDraw.corner1.y;
		let data_2 = armory_trait_internal_DebugDraw.corner1.z;
		let data_3 = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		let data_4 = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		let data_5 = (this.color & 255) * 0.00392156862745098;
		let v3 = data_0;
		this.vbData.setFloat32(i * 4,v3,true);
		let v4 = data_1;
		this.vbData.setFloat32((i + 1) * 4,v4,true);
		let v5 = data_2;
		this.vbData.setFloat32((i + 2) * 4,v5,true);
		let v6 = data_3;
		this.vbData.setFloat32((i + 3) * 4,v6,true);
		let v7 = data_4;
		this.vbData.setFloat32((i + 4) * 4,v7,true);
		let v8 = data_5;
		this.vbData.setFloat32((i + 5) * 4,v8,true);
		i += 6;
		let data_01 = armory_trait_internal_DebugDraw.corner2.x;
		let data_11 = armory_trait_internal_DebugDraw.corner2.y;
		let data_21 = armory_trait_internal_DebugDraw.corner2.z;
		let data_31 = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		let data_41 = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		let data_51 = (this.color & 255) * 0.00392156862745098;
		let v9 = data_01;
		this.vbData.setFloat32(i * 4,v9,true);
		let v10 = data_11;
		this.vbData.setFloat32((i + 1) * 4,v10,true);
		let v11 = data_21;
		this.vbData.setFloat32((i + 2) * 4,v11,true);
		let v12 = data_31;
		this.vbData.setFloat32((i + 3) * 4,v12,true);
		let v13 = data_41;
		this.vbData.setFloat32((i + 4) * 4,v13,true);
		let v14 = data_51;
		this.vbData.setFloat32((i + 5) * 4,v14,true);
		i += 6;
		let data_02 = armory_trait_internal_DebugDraw.corner3.x;
		let data_12 = armory_trait_internal_DebugDraw.corner3.y;
		let data_22 = armory_trait_internal_DebugDraw.corner3.z;
		let data_32 = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		let data_42 = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		let data_52 = (this.color & 255) * 0.00392156862745098;
		let v15 = data_02;
		this.vbData.setFloat32(i * 4,v15,true);
		let v16 = data_12;
		this.vbData.setFloat32((i + 1) * 4,v16,true);
		let v17 = data_22;
		this.vbData.setFloat32((i + 2) * 4,v17,true);
		let v18 = data_32;
		this.vbData.setFloat32((i + 3) * 4,v18,true);
		let v19 = data_42;
		this.vbData.setFloat32((i + 4) * 4,v19,true);
		let v20 = data_52;
		this.vbData.setFloat32((i + 5) * 4,v20,true);
		i += 6;
		let data_03 = armory_trait_internal_DebugDraw.corner4.x;
		let data_13 = armory_trait_internal_DebugDraw.corner4.y;
		let data_23 = armory_trait_internal_DebugDraw.corner4.z;
		let data_33 = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		let data_43 = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		let data_53 = (this.color & 255) * 0.00392156862745098;
		let v21 = data_03;
		this.vbData.setFloat32(i * 4,v21,true);
		let v22 = data_13;
		this.vbData.setFloat32((i + 1) * 4,v22,true);
		let v23 = data_23;
		this.vbData.setFloat32((i + 2) * 4,v23,true);
		let v24 = data_33;
		this.vbData.setFloat32((i + 3) * 4,v24,true);
		let v25 = data_43;
		this.vbData.setFloat32((i + 4) * 4,v25,true);
		let v26 = data_53;
		this.vbData.setFloat32((i + 5) * 4,v26,true);
		i = this.lines * 6;
		let this1 = this.ibData;
		this1.setUint32(i * 4,this.lines * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp = i * 4;
		let this2 = this.ibData;
		let k = i + 1;
		this2.setUint32(k * 4,this.lines * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp1 = k * 4;
		let this3 = this.ibData;
		let k1 = i + 2;
		this3.setUint32(k1 * 4,this.lines * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp2 = k1 * 4;
		let this4 = this.ibData;
		let k2 = i + 3;
		this4.setUint32(k2 * 4,this.lines * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp3 = k2 * 4;
		let this5 = this.ibData;
		let k3 = i + 4;
		this5.setUint32(k3 * 4,this.lines * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp4 = k3 * 4;
		let this6 = this.ibData;
		let k4 = i + 5;
		this6.setUint32(k4 * 4,this.lines * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let tmp5 = k4 * 4;
		this.lines++;
	}
	begin() {
		this.lines = 0;
		this.vbData = this.vertexBuffer.lock();
		this.ibData = this.indexBuffer.lock();
	}
	end() {
		this.vertexBuffer.unlock();
		this.indexBuffer.unlock();
		armory_trait_internal_DebugDraw.g.setVertexBuffer(this.vertexBuffer);
		armory_trait_internal_DebugDraw.g.setIndexBuffer(this.indexBuffer);
		armory_trait_internal_DebugDraw.g.setPipeline(this.pipeline);
		let camera = iron_Scene.active.camera;
		let _this = this.vp;
		let m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		let _this1 = this.vp;
		let m1 = camera.P;
		let a00 = _this1.self._00;
		let a01 = _this1.self._01;
		let a02 = _this1.self._02;
		let a03 = _this1.self._03;
		let a10 = _this1.self._10;
		let a11 = _this1.self._11;
		let a12 = _this1.self._12;
		let a13 = _this1.self._13;
		let a20 = _this1.self._20;
		let a21 = _this1.self._21;
		let a22 = _this1.self._22;
		let a23 = _this1.self._23;
		let a30 = _this1.self._30;
		let a31 = _this1.self._31;
		let a32 = _this1.self._32;
		let a33 = _this1.self._33;
		let b0 = m1.self._00;
		let b1 = m1.self._10;
		let b2 = m1.self._20;
		let b3 = m1.self._30;
		_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		armory_trait_internal_DebugDraw.g.setMatrix(this.vpID,this.vp.self);
		armory_trait_internal_DebugDraw.g.drawIndexedVertices(0,this.lines * 6);
	}
	addVbData(i,data) {
		let v = data[0];
		this.vbData.setFloat32(i * 4,v,true);
		let v1 = data[1];
		this.vbData.setFloat32((i + 1) * 4,v1,true);
		let v2 = data[2];
		this.vbData.setFloat32((i + 2) * 4,v2,true);
		let v3 = data[3];
		this.vbData.setFloat32((i + 3) * 4,v3,true);
		let v4 = data[4];
		this.vbData.setFloat32((i + 4) * 4,v4,true);
		let v5 = data[5];
		this.vbData.setFloat32((i + 5) * 4,v5,true);
	}
	static notifyOnRender(f) {
		if(armory_trait_internal_DebugDraw.inst == null) {
			armory_trait_internal_DebugDraw.inst = new armory_trait_internal_DebugDraw();
		}
		iron_RenderPath.notifyOnContext("mesh",function(g4,i,len) {
			armory_trait_internal_DebugDraw.g = g4;
			if(i == 0) {
				armory_trait_internal_DebugDraw.inst.begin();
			}
			f(armory_trait_internal_DebugDraw.inst);
			if(i == len - 1) {
				armory_trait_internal_DebugDraw.inst.end();
			}
		});
	}
}
$hxClasses["armory.trait.internal.DebugDraw"] = armory_trait_internal_DebugDraw;
armory_trait_internal_DebugDraw.__name__ = "armory.trait.internal.DebugDraw";
Object.assign(armory_trait_internal_DebugDraw.prototype, {
	__class__: armory_trait_internal_DebugDraw
	,color: null
	,strength: null
	,vertexBuffer: null
	,indexBuffer: null
	,pipeline: null
	,vp: null
	,vpID: null
	,vbData: null
	,ibData: null
	,lines: null
});
class armory_trait_internal_UniformsManager extends iron_Trait {
	constructor() {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.uniformExists = false;
		super._hx_constructor();
		this.notifyOnAdd($bind(this,this.init));
		this.notifyOnRemove($bind(this,this.removeObject));
		if(!armory_trait_internal_UniformsManager.sceneRemoveInitalized) {
			iron_Scene.active.notifyOnRemove(armory_trait_internal_UniformsManager.removeScene);
		}
	}
	init() {
		if(((this.object) instanceof iron_object_MeshObject)) {
			let materials = (js_Boot.__cast(this.object , iron_object_MeshObject)).materials;
			let _g = 0;
			while(_g < materials.length) {
				let material = materials[_g];
				++_g;
				let exists = armory_trait_internal_UniformsManager.registerShaderUniforms(material);
				if(exists) {
					this.uniformExists = true;
				}
			}
		}
	}
	removeObject() {
		armory_trait_internal_UniformsManager.removeObjectFromAllMaps(this.object);
	}
	static removeScene() {
		armory_trait_internal_UniformsManager.removeObjectFromAllMaps(iron_Scene.active.root);
	}
	static register(type) {
		switch(type) {
		case 0:
			if(!armory_trait_internal_UniformsManager.floatsRegistered) {
				armory_trait_internal_UniformsManager.floatsRegistered = true;
				iron_object_Uniforms.externalFloatLinks.push(armory_trait_internal_UniformsManager.floatLink);
			}
			break;
		case 1:
			if(!armory_trait_internal_UniformsManager.vectorsRegistered) {
				armory_trait_internal_UniformsManager.vectorsRegistered = true;
				iron_object_Uniforms.externalVec3Links.push(armory_trait_internal_UniformsManager.vec3Link);
			}
			break;
		case 2:
			if(!armory_trait_internal_UniformsManager.texturesRegistered) {
				armory_trait_internal_UniformsManager.texturesRegistered = true;
				iron_object_Uniforms.externalTextureLinks.push(armory_trait_internal_UniformsManager.textureLink);
			}
			break;
		}
	}
	static registerShaderUniforms(material) {
		let uniformExist = false;
		if(armory_trait_internal_UniformsManager.floatsMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
			armory_trait_internal_UniformsManager.floatsMap.set(iron_Scene.active.root,null);
		}
		if(armory_trait_internal_UniformsManager.vectorsMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
			armory_trait_internal_UniformsManager.vectorsMap.set(iron_Scene.active.root,null);
		}
		if(armory_trait_internal_UniformsManager.texturesMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
			armory_trait_internal_UniformsManager.texturesMap.set(iron_Scene.active.root,null);
		}
		let _g = 0;
		let _g1 = material.shader.raw.contexts;
		while(_g < _g1.length) {
			let context = _g1[_g];
			++_g;
			let _g2 = 0;
			let _g3 = context.constants;
			while(_g2 < _g3.length) {
				let constant = _g3[_g2];
				++_g2;
				if(constant.is_arm_parameter) {
					uniformExist = true;
					let object = iron_Scene.active.root;
					switch(constant.type) {
					case "float":
						let link = constant.link;
						let value = constant.float;
						armory_trait_internal_UniformsManager.setFloatValue(material,object,link,value);
						armory_trait_internal_UniformsManager.register(0);
						break;
					case "vec3":
						let vec = new iron_math_Vec4();
						vec.x = constant.vec3.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
						vec.y = constant.vec3.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
						vec.z = constant.vec3.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
						armory_trait_internal_UniformsManager.setVec3Value(material,object,constant.link,vec);
						armory_trait_internal_UniformsManager.register(1);
						break;
					}
				}
			}
			let _g4 = 0;
			let _g5 = context.texture_units;
			while(_g4 < _g5.length) {
				let texture = _g5[_g4];
				++_g4;
				if(texture.is_arm_parameter) {
					uniformExist = true;
					let object = iron_Scene.active.root;
					if(texture.default_image_file == null) {
						armory_trait_internal_UniformsManager.setTextureValue(material,object,texture.link,null);
					} else {
						iron_data_Data.getImage(texture.default_image_file,function(image) {
							armory_trait_internal_UniformsManager.setTextureValue(material,object,texture.link,image);
						});
					}
					armory_trait_internal_UniformsManager.register(2);
				}
			}
		}
		return uniformExist;
	}
	static setFloatValue(material,object,link,value) {
		if(object == null || material == null || link == null) {
			return;
		}
		let map = armory_trait_internal_UniformsManager.floatsMap;
		let matMap = map.h[object.__id__];
		if(matMap == null) {
			matMap = new haxe_ds_ObjectMap();
			map.set(object,matMap);
		}
		let entry = matMap.h[material.__id__];
		if(entry == null) {
			entry = new haxe_ds_StringMap();
			matMap.set(material,entry);
		}
		entry.h[link] = value;
	}
	static setVec3Value(material,object,link,value) {
		if(object == null || material == null || link == null) {
			return;
		}
		let map = armory_trait_internal_UniformsManager.vectorsMap;
		let matMap = map.h[object.__id__];
		if(matMap == null) {
			matMap = new haxe_ds_ObjectMap();
			map.set(object,matMap);
		}
		let entry = matMap.h[material.__id__];
		if(entry == null) {
			entry = new haxe_ds_StringMap();
			matMap.set(material,entry);
		}
		entry.h[link] = value;
	}
	static setTextureValue(material,object,link,value) {
		if(object == null || material == null || link == null) {
			return;
		}
		let map = armory_trait_internal_UniformsManager.texturesMap;
		let matMap = map.h[object.__id__];
		if(matMap == null) {
			matMap = new haxe_ds_ObjectMap();
			map.set(object,matMap);
		}
		let entry = matMap.h[material.__id__];
		if(entry == null) {
			entry = new haxe_ds_StringMap();
			matMap.set(material,entry);
		}
		entry.h[link] = value;
	}
	static floatLink(object,mat,link) {
		if(object == null || mat == null) {
			return null;
		}
		let res = armory_trait_internal_UniformsManager.getObjectFloatLink(object,mat,link);
		if(res == null) {
			res = armory_trait_internal_UniformsManager.getObjectFloatLink(iron_Scene.active.root,mat,link);
		}
		return res;
	}
	static getObjectFloatLink(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.floatsMap.h[object.__id__];
		if(material == null) {
			return null;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return null;
		}
		return entry.h[link];
	}
	static vec3Link(object,mat,link) {
		if(object == null || mat == null) {
			return null;
		}
		let res = armory_trait_internal_UniformsManager.getObjectVec3Link(object,mat,link);
		if(res == null) {
			res = armory_trait_internal_UniformsManager.getObjectVec3Link(iron_Scene.active.root,mat,link);
		}
		return res;
	}
	static getObjectVec3Link(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.vectorsMap.h[object.__id__];
		if(material == null) {
			return null;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return null;
		}
		return entry.h[link];
	}
	static textureLink(object,mat,link) {
		if(object == null || mat == null) {
			return null;
		}
		let res = armory_trait_internal_UniformsManager.getObjectTextureLink(object,mat,link);
		if(res == null) {
			res = armory_trait_internal_UniformsManager.getObjectTextureLink(iron_Scene.active.root,mat,link);
		}
		return res;
	}
	static getObjectTextureLink(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.texturesMap.h[object.__id__];
		if(material == null) {
			return null;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return null;
		}
		return entry.h[link];
	}
	static getFloatsMap() {
		return armory_trait_internal_UniformsManager.floatsMap;
	}
	static getVectorsMap() {
		return armory_trait_internal_UniformsManager.vectorsMap;
	}
	static getTexturesMap() {
		return armory_trait_internal_UniformsManager.texturesMap;
	}
	static removeObjectFromAllMaps(object) {
		armory_trait_internal_UniformsManager.floatsMap.remove(object);
		armory_trait_internal_UniformsManager.vectorsMap.remove(object);
		armory_trait_internal_UniformsManager.texturesMap.remove(object);
	}
	static removeObjectFromMap(object,type) {
		switch(type) {
		case 0:
			armory_trait_internal_UniformsManager.floatsMap.remove(object);
			break;
		case 1:
			armory_trait_internal_UniformsManager.vectorsMap.remove(object);
			break;
		case 2:
			armory_trait_internal_UniformsManager.texturesMap.remove(object);
			break;
		}
	}
	static removeFloatValue(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.floatsMap.h[object.__id__];
		if(material == null) {
			return;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
			delete(entry.h[link]);
		}
		let h = entry.h;
		let inlStringMapKeyIterator_h = h;
		let inlStringMapKeyIterator_keys = Object.keys(h);
		let inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		let inlStringMapKeyIterator_current = 0;
		if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
			material.remove(mat);
		}
		if(!material.keys().hasNext()) {
			armory_trait_internal_UniformsManager.floatsMap.remove(object);
		}
	}
	static removeVectorValue(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.vectorsMap.h[object.__id__];
		if(material == null) {
			return;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
			delete(entry.h[link]);
		}
		let h = entry.h;
		let inlStringMapKeyIterator_h = h;
		let inlStringMapKeyIterator_keys = Object.keys(h);
		let inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		let inlStringMapKeyIterator_current = 0;
		if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
			material.remove(mat);
		}
		if(!material.keys().hasNext()) {
			armory_trait_internal_UniformsManager.vectorsMap.remove(object);
		}
	}
	static removeTextureValue(object,mat,link) {
		let material = armory_trait_internal_UniformsManager.texturesMap.h[object.__id__];
		if(material == null) {
			return;
		}
		let entry = material.h[mat.__id__];
		if(entry == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
			delete(entry.h[link]);
		}
		let h = entry.h;
		let inlStringMapKeyIterator_h = h;
		let inlStringMapKeyIterator_keys = Object.keys(h);
		let inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
		let inlStringMapKeyIterator_current = 0;
		if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
			material.remove(mat);
		}
		if(!material.keys().hasNext()) {
			armory_trait_internal_UniformsManager.texturesMap.remove(object);
		}
	}
}
$hxClasses["armory.trait.internal.UniformsManager"] = armory_trait_internal_UniformsManager;
armory_trait_internal_UniformsManager.__name__ = "armory.trait.internal.UniformsManager";
armory_trait_internal_UniformsManager.__super__ = iron_Trait;
Object.assign(armory_trait_internal_UniformsManager.prototype, {
	__class__: armory_trait_internal_UniformsManager
	,uniformExists: null
});
class armory_trait_physics_bullet_PhysicsConstraint extends iron_Trait {
	constructor(body1,body2,type,disableCollisions,breakingThreshold,limits) {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor(body1,body2,type,disableCollisions,breakingThreshold,limits);
	}
	_hx_constructor(body1,body2,type,disableCollisions,breakingThreshold,limits) {
		this.con = null;
		this.id = 0;
		super._hx_constructor();
		if(armory_trait_physics_bullet_PhysicsConstraint.nullvec) {
			armory_trait_physics_bullet_PhysicsConstraint.nullvec = false;
			armory_trait_physics_bullet_PhysicsConstraint.vec1 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_PhysicsConstraint.vec2 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_PhysicsConstraint.vec3 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_PhysicsConstraint.trans1 = new Ammo.btTransform();
			armory_trait_physics_bullet_PhysicsConstraint.trans2 = new Ammo.btTransform();
		}
		this.body1 = body1;
		this.body2 = body2;
		this.type = type;
		this.disableCollisions = disableCollisions;
		this.breakingThreshold = breakingThreshold;
		if(limits == null) {
			let _g = [];
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			_g.push(0);
			limits = _g;
		}
		this.limits = limits;
		this.notifyOnInit($bind(this,this.init));
	}
	init() {
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		let target1 = this.body1;
		let target2 = this.body2;
		if(target1 == null || target2 == null) {
			return;
		}
		let rb1 = target1.getTrait(armory_trait_physics_bullet_RigidBody);
		let rb2 = target2.getTrait(armory_trait_physics_bullet_RigidBody);
		if(rb1 != null && rb1.ready && rb2 != null && rb2.ready) {
			let t = this.object.transform;
			let t1 = target1.transform;
			let t2 = target2.transform;
			let _this = t.world;
			let frameT = new iron_math_Mat4(_this.self._00,_this.self._10,_this.self._20,_this.self._30,_this.self._01,_this.self._11,_this.self._21,_this.self._31,_this.self._02,_this.self._12,_this.self._22,_this.self._32,_this.self._03,_this.self._13,_this.self._23,_this.self._33);
			let _this1 = t1.world;
			let frameInA = new iron_math_Mat4(_this1.self._00,_this1.self._10,_this1.self._20,_this1.self._30,_this1.self._01,_this1.self._11,_this1.self._21,_this1.self._31,_this1.self._02,_this1.self._12,_this1.self._22,_this1.self._32,_this1.self._03,_this1.self._13,_this1.self._23,_this1.self._33);
			let a00 = frameInA.self._00;
			let a01 = frameInA.self._01;
			let a02 = frameInA.self._02;
			let a03 = frameInA.self._03;
			let a10 = frameInA.self._10;
			let a11 = frameInA.self._11;
			let a12 = frameInA.self._12;
			let a13 = frameInA.self._13;
			let a20 = frameInA.self._20;
			let a21 = frameInA.self._21;
			let a22 = frameInA.self._22;
			let a23 = frameInA.self._23;
			let a30 = frameInA.self._30;
			let a31 = frameInA.self._31;
			let a32 = frameInA.self._32;
			let a33 = frameInA.self._33;
			let b00 = a00 * a11 - a01 * a10;
			let b01 = a00 * a12 - a02 * a10;
			let b02 = a00 * a13 - a03 * a10;
			let b03 = a01 * a12 - a02 * a11;
			let b04 = a01 * a13 - a03 * a11;
			let b05 = a02 * a13 - a03 * a12;
			let b06 = a20 * a31 - a21 * a30;
			let b07 = a20 * a32 - a22 * a30;
			let b08 = a20 * a33 - a23 * a30;
			let b09 = a21 * a32 - a22 * a31;
			let b10 = a21 * a33 - a23 * a31;
			let b11 = a22 * a33 - a23 * a32;
			let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				frameInA.self._00 = 1.0;
				frameInA.self._01 = 0.0;
				frameInA.self._02 = 0.0;
				frameInA.self._03 = 0.0;
				frameInA.self._10 = 0.0;
				frameInA.self._11 = 1.0;
				frameInA.self._12 = 0.0;
				frameInA.self._13 = 0.0;
				frameInA.self._20 = 0.0;
				frameInA.self._21 = 0.0;
				frameInA.self._22 = 1.0;
				frameInA.self._23 = 0.0;
				frameInA.self._30 = 0.0;
				frameInA.self._31 = 0.0;
				frameInA.self._32 = 0.0;
				frameInA.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				frameInA.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				frameInA.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				frameInA.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				frameInA.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				frameInA.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				frameInA.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				frameInA.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				frameInA.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				frameInA.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				frameInA.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				frameInA.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				frameInA.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				frameInA.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				frameInA.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				frameInA.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				frameInA.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			let a001 = frameT.self._00;
			let a011 = frameT.self._01;
			let a021 = frameT.self._02;
			let a031 = frameT.self._03;
			let a101 = frameT.self._10;
			let a111 = frameT.self._11;
			let a121 = frameT.self._12;
			let a131 = frameT.self._13;
			let a201 = frameT.self._20;
			let a211 = frameT.self._21;
			let a221 = frameT.self._22;
			let a231 = frameT.self._23;
			let a301 = frameT.self._30;
			let a311 = frameT.self._31;
			let a321 = frameT.self._32;
			let a331 = frameT.self._33;
			let b0 = frameInA.self._00;
			let b1 = frameInA.self._10;
			let b2 = frameInA.self._20;
			let b3 = frameInA.self._30;
			frameT.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			frameT.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			frameT.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			frameT.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = frameInA.self._01;
			b1 = frameInA.self._11;
			b2 = frameInA.self._21;
			b3 = frameInA.self._31;
			frameT.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			frameT.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			frameT.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			frameT.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = frameInA.self._02;
			b1 = frameInA.self._12;
			b2 = frameInA.self._22;
			b3 = frameInA.self._32;
			frameT.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			frameT.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			frameT.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			frameT.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = frameInA.self._03;
			b1 = frameInA.self._13;
			b2 = frameInA.self._23;
			b3 = frameInA.self._33;
			frameT.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			frameT.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			frameT.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			frameT.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			frameInA = new iron_math_Mat4(frameT.self._00,frameT.self._10,frameT.self._20,frameT.self._30,frameT.self._01,frameT.self._11,frameT.self._21,frameT.self._31,frameT.self._02,frameT.self._12,frameT.self._22,frameT.self._32,frameT.self._03,frameT.self._13,frameT.self._23,frameT.self._33);
			let _this2 = t.world;
			frameT = new iron_math_Mat4(_this2.self._00,_this2.self._10,_this2.self._20,_this2.self._30,_this2.self._01,_this2.self._11,_this2.self._21,_this2.self._31,_this2.self._02,_this2.self._12,_this2.self._22,_this2.self._32,_this2.self._03,_this2.self._13,_this2.self._23,_this2.self._33);
			let _this3 = t2.world;
			let frameInB = new iron_math_Mat4(_this3.self._00,_this3.self._10,_this3.self._20,_this3.self._30,_this3.self._01,_this3.self._11,_this3.self._21,_this3.self._31,_this3.self._02,_this3.self._12,_this3.self._22,_this3.self._32,_this3.self._03,_this3.self._13,_this3.self._23,_this3.self._33);
			let a002 = frameInB.self._00;
			let a012 = frameInB.self._01;
			let a022 = frameInB.self._02;
			let a032 = frameInB.self._03;
			let a102 = frameInB.self._10;
			let a112 = frameInB.self._11;
			let a122 = frameInB.self._12;
			let a132 = frameInB.self._13;
			let a202 = frameInB.self._20;
			let a212 = frameInB.self._21;
			let a222 = frameInB.self._22;
			let a232 = frameInB.self._23;
			let a302 = frameInB.self._30;
			let a312 = frameInB.self._31;
			let a322 = frameInB.self._32;
			let a332 = frameInB.self._33;
			let b001 = a002 * a112 - a012 * a102;
			let b011 = a002 * a122 - a022 * a102;
			let b021 = a002 * a132 - a032 * a102;
			let b031 = a012 * a122 - a022 * a112;
			let b041 = a012 * a132 - a032 * a112;
			let b051 = a022 * a132 - a032 * a122;
			let b061 = a202 * a312 - a212 * a302;
			let b071 = a202 * a322 - a222 * a302;
			let b081 = a202 * a332 - a232 * a302;
			let b091 = a212 * a322 - a222 * a312;
			let b101 = a212 * a332 - a232 * a312;
			let b111 = a222 * a332 - a232 * a322;
			let det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
			if(det1 == 0.0) {
				frameInB.self._00 = 1.0;
				frameInB.self._01 = 0.0;
				frameInB.self._02 = 0.0;
				frameInB.self._03 = 0.0;
				frameInB.self._10 = 0.0;
				frameInB.self._11 = 1.0;
				frameInB.self._12 = 0.0;
				frameInB.self._13 = 0.0;
				frameInB.self._20 = 0.0;
				frameInB.self._21 = 0.0;
				frameInB.self._22 = 1.0;
				frameInB.self._23 = 0.0;
				frameInB.self._30 = 0.0;
				frameInB.self._31 = 0.0;
				frameInB.self._32 = 0.0;
				frameInB.self._33 = 1.0;
			} else {
				det1 = 1.0 / det1;
				frameInB.self._00 = (a112 * b111 - a122 * b101 + a132 * b091) * det1;
				frameInB.self._01 = (a022 * b101 - a012 * b111 - a032 * b091) * det1;
				frameInB.self._02 = (a312 * b051 - a322 * b041 + a332 * b031) * det1;
				frameInB.self._03 = (a222 * b041 - a212 * b051 - a232 * b031) * det1;
				frameInB.self._10 = (a122 * b081 - a102 * b111 - a132 * b071) * det1;
				frameInB.self._11 = (a002 * b111 - a022 * b081 + a032 * b071) * det1;
				frameInB.self._12 = (a322 * b021 - a302 * b051 - a332 * b011) * det1;
				frameInB.self._13 = (a202 * b051 - a222 * b021 + a232 * b011) * det1;
				frameInB.self._20 = (a102 * b101 - a112 * b081 + a132 * b061) * det1;
				frameInB.self._21 = (a012 * b081 - a002 * b101 - a032 * b061) * det1;
				frameInB.self._22 = (a302 * b041 - a312 * b021 + a332 * b001) * det1;
				frameInB.self._23 = (a212 * b021 - a202 * b041 - a232 * b001) * det1;
				frameInB.self._30 = (a112 * b071 - a102 * b091 - a122 * b061) * det1;
				frameInB.self._31 = (a002 * b091 - a012 * b071 + a022 * b061) * det1;
				frameInB.self._32 = (a312 * b011 - a302 * b031 - a322 * b001) * det1;
				frameInB.self._33 = (a202 * b031 - a212 * b011 + a222 * b001) * det1;
			}
			let a003 = frameT.self._00;
			let a013 = frameT.self._01;
			let a023 = frameT.self._02;
			let a033 = frameT.self._03;
			let a103 = frameT.self._10;
			let a113 = frameT.self._11;
			let a123 = frameT.self._12;
			let a133 = frameT.self._13;
			let a203 = frameT.self._20;
			let a213 = frameT.self._21;
			let a223 = frameT.self._22;
			let a233 = frameT.self._23;
			let a303 = frameT.self._30;
			let a313 = frameT.self._31;
			let a323 = frameT.self._32;
			let a333 = frameT.self._33;
			let b010 = frameInB.self._00;
			let b12 = frameInB.self._10;
			let b21 = frameInB.self._20;
			let b31 = frameInB.self._30;
			frameT.self._00 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
			frameT.self._10 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
			frameT.self._20 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
			frameT.self._30 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
			b010 = frameInB.self._01;
			b12 = frameInB.self._11;
			b21 = frameInB.self._21;
			b31 = frameInB.self._31;
			frameT.self._01 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
			frameT.self._11 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
			frameT.self._21 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
			frameT.self._31 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
			b010 = frameInB.self._02;
			b12 = frameInB.self._12;
			b21 = frameInB.self._22;
			b31 = frameInB.self._32;
			frameT.self._02 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
			frameT.self._12 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
			frameT.self._22 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
			frameT.self._32 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
			b010 = frameInB.self._03;
			b12 = frameInB.self._13;
			b21 = frameInB.self._23;
			b31 = frameInB.self._33;
			frameT.self._03 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
			frameT.self._13 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
			frameT.self._23 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
			frameT.self._33 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
			frameInB = new iron_math_Mat4(frameT.self._00,frameT.self._10,frameT.self._20,frameT.self._30,frameT.self._01,frameT.self._11,frameT.self._21,frameT.self._31,frameT.self._02,frameT.self._12,frameT.self._22,frameT.self._32,frameT.self._03,frameT.self._13,frameT.self._23,frameT.self._33);
			let loc_x = 0.0;
			let loc_y = 0.0;
			let loc_z = 0.0;
			let loc_w = 1.0;
			let rot_x = 0.0;
			let rot_y = 0.0;
			let rot_z = 0.0;
			let rot_w = 1.0;
			let scl_x = 0.0;
			let scl_y = 0.0;
			let scl_z = 0.0;
			let scl_w = 1.0;
			loc_x = frameInA.self._30;
			loc_y = frameInA.self._31;
			loc_z = frameInA.self._32;
			let _this4 = iron_math_Mat4.helpVec;
			_this4.x = frameInA.self._00;
			_this4.y = frameInA.self._01;
			_this4.z = frameInA.self._02;
			_this4.w = 1.0;
			let _this5 = _this4;
			scl_x = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
			let _this6 = iron_math_Mat4.helpVec;
			_this6.x = frameInA.self._10;
			_this6.y = frameInA.self._11;
			_this6.z = frameInA.self._12;
			_this6.w = 1.0;
			let _this7 = _this6;
			scl_y = Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z);
			let _this8 = iron_math_Mat4.helpVec;
			_this8.x = frameInA.self._20;
			_this8.y = frameInA.self._21;
			_this8.z = frameInA.self._22;
			_this8.w = 1.0;
			let _this9 = _this8;
			scl_z = Math.sqrt(_this9.x * _this9.x + _this9.y * _this9.y + _this9.z * _this9.z);
			let _this10 = frameInA.self;
			let m3 = _this10._12;
			let m4 = _this10._22;
			let m5 = _this10._32;
			let m6 = _this10._13;
			let m7 = _this10._23;
			let m8 = _this10._33;
			let c00 = _this10._11 * (m4 * m8 - m5 * m7) - _this10._21 * (m3 * m8 - m5 * m6) + _this10._31 * (m3 * m7 - m4 * m6);
			let m31 = _this10._12;
			let m41 = _this10._22;
			let m51 = _this10._32;
			let m61 = _this10._13;
			let m71 = _this10._23;
			let m81 = _this10._33;
			let c01 = _this10._10 * (m41 * m81 - m51 * m71) - _this10._20 * (m31 * m81 - m51 * m61) + _this10._30 * (m31 * m71 - m41 * m61);
			let m32 = _this10._11;
			let m42 = _this10._21;
			let m52 = _this10._31;
			let m62 = _this10._13;
			let m72 = _this10._23;
			let m82 = _this10._33;
			let c02 = _this10._10 * (m42 * m82 - m52 * m72) - _this10._20 * (m32 * m82 - m52 * m62) + _this10._30 * (m32 * m72 - m42 * m62);
			let m33 = _this10._11;
			let m43 = _this10._21;
			let m53 = _this10._31;
			let m63 = _this10._12;
			let m73 = _this10._22;
			let m83 = _this10._32;
			let c03 = _this10._10 * (m43 * m83 - m53 * m73) - _this10._20 * (m33 * m83 - m53 * m63) + _this10._30 * (m33 * m73 - m43 * m63);
			if(_this10._00 * c00 - _this10._01 * c01 + _this10._02 * c02 - _this10._03 * c03 < 0.0) {
				scl_x = -scl_x;
			}
			let invs = 1.0 / scl_x;
			iron_math_Mat4.helpMat.self._00 = frameInA.self._00 * invs;
			iron_math_Mat4.helpMat.self._01 = frameInA.self._01 * invs;
			iron_math_Mat4.helpMat.self._02 = frameInA.self._02 * invs;
			invs = 1.0 / scl_y;
			iron_math_Mat4.helpMat.self._10 = frameInA.self._10 * invs;
			iron_math_Mat4.helpMat.self._11 = frameInA.self._11 * invs;
			iron_math_Mat4.helpMat.self._12 = frameInA.self._12 * invs;
			invs = 1.0 / scl_z;
			iron_math_Mat4.helpMat.self._20 = frameInA.self._20 * invs;
			iron_math_Mat4.helpMat.self._21 = frameInA.self._21 * invs;
			iron_math_Mat4.helpMat.self._22 = frameInA.self._22 * invs;
			let m = iron_math_Mat4.helpMat;
			let m11 = m.self._00;
			let m12 = m.self._10;
			let m13 = m.self._20;
			let m21 = m.self._01;
			let m22 = m.self._11;
			let m23 = m.self._21;
			let m311 = m.self._02;
			let m321 = m.self._12;
			let m331 = m.self._22;
			let tr = m11 + m22 + m331;
			let s = 0.0;
			if(tr > 0) {
				s = 0.5 / Math.sqrt(tr + 1.0);
				rot_w = 0.25 / s;
				rot_x = (m321 - m23) * s;
				rot_y = (m13 - m311) * s;
				rot_z = (m21 - m12) * s;
			} else if(m11 > m22 && m11 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
				rot_w = (m321 - m23) / s;
				rot_x = 0.25 * s;
				rot_y = (m12 + m21) / s;
				rot_z = (m13 + m311) / s;
			} else if(m22 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
				rot_w = (m13 - m311) / s;
				rot_x = (m12 + m21) / s;
				rot_y = 0.25 * s;
				rot_z = (m23 + m321) / s;
			} else {
				s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
				rot_w = (m21 - m12) / s;
				rot_x = (m13 + m311) / s;
				rot_y = (m23 + m321) / s;
				rot_z = 0.25 * s;
			}
			armory_trait_physics_bullet_PhysicsConstraint.trans1.setIdentity();
			armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(loc_x);
			armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(loc_y);
			armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(loc_z);
			armory_trait_physics_bullet_PhysicsConstraint.trans1.setOrigin(armory_trait_physics_bullet_PhysicsConstraint.vec1);
			armory_trait_physics_bullet_PhysicsConstraint.trans1.setRotation(new Ammo.btQuaternion(rot_x,rot_y,rot_z,rot_w));
			loc_x = frameInB.self._30;
			loc_y = frameInB.self._31;
			loc_z = frameInB.self._32;
			let _this11 = iron_math_Mat4.helpVec;
			_this11.x = frameInB.self._00;
			_this11.y = frameInB.self._01;
			_this11.z = frameInB.self._02;
			_this11.w = 1.0;
			let _this12 = _this11;
			scl_x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
			let _this13 = iron_math_Mat4.helpVec;
			_this13.x = frameInB.self._10;
			_this13.y = frameInB.self._11;
			_this13.z = frameInB.self._12;
			_this13.w = 1.0;
			let _this14 = _this13;
			scl_y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
			let _this15 = iron_math_Mat4.helpVec;
			_this15.x = frameInB.self._20;
			_this15.y = frameInB.self._21;
			_this15.z = frameInB.self._22;
			_this15.w = 1.0;
			let _this16 = _this15;
			scl_z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
			let _this17 = frameInB.self;
			let m34 = _this17._12;
			let m44 = _this17._22;
			let m54 = _this17._32;
			let m64 = _this17._13;
			let m74 = _this17._23;
			let m84 = _this17._33;
			let c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
			let m35 = _this17._12;
			let m45 = _this17._22;
			let m55 = _this17._32;
			let m65 = _this17._13;
			let m75 = _this17._23;
			let m85 = _this17._33;
			let c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
			let m36 = _this17._11;
			let m46 = _this17._21;
			let m56 = _this17._31;
			let m66 = _this17._13;
			let m76 = _this17._23;
			let m86 = _this17._33;
			let c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
			let m37 = _this17._11;
			let m47 = _this17._21;
			let m57 = _this17._31;
			let m67 = _this17._12;
			let m77 = _this17._22;
			let m87 = _this17._32;
			let c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
			if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
				scl_x = -scl_x;
			}
			let invs1 = 1.0 / scl_x;
			iron_math_Mat4.helpMat.self._00 = frameInB.self._00 * invs1;
			iron_math_Mat4.helpMat.self._01 = frameInB.self._01 * invs1;
			iron_math_Mat4.helpMat.self._02 = frameInB.self._02 * invs1;
			invs1 = 1.0 / scl_y;
			iron_math_Mat4.helpMat.self._10 = frameInB.self._10 * invs1;
			iron_math_Mat4.helpMat.self._11 = frameInB.self._11 * invs1;
			iron_math_Mat4.helpMat.self._12 = frameInB.self._12 * invs1;
			invs1 = 1.0 / scl_z;
			iron_math_Mat4.helpMat.self._20 = frameInB.self._20 * invs1;
			iron_math_Mat4.helpMat.self._21 = frameInB.self._21 * invs1;
			iron_math_Mat4.helpMat.self._22 = frameInB.self._22 * invs1;
			let m1 = iron_math_Mat4.helpMat;
			let m111 = m1.self._00;
			let m121 = m1.self._10;
			let m131 = m1.self._20;
			let m211 = m1.self._01;
			let m221 = m1.self._11;
			let m231 = m1.self._21;
			let m312 = m1.self._02;
			let m322 = m1.self._12;
			let m332 = m1.self._22;
			let tr1 = m111 + m221 + m332;
			let s1 = 0.0;
			if(tr1 > 0) {
				s1 = 0.5 / Math.sqrt(tr1 + 1.0);
				rot_w = 0.25 / s1;
				rot_x = (m322 - m231) * s1;
				rot_y = (m131 - m312) * s1;
				rot_z = (m211 - m121) * s1;
			} else if(m111 > m221 && m111 > m332) {
				s1 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
				rot_w = (m322 - m231) / s1;
				rot_x = 0.25 * s1;
				rot_y = (m121 + m211) / s1;
				rot_z = (m131 + m312) / s1;
			} else if(m221 > m332) {
				s1 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
				rot_w = (m131 - m312) / s1;
				rot_x = (m121 + m211) / s1;
				rot_y = 0.25 * s1;
				rot_z = (m231 + m322) / s1;
			} else {
				s1 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
				rot_w = (m211 - m121) / s1;
				rot_x = (m131 + m312) / s1;
				rot_y = (m231 + m322) / s1;
				rot_z = 0.25 * s1;
			}
			armory_trait_physics_bullet_PhysicsConstraint.trans2.setIdentity();
			armory_trait_physics_bullet_PhysicsConstraint.vec2.setX(loc_x);
			armory_trait_physics_bullet_PhysicsConstraint.vec2.setY(loc_y);
			armory_trait_physics_bullet_PhysicsConstraint.vec2.setZ(loc_z);
			armory_trait_physics_bullet_PhysicsConstraint.trans2.setOrigin(armory_trait_physics_bullet_PhysicsConstraint.vec2);
			armory_trait_physics_bullet_PhysicsConstraint.trans2.setRotation(new Ammo.btQuaternion(rot_x,rot_y,rot_z,rot_w));
			if(this.type == 5 || this.type == 0) {
				let useLinearReferenceFrameB = false;
				if(useLinearReferenceFrameB == null) {
					useLinearReferenceFrameB = false;
				}
				let _r1 = rb1.body;
				let _r2 = rb2.body;
				let _fa = armory_trait_physics_bullet_PhysicsConstraint.trans1;
				let _fb = armory_trait_physics_bullet_PhysicsConstraint.trans2;
				let _b = useLinearReferenceFrameB;
				let c = new Ammo.btGeneric6DofConstraint(_r1, _r2, _fa, _fb, _b);
				if(this.type == 0) {
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(0);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(0);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(0);
					c.setLinearLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					c.setLinearUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					c.setAngularLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					c.setAngularUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				} else if(this.type == 5) {
					if(this.limits[0] == 0) {
						this.limits[1] = 1.0;
						this.limits[2] = -1.0;
					}
					if(this.limits[3] == 0) {
						this.limits[4] = 1.0;
						this.limits[5] = -1.0;
					}
					if(this.limits[6] == 0) {
						this.limits[7] = 1.0;
						this.limits[8] = -1.0;
					}
					if(this.limits[9] == 0) {
						this.limits[10] = 1.0;
						this.limits[11] = -1.0;
					}
					if(this.limits[12] == 0) {
						this.limits[13] = 1.0;
						this.limits[14] = -1.0;
					}
					if(this.limits[15] == 0) {
						this.limits[16] = 1.0;
						this.limits[17] = -1.0;
					}
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[1]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[4]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[7]);
					c.setLinearLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[2]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[5]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[8]);
					c.setLinearUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[10]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[13]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[16]);
					c.setAngularLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[11]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[14]);
					armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[17]);
					c.setAngularUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				}
				this.con = c;
			} else if(this.type == 6) {
				let c = new Ammo.btGeneric6DofSpringConstraint(rb1.body,rb2.body,armory_trait_physics_bullet_PhysicsConstraint.trans1,armory_trait_physics_bullet_PhysicsConstraint.trans2,false);
				if(this.limits[0] == 0) {
					this.limits[1] = 1.0;
					this.limits[2] = -1.0;
				}
				if(this.limits[3] == 0) {
					this.limits[4] = 1.0;
					this.limits[5] = -1.0;
				}
				if(this.limits[6] == 0) {
					this.limits[7] = 1.0;
					this.limits[8] = -1.0;
				}
				if(this.limits[9] == 0) {
					this.limits[10] = 1.0;
					this.limits[11] = -1.0;
				}
				if(this.limits[12] == 0) {
					this.limits[13] = 1.0;
					this.limits[14] = -1.0;
				}
				if(this.limits[15] == 0) {
					this.limits[16] = 1.0;
					this.limits[17] = -1.0;
				}
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[1]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[4]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[7]);
				c.setLinearLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[2]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[5]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[8]);
				c.setLinearUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[10]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[13]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[16]);
				c.setAngularLowerLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setX(this.limits[11]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setY(this.limits[14]);
				armory_trait_physics_bullet_PhysicsConstraint.vec1.setZ(this.limits[17]);
				c.setAngularUpperLimit(armory_trait_physics_bullet_PhysicsConstraint.vec1);
				if(this.limits[18] != 0) {
					c.enableSpring(0,true);
					c.setStiffness(0,this.limits[19]);
					c.setDamping(0,this.limits[20]);
				} else {
					c.enableSpring(0,false);
				}
				if(this.limits[21] != 0) {
					c.enableSpring(1,true);
					c.setStiffness(1,this.limits[22]);
					c.setDamping(1,this.limits[23]);
				} else {
					c.enableSpring(1,false);
				}
				if(this.limits[24] != 0) {
					c.enableSpring(2,true);
					c.setStiffness(2,this.limits[25]);
					c.setDamping(2,this.limits[26]);
				} else {
					c.enableSpring(2,false);
				}
				if(this.limits[27] != 0) {
					c.enableSpring(3,true);
					c.setStiffness(3,this.limits[28]);
					c.setDamping(3,this.limits[29]);
				} else {
					c.enableSpring(3,false);
				}
				if(this.limits[30] != 0) {
					c.enableSpring(4,true);
					c.setStiffness(4,this.limits[31]);
					c.setDamping(4,this.limits[32]);
				} else {
					c.enableSpring(4,false);
				}
				if(this.limits[33] != 0) {
					c.enableSpring(5,true);
					c.setStiffness(5,this.limits[34]);
					c.setDamping(5,this.limits[35]);
				} else {
					c.enableSpring(5,false);
				}
				this.con = c;
			} else if(this.type == 1) {
				let c = new Ammo.btPoint2PointConstraint(rb1.body,rb2.body,armory_trait_physics_bullet_PhysicsConstraint.vec1,armory_trait_physics_bullet_PhysicsConstraint.vec2);
				this.con = c;
			} else if(this.type == 2) {
				let axis = armory_trait_physics_bullet_PhysicsConstraint.vec3;
				let _softness = 0.9;
				let _biasFactor = 0.3;
				let _relaxationFactor = 1.0;
				let _this = t.world;
				let x = _this.self._20;
				let y = _this.self._21;
				let z = _this.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let inlVec4_x = x;
				let inlVec4_y = y;
				let inlVec4_z = z;
				let inlVec4_w = 1.0;
				axis.setX(inlVec4_x);
				let _this1 = t.world;
				let x1 = _this1.self._20;
				let y1 = _this1.self._21;
				let z1 = _this1.self._22;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let inlVec4_x1 = x1;
				let inlVec4_y1 = y1;
				let inlVec4_z1 = z1;
				let inlVec4_w1 = 1.0;
				axis.setY(inlVec4_y1);
				let _this2 = t.world;
				let x2 = _this2.self._20;
				let y2 = _this2.self._21;
				let z2 = _this2.self._22;
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let inlVec4_x2 = x2;
				let inlVec4_y2 = y2;
				let inlVec4_z2 = z2;
				let inlVec4_w2 = 1.0;
				axis.setZ(inlVec4_z2);
				let c = new Ammo.btHingeConstraint(rb1.body,rb2.body,armory_trait_physics_bullet_PhysicsConstraint.vec1,armory_trait_physics_bullet_PhysicsConstraint.vec2,axis,axis,false);
				if(this.limits[0] != 0) {
					c.setLimit(this.limits[1],this.limits[2],_softness,_biasFactor,_relaxationFactor);
				}
				this.con = c;
			} else if(this.type == 3) {
				let c = new Ammo.btSliderConstraint(rb1.body,rb2.body,armory_trait_physics_bullet_PhysicsConstraint.trans1,armory_trait_physics_bullet_PhysicsConstraint.trans2,true);
				if(this.limits[0] != 0) {
					c.setLowerLinLimit(this.limits[1]);
					c.setUpperLinLimit(this.limits[2]);
				}
				this.con = c;
			} else if(this.type == 4) {
				let c = new Ammo.btSliderConstraint(rb1.body,rb2.body,armory_trait_physics_bullet_PhysicsConstraint.trans1,armory_trait_physics_bullet_PhysicsConstraint.trans2,true);
				if(this.limits[0] != 0) {
					c.setLowerLinLimit(this.limits[1]);
					c.setUpperLinLimit(this.limits[2]);
				}
				if(this.limits[3] != 0) {
					c.setLowerAngLimit(this.limits[4]);
					c.setUpperAngLimit(this.limits[5]);
				} else {
					c.setLowerAngLimit(1);
					c.setUpperAngLimit(-1);
				}
				this.con = c;
			}
			if(this.breakingThreshold > 0) {
				this.con.setBreakingImpulseThreshold(this.breakingThreshold);
			}
			this.physics.addPhysicsConstraint(this);
			this.id = armory_trait_physics_bullet_PhysicsConstraint.nextId;
			armory_trait_physics_bullet_PhysicsConstraint.nextId++;
			this.notifyOnRemove($bind(this,this.removeFromWorld));
		} else {
			this.remove();
		}
	}
	removeFromWorld() {
		this.physics.removePhysicsConstraint(this);
	}
	setHingeConstraintLimits(angLimit,lowerAngLimit,upperAngLimit) {
		if(angLimit) {
			this.limits[0] = 1;
		} else {
			this.limits[0] = 0;
		}
		this.limits[1] = lowerAngLimit * (Math.PI / 180);
		this.limits[2] = upperAngLimit * (Math.PI / 180);
	}
	setSliderConstraintLimits(linLimit,lowerLinLimit,upperLinLimit) {
		if(linLimit) {
			this.limits[0] = 1;
		} else {
			this.limits[0] = 0;
		}
		this.limits[1] = lowerLinLimit;
		this.limits[2] = upperLinLimit;
	}
	setPistonConstraintLimits(linLimit,lowerLinLimit,upperLinLimit,angLimit,lowerAngLimit,upperAngLimit) {
		if(linLimit) {
			this.limits[0] = 1;
		} else {
			this.limits[0] = 0;
		}
		this.limits[1] = lowerLinLimit;
		this.limits[2] = upperLinLimit;
		if(angLimit) {
			this.limits[3] = 1;
		} else {
			this.limits[3] = 0;
		}
		this.limits[4] = lowerAngLimit * (Math.PI / 180);
		this.limits[5] = upperAngLimit * (Math.PI / 180);
	}
	setGenericConstraintLimits(setLimit,lowerLimit,upperLimit,axis,isAngular) {
		if(isAngular == null) {
			isAngular = false;
		}
		if(axis == null) {
			axis = 0;
		}
		if(upperLimit == null) {
			upperLimit = -1.0;
		}
		if(lowerLimit == null) {
			lowerLimit = 1.0;
		}
		if(setLimit == null) {
			setLimit = false;
		}
		let i = 0;
		let j = 0;
		let radian = Math.PI / 180;
		switch(axis) {
		case 0:
			i = 0;
			break;
		case 1:
			i = 3;
			break;
		case 2:
			i = 6;
			break;
		}
		if(isAngular) {
			j = 9;
		} else {
			j = 0;
		}
		if(isAngular) {
			radian = Math.PI / 180;
		} else {
			radian = 1;
		}
		if(setLimit) {
			this.limits[i + j] = 1;
		}
		this.limits[i + j + 1] = lowerLimit * radian;
		this.limits[i + j + 2] = upperLimit * radian;
	}
	setSpringParams(setSpring,stiffness,damping,axis,isAngular) {
		if(isAngular == null) {
			isAngular = false;
		}
		if(axis == null) {
			axis = 0;
		}
		if(damping == null) {
			damping = 0.5;
		}
		if(stiffness == null) {
			stiffness = 10.0;
		}
		if(setSpring == null) {
			setSpring = false;
		}
		let i = 0;
		let j = 0;
		switch(axis) {
		case 0:
			i = 18;
			break;
		case 1:
			i = 21;
			break;
		case 2:
			i = 24;
			break;
		}
		if(isAngular) {
			j = 9;
		} else {
			j = 0;
		}
		if(setSpring) {
			this.limits[i + j] = 1;
		}
		this.limits[i + j + 1] = stiffness;
		this.limits[i + j + 2] = damping;
	}
	delete() {
		Ammo.destroy(this.con);
	}
}
$hxClasses["armory.trait.physics.bullet.PhysicsConstraint"] = armory_trait_physics_bullet_PhysicsConstraint;
armory_trait_physics_bullet_PhysicsConstraint.__name__ = "armory.trait.physics.bullet.PhysicsConstraint";
armory_trait_physics_bullet_PhysicsConstraint.__super__ = iron_Trait;
Object.assign(armory_trait_physics_bullet_PhysicsConstraint.prototype, {
	__class__: armory_trait_physics_bullet_PhysicsConstraint
	,id: null
	,physics: null
	,body1: null
	,body2: null
	,type: null
	,disableCollisions: null
	,breakingThreshold: null
	,limits: null
	,con: null
});
class armory_trait_physics_bullet_Hit {
	constructor(rb,pos,normal) {
		this.rb = rb;
		this.pos = pos;
		this.normal = normal;
	}
}
$hxClasses["armory.trait.physics.bullet.Hit"] = armory_trait_physics_bullet_Hit;
armory_trait_physics_bullet_Hit.__name__ = "armory.trait.physics.bullet.Hit";
Object.assign(armory_trait_physics_bullet_Hit.prototype, {
	__class__: armory_trait_physics_bullet_Hit
	,rb: null
	,pos: null
	,normal: null
});
class armory_trait_physics_bullet_ConvexHit {
	constructor(pos,normal,hitFraction) {
		this.pos = pos;
		this.normal = normal;
		this.hitFraction = hitFraction;
	}
}
$hxClasses["armory.trait.physics.bullet.ConvexHit"] = armory_trait_physics_bullet_ConvexHit;
armory_trait_physics_bullet_ConvexHit.__name__ = "armory.trait.physics.bullet.ConvexHit";
Object.assign(armory_trait_physics_bullet_ConvexHit.prototype, {
	__class__: armory_trait_physics_bullet_ConvexHit
	,pos: null
	,normal: null
	,hitFraction: null
});
class armory_trait_physics_bullet_ContactPair {
	constructor(a,b) {
		this.a = a;
		this.b = b;
	}
}
$hxClasses["armory.trait.physics.bullet.ContactPair"] = armory_trait_physics_bullet_ContactPair;
armory_trait_physics_bullet_ContactPair.__name__ = "armory.trait.physics.bullet.ContactPair";
Object.assign(armory_trait_physics_bullet_ContactPair.prototype, {
	__class__: armory_trait_physics_bullet_ContactPair
	,a: null
	,b: null
	,posA: null
	,posB: null
	,normOnB: null
	,impulse: null
	,distance: null
});
class armory_trait_physics_bullet_PhysicsWorld extends iron_Trait {
	constructor(timeScale,maxSteps,solverIterations) {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor(timeScale,maxSteps,solverIterations);
	}
	_hx_constructor(timeScale,maxSteps,solverIterations) {
		if(solverIterations == null) {
			solverIterations = 10;
		}
		if(maxSteps == null) {
			maxSteps = 10;
		}
		if(timeScale == null) {
			timeScale = 1.0;
		}
		this.pairCache = false;
		this.convexHitNormalWorld = new iron_math_Vec4();
		this.convexHitPointWorld = new iron_math_Vec4();
		this.hitNormalWorld = new iron_math_Vec4();
		this.hitPointWorld = new iron_math_Vec4();
		this.solverIterations = 10;
		this.maxSteps = 1;
		this.timeScale = 1.0;
		this.preUpdates = null;
		this.gimpactRegistered = false;
		super._hx_constructor();
		if(armory_trait_physics_bullet_PhysicsWorld.nullvec) {
			armory_trait_physics_bullet_PhysicsWorld.nullvec = false;
			armory_trait_physics_bullet_PhysicsWorld.vec1 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_PhysicsWorld.vec2 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_PhysicsWorld.transform1 = new Ammo.btTransform();
			armory_trait_physics_bullet_PhysicsWorld.transform2 = new Ammo.btTransform();
			armory_trait_physics_bullet_PhysicsWorld.quat1 = new Ammo.btQuaternion(0,0,0,1.0);
		}
		if(armory_trait_physics_bullet_PhysicsWorld.active != null && !armory_trait_physics_bullet_PhysicsWorld.sceneRemoved) {
			return;
		}
		armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = false;
		this.timeScale = timeScale;
		this.maxSteps = maxSteps;
		this.solverIterations = solverIterations;
		if(armory_trait_physics_bullet_PhysicsWorld.active == null) {
			this.createPhysics();
		} else {
			this.world = armory_trait_physics_bullet_PhysicsWorld.active.world;
			this.dispatcher = armory_trait_physics_bullet_PhysicsWorld.active.dispatcher;
			this.gimpactRegistered = armory_trait_physics_bullet_PhysicsWorld.active.gimpactRegistered;
		}
		this.contacts = [];
		this.rbMap = new haxe_ds_IntMap();
		this.conMap = new haxe_ds_IntMap();
		armory_trait_physics_bullet_PhysicsWorld.active = this;
		this._lateUpdate = [$bind(this,this.lateUpdate)];
		iron_App.traitLateUpdates.splice(0,0,$bind(this,this.lateUpdate));
		iron_Scene.active.notifyOnRemove(function() {
			armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = true;
		});
	}
	reset() {
		let rb = armory_trait_physics_bullet_PhysicsWorld.active.rbMap.iterator();
		while(rb.hasNext()) {
			let rb1 = rb.next();
			this.removeRigidBody(rb1);
		}
	}
	createPhysics() {
		let broadphase = new Ammo.btDbvtBroadphase();
		let collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();
		this.dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration);
		let solver = new Ammo.btSequentialImpulseConstraintSolver();
		let g = iron_Scene.active.raw.gravity;
		let gravity = g == null ? new iron_math_Vec4(0,0,-9.81) : new iron_math_Vec4(g.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),g.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),g.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
		this.world = new Ammo.btDiscreteDynamicsWorld(this.dispatcher,broadphase,solver,collisionConfiguration);
		this.setGravity(gravity);
	}
	setGravity(v) {
		armory_trait_physics_bullet_PhysicsWorld.vec1.setValue(v.x,v.y,v.z);
		this.world.setGravity(armory_trait_physics_bullet_PhysicsWorld.vec1);
	}
	getGravity() {
		let g = this.world.getGravity();
		return new iron_math_Vec4(g.x(),g.y(),g.z());
	}
	addRigidBody(body) {
		this.world.addRigidBody(body.body,body.group,body.mask);
		this.rbMap.h[body.id] = body;
	}
	addPhysicsConstraint(constraint) {
		this.world.addConstraint(constraint.con,constraint.disableCollisions);
		this.conMap.h[constraint.id] = constraint;
	}
	removeRigidBody(body) {
		if(body.destroyed) {
			return;
		}
		body.destroyed = true;
		if(this.world != null) {
			this.world.removeRigidBody(body.body);
		}
		this.rbMap.remove(body.id);
		body.delete();
	}
	removePhysicsConstraint(constraint) {
		if(this.world != null) {
			this.world.removeConstraint(constraint.con);
		}
		this.conMap.remove(constraint.id);
		constraint.delete();
	}
	getContacts(body) {
		if(this.contacts.length == 0) {
			return null;
		}
		let res = [];
		let _g = 0;
		let _g1 = this.contacts.length;
		while(_g < _g1) {
			let i = _g++;
			let c = this.contacts[i];
			let rb = null;
			if(c.a == body.body.userIndex) {
				rb = this.rbMap.h[c.b];
			} else if(c.b == body.body.userIndex) {
				rb = this.rbMap.h[c.a];
			}
			if(rb != null && res.indexOf(rb) == -1) {
				res.push(rb);
			}
		}
		return res;
	}
	getContactPairs(body) {
		if(this.contacts.length == 0) {
			return null;
		}
		let res = [];
		let _g = 0;
		let _g1 = this.contacts.length;
		while(_g < _g1) {
			let i = _g++;
			let c = this.contacts[i];
			if(c.a == body.body.userIndex) {
				res.push(c);
			} else if(c.b == body.body.userIndex) {
				res.push(c);
			}
		}
		return res;
	}
	findBody(id) {
		let rb = this.rbMap.h[id];
		return rb;
	}
	lateUpdate() {
		let t = iron_system_Time.get_delta() * this.timeScale;
		if(t == 0.0) {
			return;
		}
		let startTime = kha_Scheduler.realTime();
		if(this.preUpdates != null) {
			let _g = 0;
			let _g1 = this.preUpdates;
			while(_g < _g1.length) {
				let f = _g1[_g];
				++_g;
				f();
			}
		}
		let fixedTime = 0.016666666666666666;
		let currMaxSteps = t < fixedTime * this.maxSteps ? this.maxSteps : 1;
		this.world.stepSimulation(t,currMaxSteps,fixedTime);
		this.updateContacts();
		let rb = this.rbMap.iterator();
		while(rb.hasNext()) {
			let rb1 = rb.next();
			rb1.physicsUpdate();
		}
		armory_trait_physics_bullet_PhysicsWorld.physTime = kha_Scheduler.realTime() - startTime;
	}
	updateContacts() {
		this.contacts.length = 0;
		let disp = this.dispatcher;
		let numManifolds = disp.getNumManifolds();
		let _g = 0;
		let _g1 = numManifolds;
		while(_g < _g1) {
			let i = _g++;
			let contactManifold = disp.getManifoldByIndexInternal(i);
			let body0 = Ammo.btRigidBody.prototype;
			let body01 = contactManifold.getBody0();
			let body02 = body0.upcast(body01);
			let body1 = Ammo.btRigidBody.prototype;
			let body11 = contactManifold.getBody1();
			let body12 = body1.upcast(body11);
			let numContacts = contactManifold.getNumContacts();
			let _g1 = 0;
			let _g2 = numContacts;
			while(_g1 < _g2) {
				let j = _g1++;
				let pt = contactManifold.getContactPoint(j);
				let posA = null;
				let posB = null;
				let nor = null;
				let cp = null;
				posA = pt.get_m_positionWorldOnA();
				posB = pt.get_m_positionWorldOnB();
				nor = pt.get_m_normalWorldOnB();
				cp = new armory_trait_physics_bullet_ContactPair(body02.userIndex,body12.userIndex);
				cp.posA = new iron_math_Vec4(posA.x(),posA.y(),posA.z());
				cp.posB = new iron_math_Vec4(posB.x(),posB.y(),posB.z());
				cp.normOnB = new iron_math_Vec4(nor.x(),nor.y(),nor.z());
				cp.impulse = pt.getAppliedImpulse();
				cp.distance = pt.getDistance();
				this.contacts.push(cp);
			}
		}
	}
	pickClosest(inputX,inputY,group,mask) {
		if(mask == null) {
			mask = -1;
		}
		if(group == null) {
			group = 1;
		}
		let camera = iron_Scene.active.camera;
		let start = new iron_math_Vec4();
		let end = new iron_math_Vec4();
		iron_math_RayCaster.getDirection(start,end,inputX,inputY,camera);
		let _this = camera.transform.world;
		let hit = this.rayCast(new iron_math_Vec4(_this.self._30,_this.self._31,_this.self._32,_this.self._33),end,group,mask);
		let rb = hit != null ? hit.rb : null;
		return rb;
	}
	rayCast(from,to,group,mask) {
		if(mask == null) {
			mask = -1;
		}
		if(group == null) {
			group = 1;
		}
		let rayFrom = armory_trait_physics_bullet_PhysicsWorld.vec1;
		let rayTo = armory_trait_physics_bullet_PhysicsWorld.vec2;
		rayFrom.setValue(from.x,from.y,from.z);
		rayTo.setValue(to.x,to.y,to.z);
		let rayCallback = new Ammo.ClosestRayResultCallback(rayFrom,rayTo);
		rayCallback.set_m_collisionFilterGroup(group);
		rayCallback.set_m_collisionFilterMask(mask);
		let worldDyn = this.world;
		let worldCol = worldDyn;
		worldCol.rayTest(rayFrom,rayTo,rayCallback);
		let rb = null;
		let hitInfo = null;
		let rc = rayCallback;
		if(rc.hasHit()) {
			let co = rayCallback.get_m_collisionObject();
			let body = Ammo.btRigidBody.prototype.upcast(co);
			let hit = rayCallback.get_m_hitPointWorld();
			let _this = this.hitPointWorld;
			let x = hit.x();
			let y = hit.y();
			let z = hit.z();
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			let norm = rayCallback.get_m_hitNormalWorld();
			let _this1 = this.hitNormalWorld;
			let x1 = norm.x();
			let y1 = norm.y();
			let z1 = norm.z();
			_this1.x = x1;
			_this1.y = y1;
			_this1.z = z1;
			_this1.w = 1.0;
			rb = this.rbMap.h[body.userIndex];
			hitInfo = new armory_trait_physics_bullet_Hit(rb,this.hitPointWorld,this.hitNormalWorld);
		}
		Ammo.destroy(rayCallback);
		return hitInfo;
	}
	convexSweepTest(rb,from,to,rotation,group,mask) {
		if(mask == null) {
			mask = -1;
		}
		if(group == null) {
			group = 1;
		}
		let transformFrom = armory_trait_physics_bullet_PhysicsWorld.transform1;
		let transformTo = armory_trait_physics_bullet_PhysicsWorld.transform2;
		transformFrom.setIdentity();
		transformTo.setIdentity();
		armory_trait_physics_bullet_PhysicsWorld.vec1.setValue(from.x,from.y,from.z);
		transformFrom.setOrigin(armory_trait_physics_bullet_PhysicsWorld.vec1);
		armory_trait_physics_bullet_PhysicsWorld.quat1.setValue(rotation.x,rotation.y,rotation.z,rotation.w);
		transformFrom.setRotation(armory_trait_physics_bullet_PhysicsWorld.quat1);
		armory_trait_physics_bullet_PhysicsWorld.vec2.setValue(to.x,to.y,to.z);
		transformTo.setOrigin(armory_trait_physics_bullet_PhysicsWorld.vec2);
		armory_trait_physics_bullet_PhysicsWorld.quat1.setValue(rotation.x,rotation.y,rotation.z,rotation.w);
		transformFrom.setRotation(armory_trait_physics_bullet_PhysicsWorld.quat1);
		let convexCallback = new Ammo.ClosestConvexResultCallback(armory_trait_physics_bullet_PhysicsWorld.vec1,armory_trait_physics_bullet_PhysicsWorld.vec2);
		convexCallback.set_m_collisionFilterGroup(group);
		convexCallback.set_m_collisionFilterMask(mask);
		let worldDyn = this.world;
		let worldCol = worldDyn;
		let bodyColl = rb.body.getCollisionShape();
		worldCol.convexSweepTest(bodyColl,transformFrom,transformTo,convexCallback,0.0);
		let hitInfo = null;
		let cc = convexCallback;
		if(cc.hasHit()) {
			let hit = convexCallback.get_m_hitPointWorld();
			let _this = this.convexHitPointWorld;
			let x = hit.x();
			let y = hit.y();
			let z = hit.z();
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			let norm = convexCallback.get_m_hitNormalWorld();
			let _this1 = this.convexHitNormalWorld;
			let x1 = norm.x();
			let y1 = norm.y();
			let z1 = norm.z();
			_this1.x = x1;
			_this1.y = y1;
			_this1.z = z1;
			_this1.w = 1.0;
			let hitFraction = convexCallback.get_m_closestHitFraction();
			hitInfo = new armory_trait_physics_bullet_ConvexHit(this.convexHitPointWorld,this.convexHitNormalWorld,hitFraction);
		}
		Ammo.destroy(convexCallback);
		return hitInfo;
	}
	notifyOnPreUpdate(f) {
		if(this.preUpdates == null) {
			this.preUpdates = [];
		}
		this.preUpdates.push(f);
	}
	removePreUpdate(f) {
		HxOverrides.remove(this.preUpdates,f);
	}
}
$hxClasses["armory.trait.physics.bullet.PhysicsWorld"] = armory_trait_physics_bullet_PhysicsWorld;
armory_trait_physics_bullet_PhysicsWorld.__name__ = "armory.trait.physics.bullet.PhysicsWorld";
armory_trait_physics_bullet_PhysicsWorld.__super__ = iron_Trait;
Object.assign(armory_trait_physics_bullet_PhysicsWorld.prototype, {
	__class__: armory_trait_physics_bullet_PhysicsWorld
	,world: null
	,dispatcher: null
	,gimpactRegistered: null
	,contacts: null
	,preUpdates: null
	,rbMap: null
	,conMap: null
	,timeScale: null
	,maxSteps: null
	,solverIterations: null
	,hitPointWorld: null
	,hitNormalWorld: null
	,convexHitPointWorld: null
	,convexHitNormalWorld: null
	,pairCache: null
});
class armory_trait_physics_bullet_RigidBody extends iron_Trait {
	constructor(shape,mass,friction,restitution,group,mask,params,flags) {
		iron_Trait._hx_skip_constructor = true;
		super();
		iron_Trait._hx_skip_constructor = false;
		this._hx_constructor(shape,mass,friction,restitution,group,mask,params,flags);
	}
	_hx_constructor(shape,mass,friction,restitution,group,mask,params,flags) {
		if(mask == null) {
			mask = 1;
		}
		if(group == null) {
			group = 1;
		}
		if(restitution == null) {
			restitution = 0.0;
		}
		if(friction == null) {
			friction = 0.5;
		}
		if(mass == null) {
			mass = 1.0;
		}
		if(shape == null) {
			shape = 0;
		}
		this.heightData = null;
		this.onContact = null;
		this.onReady = null;
		this.id = 0;
		this.ready = false;
		this.body = null;
		this.trigger = false;
		this.mask = 1;
		this.group = 1;
		this.ccd = false;
		this.destroyed = false;
		this.transform = null;
		super._hx_constructor();
		if(armory_trait_physics_bullet_RigidBody.nullvec) {
			armory_trait_physics_bullet_RigidBody.nullvec = false;
			armory_trait_physics_bullet_RigidBody.vec1 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_RigidBody.vec2 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_RigidBody.vec3 = new Ammo.btVector3(0,0,0);
			armory_trait_physics_bullet_RigidBody.quat1 = new Ammo.btQuaternion(0,0,0,0);
			armory_trait_physics_bullet_RigidBody.trans1 = new Ammo.btTransform();
			armory_trait_physics_bullet_RigidBody.trans2 = new Ammo.btTransform();
		}
		this.shape = shape;
		this.mass = mass;
		this.friction = friction;
		this.restitution = restitution;
		this.group = group;
		this.mask = mask;
		if(params == null) {
			params = { linearDamping : 0.04, angularDamping : 0.1, angularFriction : 0.1, linearFactorsX : 1.0, linearFactorsY : 1.0, linearFactorsZ : 1.0, angularFactorsX : 1.0, angularFactorsY : 1.0, angularFactorsZ : 1.0, collisionMargin : 0.0, linearDeactivationThreshold : 0.0, angularDeactivationThrshold : 0.0, deactivationTime : 0.0};
		}
		if(flags == null) {
			flags = { animated : false, trigger : false, ccd : false, staticObj : false, useDeactivation : true};
		}
		this.linearDamping = params.linearDamping;
		this.angularDamping = params.angularDamping;
		this.angularFriction = params.angularFriction;
		this.linearFactors = [params.linearFactorsX,params.linearFactorsY,params.linearFactorsZ];
		this.angularFactors = [params.angularFactorsX,params.angularFactorsY,params.angularFactorsZ];
		this.collisionMargin = params.collisionMargin;
		this.deactivationParams = [params.linearDeactivationThreshold,params.angularDeactivationThrshold,params.deactivationTime];
		this.animated = flags.animated;
		this.trigger = flags.trigger;
		this.ccd = flags.ccd;
		this.staticObj = flags.staticObj;
		this.useDeactivation = flags.useDeactivation;
		this.notifyOnAdd($bind(this,this.init));
	}
	withMargin(f) {
		return f + f * this.collisionMargin;
	}
	notifyOnReady(f) {
		this.onReady = f;
		if(this.ready) {
			this.onReady();
		}
	}
	init() {
		if(this.ready) {
			return;
		}
		this.ready = true;
		if(!((this.object) instanceof iron_object_MeshObject)) {
			return;
		}
		this.transform = this.object.transform;
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		if(this.shape == 0) {
			let f = this.transform.dim.x / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setX(f + f * this.collisionMargin);
			let f1 = this.transform.dim.y / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setY(f1 + f1 * this.collisionMargin);
			let f2 = this.transform.dim.z / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setZ(f2 + f2 * this.collisionMargin);
			this.btshape = new Ammo.btBoxShape(armory_trait_physics_bullet_RigidBody.vec1);
		} else if(this.shape == 1) {
			let f = this.transform.dim.x / 2;
			this.btshape = new Ammo.btSphereShape(f + f * this.collisionMargin);
		} else if(this.shape == 2) {
			let shapeConvex = this.fillConvexHull(this.transform.scale,this.collisionMargin);
			this.btshape = shapeConvex;
		} else if(this.shape == 4) {
			let f = this.transform.dim.x / 2;
			let f1 = this.transform.dim.z;
			let coneZ = new Ammo.btConeShapeZ(f + f * this.collisionMargin,f1 + f1 * this.collisionMargin);
			let cone = coneZ;
			this.btshape = cone;
		} else if(this.shape == 5) {
			let f = this.transform.dim.x / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setX(f + f * this.collisionMargin);
			let f1 = this.transform.dim.y / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setY(f1 + f1 * this.collisionMargin);
			let f2 = this.transform.dim.z / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setZ(f2 + f2 * this.collisionMargin);
			let cylZ = new Ammo.btCylinderShapeZ(armory_trait_physics_bullet_RigidBody.vec1);
			let cyl = cylZ;
			this.btshape = cyl;
		} else if(this.shape == 6) {
			let r = this.transform.dim.x / 2;
			let f = this.transform.dim.z - r * 2;
			let capsZ = new Ammo.btCapsuleShapeZ(r + r * this.collisionMargin,f + f * this.collisionMargin);
			let caps = capsZ;
			this.btshape = caps;
		} else if(this.shape == 3) {
			this.meshInterface = this.fillTriangleMesh(this.transform.scale);
			if(this.mass > 0) {
				let shapeGImpact = new Ammo.btGImpactMeshShape(this.meshInterface);
				shapeGImpact.updateBound();
				let shapeConcave = shapeGImpact;
				this.btshape = shapeConcave;
				if(!this.physics.gimpactRegistered) {
					new Ammo.GImpactCollisionAlgorithm().registerAlgorithm(this.physics.dispatcher);
					this.physics.gimpactRegistered = true;
				}
			} else {
				let shapeBvh = new Ammo.btBvhTriangleMeshShape(this.meshInterface,true,true);
				let shapeTri = shapeBvh;
				let shapeConcave = shapeTri;
				this.btshape = shapeConcave;
			}
		} else if(this.shape == 7) {
			let length = this.heightData.length;
			if(armory_trait_physics_bullet_RigidBody.ammoArray == -1) {
				armory_trait_physics_bullet_RigidBody.ammoArray = Ammo._malloc(length);
			}
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let i = _g++;
				Ammo.HEAPU8[armory_trait_physics_bullet_RigidBody.ammoArray + i] = this.heightData.b[i];
			}
			let slice = Math.sqrt(length) | 0;
			let axis = 2;
			let dataType = 5;
			this.btshape = new Ammo.btHeightfieldTerrainShape(slice,slice,armory_trait_physics_bullet_RigidBody.ammoArray,0.00392156862745098,0,1,axis,dataType,false);
			armory_trait_physics_bullet_RigidBody.vec1.setX(this.transform.dim.x / slice);
			armory_trait_physics_bullet_RigidBody.vec1.setY(this.transform.dim.y / slice);
			armory_trait_physics_bullet_RigidBody.vec1.setZ(this.transform.dim.z);
			this.btshape.setLocalScaling(armory_trait_physics_bullet_RigidBody.vec1);
		}
		armory_trait_physics_bullet_RigidBody.trans1.setIdentity();
		armory_trait_physics_bullet_RigidBody.vec1.setX(this.transform.world.self._30);
		armory_trait_physics_bullet_RigidBody.vec1.setY(this.transform.world.self._31);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(this.transform.world.self._32);
		armory_trait_physics_bullet_RigidBody.trans1.setOrigin(armory_trait_physics_bullet_RigidBody.vec1);
		let _this = armory_trait_physics_bullet_RigidBody.quat;
		let m = this.transform.world;
		let _this1 = iron_math_Quat.helpMat;
		_this1.self._00 = m.self._00;
		_this1.self._01 = m.self._01;
		_this1.self._02 = m.self._02;
		_this1.self._03 = m.self._03;
		_this1.self._10 = m.self._10;
		_this1.self._11 = m.self._11;
		_this1.self._12 = m.self._12;
		_this1.self._13 = m.self._13;
		_this1.self._20 = m.self._20;
		_this1.self._21 = m.self._21;
		_this1.self._22 = m.self._22;
		_this1.self._23 = m.self._23;
		_this1.self._30 = m.self._30;
		_this1.self._31 = m.self._31;
		_this1.self._32 = m.self._32;
		_this1.self._33 = m.self._33;
		let _this2 = iron_math_Quat.helpMat;
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		let _this4 = _this3;
		let scale = 1.0 / Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		_this2.self._00 *= scale;
		_this2.self._01 *= scale;
		_this2.self._02 *= scale;
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this2.self._10 *= scale;
		_this2.self._11 *= scale;
		_this2.self._12 *= scale;
		let _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		let _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this2.self._20 *= scale;
		_this2.self._21 *= scale;
		_this2.self._22 *= scale;
		_this2.self._03 = 0.0;
		_this2.self._13 = 0.0;
		_this2.self._23 = 0.0;
		_this2.self._30 = 0.0;
		_this2.self._31 = 0.0;
		_this2.self._32 = 0.0;
		_this2.self._33 = 1.0;
		let m1 = iron_math_Quat.helpMat;
		let m11 = m1.self._00;
		let m12 = m1.self._10;
		let m13 = m1.self._20;
		let m21 = m1.self._01;
		let m22 = m1.self._11;
		let m23 = m1.self._21;
		let m31 = m1.self._02;
		let m32 = m1.self._12;
		let m33 = m1.self._22;
		let tr = m11 + m22 + m33;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_this.w = 0.25 / s;
			_this.x = (m32 - m23) * s;
			_this.y = (m13 - m31) * s;
			_this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_this.w = (m32 - m23) / s;
			_this.x = 0.25 * s;
			_this.y = (m12 + m21) / s;
			_this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_this.w = (m13 - m31) / s;
			_this.x = (m12 + m21) / s;
			_this.y = 0.25 * s;
			_this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_this.w = (m21 - m12) / s;
			_this.x = (m13 + m31) / s;
			_this.y = (m23 + m32) / s;
			_this.z = 0.25 * s;
		}
		armory_trait_physics_bullet_RigidBody.quat1.setValue(armory_trait_physics_bullet_RigidBody.quat.x,armory_trait_physics_bullet_RigidBody.quat.y,armory_trait_physics_bullet_RigidBody.quat.z,armory_trait_physics_bullet_RigidBody.quat.w);
		armory_trait_physics_bullet_RigidBody.trans1.setRotation(armory_trait_physics_bullet_RigidBody.quat1);
		let centerOfMassOffset = armory_trait_physics_bullet_RigidBody.trans2;
		centerOfMassOffset.setIdentity();
		this.motionState = new Ammo.btDefaultMotionState(armory_trait_physics_bullet_RigidBody.trans1,centerOfMassOffset);
		armory_trait_physics_bullet_RigidBody.vec1.setX(0);
		armory_trait_physics_bullet_RigidBody.vec1.setY(0);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(0);
		let inertia = armory_trait_physics_bullet_RigidBody.vec1;
		if(this.staticObj || this.animated) {
			this.mass = 0;
		}
		if(this.mass > 0) {
			this.btshape.calculateLocalInertia(this.mass,inertia);
		}
		let bodyCI = new Ammo.btRigidBodyConstructionInfo(this.mass,this.motionState,this.btshape,inertia);
		this.body = new Ammo.btRigidBody(bodyCI);
		let bodyColl = this.body;
		bodyColl.setFriction(this.friction);
		bodyColl.setRollingFriction(this.angularFriction);
		bodyColl.setRestitution(this.restitution);
		if(this.useDeactivation) {
			this.setDeactivationParams(this.deactivationParams[0],this.deactivationParams[1],this.deactivationParams[2]);
		} else {
			this.setActivationState(4);
		}
		if(this.linearDamping != 0.04 || this.angularDamping != 0.1) {
			this.body.setDamping(this.linearDamping,this.angularDamping);
		}
		if(this.linearFactors != null) {
			this.setLinearFactor(this.linearFactors[0],this.linearFactors[1],this.linearFactors[2]);
		}
		if(this.angularFactors != null) {
			this.setAngularFactor(this.angularFactors[0],this.angularFactors[1],this.angularFactors[2]);
		}
		if(this.trigger) {
			bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() | armory_trait_physics_bullet_RigidBody.CF_NO_CONTACT_RESPONSE);
		}
		if(this.animated) {
			bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() | armory_trait_physics_bullet_RigidBody.CF_KINEMATIC_OBJECT);
			bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() & ~armory_trait_physics_bullet_RigidBody.CF_STATIC_OBJECT);
		}
		if(this.staticObj && !this.animated) {
			bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() | armory_trait_physics_bullet_RigidBody.CF_STATIC_OBJECT);
		}
		if(this.ccd) {
			this.setCcd(this.transform.radius);
		}
		this.bodyScaleX = this.currentScaleX = this.transform.scale.x;
		this.bodyScaleY = this.currentScaleY = this.transform.scale.y;
		this.bodyScaleZ = this.currentScaleZ = this.transform.scale.z;
		this.id = armory_trait_physics_bullet_RigidBody.nextId;
		armory_trait_physics_bullet_RigidBody.nextId++;
		this.body.userIndex = this.id;
		this.physics.addRigidBody(this);
		this.notifyOnRemove($bind(this,this.removeFromWorld));
		if(this.onReady != null) {
			this.onReady();
		}
		Ammo.destroy(bodyCI);
	}
	physicsUpdate() {
		if(!this.ready) {
			return;
		}
		if(this.animated) {
			this.syncTransform();
		} else {
			let trans = this.body.getWorldTransform();
			let p = trans.getOrigin();
			let q = trans.getRotation();
			let _this = this.transform.loc;
			let x = p.x();
			let y = p.y();
			let z = p.z();
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			let _this1 = this.transform.rot;
			let x1 = q.x();
			let y1 = q.y();
			let z1 = q.z();
			let w = q.w();
			_this1.x = x1;
			_this1.y = y1;
			_this1.z = z1;
			_this1.w = w;
			if(this.object.parent != null) {
				let ptransform = this.object.parent.transform;
				this.transform.loc.x -= ptransform.world.self._30;
				this.transform.loc.y -= ptransform.world.self._31;
				this.transform.loc.z -= ptransform.world.self._32;
			}
			this.transform.buildMatrix();
		}
		if(this.onContact != null) {
			let rbs = this.physics.getContacts(this);
			if(rbs != null) {
				let _g = 0;
				while(_g < rbs.length) {
					let rb = rbs[_g];
					++_g;
					let _g1 = 0;
					let _g2 = this.onContact;
					while(_g1 < _g2.length) {
						let f = _g2[_g1];
						++_g1;
						f(rb);
					}
				}
			}
		}
	}
	disableCollision() {
		let bodyColl = this.body;
		bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() | armory_trait_physics_bullet_RigidBody.CF_NO_CONTACT_RESPONSE);
	}
	enableCollision() {
		let bodyColl = this.body;
		bodyColl.setCollisionFlags(~bodyColl.getCollisionFlags() & armory_trait_physics_bullet_RigidBody.CF_NO_CONTACT_RESPONSE);
	}
	removeFromWorld() {
		if(this.physics != null) {
			this.physics.removeRigidBody(this);
		}
	}
	isActive() {
		return this.body.isActive();
	}
	activate() {
		let bodyColl = this.body;
		bodyColl.activate(false);
	}
	disableGravity() {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(0,0,0);
		this.body.setGravity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	enableGravity() {
		this.body.setGravity(this.physics.world.getGravity());
	}
	setGravity(v) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(v.x,v.y,v.z);
		this.body.setGravity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	setActivationState(newState) {
		let bodyColl = this.body;
		bodyColl.setActivationState(newState);
	}
	setDeactivationParams(linearThreshold,angularThreshold,time) {
		this.body.setSleepingThresholds(linearThreshold,angularThreshold);
	}
	setUpDeactivation(useDeactivation,linearThreshold,angularThreshold,time) {
		this.useDeactivation = useDeactivation;
		this.deactivationParams[0] = linearThreshold;
		this.deactivationParams[1] = angularThreshold;
		this.deactivationParams[2] = time;
	}
	isTriggerObject(isTrigger) {
		this.trigger = isTrigger;
	}
	applyForce(force,loc) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(force.x,force.y,force.z);
		if(loc == null) {
			this.body.applyCentralForce(armory_trait_physics_bullet_RigidBody.vec1);
		} else {
			armory_trait_physics_bullet_RigidBody.vec2.setValue(loc.x,loc.y,loc.z);
			this.body.applyForce(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2);
		}
	}
	applyImpulse(impulse,loc) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(impulse.x,impulse.y,impulse.z);
		if(loc == null) {
			this.body.applyCentralImpulse(armory_trait_physics_bullet_RigidBody.vec1);
		} else {
			armory_trait_physics_bullet_RigidBody.vec2.setValue(loc.x,loc.y,loc.z);
			this.body.applyImpulse(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2);
		}
	}
	applyTorque(torque) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(torque.x,torque.y,torque.z);
		this.body.applyTorque(armory_trait_physics_bullet_RigidBody.vec1);
	}
	applyTorqueImpulse(torque) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(torque.x,torque.y,torque.z);
		this.body.applyTorqueImpulse(armory_trait_physics_bullet_RigidBody.vec1);
	}
	setLinearFactor(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setLinearFactor(armory_trait_physics_bullet_RigidBody.vec1);
	}
	setAngularFactor(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setAngularFactor(armory_trait_physics_bullet_RigidBody.vec1);
	}
	getLinearVelocity() {
		let v = this.body.getLinearVelocity();
		return new iron_math_Vec4(v.x(),v.y(),v.z());
	}
	setLinearVelocity(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setLinearVelocity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	getAngularVelocity() {
		let v = this.body.getAngularVelocity();
		return new iron_math_Vec4(v.x(),v.y(),v.z());
	}
	setAngularVelocity(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setAngularVelocity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	getPointVelocity(x,y,z) {
		let linear = this.getLinearVelocity();
		let x1 = x;
		let y1 = y;
		let z1 = z;
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let relativePoint_x = x1;
		let relativePoint_y = y1;
		let relativePoint_z = z1;
		let relativePoint_w = 1.0;
		let _this = this.transform.world;
		let x2 = _this.self._30;
		let y2 = _this.self._31;
		let z2 = _this.self._32;
		let w = _this.self._33;
		if(w == null) {
			w = 1.0;
		}
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let v_x = x2;
		let v_y = y2;
		let v_z = z2;
		let v_w = w;
		relativePoint_x -= v_x;
		relativePoint_y -= v_y;
		relativePoint_z -= v_z;
		let _this1 = this.getAngularVelocity();
		let ax = _this1.x;
		let ay = _this1.y;
		let az = _this1.z;
		let vx = relativePoint_x;
		let vy = relativePoint_y;
		let vz = relativePoint_z;
		_this1.x = ay * vz - az * vy;
		_this1.y = az * vx - ax * vz;
		_this1.z = ax * vy - ay * vx;
		let angular = _this1;
		linear.x += angular.x;
		linear.y += angular.y;
		linear.z += angular.z;
		return linear;
	}
	setFriction(f) {
		let bodyColl = this.body;
		bodyColl.setFriction(f);
		this.friction = f;
	}
	notifyOnContact(f) {
		if(this.onContact == null) {
			this.onContact = [];
		}
		this.onContact.push(f);
	}
	removeContact(f) {
		HxOverrides.remove(this.onContact,f);
	}
	setScale(v) {
		this.currentScaleX = v.x;
		this.currentScaleY = v.y;
		this.currentScaleZ = v.z;
		armory_trait_physics_bullet_RigidBody.vec1.setX(v.x / this.bodyScaleX);
		armory_trait_physics_bullet_RigidBody.vec1.setY(v.y / this.bodyScaleY);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(v.z / this.bodyScaleZ);
		this.btshape.setLocalScaling(armory_trait_physics_bullet_RigidBody.vec1);
		let worldDyn = this.physics.world;
		let worldCol = worldDyn;
		worldCol.updateSingleAabb(this.body);
	}
	syncTransform() {
		let t = this.transform;
		t.buildMatrix();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(t.world.self._30,t.world.self._31,t.world.self._32);
		armory_trait_physics_bullet_RigidBody.trans1.setOrigin(armory_trait_physics_bullet_RigidBody.vec1);
		let _this = armory_trait_physics_bullet_RigidBody.quat;
		let m = t.world;
		let _this1 = iron_math_Quat.helpMat;
		_this1.self._00 = m.self._00;
		_this1.self._01 = m.self._01;
		_this1.self._02 = m.self._02;
		_this1.self._03 = m.self._03;
		_this1.self._10 = m.self._10;
		_this1.self._11 = m.self._11;
		_this1.self._12 = m.self._12;
		_this1.self._13 = m.self._13;
		_this1.self._20 = m.self._20;
		_this1.self._21 = m.self._21;
		_this1.self._22 = m.self._22;
		_this1.self._23 = m.self._23;
		_this1.self._30 = m.self._30;
		_this1.self._31 = m.self._31;
		_this1.self._32 = m.self._32;
		_this1.self._33 = m.self._33;
		let _this2 = iron_math_Quat.helpMat;
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		let _this4 = _this3;
		let scale = 1.0 / Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		_this2.self._00 *= scale;
		_this2.self._01 *= scale;
		_this2.self._02 *= scale;
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this2.self._10 *= scale;
		_this2.self._11 *= scale;
		_this2.self._12 *= scale;
		let _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		let _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this2.self._20 *= scale;
		_this2.self._21 *= scale;
		_this2.self._22 *= scale;
		_this2.self._03 = 0.0;
		_this2.self._13 = 0.0;
		_this2.self._23 = 0.0;
		_this2.self._30 = 0.0;
		_this2.self._31 = 0.0;
		_this2.self._32 = 0.0;
		_this2.self._33 = 1.0;
		let m1 = iron_math_Quat.helpMat;
		let m11 = m1.self._00;
		let m12 = m1.self._10;
		let m13 = m1.self._20;
		let m21 = m1.self._01;
		let m22 = m1.self._11;
		let m23 = m1.self._21;
		let m31 = m1.self._02;
		let m32 = m1.self._12;
		let m33 = m1.self._22;
		let tr = m11 + m22 + m33;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_this.w = 0.25 / s;
			_this.x = (m32 - m23) * s;
			_this.y = (m13 - m31) * s;
			_this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_this.w = (m32 - m23) / s;
			_this.x = 0.25 * s;
			_this.y = (m12 + m21) / s;
			_this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_this.w = (m13 - m31) / s;
			_this.x = (m12 + m21) / s;
			_this.y = 0.25 * s;
			_this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_this.w = (m21 - m12) / s;
			_this.x = (m13 + m31) / s;
			_this.y = (m23 + m32) / s;
			_this.z = 0.25 * s;
		}
		armory_trait_physics_bullet_RigidBody.quat1.setValue(armory_trait_physics_bullet_RigidBody.quat.x,armory_trait_physics_bullet_RigidBody.quat.y,armory_trait_physics_bullet_RigidBody.quat.z,armory_trait_physics_bullet_RigidBody.quat.w);
		armory_trait_physics_bullet_RigidBody.trans1.setRotation(armory_trait_physics_bullet_RigidBody.quat1);
		if(this.animated) {
			this.body.getMotionState().setWorldTransform(armory_trait_physics_bullet_RigidBody.trans1);
		} else {
			this.body.setCenterOfMassTransform(armory_trait_physics_bullet_RigidBody.trans1);
		}
		if(this.currentScaleX != t.scale.x || this.currentScaleY != t.scale.y || this.currentScaleZ != t.scale.z) {
			this.setScale(t.scale);
		}
		this.activate();
	}
	setCcd(sphereRadius,motionThreshold) {
		if(motionThreshold == null) {
			motionThreshold = 1e-7;
		}
		let bodyColl = this.body;
		bodyColl.setCcdSweptSphereRadius(sphereRadius);
		bodyColl.setCcdMotionThreshold(motionThreshold);
	}
	fillConvexHull(scale,margin) {
		let data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
		let shape = armory_trait_physics_bullet_RigidBody.convexHullCache.h[data.__id__];
		if(shape != null) {
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] + 1);
			return shape;
		}
		shape = new Ammo.btConvexHullShape();
		armory_trait_physics_bullet_RigidBody.convexHullCache.set(data,shape);
		armory_trait_physics_bullet_RigidBody.usersCache.set(data,1);
		let positions = data.geom.positions.values;
		let sx = scale.x * (1.0 - margin) * 3.0518509475997192e-005;
		let sy = scale.y * (1.0 - margin) * 3.0518509475997192e-005;
		let sz = scale.z * (1.0 - margin) * 3.0518509475997192e-005;
		if(data.raw.scale_pos != null) {
			sx *= data.raw.scale_pos;
			sy *= data.raw.scale_pos;
			sz *= data.raw.scale_pos;
		}
		let _g = 0;
		let _g1 = (positions.byteLength >> 1) / 4 | 0;
		while(_g < _g1) {
			let i = _g++;
			armory_trait_physics_bullet_RigidBody.vec1.setX(positions.getInt16(i * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sx);
			armory_trait_physics_bullet_RigidBody.vec1.setY(positions.getInt16((i * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sy);
			armory_trait_physics_bullet_RigidBody.vec1.setZ(positions.getInt16((i * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sz);
			shape.addPoint(armory_trait_physics_bullet_RigidBody.vec1,true);
		}
		return shape;
	}
	fillTriangleMesh(scale) {
		let data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
		let triangleMesh = armory_trait_physics_bullet_RigidBody.triangleMeshCache.h[data.__id__];
		if(triangleMesh != null) {
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] + 1);
			return triangleMesh;
		}
		triangleMesh = new Ammo.btTriangleMesh(true,true);
		armory_trait_physics_bullet_RigidBody.triangleMeshCache.set(data,triangleMesh);
		armory_trait_physics_bullet_RigidBody.usersCache.set(data,1);
		let positions = data.geom.positions.values;
		let indices = data.geom.indices;
		let sx = scale.x * 3.0518509475997192e-005;
		let sy = scale.y * 3.0518509475997192e-005;
		let sz = scale.z * 3.0518509475997192e-005;
		if(data.raw.scale_pos != null) {
			sx *= data.raw.scale_pos;
			sy *= data.raw.scale_pos;
			sz *= data.raw.scale_pos;
		}
		let _g = 0;
		while(_g < indices.length) {
			let ar = indices[_g];
			++_g;
			let _g1 = 0;
			let _g2 = (ar.byteLength >> 2) / 3 | 0;
			while(_g1 < _g2) {
				let i = _g1++;
				armory_trait_physics_bullet_RigidBody.vec1.setX(positions.getInt16(ar.getUint32(i * 3 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sx);
				armory_trait_physics_bullet_RigidBody.vec1.setY(positions.getInt16((ar.getUint32(i * 3 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sy);
				armory_trait_physics_bullet_RigidBody.vec1.setZ(positions.getInt16((ar.getUint32(i * 3 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sz);
				armory_trait_physics_bullet_RigidBody.vec2.setX(positions.getInt16(ar.getUint32((i * 3 + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sx);
				armory_trait_physics_bullet_RigidBody.vec2.setY(positions.getInt16((ar.getUint32((i * 3 + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sy);
				armory_trait_physics_bullet_RigidBody.vec2.setZ(positions.getInt16((ar.getUint32((i * 3 + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sz);
				armory_trait_physics_bullet_RigidBody.vec3.setX(positions.getInt16(ar.getUint32((i * 3 + 2) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sx);
				armory_trait_physics_bullet_RigidBody.vec3.setY(positions.getInt16((ar.getUint32((i * 3 + 2) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sy);
				armory_trait_physics_bullet_RigidBody.vec3.setZ(positions.getInt16((ar.getUint32((i * 3 + 2) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * sz);
				triangleMesh.addTriangle(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2,armory_trait_physics_bullet_RigidBody.vec3);
			}
		}
		return triangleMesh;
	}
	delete() {
		Ammo.destroy(this.motionState);
		Ammo.destroy(this.body);
		if(this.shape == 2 || this.shape == 3) {
			let data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
			let i = armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] - 1;
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,i);
			if(this.shape == 3) {
				Ammo.destroy(this.btshape);
			}
			if(i <= 0) {
				if(this.shape == 2) {
					Ammo.destroy(this.btshape);
					armory_trait_physics_bullet_RigidBody.convexHullCache.remove(data);
				} else {
					armory_trait_physics_bullet_RigidBody.triangleMeshCache.remove(data);
					if(this.meshInterface != null) {
						Ammo.destroy(this.meshInterface);
					}
				}
			}
		} else {
			Ammo.destroy(this.btshape);
		}
	}
	deleteShape() {
		Ammo.destroy(this.btshape);
	}
}
$hxClasses["armory.trait.physics.bullet.RigidBody"] = armory_trait_physics_bullet_RigidBody;
armory_trait_physics_bullet_RigidBody.__name__ = "armory.trait.physics.bullet.RigidBody";
armory_trait_physics_bullet_RigidBody.__super__ = iron_Trait;
Object.assign(armory_trait_physics_bullet_RigidBody.prototype, {
	__class__: armory_trait_physics_bullet_RigidBody
	,shape: null
	,physics: null
	,transform: null
	,mass: null
	,friction: null
	,angularFriction: null
	,restitution: null
	,collisionMargin: null
	,linearDamping: null
	,angularDamping: null
	,animated: null
	,staticObj: null
	,destroyed: null
	,linearFactors: null
	,angularFactors: null
	,useDeactivation: null
	,deactivationParams: null
	,ccd: null
	,group: null
	,mask: null
	,trigger: null
	,bodyScaleX: null
	,bodyScaleY: null
	,bodyScaleZ: null
	,currentScaleX: null
	,currentScaleY: null
	,currentScaleZ: null
	,meshInterface: null
	,body: null
	,motionState: null
	,btshape: null
	,ready: null
	,id: null
	,onReady: null
	,onContact: null
	,heightData: null
});
class zui_Handle {
	constructor(ops) {
		this.changed = false;
		this.dragY = 0;
		this.dragX = 0;
		this.dragEnabled = false;
		this.lastMaxY = 0.0;
		this.lastMaxX = 0.0;
		this.layout = 0;
		this.scrollEnabled = false;
		this.scrollOffset = 0.0;
		this.redraws = 2;
		this.texture = null;
		this.text = "";
		this.value = 0.0;
		this.color = -1;
		this.position = 0;
		this.selected = false;
		if(ops != null) {
			if(ops.selected != null) {
				this.selected = ops.selected;
			}
			if(ops.position != null) {
				this.position = ops.position;
			}
			if(ops.value != null) {
				this.value = ops.value;
			}
			if(ops.text != null) {
				this.text = ops.text;
			}
			if(ops.color != null) {
				this.color = ops.color;
			}
			if(ops.layout != null) {
				this.layout = ops.layout;
			}
		}
	}
	nest(i,ops) {
		if(this.children == null) {
			this.children = new haxe_ds_IntMap();
		}
		let c = this.children.h[i];
		if(c == null) {
			c = new zui_Handle(ops);
			this.children.h[i] = c;
		}
		return c;
	}
	unnest(i) {
		if(this.children != null) {
			this.children.remove(i);
		}
	}
}
$hxClasses["zui.Handle"] = zui_Handle;
zui_Handle.__name__ = "zui.Handle";
Object.assign(zui_Handle.prototype, {
	__class__: zui_Handle
	,selected: null
	,position: null
	,color: null
	,value: null
	,text: null
	,texture: null
	,redraws: null
	,scrollOffset: null
	,scrollEnabled: null
	,layout: null
	,lastMaxX: null
	,lastMaxY: null
	,dragEnabled: null
	,dragX: null
	,dragY: null
	,changed: null
	,children: null
});
class armory_ui_Canvas {
	static draw(ui,canvas,g) {
		armory_ui_Canvas.screenW = kha_System.windowWidth();
		armory_ui_Canvas.screenH = kha_System.windowHeight();
		armory_ui_Canvas.events.length = 0;
		armory_ui_Canvas._ui = ui;
		g.end();
		ui.begin(g);
		g.begin(false);
		ui.g = g;
		let _g = 0;
		let _g1 = canvas.elements;
		while(_g < _g1.length) {
			let elem = _g1[_g];
			++_g;
			if(elem.parent == null) {
				armory_ui_Canvas.drawElement(ui,canvas,elem);
			}
		}
		g.end();
		ui.end();
		g.begin(false);
		return armory_ui_Canvas.events;
	}
	static drawElement(ui,canvas,element,px,py) {
		if(py == null) {
			py = 0.0;
		}
		if(px == null) {
			px = 0.0;
		}
		if(element == null || element.visible == false) {
			return;
		}
		let anchorOffset = armory_ui_Canvas.getAnchorOffset(canvas,element);
		px += anchorOffset[0];
		py += anchorOffset[1];
		ui._x = canvas.x + (element.x * armory_ui_Canvas._ui.ops.scaleFactor | 0) + px;
		ui._y = canvas.y + (element.y * armory_ui_Canvas._ui.ops.scaleFactor | 0) + py;
		ui._w = element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0;
		let rotated = element.rotation != null && element.rotation != 0;
		if(rotated) {
			ui.g.pushRotation(element.rotation,ui._x + (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2);
		}
		let font = ui.ops.font;
		let assetName = element.asset;
		let fontAsset = assetName != null && assetName.toLowerCase().endsWith(".ttf");
		if(fontAsset) {
			ui.ops.font = armory_ui_Canvas.getAsset(canvas,element.asset);
		}
		switch(element.type) {
		case 0:
			let prevFontSize = ui.fontSize;
			let prevTEXT_COL = ui.t.TEXT_COL;
			ui.fontSize = element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0;
			let color = element.color_text;
			let defaultColor = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color != null ? color : defaultColor;
			ui.text(element.text,element.alignment);
			ui.fontSize = prevFontSize;
			ui.t.TEXT_COL = prevTEXT_COL;
			break;
		case 1:
			let image = armory_ui_Canvas.getAsset(canvas,element.asset);
			if(image != null && !fontAsset) {
				ui.imageScrollAlign = false;
				let tint = element.color != null ? element.color : -1;
				if(ui.image(image,tint,element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) == 3) {
					let e = element.event;
					if(e != null && e != "") {
						armory_ui_Canvas.events.push(e);
					}
				}
				ui.imageScrollAlign = true;
			}
			break;
		case 2:
			let prevELEMENT_H = ui.t.ELEMENT_H;
			let prevBUTTON_H = ui.t.BUTTON_H;
			let prevBUTTON_COL = ui.t.BUTTON_COL;
			let prevBUTTON_TEXT_COL = ui.t.BUTTON_TEXT_COL;
			let prevBUTTON_HOVER_COL = ui.t.BUTTON_HOVER_COL;
			let prevBUTTON_PRESSED_COL = ui.t.BUTTON_PRESSED_COL;
			ui.t.ELEMENT_H = element.height;
			ui.t.BUTTON_H = element.height;
			let color1 = element.color;
			let defaultColor1 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.BUTTON_COL = color1 != null ? color1 : defaultColor1;
			let color2 = element.color_text;
			let defaultColor2 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_TEXT_COL;
			ui.t.BUTTON_TEXT_COL = color2 != null ? color2 : defaultColor2;
			let color3 = element.color_hover;
			let defaultColor3 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.BUTTON_HOVER_COL = color3 != null ? color3 : defaultColor3;
			let color4 = element.color_press;
			let defaultColor4 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_PRESSED_COL;
			ui.t.BUTTON_PRESSED_COL = color4 != null ? color4 : defaultColor4;
			if(ui.button(element.text,element.alignment)) {
				let e = element.event;
				if(e != null && e != "") {
					armory_ui_Canvas.events.push(e);
				}
			}
			ui.t.ELEMENT_H = prevELEMENT_H;
			ui.t.BUTTON_H = prevBUTTON_H;
			ui.t.BUTTON_COL = prevBUTTON_COL;
			ui.t.BUTTON_TEXT_COL = prevBUTTON_TEXT_COL;
			ui.t.BUTTON_HOVER_COL = prevBUTTON_HOVER_COL;
			ui.t.BUTTON_PRESSED_COL = prevBUTTON_PRESSED_COL;
			break;
		case 3:
			break;
		case 6:
			let prevTEXT_COL1 = ui.t.TEXT_COL;
			let prevACCENT_COL = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL = ui.t.ACCENT_HOVER_COL;
			let color5 = element.color_text;
			let defaultColor5 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color5 != null ? color5 : defaultColor5;
			let color6 = element.color;
			let defaultColor6 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color6 != null ? color6 : defaultColor6;
			let color7 = element.color_hover;
			let defaultColor7 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color7 != null ? color7 : defaultColor7;
			ui.check(armory_ui_Canvas.h.nest(element.id),element.text);
			ui.t.TEXT_COL = prevTEXT_COL1;
			ui.t.ACCENT_COL = prevACCENT_COL;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL;
			break;
		case 7:
			let prevTEXT_COL2 = ui.t.TEXT_COL;
			let prevACCENT_COL1 = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL1 = ui.t.ACCENT_HOVER_COL;
			let color8 = element.color_text;
			let defaultColor8 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color8 != null ? color8 : defaultColor8;
			let color9 = element.color;
			let defaultColor9 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color9 != null ? color9 : defaultColor9;
			let color10 = element.color_hover;
			let defaultColor10 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color10 != null ? color10 : defaultColor10;
			zui_Ext.inlineRadio(ui,armory_ui_Canvas.h.nest(element.id),element.text.split(";"));
			ui.t.TEXT_COL = prevTEXT_COL2;
			ui.t.ACCENT_COL = prevACCENT_COL1;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL1;
			break;
		case 8:
			let prevTEXT_COL3 = ui.t.TEXT_COL;
			let prevLABEL_COL = ui.t.LABEL_COL;
			let prevACCENT_COL2 = ui.t.ACCENT_COL;
			let prevSEPARATOR_COL = ui.t.SEPARATOR_COL;
			let prevACCENT_HOVER_COL2 = ui.t.ACCENT_HOVER_COL;
			let color11 = element.color_text;
			let defaultColor11 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color11 != null ? color11 : defaultColor11;
			let color12 = element.color_text;
			let defaultColor12 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.LABEL_COL = color12 != null ? color12 : defaultColor12;
			let color13 = element.color;
			let defaultColor13 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color13 != null ? color13 : defaultColor13;
			let color14 = element.color;
			let defaultColor14 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.SEPARATOR_COL = color14 != null ? color14 : defaultColor14;
			let color15 = element.color_hover;
			let defaultColor15 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color15 != null ? color15 : defaultColor15;
			ui.combo(armory_ui_Canvas.h.nest(element.id),element.text.split(";"));
			ui.t.TEXT_COL = prevTEXT_COL3;
			ui.t.LABEL_COL = prevLABEL_COL;
			ui.t.ACCENT_COL = prevACCENT_COL2;
			ui.t.SEPARATOR_COL = prevSEPARATOR_COL;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL2;
			break;
		case 9:
			let prevTEXT_COL4 = ui.t.TEXT_COL;
			let prevLABEL_COL1 = ui.t.LABEL_COL;
			let prevACCENT_COL3 = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL3 = ui.t.ACCENT_HOVER_COL;
			let color16 = element.color_text;
			let defaultColor16 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color16 != null ? color16 : defaultColor16;
			let color17 = element.color_text;
			let defaultColor17 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.LABEL_COL = color17 != null ? color17 : defaultColor17;
			let color18 = element.color;
			let defaultColor18 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color18 != null ? color18 : defaultColor18;
			let color19 = element.color_hover;
			let defaultColor19 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color19 != null ? color19 : defaultColor19;
			ui.slider(armory_ui_Canvas.h.nest(element.id),element.text,0.0,1.0,true,100,true,element.alignment);
			ui.t.TEXT_COL = prevTEXT_COL4;
			ui.t.LABEL_COL = prevLABEL_COL1;
			ui.t.ACCENT_COL = prevACCENT_COL3;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL3;
			break;
		case 10:
			let prevTEXT_COL5 = ui.t.TEXT_COL;
			let prevLABEL_COL2 = ui.t.LABEL_COL;
			let prevACCENT_COL4 = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL4 = ui.t.ACCENT_HOVER_COL;
			let color20 = element.color_text;
			let defaultColor20 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color20 != null ? color20 : defaultColor20;
			let color21 = element.color_text;
			let defaultColor21 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.LABEL_COL = color21 != null ? color21 : defaultColor21;
			let color22 = element.color;
			let defaultColor22 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color22 != null ? color22 : defaultColor22;
			let color23 = element.color_hover;
			let defaultColor23 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color23 != null ? color23 : defaultColor23;
			ui.textInput(armory_ui_Canvas.h.nest(element.id),element.text,element.alignment);
			if(armory_ui_Canvas.h.nest(element.id).changed) {
				let e = element.event;
				if(e != null && e != "") {
					armory_ui_Canvas.events.push(e);
				}
			}
			ui.t.TEXT_COL = prevTEXT_COL5;
			ui.t.LABEL_COL = prevLABEL_COL2;
			ui.t.ACCENT_COL = prevACCENT_COL4;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL4;
			break;
		case 11:
			let prevTEXT_COL6 = ui.t.TEXT_COL;
			let prevLABEL_COL3 = ui.t.LABEL_COL;
			let prevACCENT_COL5 = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL5 = ui.t.ACCENT_HOVER_COL;
			let color24 = element.color_text;
			let defaultColor24 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color24 != null ? color24 : defaultColor24;
			let color25 = element.color_text;
			let defaultColor25 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.LABEL_COL = color25 != null ? color25 : defaultColor25;
			let color26 = element.color;
			let defaultColor26 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color26 != null ? color26 : defaultColor26;
			let color27 = element.color_hover;
			let defaultColor27 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color27 != null ? color27 : defaultColor27;
			armory_ui_Ext.keyInput(ui,armory_ui_Canvas.h.nest(element.id),element.text);
			ui.t.TEXT_COL = prevTEXT_COL6;
			ui.t.LABEL_COL = prevLABEL_COL3;
			ui.t.ACCENT_COL = prevACCENT_COL5;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL5;
			break;
		case 12:
			let col = ui.g.get_color();
			let ui1 = ui.g;
			let color28 = element.color;
			let defaultColor28 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui1.set_color(color28 != null ? color28 : defaultColor28);
			ui.g.fillRect(ui._x,ui._y,ui._w,element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			ui.g.set_color(col);
			break;
		case 13:
			let col1 = ui.g.get_color();
			let ui2 = ui.g;
			let color29 = element.color;
			let defaultColor29 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui2.set_color(color29 != null ? color29 : defaultColor29);
			ui.g.drawRect(ui._x,ui._y,ui._w,element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0,element.strength);
			ui.g.set_color(col1);
			break;
		case 14:
			let col2 = ui.g.get_color();
			let ui3 = ui.g;
			let color30 = element.color;
			let defaultColor30 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui3.set_color(color30 != null ? color30 : defaultColor30);
			kha_graphics2_GraphicsExtension.fillCircle(ui.g,ui._x + (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._w / 2);
			ui.g.set_color(col2);
			break;
		case 15:
			let col3 = ui.g.get_color();
			let ui4 = ui.g;
			let color31 = element.color;
			let defaultColor31 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui4.set_color(color31 != null ? color31 : defaultColor31);
			kha_graphics2_GraphicsExtension.drawCircle(ui.g,ui._x + (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._w / 2,element.strength);
			ui.g.set_color(col3);
			break;
		case 16:
			let col4 = ui.g.get_color();
			let ui5 = ui.g;
			let color32 = element.color;
			let defaultColor32 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui5.set_color(color32 != null ? color32 : defaultColor32);
			ui.g.fillTriangle(ui._x + ui._w / 2,ui._y,ui._x,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0),ui._x + ui._w,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0));
			ui.g.set_color(col4);
			break;
		case 17:
			let col5 = ui.g.get_color();
			let ui6 = ui.g;
			let color33 = element.color;
			let defaultColor33 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui6.set_color(color33 != null ? color33 : defaultColor33);
			ui.g.drawLine(ui._x + ui._w / 2,ui._y,ui._x,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0),element.strength);
			ui.g.drawLine(ui._x,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0),ui._x + ui._w,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0),element.strength);
			ui.g.drawLine(ui._x + ui._w,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0),ui._x + ui._w / 2,ui._y,element.strength);
			ui.g.set_color(col5);
			break;
		case 18:
			let col6 = ui.g.get_color();
			let progress = element.progress_at;
			let totalprogress = element.progress_total;
			let ui7 = ui.g;
			let color34 = element.color_progress;
			let defaultColor34 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui7.set_color(color34 != null ? color34 : defaultColor34);
			ui.g.fillRect(ui._x,ui._y,ui._w / totalprogress * Math.min(progress,totalprogress),element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			let ui8 = ui.g;
			let color35 = element.color;
			let defaultColor35 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui8.set_color(color35 != null ? color35 : defaultColor35);
			ui.g.drawRect(ui._x,ui._y,ui._w,element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0,element.strength);
			ui.g.set_color(col6);
			break;
		case 19:
			let col7 = ui.g.get_color();
			let progress1 = element.progress_at;
			let totalprogress1 = element.progress_total;
			let ui9 = ui.g;
			let color36 = element.color_progress;
			let defaultColor36 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui9.set_color(color36 != null ? color36 : defaultColor36);
			kha_graphics2_GraphicsExtension.drawArc(ui.g,ui._x + (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._w / 2,-Math.PI / 2,Math.PI * 2 / totalprogress1 * progress1 - Math.PI / 2,element.strength);
			let ui10 = ui.g;
			let color37 = element.color;
			let defaultColor37 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui10.set_color(color37 != null ? color37 : defaultColor37);
			kha_graphics2_GraphicsExtension.fillCircle(ui.g,ui._x + (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._y + (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2,ui._w / 2 - 10);
			ui.g.set_color(col7);
			break;
		case 20:
			let prevTEXT_COL7 = ui.t.TEXT_COL;
			let prevLABEL_COL4 = ui.t.LABEL_COL;
			let prevACCENT_COL6 = ui.t.ACCENT_COL;
			let prevACCENT_HOVER_COL6 = ui.t.ACCENT_HOVER_COL;
			let color38 = element.color_text;
			let defaultColor38 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.TEXT_COL = color38 != null ? color38 : defaultColor38;
			let color39 = element.color_text;
			let defaultColor39 = armory_ui_Canvas.getTheme(canvas.theme).TEXT_COL;
			ui.t.LABEL_COL = color39 != null ? color39 : defaultColor39;
			let color40 = element.color;
			let defaultColor40 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_COL;
			ui.t.ACCENT_COL = color40 != null ? color40 : defaultColor40;
			let color41 = element.color_hover;
			let defaultColor41 = armory_ui_Canvas.getTheme(canvas.theme).BUTTON_HOVER_COL;
			ui.t.ACCENT_HOVER_COL = color41 != null ? color41 : defaultColor41;
			armory_ui_Canvas.h.nest(element.id).text = element.text;
			zui_Ext.textArea(ui,armory_ui_Canvas.h.nest(element.id),element.alignment,element.editable);
			if(armory_ui_Canvas.h.nest(element.id).changed) {
				let e = element.event;
				if(e != null && e != "") {
					armory_ui_Canvas.events.push(e);
				}
			}
			ui.t.TEXT_COL = prevTEXT_COL7;
			ui.t.LABEL_COL = prevLABEL_COL4;
			ui.t.ACCENT_COL = prevACCENT_COL6;
			ui.t.ACCENT_HOVER_COL = prevACCENT_HOVER_COL6;
			break;
		}
		ui.ops.font = font;
		if(element.children != null) {
			let _g = 0;
			let _g1 = element.children;
			while(_g < _g1.length) {
				let id = _g1[_g];
				++_g;
				armory_ui_Canvas.drawElement(ui,canvas,armory_ui_Canvas.elemById(canvas,id),(element.x * armory_ui_Canvas._ui.ops.scaleFactor | 0) + px,(element.y * armory_ui_Canvas._ui.ops.scaleFactor | 0) + py);
			}
		}
		if(rotated) {
			ui.g.popTransformation();
		}
	}
	static getText(canvas,e) {
		return e.text;
	}
	static getAsset(canvas,asset) {
		let _g = 0;
		let _g1 = canvas.assets;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.name == asset) {
				return armory_ui_Canvas.assetMap.h[a.id];
			}
		}
		return null;
	}
	static getElementId(canvas) {
		if(armory_ui_Canvas.elemId == -1) {
			let _g = 0;
			let _g1 = canvas.elements;
			while(_g < _g1.length) {
				let e = _g1[_g];
				++_g;
				if(armory_ui_Canvas.elemId < e.id) {
					armory_ui_Canvas.elemId = e.id;
				}
			}
		}
		return ++armory_ui_Canvas.elemId;
	}
	static getAssetId(canvas) {
		if(armory_ui_Canvas.assetId == -1) {
			let _g = 0;
			let _g1 = canvas.assets;
			while(_g < _g1.length) {
				let a = _g1[_g];
				++_g;
				if(armory_ui_Canvas.assetId < a.id) {
					armory_ui_Canvas.assetId = a.id;
				}
			}
		}
		return ++armory_ui_Canvas.assetId;
	}
	static elemById(canvas,id) {
		let _g = 0;
		let _g1 = canvas.elements;
		while(_g < _g1.length) {
			let e = _g1[_g];
			++_g;
			if(e.id == id) {
				return e;
			}
		}
		return null;
	}
	static scaled(f) {
		return f * armory_ui_Canvas._ui.ops.scaleFactor | 0;
	}
	static isFontAsset(assetName) {
		if(assetName != null) {
			return assetName.toLowerCase().endsWith(".ttf");
		} else {
			return false;
		}
	}
	static getColor(color,defaultColor) {
		if(color != null) {
			return color;
		} else {
			return defaultColor;
		}
	}
	static getTheme(theme) {
		let _g = 0;
		let _g1 = armory_ui_Canvas.themes;
		while(_g < _g1.length) {
			let t = _g1[_g];
			++_g;
			if(t.NAME == theme) {
				return t;
			}
		}
		return null;
	}
	static getAnchorOffset(canvas,element) {
		let boxWidth;
		let boxHeight;
		let offsetX = 0.0;
		let offsetY = 0.0;
		if(element.parent == null) {
			boxWidth = canvas.width;
			boxHeight = canvas.height;
		} else {
			let parent = armory_ui_Canvas.elemById(canvas,element.parent);
			boxWidth = parent.width * armory_ui_Canvas._ui.ops.scaleFactor | 0;
			boxHeight = parent.height * armory_ui_Canvas._ui.ops.scaleFactor | 0;
		}
		switch(element.anchor) {
		case 1:
			offsetX += boxWidth / 2 - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			break;
		case 2:
			offsetX += boxWidth - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			break;
		case 3:
			offsetY += boxHeight / 2 - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			break;
		case 4:
			offsetX += boxWidth / 2 - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			offsetY += boxHeight / 2 - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			break;
		case 5:
			offsetX += boxWidth - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			offsetY += boxHeight / 2 - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			break;
		case 6:
			offsetY += boxHeight - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			break;
		case 7:
			offsetX += boxWidth / 2 - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0) / 2;
			offsetY += boxHeight - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			break;
		case 8:
			offsetX += boxWidth - (element.width * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			offsetY += boxHeight - (element.height * armory_ui_Canvas._ui.ops.scaleFactor | 0);
			break;
		}
		return [offsetX,offsetY];
	}
}
$hxClasses["armory.ui.Canvas"] = armory_ui_Canvas;
armory_ui_Canvas.__name__ = "armory.ui.Canvas";
class armory_ui_Ext {
	static keyInput(ui,handle,label,align) {
		if(align == null) {
			align = 0;
		}
		if(label == null) {
			label = "";
		}
		if(!ui.isVisible(ui.t.ELEMENT_H * ui.ops.scaleFactor)) {
			ui.endElement();
			return handle.value | 0;
		}
		let hover = ui.getHover();
		if(hover && zui_Zui.onTextHover != null) {
			zui_Zui.onTextHover();
		}
		ui.g.set_color(hover ? ui.t.ACCENT_HOVER_COL : ui.t.ACCENT_COL);
		let g = ui.g;
		let fill = ui.t.FILL_ACCENT_BG;
		let x = ui._x + ui.buttonOffsetY;
		let y = ui._y + ui.buttonOffsetY;
		let w = ui._w - ui.buttonOffsetY * 2;
		let h = ui.t.BUTTON_H * ui.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!ui.enabled) {
			ui.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		let startEdit = ui.getReleased() || ui.tabPressed;
		if(ui.textSelectedHandle != handle && startEdit) {
			ui.startTextEdit(handle);
		}
		if(ui.textSelectedHandle == handle) {
			armory_ui_Ext.listenToKey(ui,handle);
		} else {
			handle.changed = false;
		}
		if(label != "") {
			ui.g.set_color(ui.t.LABEL_COL);
			let labelAlign = align == 2 ? 0 : 2;
			let xOffset = labelAlign == 0 ? 7 : 0;
			ui.drawString(ui.g,label,xOffset,0,labelAlign);
		}
		handle.text = armory_ui_Ext.keycodeToString(handle.value | 0);
		ui.g.set_color(ui.t.TEXT_COL);
		if(ui.textSelectedHandle != handle) {
			ui.drawString(ui.g,handle.text,null,0,align);
		} else {
			ui.drawString(ui.g,ui.textSelected,null,0,align);
		}
		ui.endElement();
		return handle.value | 0;
	}
	static listenToKey(ui,handle) {
		if(ui.isKeyDown) {
			handle.value = ui.key;
			handle.changed = ui.changed = true;
			ui.textSelectedHandle = null;
			ui.isTyping = false;
			if(kha_input_Keyboard.get() != null) {
				kha_input_Keyboard.get().hide();
			}
		} else {
			ui.textSelected = "Press a key...";
		}
	}
	static list(ui,handle,ar,opts) {
		let selected = 0;
		if(opts == null) {
			opts = { };
		}
		let addCb = opts.addCb != null ? opts.addCb : function(name) {
			ar.push(name);
		};
		let removeCb = opts.removeCb != null ? opts.removeCb : function(i) {
			ar.splice(i,1);
		};
		let getNameCb = opts.getNameCb != null ? opts.getNameCb : function(i) {
			return ar[i];
		};
		let setNameCb = opts.setNameCb != null ? opts.setNameCb : function(i,name) {
			ar[i] = name;
		};
		let getLabelCb = opts.getLabelCb != null ? opts.getLabelCb : function(i) {
			return "";
		};
		let itemDrawCb = opts.itemDrawCb;
		let showRadio = opts.showRadio != null && opts.showRadio;
		let editable = opts.editable != null ? opts.editable : true;
		let showAdd = opts.showAdd != null ? opts.showAdd : true;
		let addLabel = opts.addLabel != null ? opts.addLabel : "Add";
		let i = 0;
		while(i < ar.length) {
			if(showRadio) {
				ui.row([0.12,0.68,0.2]);
				if(ui.radio(handle.nest(0),i,"")) {
					selected = i;
				}
			} else {
				ui.row([0.8,0.2]);
			}
			let itemHandle = handle.nest(i);
			itemHandle.text = getNameCb(i);
			if(editable) {
				setNameCb(i,ui.textInput(itemHandle,getLabelCb(i)));
			} else {
				ui.text(getNameCb(i));
			}
			if(ui.button("X")) {
				removeCb(i);
			} else {
				++i;
			}
			if(itemDrawCb != null) {
				itemDrawCb(itemHandle.nest(i),i - 1);
			}
		}
		if(showAdd && ui.button(addLabel)) {
			addCb("untitled");
		}
		return selected;
	}
	static panelList(ui,handle,ar,addCb,removeCb,getNameCb,setNameCb,itemDrawCb,editable,showAdd,addLabel) {
		if(addLabel == null) {
			addLabel = "Add";
		}
		if(showAdd == null) {
			showAdd = true;
		}
		if(editable == null) {
			editable = true;
		}
		if(addCb == null) {
			addCb = function(name) {
				ar.push(name);
			};
		}
		if(removeCb == null) {
			removeCb = function(i) {
				ar.splice(i,1);
			};
		}
		if(getNameCb == null) {
			getNameCb = function(i) {
				return ar[i];
			};
		}
		if(setNameCb == null) {
			setNameCb = function(i,name) {
				ar[i] = name;
			};
		}
		let i = 0;
		while(i < ar.length) {
			ui.row([0.12,0.68,0.2]);
			let expanded = ui.panel(handle.nest(i),"");
			let itemHandle = handle.nest(i);
			if(editable) {
				setNameCb(i,ui.textInput(itemHandle,getNameCb(i)));
			} else {
				ui.text(getNameCb(i));
			}
			if(ui.button("X")) {
				removeCb(i);
			} else {
				++i;
			}
			if(itemDrawCb != null && expanded) {
				itemDrawCb(itemHandle.nest(i),i - 1);
			}
		}
		if(showAdd && ui.button(addLabel)) {
			addCb("untitled");
		}
	}
	static colorField(ui,handle,alpha) {
		if(alpha == null) {
			alpha = false;
		}
		ui.g.set_color(handle.color);
		let g = ui.g;
		let x = ui._x + 2;
		let y = ui._y + ui.buttonOffsetY;
		let w = ui._w - 4;
		let h = ui.t.BUTTON_H * ui.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!ui.enabled) {
			ui.fadeColor();
		}
		g.fillRect(x,y - 1,w,h + 1);
		ui.g.set_color(ui.getHover() ? ui.t.ACCENT_HOVER_COL : ui.t.ACCENT_COL);
		let g1 = ui.g;
		let x1 = ui._x + 2;
		let y1 = ui._y + ui.buttonOffsetY;
		let w1 = ui._w - 4;
		let h1 = ui.t.BUTTON_H * ui.ops.scaleFactor;
		let strength1 = 1.0;
		if(strength1 == null) {
			strength1 = 0.0;
		}
		if(strength1 == 0.0) {
			strength1 = 1;
		}
		if(!ui.enabled) {
			ui.fadeColor();
		}
		g1.drawRect(x1,y1,w1,h1,strength1);
		if(ui.getStarted()) {
			armory_ui_Popup.showCustom(new zui_Zui(ui.ops),function(ui) {
				zui_Ext.colorWheel(ui,handle,alpha);
			},ui.inputX | 0,ui.inputY | 0,200,500);
		}
		ui.endElement();
		return handle.color;
	}
	static colorPicker(ui,handle,alpha) {
		if(alpha == null) {
			alpha = false;
		}
		let r = ui.slider(handle.nest(0,{ value : ((handle.color & 16711680) >>> 16) * 0.00392156862745098}),"R",0,1,true);
		let g = ui.slider(handle.nest(1,{ value : ((handle.color & 65280) >>> 8) * 0.00392156862745098}),"G",0,1,true);
		let b = ui.slider(handle.nest(2,{ value : (handle.color & 255) * 0.00392156862745098}),"B",0,1,true);
		let a = (handle.color >>> 24) * 0.00392156862745098;
		if(alpha) {
			a = ui.slider(handle.nest(3,{ value : a}),"A",0,1,true);
		}
		let col = kha_Color.fromFloats(r,g,b,a);
		ui.text("",2,col);
		return col;
	}
	static keycodeToString(keycode) {
		switch(keycode) {
		case -1:
			return "None";
		case 0:
			return "Unknown";
		case 1:
			return "Back";
		case 3:
			return "Cancel";
		case 6:
			return "Help";
		case 8:
			return "Backspace";
		case 9:
			return "Tab";
		case 12:
			return "Clear";
		case 13:
			return "Return";
		case 16:
			return "Shift";
		case 17:
			return "Ctrl";
		case 18:
			return "Alt";
		case 19:
			return "Pause";
		case 20:
			return "CapsLock";
		case 21:
			return "Kana";
		case 22:
			return "Eisu";
		case 23:
			return "Junja";
		case 24:
			return "Final";
		case 25:
			return "Hanja";
		case 27:
			return "Esc";
		case 28:
			return "Convert";
		case 29:
			return "NonConvert";
		case 30:
			return "Accept";
		case 31:
			return "ModeChange";
		case 32:
			return "Space";
		case 33:
			return "PageUp";
		case 34:
			return "PageDown";
		case 35:
			return "End";
		case 36:
			return "Home";
		case 37:
			return "Left";
		case 38:
			return "Up";
		case 39:
			return "Right";
		case 40:
			return "Down";
		case 41:
			return "Select";
		case 42:
			return "Print";
		case 43:
			return "Execute";
		case 44:
			return "PrintScreen";
		case 45:
			return "Insert";
		case 46:
			return "Delete";
		case 58:
			return "Colon";
		case 59:
			return "Semicolon";
		case 60:
			return "LessThan";
		case 61:
			return "Equals";
		case 62:
			return "GreaterThan";
		case 63:
			return "QuestionMark";
		case 64:
			return "At";
		case 91:
			return "Win";
		case 93:
			return "ContextMenu";
		case 95:
			return "Sleep";
		case 96:
			return "Numpad0";
		case 97:
			return "Numpad1";
		case 98:
			return "Numpad2";
		case 99:
			return "Numpad3";
		case 100:
			return "Numpad4";
		case 101:
			return "Numpad5";
		case 102:
			return "Numpad6";
		case 103:
			return "Numpad7";
		case 104:
			return "Numpad8";
		case 105:
			return "Numpad9";
		case 106:
			return "Multiply";
		case 107:
			return "Add";
		case 108:
			return "Separator";
		case 109:
			return "Subtract";
		case 110:
			return "Decimal";
		case 111:
			return "Divide";
		case 112:
			return "F1";
		case 113:
			return "F2";
		case 114:
			return "F3";
		case 115:
			return "F4";
		case 116:
			return "F5";
		case 117:
			return "F6";
		case 118:
			return "F7";
		case 119:
			return "F8";
		case 120:
			return "F9";
		case 121:
			return "F10";
		case 122:
			return "F11";
		case 123:
			return "F12";
		case 124:
			return "F13";
		case 125:
			return "F14";
		case 126:
			return "F15";
		case 127:
			return "F16";
		case 128:
			return "F17";
		case 129:
			return "F18";
		case 130:
			return "F19";
		case 131:
			return "F20";
		case 132:
			return "F21";
		case 133:
			return "F22";
		case 134:
			return "F23";
		case 135:
			return "F24";
		case 144:
			return "NumLock";
		case 145:
			return "ScrollLock";
		case 146:
			return "WinOemFjJisho";
		case 147:
			return "WinOemFjMasshou";
		case 148:
			return "WinOemFjTouroku";
		case 149:
			return "WinOemFjLoya";
		case 150:
			return "WinOemFjRoya";
		case 160:
			return "Circumflex";
		case 161:
			return "Exclamation";
		case 162:
			return "DoubleQuote";
		case 163:
			return "Hash";
		case 164:
			return "Dollar";
		case 165:
			return "Percent";
		case 166:
			return "Ampersand";
		case 167:
			return "Underscore";
		case 168:
			return "OpenParen";
		case 169:
			return "CloseParen";
		case 170:
			return "Asterisk";
		case 171:
			return "Plus";
		case 172:
			return "Pipe";
		case 173:
			return "HyphenMinus";
		case 174:
			return "OpenCurlyBracket";
		case 175:
			return "CloseCurlyBracket";
		case 176:
			return "Tilde";
		case 181:
			return "VolumeMute";
		case 182:
			return "VolumeDown";
		case 183:
			return "VolumeUp";
		case 188:
			return "Comma";
		case 190:
			return "Period";
		case 191:
			return "Slash";
		case 192:
			return "BackQuote";
		case 219:
			return "OpenBracket";
		case 220:
			return "BackSlash";
		case 221:
			return "CloseBracket";
		case 222:
			return "Quote";
		case 224:
			return "Meta";
		case 225:
			return "AltGr";
		case 227:
			return "WinIcoHelp";
		case 228:
			return "WinIco00";
		case 230:
			return "WinIcoClear";
		case 233:
			return "WinOemReset";
		case 234:
			return "WinOemJump";
		case 235:
			return "WinOemPA1";
		case 236:
			return "WinOemPA2";
		case 237:
			return "WinOemPA3";
		case 238:
			return "WinOemWSCTRL";
		case 239:
			return "WinOemCUSEL";
		case 240:
			return "WinOemATTN";
		case 241:
			return "WinOemFinish";
		case 242:
			return "WinOemCopy";
		case 243:
			return "WinOemAuto";
		case 244:
			return "WinOemENLW";
		case 245:
			return "WinOemBackTab";
		case 246:
			return "ATTN";
		case 247:
			return "CRSEL";
		case 248:
			return "EXSEL";
		case 249:
			return "EREOF";
		case 250:
			return "Play";
		case 251:
			return "Zoom";
		case 253:
			return "PA1";
		case 254:
			return "WinOemClear";
		default:
			return String.fromCodePoint(keycode);
		}
	}
}
$hxClasses["armory.ui.Ext"] = armory_ui_Ext;
armory_ui_Ext.__name__ = "armory.ui.Ext";
class armory_ui_Popup {
	static render(g) {
		if(armory_ui_Popup.boxCommands == null) {
			armory_ui_Popup.ui.begin(g);
			if(armory_ui_Popup.ui.window(armory_ui_Popup.hwnd,armory_ui_Popup.modalX,armory_ui_Popup.modalY,armory_ui_Popup.modalW,armory_ui_Popup.modalH)) {
				armory_ui_Popup.drawTitle(g);
				let _g = 0;
				let _g1 = armory_ui_Popup.boxText.split("\n");
				while(_g < _g1.length) {
					let line = _g1[_g];
					++_g;
					armory_ui_Popup.ui.text(line);
				}
				armory_ui_Popup.ui._y = armory_ui_Popup.ui._h - armory_ui_Popup.ui.t.BUTTON_H - 10;
				armory_ui_Popup.ui.row([0.33333333333333331,0.33333333333333331,0.33333333333333331]);
				armory_ui_Popup.ui.endElement();
				if(armory_ui_Popup.ui.button("OK")) {
					armory_ui_Popup.show = false;
				}
			}
			armory_ui_Popup.ui.end();
		} else {
			armory_ui_Popup.ui.begin(g);
			if(armory_ui_Popup.ui.window(armory_ui_Popup.hwnd,armory_ui_Popup.modalX,armory_ui_Popup.modalY,armory_ui_Popup.modalW,armory_ui_Popup.modalH)) {
				armory_ui_Popup.drawTitle(g);
				armory_ui_Popup.ui._y += 10;
				armory_ui_Popup.boxCommands(armory_ui_Popup.ui);
			}
			armory_ui_Popup.ui.end();
		}
	}
	static drawTitle(g) {
		if(armory_ui_Popup.boxTitle != "") {
			g.set_color(armory_ui_Popup.ui.t.SEPARATOR_COL);
			let _this = armory_ui_Popup.ui;
			let x = armory_ui_Popup.ui._x;
			let y = armory_ui_Popup.ui._y;
			let w = armory_ui_Popup.ui._w;
			let h = armory_ui_Popup.ui.t.BUTTON_H;
			let strength = 0.0;
			if(strength == 0.0) {
				strength = 1;
			}
			if(!_this.enabled) {
				_this.fadeColor();
			}
			g.fillRect(x,y - 1,w,h + 1);
			g.set_color(armory_ui_Popup.ui.t.TEXT_COL);
			armory_ui_Popup.ui.text(armory_ui_Popup.boxTitle);
		}
	}
	static update() {
		let inUse = armory_ui_Popup.ui.comboSelectedHandle != null;
		if(armory_ui_Popup.ui.inputStarted && !inUse) {
			if(armory_ui_Popup.ui.inputX < armory_ui_Popup.modalX || armory_ui_Popup.ui.inputX > armory_ui_Popup.modalX + armory_ui_Popup.modalW || armory_ui_Popup.ui.inputY < armory_ui_Popup.modalY || armory_ui_Popup.ui.inputY > armory_ui_Popup.modalY + armory_ui_Popup.modalH) {
				armory_ui_Popup.show = false;
			}
		}
	}
	static showMessage(ui,title,text) {
		armory_ui_Popup.ui = ui;
		armory_ui_Popup.init();
		armory_ui_Popup.boxTitle = title;
		armory_ui_Popup.boxText = text;
		armory_ui_Popup.boxCommands = null;
	}
	static showCustom(ui,commands,mx,my,mw,mh) {
		if(mh == null) {
			mh = 160;
		}
		if(mw == null) {
			mw = 400;
		}
		if(my == null) {
			my = -1;
		}
		if(mx == null) {
			mx = -1;
		}
		armory_ui_Popup.ui = ui;
		armory_ui_Popup.init(mx,my,mw,mh);
		armory_ui_Popup.boxTitle = "";
		armory_ui_Popup.boxText = "";
		armory_ui_Popup.boxCommands = commands;
	}
	static init(mx,my,mw,mh) {
		if(mh == null) {
			mh = 160;
		}
		if(mw == null) {
			mw = 400;
		}
		if(my == null) {
			my = -1;
		}
		if(mx == null) {
			mx = -1;
		}
		let appW = kha_System.windowWidth();
		let appH = kha_System.windowHeight();
		armory_ui_Popup.modalX = mx;
		armory_ui_Popup.modalY = my;
		armory_ui_Popup.modalW = mw * armory_ui_Popup.ui.ops.scaleFactor | 0;
		armory_ui_Popup.modalH = mh * armory_ui_Popup.ui.ops.scaleFactor | 0;
		if(mx == -1) {
			armory_ui_Popup.modalX = appW / 2 - armory_ui_Popup.modalW / 2 | 0;
		}
		if(my == -1) {
			armory_ui_Popup.modalY = appH / 2 - armory_ui_Popup.modalH / 2 | 0;
		}
		armory_ui_Popup.modalX = Math.max(0,Math.min(armory_ui_Popup.modalX,appW - armory_ui_Popup.modalW)) | 0;
		armory_ui_Popup.modalY = Math.max(0,Math.min(armory_ui_Popup.modalY,appH - armory_ui_Popup.modalH)) | 0;
		armory_ui_Popup.hwnd.dragX = 0;
		armory_ui_Popup.hwnd.dragY = 0;
		armory_ui_Popup.hwnd.scrollOffset = 0.0;
		armory_ui_Popup.show = true;
	}
}
$hxClasses["armory.ui.Popup"] = armory_ui_Popup;
armory_ui_Popup.__name__ = "armory.ui.Popup";
class haxe_IMap {
}
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
class haxe_Log {
	static formatOutput(v,infos) {
		let str = Std.string(v);
		if(infos == null) {
			return str;
		}
		let pstr = infos.fileName + ":" + infos.lineNumber;
		if(infos.customParams != null) {
			let _g = 0;
			let _g1 = infos.customParams;
			while(_g < _g1.length) {
				let v = _g1[_g];
				++_g;
				str += ", " + Std.string(v);
			}
		}
		return pstr + ": " + str;
	}
	static trace(v,infos) {
		let str = haxe_Log.formatOutput(v,infos);
		if(typeof(console) != "undefined" && console.log != null) {
			console.log(str);
		}
	}
}
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
class haxe__$Unserializer_DefaultResolver {
	constructor() {
	}
	resolveClass(name) {
		return $hxClasses[name];
	}
	resolveEnum(name) {
		return $hxEnums[name];
	}
}
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
Object.assign(haxe__$Unserializer_DefaultResolver.prototype, {
	__class__: haxe__$Unserializer_DefaultResolver
});
class haxe_Unserializer {
	constructor(buf) {
		this.buf = buf;
		this.length = this.buf.length;
		this.pos = 0;
		this.scache = [];
		this.cache = [];
		let r = haxe_Unserializer.DEFAULT_RESOLVER;
		if(r == null) {
			r = new haxe__$Unserializer_DefaultResolver();
			haxe_Unserializer.DEFAULT_RESOLVER = r;
		}
		this.resolver = r;
	}
	readDigits() {
		let k = 0;
		let s = false;
		let fpos = this.pos;
		while(true) {
			let c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	readFloat() {
		let p1 = this.pos;
		while(true) {
			let c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	unserializeObject(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			let k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			let v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	unserializeEnum(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		let nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		let args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	unserialize() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			let name = this.unserialize();
			let cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			let name1 = this.unserialize();
			let e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name1);
			}
			return e;
		case 67:
			let name2 = this.unserialize();
			let cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw haxe_Exception.thrown("Class not found " + name2);
			}
			let o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			let h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			let buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				let s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			let n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			let buf1 = this.buf;
			let a = [];
			this.cache.push(a);
			while(true) {
				let c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					let n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			let h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			let buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				let s = this.unserialize();
				let value = this.unserialize();
				h1.h[s] = value;
			}
			this.pos++;
			return h1;
		case 99:
			let name3 = this.unserialize();
			let cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw haxe_Exception.thrown("Class not found " + name3);
			}
			let o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			let name4 = this.unserialize();
			let edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name4);
			}
			this.pos++;
			let index = this.readDigits();
			let _this = edecl.__constructs__;
			let result = new Array(_this.length);
			let _g = 0;
			let _g1 = _this.length;
			while(_g < _g1) {
				let i = _g++;
				result[i] = _this[i]._hx_name;
			}
			let tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name4 + "@" + index);
			}
			let e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			let l = new haxe_ds_List();
			this.cache.push(l);
			let buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			let o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			let h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			let buf4 = this.buf;
			let c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				let i = this.readDigits();
				let value = this.unserialize();
				h2.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h2;
		case 114:
			let n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n1];
		case 115:
			let len = this.readDigits();
			let buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			let codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			let i = this.pos;
			let rest = len & 3;
			let size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			let max = i + (len - rest);
			let bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			let bpos = 0;
			while(i < max) {
				let c1 = codes[buf5.charCodeAt(i++)];
				let c2 = codes[buf5.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				let c3 = codes[buf5.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				let c4 = codes[buf5.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				let c1 = codes[buf5.charCodeAt(i++)];
				let c2 = codes[buf5.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					let c3 = codes[buf5.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			let d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			let name5 = this.unserialize();
			let edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw haxe_Exception.thrown("Enum not found " + name5);
			}
			let e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			let len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			let s = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	static initCodes() {
		let codes = [];
		let _g = 0;
		let _g1 = haxe_Unserializer.BASE64.length;
		while(_g < _g1) {
			let i = _g++;
			codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
		}
		return codes;
	}
	static run(v) {
		return new haxe_Unserializer(v).unserialize();
	}
}
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
Object.assign(haxe_Unserializer.prototype, {
	__class__: haxe_Unserializer
	,buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
});
class haxe_ValueException extends haxe_Exception {
	constructor(value,previous,native) {
		super(String(value),previous,native);
		this.value = value;
	}
	unwrap() {
		return this.value;
	}
}
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
Object.assign(haxe_ValueException.prototype, {
	__class__: haxe_ValueException
	,value: null
});
class haxe_ds_IntMap {
	constructor() {
		this.h = { };
	}
	remove(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	keys() {
		let a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	iterator() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			let i = this.it.next();
			return this.ref[i];
		}};
	}
}
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_IntMap.prototype, {
	__class__: haxe_ds_IntMap
	,h: null
});
class haxe_ds_List {
	constructor() {
		this.length = 0;
	}
	add(item) {
		let x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
}
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
Object.assign(haxe_ds_List.prototype, {
	__class__: haxe_ds_List
	,h: null
	,q: null
	,length: null
});
class haxe_ds__$List_ListNode {
	constructor(item,next) {
		this.item = item;
		this.next = next;
	}
}
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
Object.assign(haxe_ds__$List_ListNode.prototype, {
	__class__: haxe_ds__$List_ListNode
	,item: null
	,next: null
});
class haxe_ds_ObjectMap {
	constructor() {
		this.h = { __keys__ : { }};
	}
	set(key,value) {
		let id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	remove(key) {
		let id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	keys() {
		let a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
}
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_ObjectMap.prototype, {
	__class__: haxe_ds_ObjectMap
	,h: null
});
class haxe_ds_StringMap {
	constructor() {
		this.h = Object.create(null);
	}
}
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_StringMap.prototype, {
	__class__: haxe_ds_StringMap
	,h: null
});
class haxe_exceptions_NotImplementedException extends haxe_exceptions_PosException {
	constructor(message,previous,pos) {
		if(message == null) {
			message = "Not implemented";
		}
		super(message,previous,pos);
	}
}
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
Object.assign(haxe_exceptions_NotImplementedException.prototype, {
	__class__: haxe_exceptions_NotImplementedException
});
class haxe_io_Bytes {
	constructor(data) {
		this.length = data.byteLength;
		this.b = new Uint8Array(data);
		this.b.bufferValue = data;
		data.hxBytes = this;
		data.bytes = this.b;
	}
	blit(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	sub(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	getDouble(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	getFloat(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	setDouble(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	setFloat(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	getUInt16(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	getInt32(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	setInt32(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	getString(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		let s = "";
		let b = this.b;
		let i = pos;
		let max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			let debug = pos > 0;
			while(i < max) {
				let c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					let code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					let c2 = b[i++];
					let code = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else {
					let c2 = b[i++];
					let c3 = b[i++];
					let u = (c & 15) << 18 | (c2 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				let c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	toString() {
		return this.getString(0,this.length);
	}
	static ofString(s,encoding) {
		if(encoding == haxe_io_Encoding.RawNative) {
			let buf = new Uint8Array(s.length << 1);
			let _g = 0;
			let _g1 = s.length;
			while(_g < _g1) {
				let i = _g++;
				let c = s.charCodeAt(i);
				buf[i << 1] = c & 255;
				buf[i << 1 | 1] = c >> 8;
			}
			return new haxe_io_Bytes(buf.buffer);
		}
		let a = [];
		let i = 0;
		while(i < s.length) {
			let c = s.charCodeAt(i++);
			if(55296 <= c && c <= 56319) {
				c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
			}
			if(c <= 127) {
				a.push(c);
			} else if(c <= 2047) {
				a.push(192 | c >> 6);
				a.push(128 | c & 63);
			} else if(c <= 65535) {
				a.push(224 | c >> 12);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			} else {
				a.push(240 | c >> 18);
				a.push(128 | c >> 12 & 63);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			}
		}
		return new haxe_io_Bytes(new Uint8Array(a).buffer);
	}
	static ofData(b) {
		let hb = b.hxBytes;
		if(hb != null) {
			return hb;
		}
		return new haxe_io_Bytes(b);
	}
}
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
Object.assign(haxe_io_Bytes.prototype, {
	__class__: haxe_io_Bytes
	,length: null
	,b: null
	,data: null
});
class haxe_io_BytesBuffer {
	constructor() {
		this.pos = 0;
		this.size = 0;
	}
	addByte(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	addBytes(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		let sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	grow(delta) {
		let req = this.pos + delta;
		let nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		let nbuf = new ArrayBuffer(nsize);
		let nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	getBytes() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		let b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
}
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
Object.assign(haxe_io_BytesBuffer.prototype, {
	__class__: haxe_io_BytesBuffer
	,buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
});
class haxe_io_Input {
	readByte() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	readBytes(s,pos,len) {
		let k = len;
		let b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	set_bigEndian(b) {
		this.bigEndian = b;
		return b;
	}
	readFullBytes(s,pos,len) {
		while(len > 0) {
			let k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	read(nbytes) {
		let s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		let p = 0;
		while(nbytes > 0) {
			let k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	readFloat() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	readInt8() {
		let n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	readInt16() {
		let ch1 = this.readByte();
		let ch2 = this.readByte();
		let n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	readUInt16() {
		let ch1 = this.readByte();
		let ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	readInt32() {
		let ch1 = this.readByte();
		let ch2 = this.readByte();
		let ch3 = this.readByte();
		let ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	readString(len,encoding) {
		let b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
}
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
Object.assign(haxe_io_Input.prototype, {
	__class__: haxe_io_Input
	,bigEndian: null
	,__properties__: {set_bigEndian: "set_bigEndian"}
});
class haxe_io_BytesInput extends haxe_io_Input {
	constructor(b,pos,len) {
		super();
		if(pos == null) {
			pos = 0;
		}
		if(len == null) {
			len = b.length - pos;
		}
		if(pos < 0 || len < 0 || pos + len > b.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		this.b = b.b;
		this.pos = pos;
		this.len = len;
		this.totlen = len;
	}
	set_position(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	readByte() {
		if(this.len == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	readBytes(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		let b1 = this.b;
		let b2 = buf.b;
		let _g = 0;
		let _g1 = len;
		while(_g < _g1) {
			let i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
}
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
Object.assign(haxe_io_BytesInput.prototype, {
	__class__: haxe_io_BytesInput
	,b: null
	,pos: null
	,len: null
	,totlen: null
	,__properties__: Object.assign({}, haxe_io_Input.prototype.__properties__, {set_position: "set_position"})
});
class haxe_io_Output {
	writeByte(c) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Output.hx", lineNumber : 47, className : "haxe.io.Output", methodName : "writeByte"});
	}
	writeBytes(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		let b = s.b;
		let k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	write(s) {
		let l = s.length;
		let p = 0;
		while(l > 0) {
			let k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	writeFloat(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	writeInt32(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
}
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
Object.assign(haxe_io_Output.prototype, {
	__class__: haxe_io_Output
	,bigEndian: null
});
class haxe_io_BytesOutput extends haxe_io_Output {
	constructor() {
		super();
		this.b = new haxe_io_BytesBuffer();
	}
	writeByte(c) {
		this.b.addByte(c);
	}
	writeBytes(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	getBytes() {
		return this.b.getBytes();
	}
}
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
Object.assign(haxe_io_BytesOutput.prototype, {
	__class__: haxe_io_BytesOutput
	,b: null
});
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
class haxe_io_Eof {
	constructor() {
	}
	toString() {
		return "Eof";
	}
}
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
Object.assign(haxe_io_Eof.prototype, {
	__class__: haxe_io_Eof
});
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
class haxe_io_FPHelper {
	static i32ToFloat(i) {
		haxe_io_FPHelper.helper.setInt32(0,i,true);
		return haxe_io_FPHelper.helper.getFloat32(0,true);
	}
	static floatToI32(f) {
		haxe_io_FPHelper.helper.setFloat32(0,f,true);
		return haxe_io_FPHelper.helper.getInt32(0,true);
	}
}
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
Object.assign(haxe_iterators_ArrayIterator.prototype, {
	__class__: haxe_iterators_ArrayIterator
	,array: null
	,current: null
});
var haxe_macro_StringLiteralKind = $hxEnums["haxe.macro.StringLiteralKind"] = { __ename__:true,__constructs__:null
	,DoubleQuotes: {_hx_name:"DoubleQuotes",_hx_index:0,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
	,SingleQuotes: {_hx_name:"SingleQuotes",_hx_index:1,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
};
haxe_macro_StringLiteralKind.__constructs__ = [haxe_macro_StringLiteralKind.DoubleQuotes,haxe_macro_StringLiteralKind.SingleQuotes];
var haxe_macro_Constant = $hxEnums["haxe.macro.Constant"] = { __ename__:true,__constructs__:null
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f"],$_)
	,CString: ($_=function(s,kind) { return {_hx_index:2,s:s,kind:kind,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s","kind"],$_)
	,CIdent: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CIdent",$_.__params__ = ["s"],$_)
	,CRegexp: ($_=function(r,opt) { return {_hx_index:4,r:r,opt:opt,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CRegexp",$_.__params__ = ["r","opt"],$_)
};
haxe_macro_Constant.__constructs__ = [haxe_macro_Constant.CInt,haxe_macro_Constant.CFloat,haxe_macro_Constant.CString,haxe_macro_Constant.CIdent,haxe_macro_Constant.CRegexp];
var haxe_macro_Binop = $hxEnums["haxe.macro.Binop"] = { __ename__:true,__constructs__:null
	,OpAdd: {_hx_name:"OpAdd",_hx_index:0,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMult: {_hx_name:"OpMult",_hx_index:1,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpDiv: {_hx_name:"OpDiv",_hx_index:2,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpSub: {_hx_name:"OpSub",_hx_index:3,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssign: {_hx_name:"OpAssign",_hx_index:4,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpEq: {_hx_name:"OpEq",_hx_index:5,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNotEq: {_hx_name:"OpNotEq",_hx_index:6,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGt: {_hx_name:"OpGt",_hx_index:7,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGte: {_hx_name:"OpGte",_hx_index:8,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLt: {_hx_name:"OpLt",_hx_index:9,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLte: {_hx_name:"OpLte",_hx_index:10,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAnd: {_hx_name:"OpAnd",_hx_index:11,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpOr: {_hx_name:"OpOr",_hx_index:12,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpXor: {_hx_name:"OpXor",_hx_index:13,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolAnd: {_hx_name:"OpBoolAnd",_hx_index:14,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolOr: {_hx_name:"OpBoolOr",_hx_index:15,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShl: {_hx_name:"OpShl",_hx_index:16,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShr: {_hx_name:"OpShr",_hx_index:17,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpUShr: {_hx_name:"OpUShr",_hx_index:18,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMod: {_hx_name:"OpMod",_hx_index:19,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"haxe.macro.Binop",toString:$estr}; },$_._hx_name="OpAssignOp",$_.__params__ = ["op"],$_)
	,OpInterval: {_hx_name:"OpInterval",_hx_index:21,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpArrow: {_hx_name:"OpArrow",_hx_index:22,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpIn: {_hx_name:"OpIn",_hx_index:23,__enum__:"haxe.macro.Binop",toString:$estr}
};
haxe_macro_Binop.__constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpAssignOp,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn];
var haxe_macro_Unop = $hxEnums["haxe.macro.Unop"] = { __ename__:true,__constructs__:null
	,OpIncrement: {_hx_name:"OpIncrement",_hx_index:0,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpDecrement: {_hx_name:"OpDecrement",_hx_index:1,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNot: {_hx_name:"OpNot",_hx_index:2,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNeg: {_hx_name:"OpNeg",_hx_index:3,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNegBits: {_hx_name:"OpNegBits",_hx_index:4,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpSpread: {_hx_name:"OpSpread",_hx_index:5,__enum__:"haxe.macro.Unop",toString:$estr}
};
haxe_macro_Unop.__constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
var haxe_macro_FunctionKind = $hxEnums["haxe.macro.FunctionKind"] = { __ename__:true,__constructs__:null
	,FAnonymous: {_hx_name:"FAnonymous",_hx_index:0,__enum__:"haxe.macro.FunctionKind",toString:$estr}
	,FNamed: ($_=function(name,inlined) { return {_hx_index:1,name:name,inlined:inlined,__enum__:"haxe.macro.FunctionKind",toString:$estr}; },$_._hx_name="FNamed",$_.__params__ = ["name","inlined"],$_)
	,FArrow: {_hx_name:"FArrow",_hx_index:2,__enum__:"haxe.macro.FunctionKind",toString:$estr}
};
haxe_macro_FunctionKind.__constructs__ = [haxe_macro_FunctionKind.FAnonymous,haxe_macro_FunctionKind.FNamed,haxe_macro_FunctionKind.FArrow];
var haxe_macro_ExprDef = $hxEnums["haxe.macro.ExprDef"] = { __ename__:true,__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EArray: ($_=function(e1,e2) { return {_hx_index:1,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e1","e2"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:2,op:op,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EField: ($_=function(e,field) { return {_hx_index:3,e:e,field:field,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","field"],$_)
	,EParenthesis: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EParenthesis",$_.__params__ = ["e"],$_)
	,EObjectDecl: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EObjectDecl",$_.__params__ = ["fields"],$_)
	,EArrayDecl: ($_=function(values) { return {_hx_index:6,values:values,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["values"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:7,e:e,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,ENew: ($_=function(t,params) { return {_hx_index:8,t:t,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["t","params"],$_)
	,EUnop: ($_=function(op,postFix,e) { return {_hx_index:9,op:op,postFix:postFix,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","postFix","e"],$_)
	,EVars: ($_=function(vars) { return {_hx_index:10,vars:vars,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EVars",$_.__params__ = ["vars"],$_)
	,EFunction: ($_=function(kind,f) { return {_hx_index:11,kind:kind,f:f,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["kind","f"],$_)
	,EBlock: ($_=function(exprs) { return {_hx_index:12,exprs:exprs,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["exprs"],$_)
	,EFor: ($_=function(it,expr) { return {_hx_index:13,it:it,expr:expr,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["it","expr"],$_)
	,EIf: ($_=function(econd,eif,eelse) { return {_hx_index:14,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,EWhile: ($_=function(econd,e,normalWhile) { return {_hx_index:15,econd:econd,e:e,normalWhile:normalWhile,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["econd","e","normalWhile"],$_)
	,ESwitch: ($_=function(e,cases,edef) { return {_hx_index:16,e:e,cases:cases,edef:edef,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","edef"],$_)
	,ETry: ($_=function(e,catches) { return {_hx_index:17,e:e,catches:catches,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","catches"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:18,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:19,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:20,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EUntyped: ($_=function(e) { return {_hx_index:21,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUntyped",$_.__params__ = ["e"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:22,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ECast: ($_=function(e,t) { return {_hx_index:23,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECast",$_.__params__ = ["e","t"],$_)
	,EDisplay: ($_=function(e,displayKind) { return {_hx_index:24,e:e,displayKind:displayKind,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EDisplay",$_.__params__ = ["e","displayKind"],$_)
	,EDisplayNew: ($_=function(t) { return {_hx_index:25,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EDisplayNew",$_.__params__ = ["t"],$_)
	,ETernary: ($_=function(econd,eif,eelse) { return {_hx_index:26,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["econd","eif","eelse"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:27,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
	,EMeta: ($_=function(s,e) { return {_hx_index:28,s:s,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["s","e"],$_)
	,EIs: ($_=function(e,t) { return {_hx_index:29,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIs",$_.__params__ = ["e","t"],$_)
};
haxe_macro_ExprDef.__constructs__ = [haxe_macro_ExprDef.EConst,haxe_macro_ExprDef.EArray,haxe_macro_ExprDef.EBinop,haxe_macro_ExprDef.EField,haxe_macro_ExprDef.EParenthesis,haxe_macro_ExprDef.EObjectDecl,haxe_macro_ExprDef.EArrayDecl,haxe_macro_ExprDef.ECall,haxe_macro_ExprDef.ENew,haxe_macro_ExprDef.EUnop,haxe_macro_ExprDef.EVars,haxe_macro_ExprDef.EFunction,haxe_macro_ExprDef.EBlock,haxe_macro_ExprDef.EFor,haxe_macro_ExprDef.EIf,haxe_macro_ExprDef.EWhile,haxe_macro_ExprDef.ESwitch,haxe_macro_ExprDef.ETry,haxe_macro_ExprDef.EReturn,haxe_macro_ExprDef.EBreak,haxe_macro_ExprDef.EContinue,haxe_macro_ExprDef.EUntyped,haxe_macro_ExprDef.EThrow,haxe_macro_ExprDef.ECast,haxe_macro_ExprDef.EDisplay,haxe_macro_ExprDef.EDisplayNew,haxe_macro_ExprDef.ETernary,haxe_macro_ExprDef.ECheckType,haxe_macro_ExprDef.EMeta,haxe_macro_ExprDef.EIs];
var haxe_macro_DisplayKind = $hxEnums["haxe.macro.DisplayKind"] = { __ename__:true,__constructs__:null
	,DKCall: {_hx_name:"DKCall",_hx_index:0,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKDot: {_hx_name:"DKDot",_hx_index:1,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKStructure: {_hx_name:"DKStructure",_hx_index:2,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKMarked: {_hx_name:"DKMarked",_hx_index:3,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKPattern: ($_=function(outermost) { return {_hx_index:4,outermost:outermost,__enum__:"haxe.macro.DisplayKind",toString:$estr}; },$_._hx_name="DKPattern",$_.__params__ = ["outermost"],$_)
};
haxe_macro_DisplayKind.__constructs__ = [haxe_macro_DisplayKind.DKCall,haxe_macro_DisplayKind.DKDot,haxe_macro_DisplayKind.DKStructure,haxe_macro_DisplayKind.DKMarked,haxe_macro_DisplayKind.DKPattern];
var haxe_macro_ComplexType = $hxEnums["haxe.macro.ComplexType"] = { __ename__:true,__constructs__:null
	,TPath: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TPath",$_.__params__ = ["p"],$_)
	,TFunction: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TFunction",$_.__params__ = ["args","ret"],$_)
	,TAnonymous: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TAnonymous",$_.__params__ = ["fields"],$_)
	,TParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TParent",$_.__params__ = ["t"],$_)
	,TExtend: ($_=function(p,fields) { return {_hx_index:4,p:p,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TExtend",$_.__params__ = ["p","fields"],$_)
	,TOptional: ($_=function(t) { return {_hx_index:5,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TOptional",$_.__params__ = ["t"],$_)
	,TNamed: ($_=function(n,t) { return {_hx_index:6,n:n,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TNamed",$_.__params__ = ["n","t"],$_)
	,TIntersection: ($_=function(tl) { return {_hx_index:7,tl:tl,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TIntersection",$_.__params__ = ["tl"],$_)
};
haxe_macro_ComplexType.__constructs__ = [haxe_macro_ComplexType.TPath,haxe_macro_ComplexType.TFunction,haxe_macro_ComplexType.TAnonymous,haxe_macro_ComplexType.TParent,haxe_macro_ComplexType.TExtend,haxe_macro_ComplexType.TOptional,haxe_macro_ComplexType.TNamed,haxe_macro_ComplexType.TIntersection];
class haxe_macro_Error extends haxe_Exception {
	constructor(message,pos,previous) {
		super(message,previous);
		this.pos = pos;
	}
}
$hxClasses["haxe.macro.Error"] = haxe_macro_Error;
haxe_macro_Error.__name__ = "haxe.macro.Error";
haxe_macro_Error.__super__ = haxe_Exception;
Object.assign(haxe_macro_Error.prototype, {
	__class__: haxe_macro_Error
	,pos: null
});
class iron_RenderPath {
	constructor() {
		this.depthBuffers = [];
		this.cachedShaderContexts = new haxe_ds_StringMap();
		this.loading = 0;
		this.lastFrameTime = 0.0;
		this.viewportScaled = false;
		this.scissorSet = false;
		this.lastH = 0;
		this.lastW = 0;
		this.depthToRenderTarget = new haxe_ds_StringMap();
		this.renderTargets = new haxe_ds_StringMap();
		this.setupDepthTexture = null;
		this.commands = null;
		this.paused = false;
		this.drawOrder = 0;
		this.currentG = null;
		this.isProbe = false;
		this.isProbeCube = false;
		this.isProbePlanar = false;
		this.point = null;
		this.sun = null;
		this.light = null;
		this.currentTarget = null;
		this.frame = 0;
		this.frameTime = 0.0;
		this.frameScissorH = 0;
		this.frameScissorW = 0;
		this.frameScissorY = 0;
		this.frameScissorX = 0;
		this.frameScissor = false;
	}
	get_ready() {
		return this.loading == 0;
	}
	renderFrame(g) {
		if(!this.get_ready() || this.paused || iron_App.w() == 0 || iron_App.h() == 0) {
			return;
		}
		if(this.lastW > 0 && (this.lastW != iron_App.w() || this.lastH != iron_App.h())) {
			this.resize();
		}
		this.lastW = iron_App.w();
		this.lastH = iron_App.h();
		this.frameTime = kha_Scheduler.time() - this.lastFrameTime;
		this.lastFrameTime = kha_Scheduler.time();
		iron_RenderPath.drawCalls = 0;
		iron_RenderPath.batchBuckets = 0;
		iron_RenderPath.batchCalls = 0;
		iron_RenderPath.culled = 0;
		iron_RenderPath.numTrisMesh = 0;
		iron_RenderPath.numTrisShadow = 0;
		let cam = iron_Scene.active.camera;
		this.isProbePlanar = cam != null && cam.renderTarget != null;
		this.isProbeCube = cam != null && cam.renderTargetCube != null;
		this.isProbe = this.isProbePlanar || this.isProbeCube;
		if(this.isProbePlanar) {
			this.frameG = cam.renderTarget.get_g4();
		} else if(this.isProbeCube) {
			this.frameG = cam.renderTargetCube.get_g4();
		} else {
			this.frameG = g;
		}
		this.currentW = iron_App.w();
		this.currentH = iron_App.h();
		this.currentD = 1;
		this.currentFace = -1;
		this.meshesSorted = false;
		let _g = 0;
		let _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			let l = _g1[_g];
			++_g;
			if(l.visible) {
				l.buildMatrix(iron_Scene.active.camera);
			}
			if(l.data.raw.type == "sun") {
				this.sun = l;
			} else {
				this.point = l;
			}
		}
		this.light = iron_Scene.active.lights[0];
		this.commands();
		if(!this.isProbe) {
			this.frame++;
		}
	}
	setTarget(target,additional,viewportScale) {
		if(viewportScale == null) {
			viewportScale = 1.0;
		}
		if(target == "") {
			this.currentD = 1;
			this.currentTarget = null;
			this.currentFace = -1;
			if(this.isProbeCube) {
				this.currentW = iron_Scene.active.camera.renderTargetCube.get_width();
				this.currentH = iron_Scene.active.camera.renderTargetCube.get_height();
				let g = this.frameG;
				let additionalRenderTargets = null;
				let face = iron_Scene.active.camera.currentFace;
				if(face == null) {
					face = -1;
				}
				if(this.currentG != null) {
					if(this.scissorSet) {
						this.currentG.disableScissor();
						this.scissorSet = false;
					}
					this.currentG.end();
					this.currentG = null;
					this.bindParams = null;
				}
				this.currentG = g;
				this.additionalTargets = additionalRenderTargets;
				if(face >= 0) {
					g.beginFace(face);
				} else {
					g.begin(additionalRenderTargets);
				}
			} else {
				this.currentW = iron_App.w();
				this.currentH = iron_App.h();
				if(this.frameScissor) {
					this.setFrameScissor();
				}
				let g = this.frameG;
				let additionalRenderTargets = null;
				if(this.currentG != null) {
					if(this.scissorSet) {
						this.currentG.disableScissor();
						this.scissorSet = false;
					}
					this.currentG.end();
					this.currentG = null;
					this.bindParams = null;
				}
				this.currentG = g;
				this.additionalTargets = additionalRenderTargets;
				g.begin(additionalRenderTargets);
				if(!this.isProbe) {
					this.setCurrentViewport(iron_App.w(),iron_App.h());
					this.setCurrentScissor(iron_App.w(),iron_App.h());
				}
			}
		} else {
			let rt = this.renderTargets.h[target];
			this.currentTarget = rt;
			let additionalImages = null;
			if(additional != null) {
				additionalImages = [];
				let _g = 0;
				while(_g < additional.length) {
					let s = additional[_g];
					++_g;
					let t = this.renderTargets.h[s];
					additionalImages.push(t.image);
				}
			}
			let targetG = rt.isCubeMap ? rt.cubeMap.get_g4() : rt.image.get_g4();
			this.currentW = rt.isCubeMap ? rt.cubeMap.get_width() : rt.image.get_width();
			this.currentH = rt.isCubeMap ? rt.cubeMap.get_height() : rt.image.get_height();
			if(rt.is3D) {
				this.currentD = rt.image.get_depth();
			}
			let face = this.currentFace;
			if(face == null) {
				face = -1;
			}
			if(this.currentG != null) {
				if(this.scissorSet) {
					this.currentG.disableScissor();
					this.scissorSet = false;
				}
				this.currentG.end();
				this.currentG = null;
				this.bindParams = null;
			}
			this.currentG = targetG;
			this.additionalTargets = additionalImages;
			if(face >= 0) {
				targetG.beginFace(face);
			} else {
				targetG.begin(additionalImages);
			}
		}
		if(viewportScale != 1.0) {
			this.viewportScaled = true;
			let viewW = this.currentW * viewportScale | 0;
			let viewH = this.currentH * viewportScale | 0;
			this.currentG.viewport(0,viewH,viewW,viewH);
			this.currentG.scissor(0,viewH,viewW,viewH);
		} else if(this.viewportScaled) {
			this.viewportScaled = false;
			this.setCurrentViewport(this.currentW,this.currentH);
			this.setCurrentScissor(this.currentW,this.currentH);
		}
		this.bindParams = null;
	}
	setDepthFrom(target,from) {
		let rt = this.renderTargets.h[target];
		rt.image.setDepthStencilFrom(this.renderTargets.h[from].image);
	}
	begin(g,additionalRenderTargets,face) {
		if(face == null) {
			face = -1;
		}
		if(this.currentG != null) {
			if(this.scissorSet) {
				this.currentG.disableScissor();
				this.scissorSet = false;
			}
			this.currentG.end();
			this.currentG = null;
			this.bindParams = null;
		}
		this.currentG = g;
		this.additionalTargets = additionalRenderTargets;
		if(face >= 0) {
			g.beginFace(face);
		} else {
			g.begin(additionalRenderTargets);
		}
	}
	end() {
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	setCurrentViewportWithOffset(viewW,viewH,offsetX,offsetY) {
		this.currentG.viewport(iron_App.x() + offsetX,this.currentH - viewH + iron_App.y() - offsetY,viewW,viewH);
	}
	setCurrentViewport(viewW,viewH) {
		this.currentG.viewport(iron_App.x(),this.currentH - (viewH - iron_App.y()),viewW,viewH);
	}
	setCurrentScissor(viewW,viewH) {
		this.currentG.scissor(iron_App.x(),this.currentH - (viewH - iron_App.y()),viewW,viewH);
		this.scissorSet = true;
	}
	setFrameScissor() {
		this.frameG.scissor(this.frameScissorX,this.currentH - (this.frameScissorH - this.frameScissorY),this.frameScissorW,this.frameScissorH);
	}
	setViewport(viewW,viewH) {
		this.setCurrentViewport(viewW,viewH);
		this.setCurrentScissor(viewW,viewH);
	}
	clearTarget(colorFlag,depthFlag) {
		if(colorFlag == -1) {
			if(iron_Scene.active.world != null) {
				colorFlag = iron_Scene.active.world.raw.background_color;
			} else if(iron_Scene.active.camera != null) {
				let cc = iron_Scene.active.camera.data.raw.clear_color;
				if(cc != null) {
					colorFlag = kha_Color.fromFloats(cc.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),cc.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),cc.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
				}
			}
		}
		this.currentG.clear(colorFlag,depthFlag,null);
	}
	clearImage(target,color) {
		let rt = this.renderTargets.h[target];
		rt.image.clear(0,0,0,rt.image.get_width(),rt.image.get_height(),rt.image.get_depth(),color);
	}
	generateMipmaps(target) {
		let rt = this.renderTargets.h[target];
		rt.image.generateMipmaps(1000);
	}
	drawMeshes(context) {
		let isShadows = context == "shadowmap";
		if(isShadows) {
			if(this.light == null || !this.light.data.raw.cast_shadow || !this.light.visible || this.light.data.raw.strength == 0) {
				return;
			}
		}
		if(this.currentFace >= 0 && this.light != null) {
			this.light.setCubeFace(this.currentFace,iron_Scene.active.camera);
		}
		let drawn = false;
		if(isShadows && this.light.data.raw.type == "sun") {
			let step = this.currentH;
			let _g = 0;
			let _g1 = iron_object_LightObject.cascadeCount;
			while(_g < _g1) {
				let i = _g++;
				this.light.setCascade(iron_Scene.active.camera,i);
				this.currentG.viewport(i * step,0,step,step);
				this.submitDraw(context);
			}
			drawn = true;
		}
		if(!drawn) {
			this.submitDraw(context);
		}
		if(iron_RenderPath.contextEvents != null) {
			let ar = iron_RenderPath.contextEvents.h[context];
			if(ar != null) {
				let _g = 0;
				let _g1 = ar.length;
				while(_g < _g1) {
					let i = _g++;
					ar[i](this.currentG,i,ar.length);
				}
			}
		}
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	submitDraw(context) {
		let camera = iron_Scene.active.camera;
		let meshes = iron_Scene.active.meshes;
		iron_object_MeshObject.lastPipeline = null;
		if(!this.meshesSorted && camera != null) {
			let camX = camera.transform.world.self._30;
			let camY = camera.transform.world.self._31;
			let camZ = camera.transform.world.self._32;
			let _g = 0;
			while(_g < meshes.length) {
				let mesh = meshes[_g];
				++_g;
				let vx = camX - mesh.transform.world.self._30;
				let vy = camY - mesh.transform.world.self._31;
				let vz = camZ - mesh.transform.world.self._32;
				mesh.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			}
			if(this.drawOrder == 1) {
				iron_RenderPath.sortMeshesShader(meshes);
			} else {
				iron_RenderPath.sortMeshesDistance(meshes);
			}
			this.meshesSorted = true;
		}
		let g = this.currentG;
		let _bindParams = this.bindParams;
		let _g = 0;
		while(_g < meshes.length) {
			let m = meshes[_g];
			++_g;
			m.render(g,context,_bindParams);
		}
	}
	drawSkydome(handle) {
		if(iron_data_ConstData.skydomeVB == null) {
			iron_data_ConstData.createSkydomeData();
		}
		let cc = this.cachedShaderContexts.h[handle];
		if(cc.context == null) {
			return;
		}
		this.currentG.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(this.currentG,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(this.currentG,cc.context,null);
		this.currentG.setVertexBuffer(iron_data_ConstData.skydomeVB);
		this.currentG.setIndexBuffer(iron_data_ConstData.skydomeIB);
		this.currentG.drawIndexedVertices();
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	bindTarget(target,uniform) {
		if(this.bindParams != null) {
			this.bindParams.push(target);
			this.bindParams.push(uniform);
		} else {
			this.bindParams = [target,uniform];
		}
	}
	drawShader(handle) {
		let cc = this.cachedShaderContexts.h[handle];
		if(iron_data_ConstData.screenAlignedVB == null) {
			iron_data_ConstData.createScreenAlignedData();
		}
		this.currentG.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(this.currentG,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(this.currentG,cc.context,null);
		this.currentG.setVertexBuffer(iron_data_ConstData.screenAlignedVB);
		this.currentG.setIndexBuffer(iron_data_ConstData.screenAlignedIB);
		this.currentG.drawIndexedVertices();
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	getComputeShader(handle) {
		return Reflect.field(kha_Shaders,handle + "_comp");
	}
	loadShader(handle) {
		this.loading++;
		let cc = this.cachedShaderContexts.h[handle];
		if(cc != null) {
			this.loading--;
			return;
		}
		cc = new iron_CachedShaderContext();
		this.cachedShaderContexts.h[handle] = cc;
		let shaderPath = handle.split("/");
		let _gthis = this;
		iron_data_Data.getShader(shaderPath[0],shaderPath[1],function(res) {
			cc.context = res.getContext(shaderPath[2]);
			_gthis.loading--;
		});
	}
	unloadShader(handle) {
		let _this = this.cachedShaderContexts;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
		let shaderPath = handle.split("/");
		let _this1 = iron_data_Data.cachedShaders;
		let key = shaderPath[1];
		if(Object.prototype.hasOwnProperty.call(_this1.h,key)) {
			delete(_this1.h[key]);
		}
	}
	unload() {
		let h = this.renderTargets.h;
		let rt_h = h;
		let rt_keys = Object.keys(h);
		let rt_length = rt_keys.length;
		let rt_current = 0;
		while(rt_current < rt_length) {
			let rt = rt_h[rt_keys[rt_current++]];
			rt.unload();
		}
	}
	resize() {
		if(kha_System.windowWidth() == 0 || kha_System.windowHeight() == 0) {
			return;
		}
		let h = this.renderTargets.h;
		let rt_h = h;
		let rt_keys = Object.keys(h);
		let rt_length = rt_keys.length;
		let rt_current = 0;
		while(rt_current < rt_length) {
			let rt = rt_h[rt_keys[rt_current++]];
			if(rt == null || rt.raw.width > 0 || rt.depthStencilFrom == "" || rt == this.depthToRenderTarget.h[rt.depthStencilFrom]) {
				continue;
			}
			let nodepth = null;
			let h = this.renderTargets.h;
			let rt2_h = h;
			let rt2_keys = Object.keys(h);
			let rt2_length = rt2_keys.length;
			let rt2_current = 0;
			while(rt2_current < rt2_length) {
				let rt2 = rt2_h[rt2_keys[rt2_current++]];
				if(rt2 == null || rt2.raw.width > 0 || rt2.depthStencilFrom != "" || this.depthToRenderTarget.h[rt2.raw.depth_buffer] != null) {
					continue;
				}
				nodepth = rt2;
				break;
			}
			if(nodepth != null) {
				rt.image.setDepthStencilFrom(nodepth.image);
			}
		}
		let h1 = this.renderTargets.h;
		let rt_h1 = h1;
		let rt_keys1 = Object.keys(h1);
		let rt_length1 = rt_keys1.length;
		let rt_current1 = 0;
		while(rt_current1 < rt_length1) {
			let rt = rt_h1[rt_keys1[rt_current1++]];
			if(rt != null && rt.raw.width == 0) {
				iron_App.notifyOnInit(($_=rt.image,$bind($_,$_.unload)));
				rt.image = this.createImage(rt.raw,rt.depthStencil);
			}
		}
		let h2 = this.renderTargets.h;
		let rt_h2 = h2;
		let rt_keys2 = Object.keys(h2);
		let rt_length2 = rt_keys2.length;
		let rt_current2 = 0;
		while(rt_current2 < rt_length2) {
			let rt = rt_h2[rt_keys2[rt_current2++]];
			if(rt != null && rt.depthStencilFrom != "") {
				rt.image.setDepthStencilFrom(this.depthToRenderTarget.h[rt.depthStencilFrom].image);
			}
		}
	}
	createRenderTarget(t) {
		let rt = this.createTarget(t);
		this.renderTargets.h[t.name] = rt;
		return rt;
	}
	createDepthBuffer(name,format) {
		this.depthBuffers.push({ name : name, format : format});
	}
	createTarget(t) {
		let rt = new iron_RenderTarget(t);
		if(t.depth_buffer != null) {
			rt.hasDepth = true;
			let depthTarget = this.depthToRenderTarget.h[t.depth_buffer];
			if(depthTarget == null) {
				let _g = 0;
				let _g1 = this.depthBuffers;
				while(_g < _g1.length) {
					let db = _g1[_g];
					++_g;
					if(db.name == t.depth_buffer) {
						this.depthToRenderTarget.h[db.name] = rt;
						let s = db.format;
						let tmp;
						if(s == null || s == "") {
							tmp = 1;
						} else {
							switch(s) {
							case "DEPTH16":
								tmp = 5;
								break;
							case "DEPTH24":
								tmp = 1;
								break;
							default:
								tmp = 1;
							}
						}
						rt.depthStencil = tmp;
						rt.image = this.createImage(t,rt.depthStencil);
						break;
					}
				}
			} else {
				rt.depthStencil = 0;
				rt.depthStencilFrom = t.depth_buffer;
				rt.image = this.createImage(t,rt.depthStencil);
				rt.image.setDepthStencilFrom(depthTarget.image);
			}
		} else {
			rt.hasDepth = false;
			if(t.depth != null && t.depth > 1) {
				rt.is3D = true;
			}
			if(t.is_cubemap) {
				rt.isCubeMap = true;
				rt.depthStencil = 0;
				rt.cubeMap = this.createCubeMap(t,rt.depthStencil);
			} else {
				rt.depthStencil = 0;
				rt.image = this.createImage(t,rt.depthStencil);
			}
		}
		return rt;
	}
	createImage(t,depthStencil) {
		let width = t.width == 0 ? iron_App.w() : t.width;
		let height = t.height == 0 ? iron_App.h() : t.height;
		let depth = t.depth != null ? t.depth : 0;
		if(t.displayp != null) {
			if(width > height) {
				width = width * (t.displayp / height) | 0;
				height = t.displayp;
			} else {
				height = height * (t.displayp / width) | 0;
				width = t.displayp;
			}
		}
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(width < 1) {
			width = 1;
		}
		if(height < 1) {
			height = 1;
		}
		if(t.depth != null && t.depth > 1) {
			let img;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					img = 3;
					break;
				case "R16":
					img = 6;
					break;
				case "R32":
					img = 5;
					break;
				case "R8":
					img = 1;
					break;
				case "RGBA128":
					img = 2;
					break;
				case "RGBA32":
					img = 0;
					break;
				case "RGBA64":
					img = 4;
					break;
				default:
					img = 0;
				}
			} else {
				img = 0;
			}
			let img1 = kha_Image.create3D(width,height,depth,img);
			if(t.mipmaps) {
				img1.generateMipmaps(1000);
			}
			return img1;
		} else if(t.is_image != null && t.is_image) {
			let tmp;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					tmp = 3;
					break;
				case "R16":
					tmp = 6;
					break;
				case "R32":
					tmp = 5;
					break;
				case "R8":
					tmp = 1;
					break;
				case "RGBA128":
					tmp = 2;
					break;
				case "RGBA32":
					tmp = 0;
					break;
				case "RGBA64":
					tmp = 4;
					break;
				default:
					tmp = 0;
				}
			} else {
				tmp = 0;
			}
			return kha_Image.create(width,height,tmp);
		} else {
			let tmp;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					tmp = 3;
					break;
				case "R16":
					tmp = 6;
					break;
				case "R32":
					tmp = 5;
					break;
				case "R8":
					tmp = 1;
					break;
				case "RGBA128":
					tmp = 2;
					break;
				case "RGBA32":
					tmp = 0;
					break;
				case "RGBA64":
					tmp = 4;
					break;
				default:
					tmp = 0;
				}
			} else {
				tmp = 0;
			}
			return kha_Image.createRenderTarget(width,height,tmp,depthStencil);
		}
	}
	createCubeMap(t,depthStencil) {
		let tmp;
		if(t.format != null) {
			switch(t.format) {
			case "DEPTH16":
				tmp = 3;
				break;
			case "R16":
				tmp = 6;
				break;
			case "R32":
				tmp = 5;
				break;
			case "R8":
				tmp = 1;
				break;
			case "RGBA128":
				tmp = 2;
				break;
			case "RGBA32":
				tmp = 0;
				break;
			case "RGBA64":
				tmp = 4;
				break;
			default:
				tmp = 0;
			}
		} else {
			tmp = 0;
		}
		return kha_graphics4_CubeMap.createRenderTarget(t.width,tmp,depthStencil);
	}
	getTextureFormat(s) {
		switch(s) {
		case "DEPTH16":
			return 3;
		case "R16":
			return 6;
		case "R32":
			return 5;
		case "R8":
			return 1;
		case "RGBA128":
			return 2;
		case "RGBA32":
			return 0;
		case "RGBA64":
			return 4;
		default:
			return 0;
		}
	}
	getDepthStencilFormat(s) {
		if(s == null || s == "") {
			return 1;
		}
		switch(s) {
		case "DEPTH16":
			return 5;
		case "DEPTH24":
			return 1;
		default:
			return 1;
		}
	}
	static setActive(renderPath) {
		iron_RenderPath.active = renderPath;
	}
	static boolToInt(b) {
		if(b) {
			return 1;
		} else {
			return 0;
		}
	}
	static sortMeshesDistance(meshes) {
		meshes.sort(function(a,b) {
			if(a.cameraDistance >= b.cameraDistance) {
				return 1;
			} else {
				return -1;
			}
		});
	}
	static sortMeshesShader(meshes) {
		meshes.sort(function(a,b) {
			if(a.materials[0].name >= b.materials[0].name) {
				return 1;
			} else {
				return -1;
			}
		});
	}
	static meshRenderLoop(g,context,_bindParams,_meshes) {
		let isReadingDepth = false;
		let _g = 0;
		while(_g < _meshes.length) {
			let m = _meshes[_g];
			++_g;
			m.render(g,context,_bindParams);
		}
	}
	static notifyOnContext(name,onContext) {
		if(iron_RenderPath.contextEvents == null) {
			iron_RenderPath.contextEvents = new haxe_ds_StringMap();
		}
		let ar = iron_RenderPath.contextEvents.h[name];
		if(ar == null) {
			ar = [];
			iron_RenderPath.contextEvents.h[name] = ar;
		}
		ar.push(onContext);
	}
}
$hxClasses["iron.RenderPath"] = iron_RenderPath;
iron_RenderPath.__name__ = "iron.RenderPath";
Object.assign(iron_RenderPath.prototype, {
	__class__: iron_RenderPath
	,frameScissor: null
	,frameScissorX: null
	,frameScissorY: null
	,frameScissorW: null
	,frameScissorH: null
	,frameTime: null
	,frame: null
	,currentTarget: null
	,currentFace: null
	,light: null
	,sun: null
	,point: null
	,isProbePlanar: null
	,isProbeCube: null
	,isProbe: null
	,currentG: null
	,frameG: null
	,drawOrder: null
	,paused: null
	,ready: null
	,commands: null
	,setupDepthTexture: null
	,renderTargets: null
	,depthToRenderTarget: null
	,currentW: null
	,currentH: null
	,currentD: null
	,lastW: null
	,lastH: null
	,bindParams: null
	,meshesSorted: null
	,scissorSet: null
	,viewportScaled: null
	,lastFrameTime: null
	,loading: null
	,cachedShaderContexts: null
	,depthBuffers: null
	,additionalTargets: null
	,__properties__: {get_ready: "get_ready"}
});
class iron_RenderTargetRaw {
	constructor() {
		this.is_cubemap = null;
		this.is_image = null;
		this.depth = null;
		this.mipmaps = null;
		this.depth_buffer = null;
		this.displayp = null;
		this.scale = null;
		this.format = null;
	}
}
$hxClasses["iron.RenderTargetRaw"] = iron_RenderTargetRaw;
iron_RenderTargetRaw.__name__ = "iron.RenderTargetRaw";
Object.assign(iron_RenderTargetRaw.prototype, {
	__class__: iron_RenderTargetRaw
	,name: null
	,width: null
	,height: null
	,format: null
	,scale: null
	,displayp: null
	,depth_buffer: null
	,mipmaps: null
	,depth: null
	,is_image: null
	,is_cubemap: null
});
class iron_RenderTarget {
	constructor(raw) {
		this.isCubeMap = false;
		this.is3D = false;
		this.hasDepth = false;
		this.cubeMap = null;
		this.image = null;
		this.depthStencilFrom = "";
		this.raw = raw;
	}
	unload() {
		if(this.image != null) {
			this.image.unload();
		}
		if(this.cubeMap != null) {
			this.cubeMap.unload();
		}
	}
}
$hxClasses["iron.RenderTarget"] = iron_RenderTarget;
iron_RenderTarget.__name__ = "iron.RenderTarget";
Object.assign(iron_RenderTarget.prototype, {
	__class__: iron_RenderTarget
	,raw: null
	,depthStencil: null
	,depthStencilFrom: null
	,image: null
	,cubeMap: null
	,hasDepth: null
	,is3D: null
	,isCubeMap: null
});
class iron_CachedShaderContext {
	constructor() {
	}
}
$hxClasses["iron.CachedShaderContext"] = iron_CachedShaderContext;
iron_CachedShaderContext.__name__ = "iron.CachedShaderContext";
Object.assign(iron_CachedShaderContext.prototype, {
	__class__: iron_CachedShaderContext
	,context: null
});
class iron_data_Armature {
	constructor(uid,name,actions) {
		this.matsReady = false;
		this.actions = [];
		this.uid = uid;
		this.name = name;
		let _g = 0;
		while(_g < actions.length) {
			let a = actions[_g];
			++_g;
			let _g1 = 0;
			let _g2 = a.objects;
			while(_g1 < _g2.length) {
				let o = _g2[_g1];
				++_g1;
				iron_data_Armature.setParents(o);
			}
			let bones = [];
			iron_data_Armature.traverseBones(a.objects,function(object) {
				bones.push(object);
			});
			this.actions.push({ name : a.name, bones : bones, mats : null});
		}
	}
	initMats() {
		if(this.matsReady) {
			return;
		}
		this.matsReady = true;
		let _g = 0;
		let _g1 = this.actions;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.mats != null) {
				continue;
			}
			a.mats = [];
			let _g2 = 0;
			let _g3 = a.bones;
			while(_g2 < _g3.length) {
				let b = _g3[_g2];
				++_g2;
				let a1 = b.transform.values;
				a.mats.push(new iron_math_Mat4(a1.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN)));
			}
		}
	}
	getAction(name) {
		let _g = 0;
		let _g1 = this.actions;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.name == name) {
				return a;
			}
		}
		return null;
	}
	static setParents(object) {
		if(object.children == null) {
			return;
		}
		let _g = 0;
		let _g1 = object.children;
		while(_g < _g1.length) {
			let o = _g1[_g];
			++_g;
			o.parent = object;
			iron_data_Armature.setParents(o);
		}
	}
	static traverseBones(objects,callback) {
		let _g = 0;
		let _g1 = objects.length;
		while(_g < _g1) {
			let i = _g++;
			iron_data_Armature.traverseBonesStep(objects[i],callback);
		}
	}
	static traverseBonesStep(object,callback) {
		if(object.type == "bone_object") {
			callback(object);
		}
		if(object.children == null) {
			return;
		}
		let _g = 0;
		let _g1 = object.children.length;
		while(_g < _g1) {
			let i = _g++;
			iron_data_Armature.traverseBonesStep(object.children[i],callback);
		}
	}
}
$hxClasses["iron.data.Armature"] = iron_data_Armature;
iron_data_Armature.__name__ = "iron.data.Armature";
Object.assign(iron_data_Armature.prototype, {
	__class__: iron_data_Armature
	,uid: null
	,name: null
	,actions: null
	,matsReady: null
});
class iron_data_CameraData {
	constructor(raw,done) {
		this.raw = raw;
		this.name = raw.name;
		done(this);
	}
	static parse(name,id,done) {
		iron_data_Data.getSceneRaw(name,function(format) {
			let raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
			if(raw == null) {
				haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/CameraData.hx", lineNumber : 20, className : "iron.data.CameraData", methodName : "parse"});
				done(null);
			}
			new iron_data_CameraData(raw,done);
		});
	}
}
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = "iron.data.CameraData";
Object.assign(iron_data_CameraData.prototype, {
	__class__: iron_data_CameraData
	,name: null
	,raw: null
});
class iron_data_ConstData {
	static createScreenAlignedData() {
		let data = [-1.0,-1.0,3.0,-1.0,-1.0,3.0];
		let indices = [0,1,2];
		let structure = new kha_graphics4_VertexStructure();
		structure.add("pos",1);
		iron_data_ConstData.screenAlignedVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,0);
		let vertices = iron_data_ConstData.screenAlignedVB.lock();
		let _g = 0;
		let _g1 = vertices.byteLength / 4 | 0;
		while(_g < _g1) {
			let i = _g++;
			vertices.setFloat32(i * 4,data[i],true);
		}
		iron_data_ConstData.screenAlignedVB.unlock();
		iron_data_ConstData.screenAlignedIB = new kha_graphics4_IndexBuffer(indices.length,0);
		let id = iron_data_ConstData.screenAlignedIB.lock();
		let _g2 = 0;
		let _g3 = id.byteLength >> 2;
		while(_g2 < _g3) {
			let i = _g2++;
			id.setUint32(i * 4,indices[i],kha_arrays_ByteArray.LITTLE_ENDIAN);
			let tmp = i * 4;
		}
		iron_data_ConstData.screenAlignedIB.unlock();
	}
	static createSkydomeData() {
		let pos = iron_data_ConstData.skydomePos;
		let nor = iron_data_ConstData.skydomeNor;
		let structure = new kha_graphics4_VertexStructure();
		structure.add("pos",2);
		structure.add("nor",2);
		let structLength = structure.byteSize() / 4 | 0;
		iron_data_ConstData.skydomeVB = new kha_graphics4_VertexBuffer(pos.length / 3 | 0,structure,0);
		let vertices = iron_data_ConstData.skydomeVB.lock();
		let _g = 0;
		let _g1 = vertices.byteLength / 4 / structLength | 0;
		while(_g < _g1) {
			let i = _g++;
			vertices.setFloat32(i * structLength * 4,pos[i * 3],true);
			vertices.setFloat32((i * structLength + 1) * 4,pos[i * 3 + 1],true);
			vertices.setFloat32((i * structLength + 2) * 4,pos[i * 3 + 2],true);
			vertices.setFloat32((i * structLength + 3) * 4,nor[i * 3],true);
			vertices.setFloat32((i * structLength + 4) * 4,nor[i * 3 + 1],true);
			vertices.setFloat32((i * structLength + 5) * 4,nor[i * 3 + 2],true);
		}
		iron_data_ConstData.skydomeVB.unlock();
		let indices = iron_data_ConstData.skydomeIndices;
		iron_data_ConstData.skydomeIB = new kha_graphics4_IndexBuffer(indices.length,0);
		let id = iron_data_ConstData.skydomeIB.lock();
		let _g2 = 0;
		let _g3 = id.byteLength >> 2;
		while(_g2 < _g3) {
			let i = _g2++;
			id.setUint32(i * 4,indices[i],kha_arrays_ByteArray.LITTLE_ENDIAN);
			let tmp = i * 4;
		}
		iron_data_ConstData.skydomeIB.unlock();
	}
}
$hxClasses["iron.data.ConstData"] = iron_data_ConstData;
iron_data_ConstData.__name__ = "iron.data.ConstData";
class iron_data_Geometry {
	constructor(data,indices,materialIndices,usage) {
		this.mats = null;
		this.actions = null;
		this.skeletonBoneLens = null;
		this.skeletonBoneRefs = null;
		this.skeletonTransformsI = null;
		this.skinBoneWeights = null;
		this.skinBoneIndices = null;
		this.skinBoneCounts = null;
		this.aabbMax = null;
		this.aabbMin = null;
		this.aabb = null;
		this.instanceCount = 0;
		this.instanced = false;
		this.instancedVB = null;
		this.numTris = 0;
		this.ready = false;
		this.name = "";
		this.count = -1;
		this.start = 0;
		this.vertexBufferMap = new haxe_ds_StringMap();
		if(usage == null) {
			usage = 0;
		}
		this.indices = indices;
		this.materialIndices = materialIndices;
		this.usage = usage;
		this.vertexArrays = data.raw.vertex_arrays;
		this.positions = this.getVArray("pos");
		this.normals = this.getVArray("nor");
		this.uvs = this.getVArray("tex");
		this.cols = this.getVArray("col");
		this.data = data;
		this.struct = iron_data_Geometry.getVertexStructure(this.vertexArrays);
		this.structLength = this.struct.byteSize() / 2 | 0;
		this.structStr = "";
		let _g = 0;
		let _g1 = this.struct.elements;
		while(_g < _g1.length) {
			let e = _g1[_g];
			++_g;
			this.structStr += e.name;
		}
	}
	delete() {
		let h = this.vertexBufferMap.h;
		let buf_h = h;
		let buf_keys = Object.keys(h);
		let buf_length = buf_keys.length;
		let buf_current = 0;
		while(buf_current < buf_length) {
			let buf = buf_h[buf_keys[buf_current++]];
			if(buf != null) {
				buf.delete();
			}
		}
		let _g = 0;
		let _g1 = this.indexBuffers;
		while(_g < _g1.length) {
			let buf = _g1[_g];
			++_g;
			buf.delete();
		}
	}
	applyScale(sx,sy,sz) {
		this.data.scalePos *= sx;
	}
	getVArray(name) {
		let _g = 0;
		let _g1 = this.vertexArrays.length;
		while(_g < _g1) {
			let i = _g++;
			if(this.vertexArrays[i].attrib == name) {
				return this.vertexArrays[i];
			}
		}
		return null;
	}
	setupInstanced(data,instancedType,usage) {
		let structure = new kha_graphics4_VertexStructure();
		structure.instanced = true;
		this.instanced = true;
		structure.add("ipos",2);
		if(instancedType == 2 || instancedType == 4) {
			structure.add("irot",2);
		}
		if(instancedType == 3 || instancedType == 4) {
			structure.add("iscl",2);
		}
		this.instanceCount = (data.byteLength >> 2) / (structure.byteSize() / 4 | 0) | 0;
		this.instancedVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		let vertices = this.instancedVB.lock();
		let _g = 0;
		let _g1 = vertices.byteLength / 4 | 0;
		while(_g < _g1) {
			let i = _g++;
			vertices.setFloat32(i * 4,data.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),true);
		}
		this.instancedVB.unlock();
	}
	copyVertices(vertices,offset,fakeUVs) {
		if(fakeUVs == null) {
			fakeUVs = false;
		}
		if(offset == null) {
			offset = 0;
		}
		iron_data_Geometry.buildVertices(vertices,this.vertexArrays,offset,fakeUVs);
	}
	getVerticesLength() {
		let res = 0;
		let _g = 0;
		let _g1 = this.vertexArrays.length;
		while(_g < _g1) {
			let i = _g++;
			res += this.vertexArrays[i].values.byteLength >> 1;
		}
		return res;
	}
	get(vs) {
		let key = "";
		let _g = 0;
		while(_g < vs.length) {
			let e = vs[_g];
			++_g;
			key += e.name;
		}
		let vb = this.vertexBufferMap.h[key];
		if(vb == null) {
			let nVertexArrays = [];
			let atex = false;
			let texOffset = -1;
			let acol = false;
			let _g = 0;
			let _g1 = vs.length;
			while(_g < _g1) {
				let e = _g++;
				if(vs[e].name == "tex") {
					atex = true;
					texOffset = e;
				}
				if(vs[e].name == "col") {
					acol = true;
				}
				let _g1 = 0;
				let _g2 = this.vertexArrays.length;
				while(_g1 < _g2) {
					let va = _g1++;
					if(vs[e].name == this.vertexArrays[va].attrib) {
						nVertexArrays.push(this.vertexArrays[va]);
					}
				}
			}
			let struct = iron_data_Geometry.getVertexStructure(nVertexArrays);
			vb = new kha_graphics4_VertexBuffer((this.positions.values.byteLength >> 1) / this.positions.size | 0,struct,this.usage);
			this.vertices = vb.lock();
			iron_data_Geometry.buildVertices(this.vertices,nVertexArrays,0,atex && this.uvs == null,texOffset);
			vb.unlock();
			this.vertexBufferMap.h[key] = vb;
			if(atex && this.uvs == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing UV map",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 228, className : "iron.data.Geometry", methodName : "get"});
			}
			if(acol && this.cols == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing vertex colors",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 229, className : "iron.data.Geometry", methodName : "get"});
			}
		}
		return vb;
	}
	build() {
		if(this.ready) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer((this.positions.values.byteLength >> 1) / this.positions.size | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lock();
		iron_data_Geometry.buildVertices(this.vertices,this.vertexArrays);
		this.vertexBuffer.unlock();
		this.vertexBufferMap.h[this.structStr] = this.vertexBuffer;
		this.indexBuffers = [];
		let _g = 0;
		let _g1 = this.indices;
		while(_g < _g1.length) {
			let id = _g1[_g];
			++_g;
			if(id.byteLength >> 2 == 0) {
				continue;
			}
			let indexBuffer = new kha_graphics4_IndexBuffer(id.byteLength >> 2,this.usage);
			this.numTris += (id.byteLength >> 2) / 3 | 0;
			let indicesA = indexBuffer.lock();
			let _g2 = 0;
			let _g3 = indicesA.byteLength >> 2;
			while(_g2 < _g3) {
				let i = _g2++;
				indicesA.setUint32(i * 4,id.getUint32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = i * 4;
			}
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
		}
		if(this.data.raw.instanced_data != null) {
			this.setupInstanced(this.data.raw.instanced_data,this.data.raw.instanced_type,this.usage);
		}
		this.ready = true;
	}
	getVerticesCount() {
		return (this.positions.values.byteLength >> 1) / this.positions.size | 0;
	}
	addArmature(armature) {
		let _g = 0;
		let _g1 = armature.actions;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			this.addAction(a.bones,a.name);
		}
	}
	addAction(bones,name) {
		if(bones == null) {
			return;
		}
		if(this.actions == null) {
			this.actions = new haxe_ds_StringMap();
			this.mats = new haxe_ds_StringMap();
		}
		if(this.actions.h[name] != null) {
			return;
		}
		let actionBones = [];
		let _g = 0;
		let _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			let _g2 = 0;
			while(_g2 < bones.length) {
				let b = bones[_g2];
				++_g2;
				if(b.name == s) {
					actionBones.push(b);
				}
			}
		}
		this.actions.h[name] = actionBones;
		let actionMats = [];
		let _g2 = 0;
		while(_g2 < actionBones.length) {
			let b = actionBones[_g2];
			++_g2;
			let a = b.transform.values;
			actionMats.push(new iron_math_Mat4(a.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN)));
		}
		this.mats.h[name] = actionMats;
	}
	initSkeletonTransforms(transformsI) {
		this.skeletonTransformsI = [];
		let _g = 0;
		while(_g < transformsI.length) {
			let t = transformsI[_g];
			++_g;
			let mi = new iron_math_Mat4(t.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN));
			this.skeletonTransformsI.push(mi);
		}
	}
	calculateAABB() {
		this.aabbMin = new iron_math_Vec4(-0.01,-0.01,-0.01);
		this.aabbMax = new iron_math_Vec4(0.01,0.01,0.01);
		this.aabb = new iron_math_Vec4();
		let i = 0;
		while(i < this.positions.values.byteLength >> 1) {
			if(this.positions.values.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) > this.aabbMax.x) {
				this.aabbMax.x = this.positions.values.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(this.positions.values.getInt16((i + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) > this.aabbMax.y) {
				this.aabbMax.y = this.positions.values.getInt16((i + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(this.positions.values.getInt16((i + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) > this.aabbMax.z) {
				this.aabbMax.z = this.positions.values.getInt16((i + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(this.positions.values.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) < this.aabbMin.x) {
				this.aabbMin.x = this.positions.values.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(this.positions.values.getInt16((i + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) < this.aabbMin.y) {
				this.aabbMin.y = this.positions.values.getInt16((i + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(this.positions.values.getInt16((i + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) < this.aabbMin.z) {
				this.aabbMin.z = this.positions.values.getInt16((i + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			i += 4;
		}
		this.aabb.x = (Math.abs(this.aabbMin.x) + Math.abs(this.aabbMax.x)) / 32767 * this.data.scalePos;
		this.aabb.y = (Math.abs(this.aabbMin.y) + Math.abs(this.aabbMax.y)) / 32767 * this.data.scalePos;
		this.aabb.z = (Math.abs(this.aabbMin.z) + Math.abs(this.aabbMax.z)) / 32767 * this.data.scalePos;
	}
	calculateTangents() {
	}
	static getVertexStructure(vertexArrays) {
		let structure = new kha_graphics4_VertexStructure();
		let _g = 0;
		let _g1 = vertexArrays.length;
		while(_g < _g1) {
			let i = _g++;
			structure.add(vertexArrays[i].attrib,iron_data_Geometry.getVertexData(vertexArrays[i].data));
		}
		return structure;
	}
	static getVertexData(data) {
		switch(data) {
		case "short2norm":
			return 23;
		case "short4norm":
			return 27;
		default:
			return 27;
		}
	}
	static buildVertices(vertices,vertexArrays,offset,fakeUVs,uvsIndex) {
		if(uvsIndex == null) {
			uvsIndex = -1;
		}
		if(fakeUVs == null) {
			fakeUVs = false;
		}
		if(offset == null) {
			offset = 0;
		}
		let arr = vertexArrays[0];
		let numVertices = (arr.values.byteLength >> 1) / arr.size | 0;
		let di = -1 + offset;
		let _g = 0;
		let _g1 = numVertices;
		while(_g < _g1) {
			let i = _g++;
			let _g1 = 0;
			let _g2 = vertexArrays.length;
			while(_g1 < _g2) {
				let va = _g1++;
				let l = vertexArrays[va].size;
				if(fakeUVs && va == uvsIndex) {
					let _g = 0;
					let _g1 = l;
					while(_g < _g1) {
						let j = _g++;
						vertices.setInt16(++di * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					}
					continue;
				}
				let _g = 0;
				let _g2 = l;
				while(_g < _g2) {
					let o = _g++;
					vertices.setInt16(++di * 2,vertexArrays[va].values.getInt16((i * l + o) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
				}
				if(vertexArrays[va].padding != null) {
					if(vertexArrays[va].padding == 1) {
						vertices.setInt16(++di * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					}
				}
			}
		}
	}
	static verticesCount(arr) {
		return (arr.values.byteLength >> 1) / arr.size | 0;
	}
}
$hxClasses["iron.data.Geometry"] = iron_data_Geometry;
iron_data_Geometry.__name__ = "iron.data.Geometry";
Object.assign(iron_data_Geometry.prototype, {
	__class__: iron_data_Geometry
	,vertexBuffer: null
	,vertexBufferMap: null
	,indexBuffers: null
	,start: null
	,count: null
	,name: null
	,ready: null
	,vertices: null
	,indices: null
	,numTris: null
	,materialIndices: null
	,struct: null
	,structLength: null
	,structStr: null
	,usage: null
	,instancedVB: null
	,instanced: null
	,instanceCount: null
	,positions: null
	,normals: null
	,uvs: null
	,cols: null
	,vertexArrays: null
	,data: null
	,aabb: null
	,aabbMin: null
	,aabbMax: null
	,skinBoneCounts: null
	,skinBoneIndices: null
	,skinBoneWeights: null
	,skeletonTransformsI: null
	,skeletonBoneRefs: null
	,skeletonBoneLens: null
	,actions: null
	,mats: null
});
class iron_data_LightData {
	constructor(raw,done) {
		this.raw = raw;
		this.name = raw.name;
		done(this);
	}
	static typeToInt(s) {
		switch(s) {
		case "area":
			return 3;
		case "point":
			return 1;
		case "spot":
			return 2;
		case "sun":
			return 0;
		default:
			return 0;
		}
	}
	static parse(name,id,done) {
		iron_data_Data.getSceneRaw(name,function(format) {
			let raw = iron_data_Data.getLightRawByName(format.light_datas,id);
			if(raw == null) {
				haxe_Log.trace("Light data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/LightData.hx", lineNumber : 30, className : "iron.data.LightData", methodName : "parse"});
				done(null);
			}
			new iron_data_LightData(raw,done);
		});
	}
}
$hxClasses["iron.data.LightData"] = iron_data_LightData;
iron_data_LightData.__name__ = "iron.data.LightData";
Object.assign(iron_data_LightData.prototype, {
	__class__: iron_data_LightData
	,name: null
	,raw: null
});
class iron_data_MaterialData {
	constructor(raw,done,file) {
		if(file == null) {
			file = "";
		}
		this.contexts = null;
		this.uid = ++iron_data_MaterialData.uidCounter;
		this.raw = raw;
		this.name = raw.name;
		let ref = raw.shader.split("/");
		let object_file = "";
		let data_ref = "";
		if(ref.length == 2) {
			object_file = ref[0];
			data_ref = ref[1];
		} else {
			object_file = file;
			data_ref = raw.shader;
		}
		let _gthis = this;
		iron_data_Data.getShader(object_file,data_ref,function(b) {
			_gthis.shader = b;
			_gthis.contexts = [];
			while(_gthis.contexts.length < raw.contexts.length) _gthis.contexts.push(null);
			let contextsLoaded = 0;
			let _g = 0;
			let _g1 = raw.contexts.length;
			while(_g < _g1) {
				let i = _g++;
				let c = raw.contexts[i];
				new iron_data_MaterialContext(c,function(self) {
					_gthis.contexts[i] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				});
			}
		},raw.override_context);
	}
	getContext(name) {
		let _g = 0;
		let _g1 = this.contexts;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	static parse(file,name,done) {
		iron_data_Data.getSceneRaw(file,function(format) {
			let raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
			if(raw == null) {
				haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/MaterialData.hx", lineNumber : 58, className : "iron.data.MaterialData", methodName : "parse"});
				done(null);
			}
			new iron_data_MaterialData(raw,done,file);
		});
	}
}
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = "iron.data.MaterialData";
Object.assign(iron_data_MaterialData.prototype, {
	__class__: iron_data_MaterialData
	,uid: null
	,name: null
	,raw: null
	,shader: null
	,contexts: null
});
class iron_data_MaterialContext {
	constructor(raw,done) {
		this.id = 0;
		this.textures = null;
		this.raw = raw;
		this.id = iron_data_MaterialContext.num++;
		let _gthis = this;
		if(raw.bind_textures != null && raw.bind_textures.length > 0) {
			let this1 = new Array(raw.bind_textures.length);
			this.textures = this1;
			let texturesLoaded = 0;
			let _g = 0;
			let _g1 = raw.bind_textures.length;
			while(_g < _g1) {
				let i = _g++;
				let tex = raw.bind_textures[i];
				if(tex.file == "" || tex.source == "movie") {
					texturesLoaded += 1;
					if(texturesLoaded == raw.bind_textures.length) {
						done(this);
					}
					continue;
				}
				iron_data_Data.getImage(tex.file,function(image) {
					_gthis.textures[i] = image;
					texturesLoaded += 1;
					if(tex.mipmaps != null) {
						let mipmaps = [];
						while(mipmaps.length < tex.mipmaps.length) mipmaps.push(null);
						let mipmapsLoaded = 0;
						let _g = 0;
						let _g1 = tex.mipmaps.length;
						while(_g < _g1) {
							let j = _g++;
							let name = tex.mipmaps[j];
							iron_data_Data.getImage(name,function(mipimg) {
								mipmaps[j] = mipimg;
								mipmapsLoaded += 1;
								if(mipmapsLoaded == tex.mipmaps.length) {
									image.setMipmaps(mipmaps);
									tex.mipmaps = null;
									tex.generate_mipmaps = false;
									if(texturesLoaded == raw.bind_textures.length) {
										done(_gthis);
									}
								}
							});
						}
					} else if(tex.generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex.mipmaps = null;
						tex.generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				},false,tex.format != null ? tex.format : "RGBA32");
			}
		} else {
			done(this);
		}
	}
	setTextureParameters(g,textureIndex,context,unitIndex) {
		context.setTextureParameters(g,unitIndex,this.raw.bind_textures[textureIndex]);
	}
}
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = "iron.data.MaterialContext";
Object.assign(iron_data_MaterialContext.prototype, {
	__class__: iron_data_MaterialContext
	,raw: null
	,textures: null
	,id: null
});
class iron_data_MeshData {
	constructor(raw,done) {
		this.scaleTex = 1.0;
		this.scalePos = 1.0;
		this.refcount = 0;
		this.count = -1;
		this.start = 0;
		this.raw = raw;
		this.name = raw.name;
		if(raw.scale_pos != null) {
			this.scalePos = raw.scale_pos;
		}
		if(raw.scale_tex != null) {
			this.scaleTex = raw.scale_tex;
		}
		let indices = [];
		let materialIndices = [];
		let _g = 0;
		let _g1 = raw.index_arrays;
		while(_g < _g1.length) {
			let ind = _g1[_g];
			++_g;
			indices.push(ind.values);
			materialIndices.push(ind.material);
		}
		this.isSkinned = raw.skin != null;
		let vertexArrays = raw.vertex_arrays;
		if(this.isSkinned) {
			vertexArrays.push({ attrib : "bone", values : null, data : "short4norm"});
			vertexArrays.push({ attrib : "weight", values : null, data : "short4norm"});
		}
		let _g2 = 0;
		let _g3 = vertexArrays.length;
		while(_g2 < _g3) {
			let i = _g2++;
			let padding = vertexArrays[i].padding;
			vertexArrays[i].size = this.getVertexSize(vertexArrays[i].data,padding != null ? padding : 0);
		}
		let parsedUsage = 0;
		if(raw.dynamic_usage != null && raw.dynamic_usage == true) {
			parsedUsage = 1;
		}
		let usage = parsedUsage;
		if(this.isSkinned) {
			let bonea = null;
			let weighta = null;
			let vertex_length = (vertexArrays[0].values.byteLength >> 1) / vertexArrays[0].size | 0;
			let l = vertex_length * 4;
			bonea = kha_arrays_Int16Array._new(l);
			weighta = kha_arrays_Int16Array._new(l);
			let index = 0;
			let ai = 0;
			let _g = 0;
			let _g1 = vertex_length;
			while(_g < _g1) {
				let i = _g++;
				let boneCount = raw.skin.bone_count_array.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let _g1 = index;
				let _g2 = index + boneCount;
				while(_g1 < _g2) {
					let j = _g1++;
					bonea.setInt16(ai * 2,raw.skin.bone_index_array.getInt16(j * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
					let tmp = ai * 2;
					weighta.setInt16(ai * 2,raw.skin.bone_weight_array.getInt16(j * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
					let tmp1 = ai * 2;
					++ai;
				}
				let _g3 = boneCount;
				let _g4 = 4;
				while(_g3 < _g4) {
					let j = _g3++;
					bonea.setInt16(ai * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let tmp = ai * 2;
					weighta.setInt16(ai * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let tmp1 = ai * 2;
					++ai;
				}
				index += boneCount;
			}
			vertexArrays[vertexArrays.length - 2].values = bonea;
			vertexArrays[vertexArrays.length - 1].values = weighta;
		}
		this.geom = new iron_data_Geometry(this,indices,materialIndices,usage);
		this.geom.name = this.name;
		done(this);
	}
	delete() {
		this.geom.delete();
	}
	getVertexSize(vertex_data,padding) {
		if(padding == null) {
			padding = 0;
		}
		switch(vertex_data) {
		case "short2norm":
			return 2 - padding;
		case "short4norm":
			return 4 - padding;
		default:
			return 0;
		}
	}
	getPadding(padding) {
		if(padding != null) {
			return padding;
		} else {
			return 0;
		}
	}
	static parse(name,id,done) {
		iron_data_Data.getSceneRaw(name,function(format) {
			let raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
			if(raw == null) {
				haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/MeshData.hx", lineNumber : 100, className : "iron.data.MeshData", methodName : "parse"});
				done(null);
			}
			new iron_data_MeshData(raw,function(dat) {
				dat.format = format;
				if(raw.skin != null) {
					dat.geom.skinBoneCounts = raw.skin.bone_count_array;
					dat.geom.skinBoneIndices = raw.skin.bone_index_array;
					dat.geom.skinBoneWeights = raw.skin.bone_weight_array;
					dat.geom.skeletonBoneRefs = raw.skin.bone_ref_array;
					dat.geom.skeletonBoneLens = raw.skin.bone_len_array;
					dat.geom.initSkeletonTransforms(raw.skin.transformsI);
				}
				done(dat);
			});
		});
	}
}
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = "iron.data.MeshData";
Object.assign(iron_data_MeshData.prototype, {
	__class__: iron_data_MeshData
	,name: null
	,raw: null
	,format: null
	,geom: null
	,start: null
	,count: null
	,refcount: null
	,handle: null
	,scalePos: null
	,scaleTex: null
	,isSkinned: null
});
class iron_data_ParticleData {
	constructor(raw,done) {
		this.raw = raw;
		this.name = raw.name;
		done(this);
	}
	static parse(name,id,done) {
		iron_data_Data.getSceneRaw(name,function(format) {
			let raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
			if(raw == null) {
				haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/ParticleData.hx", lineNumber : 21, className : "iron.data.ParticleData", methodName : "parse"});
				done(null);
			}
			new iron_data_ParticleData(raw,done);
		});
	}
}
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = "iron.data.ParticleData";
Object.assign(iron_data_ParticleData.prototype, {
	__class__: iron_data_ParticleData
	,name: null
	,raw: null
});
class iron_data_ProbeData {
}
$hxClasses["iron.data.ProbeData"] = iron_data_ProbeData;
iron_data_ProbeData.__name__ = "iron.data.ProbeData";
class iron_data_ShaderData {
	constructor(raw,done,overrideContext) {
		this.contexts = [];
		this.raw = raw;
		this.name = raw.name;
		let _g = 0;
		let _g1 = raw.contexts;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			this.contexts.push(null);
		}
		let contextsLoaded = 0;
		let _gthis = this;
		let _g2 = 0;
		let _g3 = raw.contexts.length;
		while(_g2 < _g3) {
			let i = _g2++;
			let c = raw.contexts[i];
			new iron_data_ShaderContext(c,function(con) {
				_gthis.contexts[i] = con;
				contextsLoaded += 1;
				if(contextsLoaded == raw.contexts.length) {
					done(_gthis);
				}
			},overrideContext);
		}
	}
	delete() {
		let _g = 0;
		let _g1 = this.contexts;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			c.delete();
		}
	}
	getContext(name) {
		let _g = 0;
		let _g1 = this.contexts;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c.raw.name == name) {
				return c;
			}
		}
		return null;
	}
	static parse(file,name,done,overrideContext) {
		iron_data_Data.getSceneRaw(file,function(format) {
			let raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
			if(raw == null) {
				haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/ShaderData.hx", lineNumber : 54, className : "iron.data.ShaderData", methodName : "parse"});
				done(null);
			}
			new iron_data_ShaderData(raw,done,overrideContext);
		});
	}
}
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = "iron.data.ShaderData";
Object.assign(iron_data_ShaderData.prototype, {
	__class__: iron_data_ShaderData
	,name: null
	,raw: null
	,contexts: null
});
class iron_data_ShaderContext {
	constructor(raw,done,overrideContext) {
		this.instancingType = 0;
		this.raw = raw;
		if(raw.name == "voxel") {
			done(this);
			return;
		}
		this.overrideContext = overrideContext;
		this.parseVertexStructure();
		this.compile(done);
	}
	compile(done) {
		if(this.pipeState != null) {
			this.pipeState.delete();
		}
		this.pipeState = new kha_graphics4_PipelineState();
		this.constants = [];
		this.textureUnits = [];
		if(this.instancingType > 0) {
			let instStruct = new kha_graphics4_VertexStructure();
			instStruct.add("ipos",2);
			if(this.instancingType == 2 || this.instancingType == 4) {
				instStruct.add("irot",2);
			}
			if(this.instancingType == 3 || this.instancingType == 4) {
				instStruct.add("iscl",2);
			}
			instStruct.instanced = true;
			this.pipeState.inputLayout = [this.structure,instStruct];
		} else {
			this.pipeState.inputLayout = [this.structure];
		}
		this.pipeState.depthWrite = this.raw.depth_write;
		this.pipeState.depthMode = this.getCompareMode(this.raw.compare_mode);
		this.pipeState.cullMode = this.getCullMode(this.raw.cull_mode);
		if(this.raw.blend_source != null) {
			this.pipeState.blendSource = this.getBlendingFactor(this.raw.blend_source);
		}
		if(this.raw.blend_destination != null) {
			this.pipeState.blendDestination = this.getBlendingFactor(this.raw.blend_destination);
		}
		if(this.raw.blend_operation != null) {
			this.pipeState.blendOperation = this.getBlendingOperation(this.raw.blend_operation);
		}
		if(this.raw.alpha_blend_source != null) {
			this.pipeState.alphaBlendSource = this.getBlendingFactor(this.raw.alpha_blend_source);
		}
		if(this.raw.alpha_blend_destination != null) {
			this.pipeState.alphaBlendDestination = this.getBlendingFactor(this.raw.alpha_blend_destination);
		}
		if(this.raw.alpha_blend_operation != null) {
			this.pipeState.alphaBlendOperation = this.getBlendingOperation(this.raw.alpha_blend_operation);
		}
		if(this.raw.color_writes_red != null) {
			let _g = 0;
			let _g1 = this.raw.color_writes_red.length;
			while(_g < _g1) {
				let i = _g++;
				this.pipeState.colorWriteMasksRed[i] = this.raw.color_writes_red[i];
			}
		}
		if(this.raw.color_writes_green != null) {
			let _g = 0;
			let _g1 = this.raw.color_writes_green.length;
			while(_g < _g1) {
				let i = _g++;
				this.pipeState.colorWriteMasksGreen[i] = this.raw.color_writes_green[i];
			}
		}
		if(this.raw.color_writes_blue != null) {
			let _g = 0;
			let _g1 = this.raw.color_writes_blue.length;
			while(_g < _g1) {
				let i = _g++;
				this.pipeState.colorWriteMasksBlue[i] = this.raw.color_writes_blue[i];
			}
		}
		if(this.raw.color_writes_alpha != null) {
			let _g = 0;
			let _g1 = this.raw.color_writes_alpha.length;
			while(_g < _g1) {
				let i = _g++;
				this.pipeState.colorWriteMasksAlpha[i] = this.raw.color_writes_alpha[i];
			}
		}
		if(this.raw.color_attachments != null) {
			this.pipeState.colorAttachmentCount = this.raw.color_attachments.length;
			let _g = 0;
			let _g1 = this.raw.color_attachments.length;
			while(_g < _g1) {
				let i = _g++;
				this.pipeState.colorAttachments[i] = this.getTextureFormat(this.raw.color_attachments[i]);
			}
		}
		let tmp = this.raw.depth_attachment != null;
		if(this.raw.conservative_raster != null) {
			this.pipeState.conservativeRasterization = this.raw.conservative_raster;
		}
		let _gthis = this;
		if(this.raw.shader_from_source) {
			this.pipeState.vertexShader = kha_graphics4_VertexShader.fromSource(this.raw.vertex_shader);
			this.pipeState.fragmentShader = kha_graphics4_FragmentShader.fromSource(this.raw.fragment_shader);
			if(this.pipeState.vertexShader.shader == null || this.pipeState.fragmentShader.shader == null) {
				done(null);
				return;
			}
			this.finishCompile(done);
		} else {
			let shadersLoaded = 0;
			let numShaders = 2;
			if(this.raw.geometry_shader != null) {
				numShaders += 1;
			}
			if(this.raw.tesscontrol_shader != null) {
				numShaders += 1;
			}
			if(this.raw.tesseval_shader != null) {
				numShaders += 1;
			}
			let loadShader = function(file,type) {
				let path = iron_data_ShaderData.shaderPath + file + ".d3d11";
				iron_data_Data.getBlob(path,function(b) {
					if(type == 0) {
						_gthis.pipeState.vertexShader = new kha_graphics4_VertexShader([b],[file]);
					} else if(type == 1) {
						_gthis.pipeState.fragmentShader = new kha_graphics4_FragmentShader([b],[file]);
					} else if(type == 2) {
						_gthis.pipeState.geometryShader = new kha_graphics4_GeometryShader([b],[file]);
					} else if(type == 3) {
						_gthis.pipeState.tessellationControlShader = new kha_graphics4_TessellationControlShader([b],[file]);
					} else if(type == 4) {
						_gthis.pipeState.tessellationEvaluationShader = new kha_graphics4_TessellationEvaluationShader([b],[file]);
					}
					shadersLoaded += 1;
					if(shadersLoaded >= numShaders) {
						_gthis.finishCompile(done);
					}
				});
			};
			loadShader(this.raw.vertex_shader,0);
			loadShader(this.raw.fragment_shader,1);
			if(this.raw.geometry_shader != null) {
				loadShader(this.raw.geometry_shader,2);
			}
			if(this.raw.tesscontrol_shader != null) {
				loadShader(this.raw.tesscontrol_shader,3);
			}
			if(this.raw.tesseval_shader != null) {
				loadShader(this.raw.tesseval_shader,4);
			}
		}
	}
	finishCompile(done) {
		if(this.overrideContext != null) {
			if(this.overrideContext.cull_mode != null) {
				this.pipeState.cullMode = this.getCullMode(this.overrideContext.cull_mode);
			}
		}
		this.pipeState.compile();
		if(this.raw.constants != null) {
			let _g = 0;
			let _g1 = this.raw.constants;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				this.addConstant(c);
			}
		}
		if(this.raw.texture_units != null) {
			let _g = 0;
			let _g1 = this.raw.texture_units;
			while(_g < _g1.length) {
				let tu = _g1[_g];
				++_g;
				this.addTexture(tu);
			}
		}
		done(this);
	}
	parseVertexStructure() {
		this.structure = new kha_graphics4_VertexStructure();
		let ipos = false;
		let irot = false;
		let iscl = false;
		let _g = 0;
		let _g1 = this.raw.vertex_elements;
		while(_g < _g1.length) {
			let elem = _g1[_g];
			++_g;
			if(elem.name == "ipos") {
				ipos = true;
				continue;
			}
			if(elem.name == "irot") {
				irot = true;
				continue;
			}
			if(elem.name == "iscl") {
				iscl = true;
				continue;
			}
			this.structure.add(elem.name,iron_data_ShaderContext.parseData(elem.data));
		}
		if(ipos && !irot && !iscl) {
			this.instancingType = 1;
		} else if(ipos && irot && !iscl) {
			this.instancingType = 2;
		} else if(ipos && !irot && iscl) {
			this.instancingType = 3;
		} else if(ipos && irot && iscl) {
			this.instancingType = 4;
		}
	}
	delete() {
		if(this.pipeState.fragmentShader != null) {
			this.pipeState.fragmentShader.delete();
		}
		if(this.pipeState.vertexShader != null) {
			this.pipeState.vertexShader.delete();
		}
		if(this.pipeState.geometryShader != null) {
			this.pipeState.geometryShader.delete();
		}
		if(this.pipeState.tessellationControlShader != null) {
			this.pipeState.tessellationControlShader.delete();
		}
		if(this.pipeState.tessellationEvaluationShader != null) {
			this.pipeState.tessellationEvaluationShader.delete();
		}
		this.pipeState.delete();
	}
	getCompareMode(s) {
		switch(s) {
		case "always":
			return 0;
		case "equal":
			return 2;
		case "greater":
			return 6;
		case "greater_equal":
			return 7;
		case "less":
			return 4;
		case "less_equal":
			return 5;
		case "never":
			return 1;
		case "not_equal":
			return 3;
		default:
			return 4;
		}
	}
	getCullMode(s) {
		switch(s) {
		case "clockwise":
			return 0;
		case "none":
			return 2;
		default:
			return 1;
		}
	}
	getBlendingOperation(s) {
		switch(s) {
		case "add":
			return 0;
		case "max":
			return 4;
		case "min":
			return 3;
		case "reverse_subtract":
			return 2;
		case "subtract":
			return 1;
		default:
			return 0;
		}
	}
	getBlendingFactor(s) {
		switch(s) {
		case "blend_one":
			return 1;
		case "blend_zero":
			return 2;
		case "destination_alpha":
			return 4;
		case "destination_color":
			return 8;
		case "inverse_destination_alpha":
			return 6;
		case "inverse_destination_color":
			return 10;
		case "inverse_source_alpha":
			return 5;
		case "inverse_source_color":
			return 9;
		case "source_alpha":
			return 3;
		case "source_color":
			return 7;
		default:
			return 0;
		}
	}
	getTextureAddresing(s) {
		switch(s) {
		case "mirror":
			return 1;
		case "repeat":
			return 0;
		default:
			return 2;
		}
	}
	getTextureFilter(s) {
		switch(s) {
		case "linear":
			return 1;
		case "point":
			return 0;
		default:
			return 2;
		}
	}
	getMipmapFilter(s) {
		switch(s) {
		case "no":
			return 0;
		case "point":
			return 1;
		default:
			return 2;
		}
	}
	getTextureFormat(s) {
		switch(s) {
		case "DEPTH16":
			return 3;
		case "R16":
			return 6;
		case "R32":
			return 5;
		case "R8":
			return 1;
		case "RGBA128":
			return 2;
		case "RGBA32":
			return 0;
		case "RGBA64":
			return 4;
		default:
			return 0;
		}
	}
	getDepthStencilFormat(s) {
		switch(s) {
		case "DEPTH32":
			return 1;
		case "NONE":
			return 0;
		default:
			return 1;
		}
	}
	addConstant(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	addTexture(tu) {
		let unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
	}
	setTextureParameters(g,unitIndex,tex) {
		let unit = this.textureUnits[unitIndex];
		g.setTextureParameters(unit,tex.u_addressing == null ? 0 : this.getTextureAddresing(tex.u_addressing),tex.v_addressing == null ? 0 : this.getTextureAddresing(tex.v_addressing),tex.min_filter == null ? 1 : this.getTextureFilter(tex.min_filter),tex.mag_filter == null ? 1 : this.getTextureFilter(tex.mag_filter),tex.mipmap_filter == null ? 0 : this.getMipmapFilter(tex.mipmap_filter));
	}
	static parseData(data) {
		if(data == "float1") {
			return 0;
		} else if(data == "float2") {
			return 1;
		} else if(data == "float3") {
			return 2;
		} else if(data == "float4") {
			return 3;
		} else if(data == "short2norm") {
			return 23;
		} else if(data == "short4norm") {
			return 27;
		}
		return 0;
	}
}
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = "iron.data.ShaderContext";
Object.assign(iron_data_ShaderContext.prototype, {
	__class__: iron_data_ShaderContext
	,raw: null
	,pipeState: null
	,constants: null
	,textureUnits: null
	,overrideContext: null
	,structure: null
	,instancingType: null
});
class iron_data_WorldData {
	constructor(raw,done) {
		this.raw = raw;
		this.name = raw.name;
		let _gthis = this;
		if(raw.probe != null) {
			new iron_data_Probe(raw.probe,function(self) {
				_gthis.probe = self;
				_gthis.loadEnvmap(done);
			});
		} else {
			this.loadEnvmap(done);
		}
	}
	loadEnvmap(done) {
		let _gthis = this;
		if(this.raw.envmap != null) {
			iron_data_Data.getImage(this.raw.envmap,function(image) {
				_gthis.envmap = image;
				done(_gthis);
			});
		} else {
			done(this);
		}
	}
	static parse(name,id,done) {
		iron_data_Data.getSceneRaw(name,function(format) {
			let raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
			if(raw == null) {
				haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/WorldData.hx", lineNumber : 57, className : "iron.data.WorldData", methodName : "parse"});
				done(null);
			}
			new iron_data_WorldData(raw,done);
		});
	}
	static getEmptyIrradiance() {
		if(iron_data_WorldData.emptyIrr == null) {
			iron_data_WorldData.emptyIrr = kha_arrays_Float32Array._new(28);
			let _g = 0;
			let _g1 = iron_data_WorldData.emptyIrr.byteLength >> 2;
			while(_g < _g1) {
				let i = _g++;
				iron_data_WorldData.emptyIrr.setFloat32(i * 4,0.0,true);
			}
		}
		return iron_data_WorldData.emptyIrr;
	}
}
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = "iron.data.WorldData";
Object.assign(iron_data_WorldData.prototype, {
	__class__: iron_data_WorldData
	,name: null
	,raw: null
	,envmap: null
	,probe: null
});
class iron_data_Probe {
	constructor(raw,done) {
		this.radianceMipmaps = [];
		this.raw = raw;
		let _gthis = this;
		this.setIrradiance(function(irr) {
			_gthis.irradiance = irr;
			if(raw.radiance != null) {
				iron_data_Data.getImage(raw.radiance,function(rad) {
					_gthis.radiance = rad;
					while(_gthis.radianceMipmaps.length < raw.radiance_mipmaps) _gthis.radianceMipmaps.push(null);
					let dot = raw.radiance.lastIndexOf(".");
					let ext = raw.radiance.substring(dot);
					let base = raw.radiance.substring(0,dot);
					let mipsLoaded = 0;
					let _g = 0;
					let _g1 = raw.radiance_mipmaps;
					while(_g < _g1) {
						let i = _g++;
						iron_data_Data.getImage(base + "_" + i + ext,function(mipimg) {
							_gthis.radianceMipmaps[i] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(_gthis.radianceMipmaps);
								done(_gthis);
							}
						},true);
					}
				});
			} else {
				done(_gthis);
			}
		});
	}
	setIrradiance(done) {
		if(this.raw.irradiance == null) {
			done(iron_data_WorldData.getEmptyIrradiance());
		} else {
			let ext = this.raw.irradiance.endsWith(".json") ? "" : ".arm";
			iron_data_Data.getBlob(this.raw.irradiance + ext,function(b) {
				let irradianceParsed;
				if(ext == "") {
					irradianceParsed = JSON.parse(b.toString());
				} else {
					let i = new haxe_io_BytesInput(b.toBytes());
					i.set_bigEndian(false);
					irradianceParsed = iron_system_ArmPack.read(i);
				}
				let irr = kha_arrays_Float32Array._new(28);
				let v = irradianceParsed.irradiance.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(0,v,true);
				let v1 = irradianceParsed.irradiance.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(4,v1,true);
				let v2 = irradianceParsed.irradiance.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(8,v2,true);
				let v3 = irradianceParsed.irradiance.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(12,v3,true);
				let v4 = irradianceParsed.irradiance.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(16,v4,true);
				let v5 = irradianceParsed.irradiance.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(20,v5,true);
				let v6 = irradianceParsed.irradiance.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(24,v6,true);
				let v7 = irradianceParsed.irradiance.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(28,v7,true);
				let v8 = irradianceParsed.irradiance.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(32,v8,true);
				let v9 = irradianceParsed.irradiance.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(36,v9,true);
				let v10 = irradianceParsed.irradiance.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(40,v10,true);
				let v11 = irradianceParsed.irradiance.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(44,v11,true);
				let v12 = irradianceParsed.irradiance.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(48,v12,true);
				let v13 = irradianceParsed.irradiance.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(52,v13,true);
				let v14 = irradianceParsed.irradiance.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(56,v14,true);
				let v15 = irradianceParsed.irradiance.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(60,v15,true);
				let v16 = irradianceParsed.irradiance.getFloat32(64,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(64,v16,true);
				let v17 = irradianceParsed.irradiance.getFloat32(68,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(68,v17,true);
				let v18 = irradianceParsed.irradiance.getFloat32(72,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(72,v18,true);
				let v19 = irradianceParsed.irradiance.getFloat32(76,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(76,v19,true);
				let v20 = irradianceParsed.irradiance.getFloat32(80,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(80,v20,true);
				let v21 = irradianceParsed.irradiance.getFloat32(84,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(84,v21,true);
				let v22 = irradianceParsed.irradiance.getFloat32(88,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(88,v22,true);
				let v23 = irradianceParsed.irradiance.getFloat32(92,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(92,v23,true);
				let v24 = irradianceParsed.irradiance.getFloat32(96,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(96,v24,true);
				let v25 = irradianceParsed.irradiance.getFloat32(100,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(100,v25,true);
				let v26 = irradianceParsed.irradiance.getFloat32(104,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(104,v26,true);
				done(irr);
			});
		}
	}
}
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = "iron.data.Probe";
Object.assign(iron_data_Probe.prototype, {
	__class__: iron_data_Probe
	,raw: null
	,radiance: null
	,radianceMipmaps: null
	,irradiance: null
});
class iron_math_Mat3 {
	constructor(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
		this.self = new kha_math_FastMatrix3(_00,_10,_20,_01,_11,_21,_02,_12,_22);
	}
	setFrom4(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
	}
	get__00() {
		return this.self._00;
	}
	set__00(f) {
		return this.self._00 = f;
	}
	get__01() {
		return this.self._01;
	}
	set__01(f) {
		return this.self._01 = f;
	}
	get__02() {
		return this.self._02;
	}
	set__02(f) {
		return this.self._02 = f;
	}
	get__10() {
		return this.self._10;
	}
	set__10(f) {
		return this.self._10 = f;
	}
	get__11() {
		return this.self._11;
	}
	set__11(f) {
		return this.self._11 = f;
	}
	get__12() {
		return this.self._12;
	}
	set__12(f) {
		return this.self._12 = f;
	}
	get__20() {
		return this.self._20;
	}
	set__20(f) {
		return this.self._20 = f;
	}
	get__21() {
		return this.self._21;
	}
	set__21(f) {
		return this.self._21 = f;
	}
	get__22() {
		return this.self._22;
	}
	set__22(f) {
		return this.self._22 = f;
	}
	static identity() {
		return new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
	}
}
$hxClasses["iron.math.Mat3"] = iron_math_Mat3;
iron_math_Mat3.__name__ = "iron.math.Mat3";
Object.assign(iron_math_Mat3.prototype, {
	__class__: iron_math_Mat3
	,self: null
	,__properties__: {set__22: "set__22",get__22: "get__22",set__21: "set__21",get__21: "get__21",set__20: "set__20",get__20: "get__20",set__12: "set__12",get__12: "get__12",set__11: "set__11",get__11: "get__11",set__10: "set__10",get__10: "get__10",set__02: "set__02",get__02: "get__02",set__01: "set__01",get__01: "get__01",set__00: "set__00",get__00: "get__00"}
});
class iron_math_Ray {
	constructor(origin,direction) {
		this.origin = origin == null ? new iron_math_Vec4() : origin;
		this.direction = direction == null ? new iron_math_Vec4() : direction;
	}
	at(t) {
		let result = new iron_math_Vec4();
		let v = this.direction;
		result.x = v.x;
		result.y = v.y;
		result.z = v.z;
		result.w = v.w;
		let _this = result;
		_this.x *= t;
		_this.y *= t;
		_this.z *= t;
		let _this1 = _this;
		let v1 = this.origin;
		_this1.x += v1.x;
		_this1.y += v1.y;
		_this1.z += v1.z;
		return _this1;
	}
	distanceToPoint(point) {
		let _this_x = 0.0;
		let _this_y = 0.0;
		let _this_z = 0.0;
		let _this_w = 1.0;
		let b = this.origin;
		_this_x = point.x - b.x;
		_this_y = point.y - b.y;
		_this_z = point.z - b.z;
		let v = this.direction;
		let directionDistance = _this_x * v.x + _this_y * v.y + _this_z * v.z;
		if(directionDistance < 0) {
			let _this = this.origin;
			return Math.sqrt((point.x - _this.x) * (point.x - _this.x) + (point.y - _this.y) * (point.y - _this.y) + (point.z - _this.z) * (point.z - _this.z));
		}
		let v1 = this.direction;
		_this_x = v1.x;
		_this_y = v1.y;
		_this_z = v1.z;
		_this_w = v1.w;
		_this_x *= directionDistance;
		_this_y *= directionDistance;
		_this_z *= directionDistance;
		let v2 = this.origin;
		_this_x += v2.x;
		_this_y += v2.y;
		_this_z += v2.z;
		return Math.sqrt((point.x - _this_x) * (point.x - _this_x) + (point.y - _this_y) * (point.y - _this_y) + (point.z - _this_z) * (point.z - _this_z));
	}
	intersectsSphere(sphereCenter,sphereRadius) {
		return this.distanceToPoint(sphereCenter) <= sphereRadius;
	}
	intersectsPlane(plane) {
		let distToPoint = plane.distanceToPoint(this.origin);
		if(distToPoint == 0) {
			return true;
		}
		let _this = plane.normal;
		let v = this.direction;
		let denominator = _this.x * v.x + _this.y * v.y + _this.z * v.z;
		if(denominator * distToPoint < 0) {
			return true;
		}
		return false;
	}
	distanceToPlane(plane) {
		let _this = plane.normal;
		let v = this.direction;
		let denominator = _this.x * v.x + _this.y * v.y + _this.z * v.z;
		if(denominator == 0) {
			if(plane.distanceToPoint(this.origin) == 0) {
				return 0;
			}
			return -1;
		}
		let _this1 = this.origin;
		let v1 = plane.normal;
		let t = -(_this1.x * v1.x + _this1.y * v1.y + _this1.z * v1.z + plane.constant) / denominator;
		if(t >= 0) {
			return t;
		} else {
			return -1;
		}
	}
	intersectPlane(plane) {
		let t = this.distanceToPlane(plane);
		if(t == -1) {
			return null;
		}
		return this.at(t);
	}
	intersectsBox(center,dim) {
		return this.intersectBox(center,dim) != null;
	}
	intersectBox(center,dim) {
		let tmin;
		let tmax;
		let tymin;
		let tymax;
		let tzmin;
		let tzmax;
		let halfX = dim.x / 2;
		let halfY = dim.y / 2;
		let halfZ = dim.z / 2;
		let boxMinX = center.x - halfX;
		let boxMinY = center.y - halfY;
		let boxMinZ = center.z - halfZ;
		let boxMaxX = center.x + halfX;
		let boxMaxY = center.y + halfY;
		let boxMaxZ = center.z + halfZ;
		let invdirx = 1 / this.direction.x;
		let invdiry = 1 / this.direction.y;
		let invdirz = 1 / this.direction.z;
		let origin = this.origin;
		if(invdirx >= 0) {
			tmin = (boxMinX - origin.x) * invdirx;
			tmax = (boxMaxX - origin.x) * invdirx;
		} else {
			tmin = (boxMaxX - origin.x) * invdirx;
			tmax = (boxMinX - origin.x) * invdirx;
		}
		if(invdiry >= 0) {
			tymin = (boxMinY - origin.y) * invdiry;
			tymax = (boxMaxY - origin.y) * invdiry;
		} else {
			tymin = (boxMaxY - origin.y) * invdiry;
			tymax = (boxMinY - origin.y) * invdiry;
		}
		if(tmin > tymax || tymin > tmax) {
			return null;
		}
		if(tymin > tmin || tmin != tmin) {
			tmin = tymin;
		}
		if(tymax < tmax || tmax != tmax) {
			tmax = tymax;
		}
		if(invdirz >= 0) {
			tzmin = (boxMinZ - origin.z) * invdirz;
			tzmax = (boxMaxZ - origin.z) * invdirz;
		} else {
			tzmin = (boxMaxZ - origin.z) * invdirz;
			tzmax = (boxMinZ - origin.z) * invdirz;
		}
		if(tmin > tzmax || tzmin > tmax) {
			return null;
		}
		if(tzmin > tmin || tmin != tmin) {
			tmin = tzmin;
		}
		if(tzmax < tmax || tmax != tmax) {
			tmax = tzmax;
		}
		if(tmax < 0) {
			return null;
		}
		return this.at(tmin >= 0 ? tmin : tmax);
	}
	intersectTriangle(a,b,c,backfaceCulling) {
		let diff_x = 0.0;
		let diff_y = 0.0;
		let diff_z = 0.0;
		let diff_w = 1.0;
		let v_x = 0.0;
		let v_y = 0.0;
		let v_z = 0.0;
		let v_w = 1.0;
		let v_x1 = 0.0;
		let v_y1 = 0.0;
		let v_z1 = 0.0;
		let v_w1 = 1.0;
		let normal_x = 0.0;
		let normal_y = 0.0;
		let normal_z = 0.0;
		let normal_w = 1.0;
		v_x = b.x - a.x;
		v_y = b.y - a.y;
		v_z = b.z - a.z;
		v_x1 = c.x - a.x;
		v_y1 = c.y - a.y;
		v_z1 = c.z - a.z;
		let ax = v_x;
		let ay = v_y;
		let az = v_z;
		let bx = v_x1;
		let by = v_y1;
		let bz = v_z1;
		normal_x = ay * bz - az * by;
		normal_y = az * bx - ax * bz;
		normal_z = ax * by - ay * bx;
		let _this = this.direction;
		let DdN = _this.x * normal_x + _this.y * normal_y + _this.z * normal_z;
		let sign;
		if(DdN > 0) {
			if(backfaceCulling) {
				return null;
			}
			sign = 1;
		} else if(DdN < 0) {
			sign = -1;
			DdN = -DdN;
		} else {
			return null;
		}
		let a1 = this.origin;
		diff_x = a1.x - a.x;
		diff_y = a1.y - a.y;
		diff_z = a1.z - a.z;
		let _this1 = this.direction;
		let ax1 = diff_x;
		let ay1 = diff_y;
		let az1 = diff_z;
		let bx1 = v_x1;
		let by1 = v_y1;
		let bz1 = v_z1;
		v_x1 = ay1 * bz1 - az1 * by1;
		v_y1 = az1 * bx1 - ax1 * bz1;
		v_z1 = ax1 * by1 - ay1 * bx1;
		let DdQxE2 = sign * (_this1.x * v_x1 + _this1.y * v_y1 + _this1.z * v_z1);
		if(DdQxE2 < 0) {
			return null;
		}
		let _this2 = this.direction;
		let ax2 = v_x;
		let ay2 = v_y;
		let az2 = v_z;
		let vx = diff_x;
		let vy = diff_y;
		let vz = diff_z;
		v_x = ay2 * vz - az2 * vy;
		v_y = az2 * vx - ax2 * vz;
		v_z = ax2 * vy - ay2 * vx;
		let DdE1xQ = sign * (_this2.x * v_x + _this2.y * v_y + _this2.z * v_z);
		if(DdE1xQ < 0) {
			return null;
		}
		if(DdQxE2 + DdE1xQ > DdN) {
			return null;
		}
		let QdN = -sign * (diff_x * normal_x + diff_y * normal_y + diff_z * normal_z);
		if(QdN < 0) {
			return null;
		}
		return this.at(QdN / DdN);
	}
}
$hxClasses["iron.math.Ray"] = iron_math_Ray;
iron_math_Ray.__name__ = "iron.math.Ray";
Object.assign(iron_math_Ray.prototype, {
	__class__: iron_math_Ray
	,origin: null
	,direction: null
});
class iron_math_Plane {
	constructor() {
		this.constant = 0.0;
		this.normal = new iron_math_Vec4(1.0,0.0,0.0);
	}
	distanceToPoint(point) {
		let _this = this.normal;
		return _this.x * point.x + _this.y * point.y + _this.z * point.z + this.constant;
	}
	set(normal,point) {
		let _this = this.normal;
		_this.x = normal.x;
		_this.y = normal.y;
		_this.z = normal.z;
		_this.w = normal.w;
		let v = this.normal;
		this.constant = -(point.x * v.x + point.y * v.y + point.z * v.z);
		return this;
	}
}
$hxClasses["iron.math.Plane"] = iron_math_Plane;
iron_math_Plane.__name__ = "iron.math.Plane";
Object.assign(iron_math_Plane.prototype, {
	__class__: iron_math_Plane
	,normal: null
	,constant: null
});
class iron_math_RayCaster {
	static getRay(inputX,inputY,camera) {
		let start = new iron_math_Vec4();
		let end = new iron_math_Vec4();
		iron_math_RayCaster.getDirection(start,end,inputX,inputY,camera);
		end.x -= start.x;
		end.y -= start.y;
		end.z -= start.z;
		let n = Math.sqrt(end.x * end.x + end.y * end.y + end.z * end.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			end.x *= invN;
			end.y *= invN;
			end.z *= invN;
		}
		end.x *= camera.data.raw.far_plane;
		end.y *= camera.data.raw.far_plane;
		end.z *= camera.data.raw.far_plane;
		return new iron_math_Ray(start,end);
	}
	static getDirection(start,end,inputX,inputY,camera) {
		start.x = inputX / iron_App.w() * 2.0 - 1.0;
		start.y = -(inputY / iron_App.h() * 2.0 - 1.0);
		start.z = -1.0;
		end.x = start.x;
		end.y = start.y;
		end.z = 1.0;
		let _this = iron_math_RayCaster.PInv;
		let m = camera.P;
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		let _this1 = iron_math_RayCaster.VInv;
		let m1 = camera.V;
		let a001 = m1.self._00;
		let a011 = m1.self._01;
		let a021 = m1.self._02;
		let a031 = m1.self._03;
		let a101 = m1.self._10;
		let a111 = m1.self._11;
		let a121 = m1.self._12;
		let a131 = m1.self._13;
		let a201 = m1.self._20;
		let a211 = m1.self._21;
		let a221 = m1.self._22;
		let a231 = m1.self._23;
		let a301 = m1.self._30;
		let a311 = m1.self._31;
		let a321 = m1.self._32;
		let a331 = m1.self._33;
		let b001 = a001 * a111 - a011 * a101;
		let b011 = a001 * a121 - a021 * a101;
		let b021 = a001 * a131 - a031 * a101;
		let b031 = a011 * a121 - a021 * a111;
		let b041 = a011 * a131 - a031 * a111;
		let b051 = a021 * a131 - a031 * a121;
		let b061 = a201 * a311 - a211 * a301;
		let b071 = a201 * a321 - a221 * a301;
		let b081 = a201 * a331 - a231 * a301;
		let b091 = a211 * a321 - a221 * a311;
		let b101 = a211 * a331 - a231 * a311;
		let b111 = a221 * a331 - a231 * a321;
		let det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
		if(det1 == 0.0) {
			_this1.self._00 = 1.0;
			_this1.self._01 = 0.0;
			_this1.self._02 = 0.0;
			_this1.self._03 = 0.0;
			_this1.self._10 = 0.0;
			_this1.self._11 = 1.0;
			_this1.self._12 = 0.0;
			_this1.self._13 = 0.0;
			_this1.self._20 = 0.0;
			_this1.self._21 = 0.0;
			_this1.self._22 = 1.0;
			_this1.self._23 = 0.0;
			_this1.self._30 = 0.0;
			_this1.self._31 = 0.0;
			_this1.self._32 = 0.0;
			_this1.self._33 = 1.0;
		} else {
			det1 = 1.0 / det1;
			_this1.self._00 = (a111 * b111 - a121 * b101 + a131 * b091) * det1;
			_this1.self._01 = (a021 * b101 - a011 * b111 - a031 * b091) * det1;
			_this1.self._02 = (a311 * b051 - a321 * b041 + a331 * b031) * det1;
			_this1.self._03 = (a221 * b041 - a211 * b051 - a231 * b031) * det1;
			_this1.self._10 = (a121 * b081 - a101 * b111 - a131 * b071) * det1;
			_this1.self._11 = (a001 * b111 - a021 * b081 + a031 * b071) * det1;
			_this1.self._12 = (a321 * b021 - a301 * b051 - a331 * b011) * det1;
			_this1.self._13 = (a201 * b051 - a221 * b021 + a231 * b011) * det1;
			_this1.self._20 = (a101 * b101 - a111 * b081 + a131 * b061) * det1;
			_this1.self._21 = (a011 * b081 - a001 * b101 - a031 * b061) * det1;
			_this1.self._22 = (a301 * b041 - a311 * b021 + a331 * b001) * det1;
			_this1.self._23 = (a211 * b021 - a201 * b041 - a231 * b001) * det1;
			_this1.self._30 = (a111 * b071 - a101 * b091 - a121 * b061) * det1;
			_this1.self._31 = (a001 * b091 - a011 * b071 + a021 * b061) * det1;
			_this1.self._32 = (a311 * b011 - a301 * b031 - a321 * b001) * det1;
			_this1.self._33 = (a201 * b031 - a211 * b011 + a221 * b001) * det1;
		}
		let _this2 = iron_math_RayCaster.VPInv;
		let b = iron_math_RayCaster.VInv;
		let a = iron_math_RayCaster.PInv;
		let a002 = a.self._00;
		let a012 = a.self._01;
		let a022 = a.self._02;
		let a032 = a.self._03;
		let a102 = a.self._10;
		let a112 = a.self._11;
		let a122 = a.self._12;
		let a132 = a.self._13;
		let a202 = a.self._20;
		let a212 = a.self._21;
		let a222 = a.self._22;
		let a232 = a.self._23;
		let a302 = a.self._30;
		let a312 = a.self._31;
		let a322 = a.self._32;
		let a332 = a.self._33;
		let b0 = b.self._00;
		let b1 = b.self._10;
		let b2 = b.self._20;
		let b3 = b.self._30;
		_this2.self._00 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
		_this2.self._10 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
		_this2.self._20 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
		_this2.self._30 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this2.self._01 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
		_this2.self._11 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
		_this2.self._21 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
		_this2.self._31 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this2.self._02 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
		_this2.self._12 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
		_this2.self._22 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
		_this2.self._32 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this2.self._03 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
		_this2.self._13 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
		_this2.self._23 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
		_this2.self._33 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
		let m2 = iron_math_RayCaster.VPInv;
		let x = start.x;
		let y = start.y;
		let z = start.z;
		let d = 1.0 / (m2.self._03 * x + m2.self._13 * y + m2.self._23 * z + m2.self._33);
		start.x = (m2.self._00 * x + m2.self._10 * y + m2.self._20 * z + m2.self._30) * d;
		start.y = (m2.self._01 * x + m2.self._11 * y + m2.self._21 * z + m2.self._31) * d;
		start.z = (m2.self._02 * x + m2.self._12 * y + m2.self._22 * z + m2.self._32) * d;
		let m3 = iron_math_RayCaster.VPInv;
		let x1 = end.x;
		let y1 = end.y;
		let z1 = end.z;
		let d1 = 1.0 / (m3.self._03 * x1 + m3.self._13 * y1 + m3.self._23 * z1 + m3.self._33);
		end.x = (m3.self._00 * x1 + m3.self._10 * y1 + m3.self._20 * z1 + m3.self._30) * d1;
		end.y = (m3.self._01 * x1 + m3.self._11 * y1 + m3.self._21 * z1 + m3.self._31) * d1;
		end.z = (m3.self._02 * x1 + m3.self._12 * y1 + m3.self._22 * z1 + m3.self._32) * d1;
	}
	static boxIntersect(transform,inputX,inputY,camera) {
		let ray = iron_math_RayCaster.getRay(inputX,inputY,camera);
		let t = transform;
		let c = new iron_math_Vec4(t.world.self._30,t.world.self._31,t.world.self._32);
		let s = new iron_math_Vec4(t.dim.x,t.dim.y,t.dim.z);
		return ray.intersectBox(c,s);
	}
	static boxIntersectObject(o,inputX,inputY,camera) {
		let ray = iron_math_RayCaster.getRay(inputX,inputY,camera);
		let t = o.transform;
		let c = new iron_math_Vec4(t.world.self._30,t.world.self._31,t.world.self._32);
		let s = new iron_math_Vec4(t.dim.x,t.dim.y,t.dim.z);
		return ray.intersectBox(c,s);
	}
	static closestBoxIntersect(transforms,inputX,inputY,camera) {
		let intersects = [];
		let _g = 0;
		while(_g < transforms.length) {
			let t = transforms[_g];
			++_g;
			let intersect = iron_math_RayCaster.boxIntersect(t,inputX,inputY,camera);
			if(intersect != null) {
				intersects.push(t);
			}
		}
		if(intersects.length == 0) {
			return null;
		}
		let closest = null;
		let minDist = Infinity;
		let _g1 = 0;
		while(_g1 < intersects.length) {
			let t = intersects[_g1];
			++_g1;
			let v1 = t.loc;
			let v2 = camera.transform.loc;
			let vx = v1.x - v2.x;
			let vy = v1.y - v2.y;
			let vz = v1.z - v2.z;
			let dist = Math.sqrt(vx * vx + vy * vy + vz * vz);
			if(dist < minDist) {
				minDist = dist;
				closest = t;
			}
		}
		return closest;
	}
	static closestBoxIntersectObject(objects,inputX,inputY,camera) {
		let intersects = [];
		let _g = 0;
		while(_g < objects.length) {
			let o = objects[_g];
			++_g;
			let intersect = iron_math_RayCaster.boxIntersectObject(o,inputX,inputY,camera);
			if(intersect != null) {
				intersects.push(o);
			}
		}
		if(intersects.length == 0) {
			return null;
		}
		let closest = null;
		let minDist = Infinity;
		let _g1 = 0;
		while(_g1 < intersects.length) {
			let t = intersects[_g1];
			++_g1;
			let v1 = t.transform.loc;
			let v2 = camera.transform.loc;
			let vx = v1.x - v2.x;
			let vy = v1.y - v2.y;
			let vz = v1.z - v2.z;
			let dist = Math.sqrt(vx * vx + vy * vy + vz * vz);
			if(dist < minDist) {
				minDist = dist;
				closest = t;
			}
		}
		return closest;
	}
	static planeIntersect(normal,a,inputX,inputY,camera) {
		let ray = iron_math_RayCaster.getRay(inputX,inputY,camera);
		let plane = new iron_math_Plane();
		plane.set(normal,a);
		return ray.intersectPlane(plane);
	}
	static getPlaneUV(obj,screenX,screenY,camera) {
		let _this = obj.transform.world;
		iron_math_RayCaster.nor = new iron_math_Vec4(_this.self._20,_this.self._21,_this.self._22);
		let _this1 = iron_math_RayCaster.loc;
		_this1.x = obj.transform.world.self._30;
		_this1.y = obj.transform.world.self._31;
		_this1.z = obj.transform.world.self._32;
		_this1.w = 1.0;
		let hit = iron_math_RayCaster.planeIntersect(iron_math_RayCaster.nor,iron_math_RayCaster.loc,screenX,screenY,camera);
		if(hit != null) {
			let normals = obj.data.geom.normals.values;
			let _this = iron_math_RayCaster.nor;
			let y = normals.getInt16(2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let z = normals.getInt16(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			_this.x = normals.getInt16(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			let a = iron_math_RayCaster.nor.x;
			let b = iron_math_RayCaster.nor.y;
			let c = iron_math_RayCaster.nor.z;
			let e = 0.0001;
			let u = a >= e && b >= e ? new iron_math_Vec4(b,-a,0) : new iron_math_Vec4(c,-a,0);
			let n = Math.sqrt(u.x * u.x + u.y * u.y + u.z * u.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				u.x *= invN;
				u.y *= invN;
				u.z *= invN;
			}
			let _this1 = iron_math_RayCaster.nor;
			let x = _this1.x;
			let y1 = _this1.y;
			let z1 = _this1.z;
			let w = _this1.w;
			if(w == null) {
				w = 1.0;
			}
			if(z1 == null) {
				z1 = 0.0;
			}
			if(y1 == null) {
				y1 = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y1;
			let v_z = z1;
			let v_w = w;
			let ax = v_x;
			let ay = v_y;
			let az = v_z;
			let vx = u.x;
			let vy = u.y;
			let vz = u.z;
			v_x = ay * vz - az * vy;
			v_y = az * vx - ax * vz;
			v_z = ax * vy - ay * vx;
			let _this2 = iron_math_RayCaster.m;
			let m = obj.transform.world;
			_this2.self._00 = m.self._00;
			_this2.self._01 = m.self._01;
			_this2.self._02 = m.self._02;
			_this2.self._03 = m.self._03;
			_this2.self._10 = m.self._10;
			_this2.self._11 = m.self._11;
			_this2.self._12 = m.self._12;
			_this2.self._13 = m.self._13;
			_this2.self._20 = m.self._20;
			_this2.self._21 = m.self._21;
			_this2.self._22 = m.self._22;
			_this2.self._23 = m.self._23;
			_this2.self._30 = m.self._30;
			_this2.self._31 = m.self._31;
			_this2.self._32 = m.self._32;
			_this2.self._33 = m.self._33;
			let _this3 = iron_math_RayCaster.m;
			let m1 = iron_math_RayCaster.m;
			let a00 = m1.self._00;
			let a01 = m1.self._01;
			let a02 = m1.self._02;
			let a03 = m1.self._03;
			let a10 = m1.self._10;
			let a11 = m1.self._11;
			let a12 = m1.self._12;
			let a13 = m1.self._13;
			let a20 = m1.self._20;
			let a21 = m1.self._21;
			let a22 = m1.self._22;
			let a23 = m1.self._23;
			let a30 = m1.self._30;
			let a31 = m1.self._31;
			let a32 = m1.self._32;
			let a33 = m1.self._33;
			let b00 = a00 * a11 - a01 * a10;
			let b01 = a00 * a12 - a02 * a10;
			let b02 = a00 * a13 - a03 * a10;
			let b03 = a01 * a12 - a02 * a11;
			let b04 = a01 * a13 - a03 * a11;
			let b05 = a02 * a13 - a03 * a12;
			let b06 = a20 * a31 - a21 * a30;
			let b07 = a20 * a32 - a22 * a30;
			let b08 = a20 * a33 - a23 * a30;
			let b09 = a21 * a32 - a22 * a31;
			let b10 = a21 * a33 - a23 * a31;
			let b11 = a22 * a33 - a23 * a32;
			let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this3.self._00 = 1.0;
				_this3.self._01 = 0.0;
				_this3.self._02 = 0.0;
				_this3.self._03 = 0.0;
				_this3.self._10 = 0.0;
				_this3.self._11 = 1.0;
				_this3.self._12 = 0.0;
				_this3.self._13 = 0.0;
				_this3.self._20 = 0.0;
				_this3.self._21 = 0.0;
				_this3.self._22 = 1.0;
				_this3.self._23 = 0.0;
				_this3.self._30 = 0.0;
				_this3.self._31 = 0.0;
				_this3.self._32 = 0.0;
				_this3.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this3.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this3.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this3.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this3.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this3.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this3.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this3.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this3.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this3.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this3.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this3.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this3.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this3.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this3.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this3.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this3.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			let _this4 = iron_math_RayCaster.m;
			let f = _this4.self._01;
			_this4.self._01 = _this4.self._10;
			_this4.self._10 = f;
			f = _this4.self._02;
			_this4.self._02 = _this4.self._20;
			_this4.self._20 = f;
			f = _this4.self._12;
			_this4.self._12 = _this4.self._21;
			_this4.self._21 = f;
			iron_math_RayCaster.m.self._30 = iron_math_RayCaster.m.self._31 = iron_math_RayCaster.m.self._32 = 0;
			let m2 = iron_math_RayCaster.m;
			let x1 = u.x;
			let y2 = u.y;
			let z2 = u.z;
			u.x = m2.self._00 * x1 + m2.self._10 * y2 + m2.self._20 * z2 + m2.self._30;
			u.y = m2.self._01 * x1 + m2.self._11 * y2 + m2.self._21 * z2 + m2.self._31;
			u.z = m2.self._02 * x1 + m2.self._12 * y2 + m2.self._22 * z2 + m2.self._32;
			let n1 = Math.sqrt(u.x * u.x + u.y * u.y + u.z * u.z);
			if(n1 > 0.0) {
				let invN = 1.0 / n1;
				u.x *= invN;
				u.y *= invN;
				u.z *= invN;
			}
			let m3 = iron_math_RayCaster.m;
			let x2 = v_x;
			let y3 = v_y;
			let z3 = v_z;
			v_x = m3.self._00 * x2 + m3.self._10 * y3 + m3.self._20 * z3 + m3.self._30;
			v_y = m3.self._01 * x2 + m3.self._11 * y3 + m3.self._21 * z3 + m3.self._31;
			v_z = m3.self._02 * x2 + m3.self._12 * y3 + m3.self._22 * z3 + m3.self._32;
			let n2 = Math.sqrt(v_x * v_x + v_y * v_y + v_z * v_z);
			if(n2 > 0.0) {
				let invN = 1.0 / n2;
				v_x *= invN;
				v_y *= invN;
				v_z *= invN;
			}
			let v = iron_math_RayCaster.loc;
			hit.x -= v.x;
			hit.y -= v.y;
			hit.z -= v.z;
			let ucoord = u.x * hit.x + u.y * hit.y + u.z * hit.z;
			let vcoord = v_x * hit.x + v_y * hit.y + v_z * hit.z;
			let dim = obj.transform.dim;
			let size = dim.x > dim.y ? dim.x / 2 : dim.y / 2;
			let ix = ucoord / size * -0.5 + 0.5;
			let iy = vcoord / size * -0.5 + 0.5;
			return new iron_math_Vec2(ix,iy);
		}
		return null;
	}
}
$hxClasses["iron.math.RayCaster"] = iron_math_RayCaster;
iron_math_RayCaster.__name__ = "iron.math.RayCaster";
class iron_math_Vec2 {
	constructor(x,y) {
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.x = x;
		this.y = y;
	}
	cross(v) {
		return this.x * v.y - this.y * v.x;
	}
	set(x,y) {
		this.x = x;
		this.y = y;
		return this;
	}
	add(v) {
		this.x += v.x;
		this.y += v.y;
		return this;
	}
	addf(x,y) {
		this.x += x;
		this.y += y;
		return this;
	}
	addvecs(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		return this;
	}
	subvecs(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		return this;
	}
	normalize() {
		let a = this.x;
		let b = this.y;
		let l = a * a + b * b;
		if(l > 0.0) {
			l = 1.0 / Math.sqrt(l);
			this.x = a * l;
			this.y = b * l;
		}
		return this;
	}
	mult(f) {
		this.x *= f;
		this.y *= f;
		return this;
	}
	dot(v) {
		return this.x * v.x + this.y * v.y;
	}
	setFrom(v) {
		this.x = v.x;
		this.y = v.y;
		return this;
	}
	clone() {
		return new iron_math_Vec2(this.x,this.y);
	}
	lerp(from,to,s) {
		this.x = from.x + (to.x - from.x) * s;
		this.y = from.y + (to.y - from.y) * s;
		return this;
	}
	equals(v) {
		if(this.x == v.x) {
			return this.y == v.y;
		} else {
			return false;
		}
	}
	length() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	sub(v) {
		this.x -= v.x;
		this.y -= v.y;
		return this;
	}
	exp(v) {
		this.x = Math.exp(v.x);
		this.y = Math.exp(v.y);
		return this;
	}
	distanceTo(p) {
		return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y));
	}
	clamp(min,max) {
		let l = Math.sqrt(this.x * this.x + this.y * this.y);
		if(l < min) {
			let a = this.x;
			let b = this.y;
			let l = a * a + b * b;
			if(l > 0.0) {
				l = 1.0 / Math.sqrt(l);
				this.x = a * l;
				this.y = b * l;
			}
			let _this = this;
			_this.x *= min;
			_this.y *= min;
		} else if(l > max) {
			let a = this.x;
			let b = this.y;
			let l = a * a + b * b;
			if(l > 0.0) {
				l = 1.0 / Math.sqrt(l);
				this.x = a * l;
				this.y = b * l;
			}
			let _this = this;
			_this.x *= max;
			_this.y *= max;
		}
		return this;
	}
	toString() {
		return "(" + this.x + ", " + this.y + ")";
	}
	static distance(v1,v2) {
		let vx = v1.x - v2.x;
		let vy = v1.y - v2.y;
		return Math.sqrt(vx * vx + vy * vy);
	}
	static distancef(v1x,v1y,v2x,v2y) {
		let vx = v1x - v2x;
		let vy = v1y - v2y;
		return Math.sqrt(vx * vx + vy * vy);
	}
	static xAxis() {
		return new iron_math_Vec2(1.0,0.0);
	}
	static yAxis() {
		return new iron_math_Vec2(0.0,1.0);
	}
}
$hxClasses["iron.math.Vec2"] = iron_math_Vec2;
iron_math_Vec2.__name__ = "iron.math.Vec2";
Object.assign(iron_math_Vec2.prototype, {
	__class__: iron_math_Vec2
	,x: null
	,y: null
});
class iron_object_Animation {
	constructor() {
		if(iron_object_Animation._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.markerEvents = null;
		this.lastFrameIndex = -1;
		this.blendFactor = 0.0;
		this.blendAction = "";
		this.blendCurrent = 0.0;
		this.blendTime = 0.0;
		this.frameTime = 0.016666666666666666;
		this.paused = false;
		this.onComplete = null;
		this.frameIndex = 0;
		this.loop = true;
		this.speed = 1.0;
		this.time = 0.0;
		this.action = "";
		iron_Scene.active.animations.push(this);
		if(iron_Scene.active.raw.frame_time != null) {
			this.frameTime = iron_Scene.active.raw.frame_time;
		}
		this.play();
	}
	play(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		if(blendTime > 0) {
			this.blendTime = blendTime;
			this.blendCurrent = 0.0;
			this.blendAction = this.action;
			this.frameIndex = 0;
			this.time = 0.0;
		} else {
			this.frameIndex = -1;
		}
		this.action = action;
		this.onComplete = onComplete;
		this.speed = speed;
		this.loop = loop;
		this.paused = false;
	}
	blend(action1,action2,factor) {
		this.blendTime = 1.0;
		this.blendFactor = factor;
	}
	pause() {
		this.paused = true;
	}
	resume() {
		this.paused = false;
	}
	remove() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	update(delta) {
		if(this.paused || this.speed == 0.0) {
			return;
		}
		this.time += delta * this.speed;
		if(this.blendTime > 0 && this.blendFactor == 0) {
			this.blendCurrent += delta;
			if(this.blendCurrent >= this.blendTime) {
				this.blendTime = 0.0;
			}
		}
	}
	isTrackEnd(track) {
		if(this.speed > 0) {
			return this.frameIndex >= (track.frames.byteLength >> 2) - 1;
		} else {
			return this.frameIndex <= 0;
		}
	}
	checkFrameIndex(frameValues) {
		if(this.speed > 0) {
			if(this.frameIndex + 1 < frameValues.byteLength >> 2) {
				return this.time > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			} else {
				return false;
			}
		} else if(this.frameIndex - 1 > -1) {
			return this.time < frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		} else {
			return false;
		}
	}
	rewind(track) {
		this.frameIndex = this.speed > 0 ? 0 : (track.frames.byteLength >> 2) - 1;
		this.time = track.frames.getUint32(this.frameIndex * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
	}
	updateTrack(anim) {
		if(anim == null) {
			return;
		}
		let track = anim.tracks[0];
		if(this.frameIndex == -1) {
			this.rewind(track);
		}
		let sign = this.speed > 0 ? 1 : -1;
		while(true) {
			let frameValues = track.frames;
			if(!(this.speed > 0 ? this.frameIndex + 1 < frameValues.byteLength >> 2 && this.time > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime : this.frameIndex - 1 > -1 && this.time < frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime)) {
				break;
			}
			this.frameIndex += sign;
		}
		if(this.markerEvents != null && anim.marker_names != null && this.frameIndex != this.lastFrameIndex) {
			let _g = 0;
			let _g1 = anim.marker_frames.byteLength >> 2;
			while(_g < _g1) {
				let i = _g++;
				if(this.frameIndex == anim.marker_frames.getUint32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN)) {
					let ar = this.markerEvents.h[anim.marker_names[i]];
					if(ar != null) {
						let _g = 0;
						while(_g < ar.length) {
							let f = ar[_g];
							++_g;
							f();
						}
					}
				}
			}
			this.lastFrameIndex = this.frameIndex;
		}
		if(this.isTrackEnd(track)) {
			if(this.loop || this.blendTime > 0) {
				this.rewind(track);
			} else {
				this.frameIndex -= sign;
				this.paused = true;
			}
			if(this.onComplete != null && this.blendTime == 0) {
				this.onComplete();
			}
		}
	}
	updateAnimSampled(anim,m) {
		if(anim == null) {
			return;
		}
		let track = anim.tracks[0];
		let sign = this.speed > 0 ? 1 : -1;
		let t = this.time;
		let ti = this.frameIndex;
		let t1 = track.frames.getUint32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		let t2 = track.frames.getUint32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		let s = (t - t1) / (t2 - t1);
		let _this = iron_object_Animation.m1;
		let a = track.values;
		let offset = ti * 16;
		if(offset == null) {
			offset = 0;
		}
		_this.self._00 = a.getFloat32(offset * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._10 = a.getFloat32((1 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._20 = a.getFloat32((2 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._30 = a.getFloat32((3 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._01 = a.getFloat32((4 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._11 = a.getFloat32((5 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._21 = a.getFloat32((6 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._31 = a.getFloat32((7 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._02 = a.getFloat32((8 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._12 = a.getFloat32((9 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._22 = a.getFloat32((10 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._32 = a.getFloat32((11 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._03 = a.getFloat32((12 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._13 = a.getFloat32((13 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._23 = a.getFloat32((14 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._33 = a.getFloat32((15 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let _this1 = iron_object_Animation.m2;
		let a1 = track.values;
		let offset1 = (ti + sign) * 16;
		if(offset1 == null) {
			offset1 = 0;
		}
		_this1.self._00 = a1.getFloat32(offset1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._10 = a1.getFloat32((1 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._20 = a1.getFloat32((2 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._30 = a1.getFloat32((3 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._01 = a1.getFloat32((4 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._11 = a1.getFloat32((5 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._21 = a1.getFloat32((6 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._31 = a1.getFloat32((7 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._02 = a1.getFloat32((8 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._12 = a1.getFloat32((9 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._22 = a1.getFloat32((10 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._32 = a1.getFloat32((11 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._03 = a1.getFloat32((12 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._13 = a1.getFloat32((13 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._23 = a1.getFloat32((14 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this1.self._33 = a1.getFloat32((15 + offset1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		let _this2 = iron_object_Animation.m1;
		let loc = iron_object_Animation.vpos;
		let quat = iron_object_Animation.q1;
		let scale = iron_object_Animation.vscl;
		loc.x = _this2.self._30;
		loc.y = _this2.self._31;
		loc.z = _this2.self._32;
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		let _this4 = _this3;
		scale.x = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale.y = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		let _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		let _this8 = _this7;
		scale.z = Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		let _this9 = _this2.self;
		let m3 = _this9._12;
		let m4 = _this9._22;
		let m5 = _this9._32;
		let m6 = _this9._13;
		let m7 = _this9._23;
		let m8 = _this9._33;
		let c00 = _this9._11 * (m4 * m8 - m5 * m7) - _this9._21 * (m3 * m8 - m5 * m6) + _this9._31 * (m3 * m7 - m4 * m6);
		let m31 = _this9._12;
		let m41 = _this9._22;
		let m51 = _this9._32;
		let m61 = _this9._13;
		let m71 = _this9._23;
		let m81 = _this9._33;
		let c01 = _this9._10 * (m41 * m81 - m51 * m71) - _this9._20 * (m31 * m81 - m51 * m61) + _this9._30 * (m31 * m71 - m41 * m61);
		let m32 = _this9._11;
		let m42 = _this9._21;
		let m52 = _this9._31;
		let m62 = _this9._13;
		let m72 = _this9._23;
		let m82 = _this9._33;
		let c02 = _this9._10 * (m42 * m82 - m52 * m72) - _this9._20 * (m32 * m82 - m52 * m62) + _this9._30 * (m32 * m72 - m42 * m62);
		let m33 = _this9._11;
		let m43 = _this9._21;
		let m53 = _this9._31;
		let m63 = _this9._12;
		let m73 = _this9._22;
		let m83 = _this9._32;
		let c03 = _this9._10 * (m43 * m83 - m53 * m73) - _this9._20 * (m33 * m83 - m53 * m63) + _this9._30 * (m33 * m73 - m43 * m63);
		if(_this9._00 * c00 - _this9._01 * c01 + _this9._02 * c02 - _this9._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this2.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this2.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this2.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this2.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this2.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this2.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this2.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this2.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this2.self._22 * invs;
		let m1 = iron_math_Mat4.helpMat;
		let m11 = m1.self._00;
		let m12 = m1.self._10;
		let m13 = m1.self._20;
		let m21 = m1.self._01;
		let m22 = m1.self._11;
		let m23 = m1.self._21;
		let m311 = m1.self._02;
		let m321 = m1.self._12;
		let m331 = m1.self._22;
		let tr = m11 + m22 + m331;
		let s1 = 0.0;
		if(tr > 0) {
			s1 = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s1;
			quat.x = (m321 - m23) * s1;
			quat.y = (m13 - m311) * s1;
			quat.z = (m21 - m12) * s1;
		} else if(m11 > m22 && m11 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s1;
			quat.x = 0.25 * s1;
			quat.y = (m12 + m21) / s1;
			quat.z = (m13 + m311) / s1;
		} else if(m22 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s1;
			quat.x = (m12 + m21) / s1;
			quat.y = 0.25 * s1;
			quat.z = (m23 + m321) / s1;
		} else {
			s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s1;
			quat.x = (m13 + m311) / s1;
			quat.y = (m23 + m321) / s1;
			quat.z = 0.25 * s1;
		}
		let _this10 = iron_object_Animation.m2;
		let loc1 = iron_object_Animation.vpos2;
		let quat1 = iron_object_Animation.q2;
		let scale1 = iron_object_Animation.vscl2;
		loc1.x = _this10.self._30;
		loc1.y = _this10.self._31;
		loc1.z = _this10.self._32;
		let _this11 = iron_math_Mat4.helpVec;
		_this11.x = _this10.self._00;
		_this11.y = _this10.self._01;
		_this11.z = _this10.self._02;
		_this11.w = 1.0;
		let _this12 = _this11;
		scale1.x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
		let _this13 = iron_math_Mat4.helpVec;
		_this13.x = _this10.self._10;
		_this13.y = _this10.self._11;
		_this13.z = _this10.self._12;
		_this13.w = 1.0;
		let _this14 = _this13;
		scale1.y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
		let _this15 = iron_math_Mat4.helpVec;
		_this15.x = _this10.self._20;
		_this15.y = _this10.self._21;
		_this15.z = _this10.self._22;
		_this15.w = 1.0;
		let _this16 = _this15;
		scale1.z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
		let _this17 = _this10.self;
		let m34 = _this17._12;
		let m44 = _this17._22;
		let m54 = _this17._32;
		let m64 = _this17._13;
		let m74 = _this17._23;
		let m84 = _this17._33;
		let c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
		let m35 = _this17._12;
		let m45 = _this17._22;
		let m55 = _this17._32;
		let m65 = _this17._13;
		let m75 = _this17._23;
		let m85 = _this17._33;
		let c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
		let m36 = _this17._11;
		let m46 = _this17._21;
		let m56 = _this17._31;
		let m66 = _this17._13;
		let m76 = _this17._23;
		let m86 = _this17._33;
		let c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
		let m37 = _this17._11;
		let m47 = _this17._21;
		let m57 = _this17._31;
		let m67 = _this17._12;
		let m77 = _this17._22;
		let m87 = _this17._32;
		let c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
		if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
			scale1.x = -scale1.x;
		}
		let invs1 = 1.0 / scale1.x;
		iron_math_Mat4.helpMat.self._00 = _this10.self._00 * invs1;
		iron_math_Mat4.helpMat.self._01 = _this10.self._01 * invs1;
		iron_math_Mat4.helpMat.self._02 = _this10.self._02 * invs1;
		invs1 = 1.0 / scale1.y;
		iron_math_Mat4.helpMat.self._10 = _this10.self._10 * invs1;
		iron_math_Mat4.helpMat.self._11 = _this10.self._11 * invs1;
		iron_math_Mat4.helpMat.self._12 = _this10.self._12 * invs1;
		invs1 = 1.0 / scale1.z;
		iron_math_Mat4.helpMat.self._20 = _this10.self._20 * invs1;
		iron_math_Mat4.helpMat.self._21 = _this10.self._21 * invs1;
		iron_math_Mat4.helpMat.self._22 = _this10.self._22 * invs1;
		let m2 = iron_math_Mat4.helpMat;
		let m111 = m2.self._00;
		let m121 = m2.self._10;
		let m131 = m2.self._20;
		let m211 = m2.self._01;
		let m221 = m2.self._11;
		let m231 = m2.self._21;
		let m312 = m2.self._02;
		let m322 = m2.self._12;
		let m332 = m2.self._22;
		let tr1 = m111 + m221 + m332;
		let s2 = 0.0;
		if(tr1 > 0) {
			s2 = 0.5 / Math.sqrt(tr1 + 1.0);
			quat1.w = 0.25 / s2;
			quat1.x = (m322 - m231) * s2;
			quat1.y = (m131 - m312) * s2;
			quat1.z = (m211 - m121) * s2;
		} else if(m111 > m221 && m111 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
			quat1.w = (m322 - m231) / s2;
			quat1.x = 0.25 * s2;
			quat1.y = (m121 + m211) / s2;
			quat1.z = (m131 + m312) / s2;
		} else if(m221 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
			quat1.w = (m131 - m312) / s2;
			quat1.x = (m121 + m211) / s2;
			quat1.y = 0.25 * s2;
			quat1.z = (m231 + m322) / s2;
		} else {
			s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
			quat1.w = (m211 - m121) / s2;
			quat1.x = (m131 + m312) / s2;
			quat1.y = (m231 + m322) / s2;
			quat1.z = 0.25 * s2;
		}
		let _this18 = iron_object_Animation.vp;
		let from = iron_object_Animation.vpos;
		let to = iron_object_Animation.vpos2;
		_this18.x = from.x + (to.x - from.x) * s;
		_this18.y = from.y + (to.y - from.y) * s;
		_this18.z = from.z + (to.z - from.z) * s;
		let _this19 = iron_object_Animation.vs;
		let from1 = iron_object_Animation.vscl;
		let to1 = iron_object_Animation.vscl2;
		_this19.x = from1.x + (to1.x - from1.x) * s;
		_this19.y = from1.y + (to1.y - from1.y) * s;
		_this19.z = from1.z + (to1.z - from1.z) * s;
		let _this20 = iron_object_Animation.q3;
		let from2 = iron_object_Animation.q1;
		let to2 = iron_object_Animation.q2;
		let fromx = from2.x;
		let fromy = from2.y;
		let fromz = from2.z;
		let fromw = from2.w;
		let dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		_this20.x = fromx + (to2.x - fromx) * s;
		_this20.y = fromy + (to2.y - fromy) * s;
		_this20.z = fromz + (to2.z - fromz) * s;
		_this20.w = fromw + (to2.w - fromw) * s;
		let l = Math.sqrt(_this20.x * _this20.x + _this20.y * _this20.y + _this20.z * _this20.z + _this20.w * _this20.w);
		if(l == 0.0) {
			_this20.x = 0;
			_this20.y = 0;
			_this20.z = 0;
			_this20.w = 0;
		} else {
			l = 1.0 / l;
			_this20.x *= l;
			_this20.y *= l;
			_this20.z *= l;
			_this20.w *= l;
		}
		let q = iron_object_Animation.q3;
		let x = q.x;
		let y = q.y;
		let z = q.z;
		let w = q.w;
		let x2 = x + x;
		let y2 = y + y;
		let z2 = z + z;
		let xx = x * x2;
		let xy = x * y2;
		let xz = x * z2;
		let yy = y * y2;
		let yz = y * z2;
		let zz = z * z2;
		let wx = w * x2;
		let wy = w * y2;
		let wz = w * z2;
		m.self._00 = 1.0 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1.0 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1.0 - (xx + yy);
		m.self._03 = 0.0;
		m.self._13 = 0.0;
		m.self._23 = 0.0;
		m.self._30 = 0.0;
		m.self._31 = 0.0;
		m.self._32 = 0.0;
		m.self._33 = 1.0;
		let v = iron_object_Animation.vs;
		let x1 = v.x;
		let y1 = v.y;
		let z1 = v.z;
		m.self._00 *= x1;
		m.self._01 *= x1;
		m.self._02 *= x1;
		m.self._03 *= x1;
		m.self._10 *= y1;
		m.self._11 *= y1;
		m.self._12 *= y1;
		m.self._13 *= y1;
		m.self._20 *= z1;
		m.self._21 *= z1;
		m.self._22 *= z1;
		m.self._23 *= z1;
		m.self._30 = iron_object_Animation.vp.x;
		m.self._31 = iron_object_Animation.vp.y;
		m.self._32 = iron_object_Animation.vp.z;
	}
	setFrame(frame) {
		this.time = 0;
		this.frameIndex = frame;
		this.update(frame * iron_Scene.active.raw.frame_time);
	}
	notifyOnMarker(name,onMarker) {
		if(this.markerEvents == null) {
			this.markerEvents = new haxe_ds_StringMap();
		}
		let ar = this.markerEvents.h[name];
		if(ar == null) {
			ar = [];
			this.markerEvents.h[name] = ar;
		}
		ar.push(onMarker);
	}
	removeMarker(name,onMarker) {
		HxOverrides.remove(this.markerEvents.h[name],onMarker);
	}
	currentFrame() {
		return this.time / this.frameTime | 0;
	}
	totalFrames() {
		return 0;
	}
	static beginProfile() {
		iron_object_Animation.startTime = kha_Scheduler.realTime();
	}
	static endProfile() {
		iron_object_Animation.animationTime += kha_Scheduler.realTime() - iron_object_Animation.startTime;
	}
	static endFrame() {
		iron_object_Animation.animationTime = 0;
	}
}
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = "iron.object.Animation";
Object.assign(iron_object_Animation.prototype, {
	__class__: iron_object_Animation
	,isSkinned: null
	,isSampled: null
	,action: null
	,armature: null
	,time: null
	,speed: null
	,loop: null
	,frameIndex: null
	,onComplete: null
	,paused: null
	,frameTime: null
	,blendTime: null
	,blendCurrent: null
	,blendAction: null
	,blendFactor: null
	,lastFrameIndex: null
	,markerEvents: null
});
class iron_object_BoneAnimation extends iron_object_Animation {
	constructor(armatureName) {
		iron_object_Animation._hx_skip_constructor = true;
		super();
		iron_object_Animation._hx_skip_constructor = false;
		this._hx_constructor(armatureName);
	}
	_hx_constructor(armatureName) {
		if(armatureName == null) {
			armatureName = "";
		}
		this.onUpdates = null;
		this.relativeBoneConstraints = false;
		this.constraintMats = null;
		this.constraintTargetsI = null;
		this.constraintTargets = null;
		this.boneChildren = null;
		this.matsFastBlendSort = [];
		this.matsFastBlend = [];
		this.matsFastSort = [];
		this.matsFast = [];
		this.applyParent = null;
		this.absMats = null;
		this.skeletonMatsBlend = null;
		this.skeletonBonesBlend = null;
		this.skeletonMats = null;
		this.skeletonBones = null;
		super._hx_constructor();
		this.isSampled = false;
		let _g = 0;
		let _g1 = iron_Scene.active.armatures;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.name == armatureName) {
				this.armature = a;
				break;
			}
		}
	}
	getNumBones() {
		if(this.skeletonBones == null) {
			return 0;
		}
		return this.skeletonBones.length;
	}
	setSkin(mo) {
		this.object = mo;
		this.data = mo != null ? mo.data : null;
		this.isSkinned = this.data != null && this.data.isSkinned;
		let _gthis = this;
		if(this.isSkinned) {
			let boneSize = 8;
			this.skinBuffer = kha_arrays_Float32Array._new(iron_object_BoneAnimation.skinMaxBones * boneSize);
			let _g = 0;
			let _g1 = this.skinBuffer.byteLength >> 2;
			while(_g < _g1) {
				let i = _g++;
				this.skinBuffer.setFloat32(i * 4,0,true);
			}
			let _this = this.object.transform.rot;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1;
			this.object.transform.buildMatrix();
			let refs = mo.parent.raw.bone_actions;
			if(refs != null && refs.length > 0) {
				iron_data_Data.getSceneRaw(refs[0],function(action) {
					_gthis.play(action.name);
				});
			}
		}
		if(this.object.parent.raw.relative_bone_constraints) {
			this.relativeBoneConstraints = true;
		}
	}
	addBoneChild(bone,o) {
		if(this.boneChildren == null) {
			this.boneChildren = new haxe_ds_StringMap();
		}
		let ar = this.boneChildren.h[bone];
		if(ar == null) {
			ar = [];
			this.boneChildren.h[bone] = ar;
		}
		ar.push(o);
	}
	removeBoneChild(bone,o) {
		if(this.boneChildren != null) {
			let ar = this.boneChildren.h[bone];
			if(ar != null) {
				HxOverrides.remove(ar,o);
			}
		}
	}
	updateBoneChildren(bone,bm) {
		let ar = this.boneChildren.h[bone.name];
		if(ar == null) {
			return;
		}
		let _g = 0;
		while(_g < ar.length) {
			let o = ar[_g];
			++_g;
			let t = o.transform;
			if(t.boneParent == null) {
				t.boneParent = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			}
			if(o.raw.parent_bone_tail != null) {
				if(o.raw.parent_bone_connected || this.isSkinned) {
					let v = o.raw.parent_bone_tail;
					let _this = t.boneParent;
					let x = v.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let y = v.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let z = v.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = x;
					_this.self._31 = y;
					_this.self._32 = z;
					_this.self._33 = 1.0;
					let _this1 = t.boneParent;
					let a00 = _this1.self._00;
					let a01 = _this1.self._01;
					let a02 = _this1.self._02;
					let a03 = _this1.self._03;
					let a10 = _this1.self._10;
					let a11 = _this1.self._11;
					let a12 = _this1.self._12;
					let a13 = _this1.self._13;
					let a20 = _this1.self._20;
					let a21 = _this1.self._21;
					let a22 = _this1.self._22;
					let a23 = _this1.self._23;
					let a30 = _this1.self._30;
					let a31 = _this1.self._31;
					let a32 = _this1.self._32;
					let a33 = _this1.self._33;
					let b0 = bm.self._00;
					let b1 = bm.self._10;
					let b2 = bm.self._20;
					let b3 = bm.self._30;
					_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._01;
					b1 = bm.self._11;
					b2 = bm.self._21;
					b3 = bm.self._31;
					_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._02;
					b1 = bm.self._12;
					b2 = bm.self._22;
					b3 = bm.self._32;
					_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._03;
					b1 = bm.self._13;
					b2 = bm.self._23;
					b3 = bm.self._33;
					_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				} else {
					let v = o.raw.parent_bone_tail_pose;
					let _this = t.boneParent;
					_this.self._00 = bm.self._00;
					_this.self._01 = bm.self._01;
					_this.self._02 = bm.self._02;
					_this.self._03 = bm.self._03;
					_this.self._10 = bm.self._10;
					_this.self._11 = bm.self._11;
					_this.self._12 = bm.self._12;
					_this.self._13 = bm.self._13;
					_this.self._20 = bm.self._20;
					_this.self._21 = bm.self._21;
					_this.self._22 = bm.self._22;
					_this.self._23 = bm.self._23;
					_this.self._30 = bm.self._30;
					_this.self._31 = bm.self._31;
					_this.self._32 = bm.self._32;
					_this.self._33 = bm.self._33;
					let _this1 = t.boneParent;
					let x = v.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let y = v.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let z = v.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					_this1.self._00 += x * _this1.self._03;
					_this1.self._01 += y * _this1.self._03;
					_this1.self._02 += z * _this1.self._03;
					_this1.self._10 += x * _this1.self._13;
					_this1.self._11 += y * _this1.self._13;
					_this1.self._12 += z * _this1.self._13;
					_this1.self._20 += x * _this1.self._23;
					_this1.self._21 += y * _this1.self._23;
					_this1.self._22 += z * _this1.self._23;
					_this1.self._30 += x * _this1.self._33;
					_this1.self._31 += y * _this1.self._33;
					_this1.self._32 += z * _this1.self._33;
				}
			} else {
				let _this = t.boneParent;
				_this.self._00 = bm.self._00;
				_this.self._01 = bm.self._01;
				_this.self._02 = bm.self._02;
				_this.self._03 = bm.self._03;
				_this.self._10 = bm.self._10;
				_this.self._11 = bm.self._11;
				_this.self._12 = bm.self._12;
				_this.self._13 = bm.self._13;
				_this.self._20 = bm.self._20;
				_this.self._21 = bm.self._21;
				_this.self._22 = bm.self._22;
				_this.self._23 = bm.self._23;
				_this.self._30 = bm.self._30;
				_this.self._31 = bm.self._31;
				_this.self._32 = bm.self._32;
				_this.self._33 = bm.self._33;
			}
			t.buildMatrix();
		}
	}
	numParents(b) {
		let i = 0;
		let p = b.parent;
		while(p != null) {
			++i;
			p = p.parent;
		}
		return i;
	}
	setMats() {
		while(this.matsFast.length < this.skeletonBones.length) {
			this.matsFast.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			this.matsFastSort.push(this.matsFastSort.length);
		}
		let _gthis = this;
		this.matsFastSort.sort(function(a,b) {
			let i = _gthis.numParents(_gthis.skeletonBones[a]);
			let j = _gthis.numParents(_gthis.skeletonBones[b]);
			if(i < j) {
				return -1;
			} else if(i > j) {
				return 1;
			} else {
				return 0;
			}
		});
		if(this.skeletonBonesBlend != null) {
			while(this.matsFastBlend.length < this.skeletonBonesBlend.length) {
				this.matsFastBlend.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
				this.matsFastBlendSort.push(this.matsFastBlendSort.length);
			}
			this.matsFastBlendSort.sort(function(a,b) {
				let i = _gthis.numParents(_gthis.skeletonBonesBlend[a]);
				let j = _gthis.numParents(_gthis.skeletonBonesBlend[b]);
				if(i < j) {
					return -1;
				} else if(i > j) {
					return 1;
				} else {
					return 0;
				}
			});
		}
	}
	setAction(action) {
		if(this.isSkinned) {
			this.skeletonBones = this.data.geom.actions.h[action];
			this.skeletonMats = this.data.geom.mats.h[action];
			this.skeletonBonesBlend = null;
			this.skeletonMatsBlend = null;
		} else {
			this.armature.initMats();
			let a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	setActionBlend(action) {
		if(this.isSkinned) {
			this.skeletonBonesBlend = this.skeletonBones;
			this.skeletonMatsBlend = this.skeletonMats;
			this.skeletonBones = this.data.geom.actions.h[action];
			this.skeletonMats = this.data.geom.mats.h[action];
		} else {
			this.armature.initMats();
			let a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	play(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.2;
		}
		if(action == null) {
			action = "";
		}
		super.play(action,onComplete,blendTime,speed,loop);
		if(action != "") {
			if(blendTime > 0) {
				this.setActionBlend(action);
			} else {
				this.setAction(action);
			}
		}
		this.blendFactor = 0.0;
	}
	blend(action1,action2,factor) {
		if(factor == 0.0) {
			this.setAction(action1);
			return;
		}
		this.setAction(action2);
		this.setActionBlend(action1);
		super.blend(action1,action2,factor);
	}
	update(delta) {
		if(!this.isSkinned && this.skeletonBones == null) {
			this.setAction(this.armature.actions[0].name);
		}
		if(this.object != null && (!this.object.visible || this.object.culled)) {
			return;
		}
		if(this.skeletonBones == null || this.skeletonBones.length == 0) {
			return;
		}
		iron_object_Animation.beginProfile();
		super.update(delta);
		if(this.paused || this.speed == 0.0) {
			return;
		}
		let lastBones = this.skeletonBones;
		let _g = 0;
		let _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			let b = _g1[_g];
			++_g;
			if(b.anim != null) {
				this.updateTrack(b.anim);
				break;
			}
		}
		if(lastBones != this.skeletonBones) {
			return;
		}
		let _g2 = 0;
		let _g3 = this.skeletonBones.length;
		while(_g2 < _g3) {
			let i = _g2++;
			if(!this.skeletonBones[i].is_ik_fk_only) {
				this.updateAnimSampled(this.skeletonBones[i].anim,this.skeletonMats[i]);
			}
		}
		if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
			let _g = 0;
			let _g1 = this.skeletonBonesBlend;
			while(_g < _g1.length) {
				let b = _g1[_g];
				++_g;
				if(b.anim != null) {
					this.updateTrack(b.anim);
					break;
				}
			}
			let _g2 = 0;
			let _g3 = this.skeletonBonesBlend.length;
			while(_g2 < _g3) {
				let i = _g2++;
				this.updateAnimSampled(this.skeletonBonesBlend[i].anim,this.skeletonMatsBlend[i]);
			}
		}
		this.updateConstraints();
		if(this.onUpdates != null) {
			let i = 0;
			let l = this.onUpdates.length;
			while(i < l) {
				this.onUpdates[i]();
				if(l <= this.onUpdates.length) {
					++i;
				} else {
					l = this.onUpdates.length;
				}
			}
		}
		let _g4 = 0;
		let _g5 = this.skeletonBones.length;
		while(_g4 < _g5) {
			let i = _g4++;
			this.multParent(this.matsFastSort[i],this.matsFast,this.skeletonBones,this.skeletonMats);
		}
		if(this.skeletonBonesBlend != null) {
			let _g = 0;
			let _g1 = this.skeletonBonesBlend.length;
			while(_g < _g1) {
				let i = _g++;
				this.multParent(this.matsFastBlendSort[i],this.matsFastBlend,this.skeletonBonesBlend,this.skeletonMatsBlend);
			}
		}
		if(this.isSkinned) {
			this.updateSkinGpu();
		} else {
			this.updateBonesOnly();
		}
		iron_object_Animation.endProfile();
	}
	multParent(i,fasts,bones,mats) {
		let f = fasts[i];
		if(this.applyParent != null && !this.applyParent[i]) {
			let m = mats[i];
			f.self._00 = m.self._00;
			f.self._01 = m.self._01;
			f.self._02 = m.self._02;
			f.self._03 = m.self._03;
			f.self._10 = m.self._10;
			f.self._11 = m.self._11;
			f.self._12 = m.self._12;
			f.self._13 = m.self._13;
			f.self._20 = m.self._20;
			f.self._21 = m.self._21;
			f.self._22 = m.self._22;
			f.self._23 = m.self._23;
			f.self._30 = m.self._30;
			f.self._31 = m.self._31;
			f.self._32 = m.self._32;
			f.self._33 = m.self._33;
			return;
		}
		let p = bones[i].parent;
		let bi = this.getBoneIndex(p,bones);
		if(p == null || bi == -1) {
			let m = mats[i];
			f.self._00 = m.self._00;
			f.self._01 = m.self._01;
			f.self._02 = m.self._02;
			f.self._03 = m.self._03;
			f.self._10 = m.self._10;
			f.self._11 = m.self._11;
			f.self._12 = m.self._12;
			f.self._13 = m.self._13;
			f.self._20 = m.self._20;
			f.self._21 = m.self._21;
			f.self._22 = m.self._22;
			f.self._23 = m.self._23;
			f.self._30 = m.self._30;
			f.self._31 = m.self._31;
			f.self._32 = m.self._32;
			f.self._33 = m.self._33;
		} else {
			let b = fasts[bi];
			let a = mats[i];
			let a00 = a.self._00;
			let a01 = a.self._01;
			let a02 = a.self._02;
			let a03 = a.self._03;
			let a10 = a.self._10;
			let a11 = a.self._11;
			let a12 = a.self._12;
			let a13 = a.self._13;
			let a20 = a.self._20;
			let a21 = a.self._21;
			let a22 = a.self._22;
			let a23 = a.self._23;
			let a30 = a.self._30;
			let a31 = a.self._31;
			let a32 = a.self._32;
			let a33 = a.self._33;
			let b0 = b.self._00;
			let b1 = b.self._10;
			let b2 = b.self._20;
			let b3 = b.self._30;
			f.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			f.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			f.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			f.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		}
	}
	multParents(m,i,bones,mats) {
		let bone = bones[i];
		let p = bone.parent;
		while(p != null) {
			let i = this.getBoneIndex(p,bones);
			if(i == -1) {
				continue;
			}
			let m1 = mats[i];
			let a00 = m.self._00;
			let a01 = m.self._01;
			let a02 = m.self._02;
			let a03 = m.self._03;
			let a10 = m.self._10;
			let a11 = m.self._11;
			let a12 = m.self._12;
			let a13 = m.self._13;
			let a20 = m.self._20;
			let a21 = m.self._21;
			let a22 = m.self._22;
			let a23 = m.self._23;
			let a30 = m.self._30;
			let a31 = m.self._31;
			let a32 = m.self._32;
			let a33 = m.self._33;
			let b0 = m1.self._00;
			let b1 = m1.self._10;
			let b2 = m1.self._20;
			let b3 = m1.self._30;
			m.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			m.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			m.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			m.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			m.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			m.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			m.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			m.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			m.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			m.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			m.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			m.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			m.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			m.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			m.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			m.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			p = p.parent;
		}
	}
	getConstraintsFromScene(cs) {
		if(this.constraintTargets == null) {
			this.constraintTargets = [];
			this.constraintTargetsI = [];
			let _g = 0;
			while(_g < cs.length) {
				let c = cs[_g];
				++_g;
				let o = iron_Scene.active.getChild(c.target);
				this.constraintTargets.push(o);
				let m = null;
				if(o != null) {
					let _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					let m1 = o.transform.world;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					m = _this;
					let a00 = m.self._00;
					let a01 = m.self._01;
					let a02 = m.self._02;
					let a03 = m.self._03;
					let a10 = m.self._10;
					let a11 = m.self._11;
					let a12 = m.self._12;
					let a13 = m.self._13;
					let a20 = m.self._20;
					let a21 = m.self._21;
					let a22 = m.self._22;
					let a23 = m.self._23;
					let a30 = m.self._30;
					let a31 = m.self._31;
					let a32 = m.self._32;
					let a33 = m.self._33;
					let b00 = a00 * a11 - a01 * a10;
					let b01 = a00 * a12 - a02 * a10;
					let b02 = a00 * a13 - a03 * a10;
					let b03 = a01 * a12 - a02 * a11;
					let b04 = a01 * a13 - a03 * a11;
					let b05 = a02 * a13 - a03 * a12;
					let b06 = a20 * a31 - a21 * a30;
					let b07 = a20 * a32 - a22 * a30;
					let b08 = a20 * a33 - a23 * a30;
					let b09 = a21 * a32 - a22 * a31;
					let b10 = a21 * a33 - a23 * a31;
					let b11 = a22 * a33 - a23 * a32;
					let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						m.self._00 = 1.0;
						m.self._01 = 0.0;
						m.self._02 = 0.0;
						m.self._03 = 0.0;
						m.self._10 = 0.0;
						m.self._11 = 1.0;
						m.self._12 = 0.0;
						m.self._13 = 0.0;
						m.self._20 = 0.0;
						m.self._21 = 0.0;
						m.self._22 = 1.0;
						m.self._23 = 0.0;
						m.self._30 = 0.0;
						m.self._31 = 0.0;
						m.self._32 = 0.0;
						m.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						m.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						m.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						m.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						m.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						m.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						m.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						m.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						m.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						m.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						m.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						m.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						m.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						m.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						m.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						m.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						m.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
				}
				this.constraintTargetsI.push(m);
			}
			this.constraintMats = new haxe_ds_ObjectMap();
		}
	}
	getConstraintsFromParentRelative(cs) {
		if(this.constraintTargets == null) {
			this.constraintTargets = [];
			this.constraintTargetsI = [];
			let conParent = this.object.parent.parent;
			if(conParent == null) {
				return;
			}
			let _g = 0;
			while(_g < cs.length) {
				let c = cs[_g];
				++_g;
				let o = conParent.getChild(c.target);
				this.constraintTargets.push(o);
				let m = null;
				if(o != null) {
					let _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					let m1 = o.transform.world;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					m = _this;
					let a00 = m.self._00;
					let a01 = m.self._01;
					let a02 = m.self._02;
					let a03 = m.self._03;
					let a10 = m.self._10;
					let a11 = m.self._11;
					let a12 = m.self._12;
					let a13 = m.self._13;
					let a20 = m.self._20;
					let a21 = m.self._21;
					let a22 = m.self._22;
					let a23 = m.self._23;
					let a30 = m.self._30;
					let a31 = m.self._31;
					let a32 = m.self._32;
					let a33 = m.self._33;
					let b00 = a00 * a11 - a01 * a10;
					let b01 = a00 * a12 - a02 * a10;
					let b02 = a00 * a13 - a03 * a10;
					let b03 = a01 * a12 - a02 * a11;
					let b04 = a01 * a13 - a03 * a11;
					let b05 = a02 * a13 - a03 * a12;
					let b06 = a20 * a31 - a21 * a30;
					let b07 = a20 * a32 - a22 * a30;
					let b08 = a20 * a33 - a23 * a30;
					let b09 = a21 * a32 - a22 * a31;
					let b10 = a21 * a33 - a23 * a31;
					let b11 = a22 * a33 - a23 * a32;
					let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						m.self._00 = 1.0;
						m.self._01 = 0.0;
						m.self._02 = 0.0;
						m.self._03 = 0.0;
						m.self._10 = 0.0;
						m.self._11 = 1.0;
						m.self._12 = 0.0;
						m.self._13 = 0.0;
						m.self._20 = 0.0;
						m.self._21 = 0.0;
						m.self._22 = 1.0;
						m.self._23 = 0.0;
						m.self._30 = 0.0;
						m.self._31 = 0.0;
						m.self._32 = 0.0;
						m.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						m.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						m.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						m.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						m.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						m.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						m.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						m.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						m.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						m.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						m.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						m.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						m.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						m.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						m.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						m.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						m.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
				}
				this.constraintTargetsI.push(m);
			}
			this.constraintMats = new haxe_ds_ObjectMap();
		}
	}
	updateConstraints() {
		if(this.data == null) {
			return;
		}
		let cs = this.data.raw.skin.constraints;
		if(cs == null) {
			return;
		}
		if(this.relativeBoneConstraints) {
			this.getConstraintsFromParentRelative(cs);
		} else {
			this.getConstraintsFromScene(cs);
		}
		let _g = 0;
		let _g1 = cs.length;
		while(_g < _g1) {
			let i = _g++;
			let c = cs[i];
			let bone = this.getBone(c.bone);
			if(bone == null) {
				continue;
			}
			let o = this.constraintTargets[i];
			if(o == null) {
				continue;
			}
			if(c.type == "CHILD_OF") {
				let m = this.constraintMats.h[bone.__id__];
				if(m == null) {
					m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					this.constraintMats.set(bone,m);
				}
				let m1 = this.object.parent.transform.world;
				m.self._00 = m1.self._00;
				m.self._01 = m1.self._01;
				m.self._02 = m1.self._02;
				m.self._03 = m1.self._03;
				m.self._10 = m1.self._10;
				m.self._11 = m1.self._11;
				m.self._12 = m1.self._12;
				m.self._13 = m1.self._13;
				m.self._20 = m1.self._20;
				m.self._21 = m1.self._21;
				m.self._22 = m1.self._22;
				m.self._23 = m1.self._23;
				m.self._30 = m1.self._30;
				m.self._31 = m1.self._31;
				m.self._32 = m1.self._32;
				m.self._33 = m1.self._33;
				let m2 = this.constraintTargetsI[i];
				let a00 = m.self._00;
				let a01 = m.self._01;
				let a02 = m.self._02;
				let a03 = m.self._03;
				let a10 = m.self._10;
				let a11 = m.self._11;
				let a12 = m.self._12;
				let a13 = m.self._13;
				let a20 = m.self._20;
				let a21 = m.self._21;
				let a22 = m.self._22;
				let a23 = m.self._23;
				let a30 = m.self._30;
				let a31 = m.self._31;
				let a32 = m.self._32;
				let a33 = m.self._33;
				let b0 = m2.self._00;
				let b1 = m2.self._10;
				let b2 = m2.self._20;
				let b3 = m2.self._30;
				m.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._01;
				b1 = m2.self._11;
				b2 = m2.self._21;
				b3 = m2.self._31;
				m.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._02;
				b1 = m2.self._12;
				b2 = m2.self._22;
				b3 = m2.self._32;
				m.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._03;
				b1 = m2.self._13;
				b2 = m2.self._23;
				b3 = m2.self._33;
				m.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				let m3 = o.transform.world;
				let a001 = m.self._00;
				let a011 = m.self._01;
				let a021 = m.self._02;
				let a031 = m.self._03;
				let a101 = m.self._10;
				let a111 = m.self._11;
				let a121 = m.self._12;
				let a131 = m.self._13;
				let a201 = m.self._20;
				let a211 = m.self._21;
				let a221 = m.self._22;
				let a231 = m.self._23;
				let a301 = m.self._30;
				let a311 = m.self._31;
				let a321 = m.self._32;
				let a331 = m.self._33;
				let b01 = m3.self._00;
				let b11 = m3.self._10;
				let b21 = m3.self._20;
				let b31 = m3.self._30;
				m.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._01;
				b11 = m3.self._11;
				b21 = m3.self._21;
				b31 = m3.self._31;
				m.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._02;
				b11 = m3.self._12;
				b21 = m3.self._22;
				b31 = m3.self._32;
				m.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._03;
				b11 = m3.self._13;
				b21 = m3.self._23;
				b31 = m3.self._33;
				m.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				let _this = iron_object_BoneAnimation.m1;
				let m4 = this.object.parent.transform.world;
				let a002 = m4.self._00;
				let a012 = m4.self._01;
				let a022 = m4.self._02;
				let a032 = m4.self._03;
				let a102 = m4.self._10;
				let a112 = m4.self._11;
				let a122 = m4.self._12;
				let a132 = m4.self._13;
				let a202 = m4.self._20;
				let a212 = m4.self._21;
				let a222 = m4.self._22;
				let a232 = m4.self._23;
				let a302 = m4.self._30;
				let a312 = m4.self._31;
				let a322 = m4.self._32;
				let a332 = m4.self._33;
				let b00 = a002 * a112 - a012 * a102;
				let b011 = a002 * a122 - a022 * a102;
				let b02 = a002 * a132 - a032 * a102;
				let b03 = a012 * a122 - a022 * a112;
				let b04 = a012 * a132 - a032 * a112;
				let b05 = a022 * a132 - a032 * a122;
				let b06 = a202 * a312 - a212 * a302;
				let b07 = a202 * a322 - a222 * a302;
				let b08 = a202 * a332 - a232 * a302;
				let b09 = a212 * a322 - a222 * a312;
				let b10 = a212 * a332 - a232 * a312;
				let b111 = a222 * a332 - a232 * a322;
				let det = b00 * b111 - b011 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a112 * b111 - a122 * b10 + a132 * b09) * det;
					_this.self._01 = (a022 * b10 - a012 * b111 - a032 * b09) * det;
					_this.self._02 = (a312 * b05 - a322 * b04 + a332 * b03) * det;
					_this.self._03 = (a222 * b04 - a212 * b05 - a232 * b03) * det;
					_this.self._10 = (a122 * b08 - a102 * b111 - a132 * b07) * det;
					_this.self._11 = (a002 * b111 - a022 * b08 + a032 * b07) * det;
					_this.self._12 = (a322 * b02 - a302 * b05 - a332 * b011) * det;
					_this.self._13 = (a202 * b05 - a222 * b02 + a232 * b011) * det;
					_this.self._20 = (a102 * b10 - a112 * b08 + a132 * b06) * det;
					_this.self._21 = (a012 * b08 - a002 * b10 - a032 * b06) * det;
					_this.self._22 = (a302 * b04 - a312 * b02 + a332 * b00) * det;
					_this.self._23 = (a212 * b02 - a202 * b04 - a232 * b00) * det;
					_this.self._30 = (a112 * b07 - a102 * b09 - a122 * b06) * det;
					_this.self._31 = (a002 * b09 - a012 * b07 + a022 * b06) * det;
					_this.self._32 = (a312 * b011 - a302 * b03 - a322 * b00) * det;
					_this.self._33 = (a202 * b03 - a212 * b011 + a222 * b00) * det;
				}
				let m5 = iron_object_BoneAnimation.m1;
				let a003 = m.self._00;
				let a013 = m.self._01;
				let a023 = m.self._02;
				let a033 = m.self._03;
				let a103 = m.self._10;
				let a113 = m.self._11;
				let a123 = m.self._12;
				let a133 = m.self._13;
				let a203 = m.self._20;
				let a213 = m.self._21;
				let a223 = m.self._22;
				let a233 = m.self._23;
				let a303 = m.self._30;
				let a313 = m.self._31;
				let a323 = m.self._32;
				let a333 = m.self._33;
				let b010 = m5.self._00;
				let b12 = m5.self._10;
				let b22 = m5.self._20;
				let b32 = m5.self._30;
				m.self._00 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._10 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._20 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._30 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._01;
				b12 = m5.self._11;
				b22 = m5.self._21;
				b32 = m5.self._31;
				m.self._01 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._11 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._21 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._31 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._02;
				b12 = m5.self._12;
				b22 = m5.self._22;
				b32 = m5.self._32;
				m.self._02 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._12 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._22 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._32 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._03;
				b12 = m5.self._13;
				b22 = m5.self._23;
				b32 = m5.self._33;
				m.self._03 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._13 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._23 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._33 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
			}
		}
	}
	notifyOnUpdate(f) {
		if(this.onUpdates == null) {
			this.onUpdates = [];
		}
		this.onUpdates.push(f);
	}
	removeUpdate(f) {
		HxOverrides.remove(this.onUpdates,f);
	}
	updateBonesOnly() {
		if(this.boneChildren != null) {
			let _g = 0;
			let _g1 = this.skeletonBones.length;
			while(_g < _g1) {
				let i = _g++;
				let b = this.skeletonBones[i];
				let _this = iron_object_BoneAnimation.m;
				let m = this.matsFast[i];
				_this.self._00 = m.self._00;
				_this.self._01 = m.self._01;
				_this.self._02 = m.self._02;
				_this.self._03 = m.self._03;
				_this.self._10 = m.self._10;
				_this.self._11 = m.self._11;
				_this.self._12 = m.self._12;
				_this.self._13 = m.self._13;
				_this.self._20 = m.self._20;
				_this.self._21 = m.self._21;
				_this.self._22 = m.self._22;
				_this.self._23 = m.self._23;
				_this.self._30 = m.self._30;
				_this.self._31 = m.self._31;
				_this.self._32 = m.self._32;
				_this.self._33 = m.self._33;
				this.updateBoneChildren(b,iron_object_BoneAnimation.m);
			}
		}
	}
	updateSkinGpu() {
		let bones = this.skeletonBones;
		let s = this.blendCurrent / this.blendTime;
		s = s * s * (3.0 - 2.0 * s);
		if(this.blendFactor != 0.0) {
			s = 1.0 - this.blendFactor;
		}
		let _g = 0;
		let _g1 = bones.length;
		while(_g < _g1) {
			let i = _g++;
			if(this.constraintMats != null) {
				let m = this.constraintMats.h[bones[i].__id__];
				if(m != null) {
					this.updateSkinBuffer(m,i);
					continue;
				}
			}
			let _this = iron_object_BoneAnimation.m;
			let m = this.matsFast[i];
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
				let _this = iron_object_BoneAnimation.m1;
				let m = this.matsFastBlend[i];
				_this.self._00 = m.self._00;
				_this.self._01 = m.self._01;
				_this.self._02 = m.self._02;
				_this.self._03 = m.self._03;
				_this.self._10 = m.self._10;
				_this.self._11 = m.self._11;
				_this.self._12 = m.self._12;
				_this.self._13 = m.self._13;
				_this.self._20 = m.self._20;
				_this.self._21 = m.self._21;
				_this.self._22 = m.self._22;
				_this.self._23 = m.self._23;
				_this.self._30 = m.self._30;
				_this.self._31 = m.self._31;
				_this.self._32 = m.self._32;
				_this.self._33 = m.self._33;
				let _this1 = iron_object_BoneAnimation.m1;
				let loc = iron_object_BoneAnimation.vpos;
				let quat = iron_object_BoneAnimation.q1;
				let scale = iron_object_BoneAnimation.vscl;
				loc.x = _this1.self._30;
				loc.y = _this1.self._31;
				loc.z = _this1.self._32;
				let _this2 = iron_math_Mat4.helpVec;
				_this2.x = _this1.self._00;
				_this2.y = _this1.self._01;
				_this2.z = _this1.self._02;
				_this2.w = 1.0;
				let _this3 = _this2;
				scale.x = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
				let _this4 = iron_math_Mat4.helpVec;
				_this4.x = _this1.self._10;
				_this4.y = _this1.self._11;
				_this4.z = _this1.self._12;
				_this4.w = 1.0;
				let _this5 = _this4;
				scale.y = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
				let _this6 = iron_math_Mat4.helpVec;
				_this6.x = _this1.self._20;
				_this6.y = _this1.self._21;
				_this6.z = _this1.self._22;
				_this6.w = 1.0;
				let _this7 = _this6;
				scale.z = Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z);
				let _this8 = _this1.self;
				let m3 = _this8._12;
				let m4 = _this8._22;
				let m5 = _this8._32;
				let m6 = _this8._13;
				let m7 = _this8._23;
				let m8 = _this8._33;
				let c00 = _this8._11 * (m4 * m8 - m5 * m7) - _this8._21 * (m3 * m8 - m5 * m6) + _this8._31 * (m3 * m7 - m4 * m6);
				let m31 = _this8._12;
				let m41 = _this8._22;
				let m51 = _this8._32;
				let m61 = _this8._13;
				let m71 = _this8._23;
				let m81 = _this8._33;
				let c01 = _this8._10 * (m41 * m81 - m51 * m71) - _this8._20 * (m31 * m81 - m51 * m61) + _this8._30 * (m31 * m71 - m41 * m61);
				let m32 = _this8._11;
				let m42 = _this8._21;
				let m52 = _this8._31;
				let m62 = _this8._13;
				let m72 = _this8._23;
				let m82 = _this8._33;
				let c02 = _this8._10 * (m42 * m82 - m52 * m72) - _this8._20 * (m32 * m82 - m52 * m62) + _this8._30 * (m32 * m72 - m42 * m62);
				let m33 = _this8._11;
				let m43 = _this8._21;
				let m53 = _this8._31;
				let m63 = _this8._12;
				let m73 = _this8._22;
				let m83 = _this8._32;
				let c03 = _this8._10 * (m43 * m83 - m53 * m73) - _this8._20 * (m33 * m83 - m53 * m63) + _this8._30 * (m33 * m73 - m43 * m63);
				if(_this8._00 * c00 - _this8._01 * c01 + _this8._02 * c02 - _this8._03 * c03 < 0.0) {
					scale.x = -scale.x;
				}
				let invs = 1.0 / scale.x;
				iron_math_Mat4.helpMat.self._00 = _this1.self._00 * invs;
				iron_math_Mat4.helpMat.self._01 = _this1.self._01 * invs;
				iron_math_Mat4.helpMat.self._02 = _this1.self._02 * invs;
				invs = 1.0 / scale.y;
				iron_math_Mat4.helpMat.self._10 = _this1.self._10 * invs;
				iron_math_Mat4.helpMat.self._11 = _this1.self._11 * invs;
				iron_math_Mat4.helpMat.self._12 = _this1.self._12 * invs;
				invs = 1.0 / scale.z;
				iron_math_Mat4.helpMat.self._20 = _this1.self._20 * invs;
				iron_math_Mat4.helpMat.self._21 = _this1.self._21 * invs;
				iron_math_Mat4.helpMat.self._22 = _this1.self._22 * invs;
				let m1 = iron_math_Mat4.helpMat;
				let m11 = m1.self._00;
				let m12 = m1.self._10;
				let m13 = m1.self._20;
				let m21 = m1.self._01;
				let m22 = m1.self._11;
				let m23 = m1.self._21;
				let m311 = m1.self._02;
				let m321 = m1.self._12;
				let m331 = m1.self._22;
				let tr = m11 + m22 + m331;
				let s1 = 0.0;
				if(tr > 0) {
					s1 = 0.5 / Math.sqrt(tr + 1.0);
					quat.w = 0.25 / s1;
					quat.x = (m321 - m23) * s1;
					quat.y = (m13 - m311) * s1;
					quat.z = (m21 - m12) * s1;
				} else if(m11 > m22 && m11 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
					quat.w = (m321 - m23) / s1;
					quat.x = 0.25 * s1;
					quat.y = (m12 + m21) / s1;
					quat.z = (m13 + m311) / s1;
				} else if(m22 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
					quat.w = (m13 - m311) / s1;
					quat.x = (m12 + m21) / s1;
					quat.y = 0.25 * s1;
					quat.z = (m23 + m321) / s1;
				} else {
					s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
					quat.w = (m21 - m12) / s1;
					quat.x = (m13 + m311) / s1;
					quat.y = (m23 + m321) / s1;
					quat.z = 0.25 * s1;
				}
				let _this9 = iron_object_BoneAnimation.m;
				let loc1 = iron_object_BoneAnimation.vpos2;
				let quat1 = iron_object_BoneAnimation.q2;
				let scale1 = iron_object_BoneAnimation.vscl2;
				loc1.x = _this9.self._30;
				loc1.y = _this9.self._31;
				loc1.z = _this9.self._32;
				let _this10 = iron_math_Mat4.helpVec;
				_this10.x = _this9.self._00;
				_this10.y = _this9.self._01;
				_this10.z = _this9.self._02;
				_this10.w = 1.0;
				let _this11 = _this10;
				scale1.x = Math.sqrt(_this11.x * _this11.x + _this11.y * _this11.y + _this11.z * _this11.z);
				let _this12 = iron_math_Mat4.helpVec;
				_this12.x = _this9.self._10;
				_this12.y = _this9.self._11;
				_this12.z = _this9.self._12;
				_this12.w = 1.0;
				let _this13 = _this12;
				scale1.y = Math.sqrt(_this13.x * _this13.x + _this13.y * _this13.y + _this13.z * _this13.z);
				let _this14 = iron_math_Mat4.helpVec;
				_this14.x = _this9.self._20;
				_this14.y = _this9.self._21;
				_this14.z = _this9.self._22;
				_this14.w = 1.0;
				let _this15 = _this14;
				scale1.z = Math.sqrt(_this15.x * _this15.x + _this15.y * _this15.y + _this15.z * _this15.z);
				let _this16 = _this9.self;
				let m34 = _this16._12;
				let m44 = _this16._22;
				let m54 = _this16._32;
				let m64 = _this16._13;
				let m74 = _this16._23;
				let m84 = _this16._33;
				let c001 = _this16._11 * (m44 * m84 - m54 * m74) - _this16._21 * (m34 * m84 - m54 * m64) + _this16._31 * (m34 * m74 - m44 * m64);
				let m35 = _this16._12;
				let m45 = _this16._22;
				let m55 = _this16._32;
				let m65 = _this16._13;
				let m75 = _this16._23;
				let m85 = _this16._33;
				let c011 = _this16._10 * (m45 * m85 - m55 * m75) - _this16._20 * (m35 * m85 - m55 * m65) + _this16._30 * (m35 * m75 - m45 * m65);
				let m36 = _this16._11;
				let m46 = _this16._21;
				let m56 = _this16._31;
				let m66 = _this16._13;
				let m76 = _this16._23;
				let m86 = _this16._33;
				let c021 = _this16._10 * (m46 * m86 - m56 * m76) - _this16._20 * (m36 * m86 - m56 * m66) + _this16._30 * (m36 * m76 - m46 * m66);
				let m37 = _this16._11;
				let m47 = _this16._21;
				let m57 = _this16._31;
				let m67 = _this16._12;
				let m77 = _this16._22;
				let m87 = _this16._32;
				let c031 = _this16._10 * (m47 * m87 - m57 * m77) - _this16._20 * (m37 * m87 - m57 * m67) + _this16._30 * (m37 * m77 - m47 * m67);
				if(_this16._00 * c001 - _this16._01 * c011 + _this16._02 * c021 - _this16._03 * c031 < 0.0) {
					scale1.x = -scale1.x;
				}
				let invs1 = 1.0 / scale1.x;
				iron_math_Mat4.helpMat.self._00 = _this9.self._00 * invs1;
				iron_math_Mat4.helpMat.self._01 = _this9.self._01 * invs1;
				iron_math_Mat4.helpMat.self._02 = _this9.self._02 * invs1;
				invs1 = 1.0 / scale1.y;
				iron_math_Mat4.helpMat.self._10 = _this9.self._10 * invs1;
				iron_math_Mat4.helpMat.self._11 = _this9.self._11 * invs1;
				iron_math_Mat4.helpMat.self._12 = _this9.self._12 * invs1;
				invs1 = 1.0 / scale1.z;
				iron_math_Mat4.helpMat.self._20 = _this9.self._20 * invs1;
				iron_math_Mat4.helpMat.self._21 = _this9.self._21 * invs1;
				iron_math_Mat4.helpMat.self._22 = _this9.self._22 * invs1;
				let m2 = iron_math_Mat4.helpMat;
				let m111 = m2.self._00;
				let m121 = m2.self._10;
				let m131 = m2.self._20;
				let m211 = m2.self._01;
				let m221 = m2.self._11;
				let m231 = m2.self._21;
				let m312 = m2.self._02;
				let m322 = m2.self._12;
				let m332 = m2.self._22;
				let tr1 = m111 + m221 + m332;
				let s2 = 0.0;
				if(tr1 > 0) {
					s2 = 0.5 / Math.sqrt(tr1 + 1.0);
					quat1.w = 0.25 / s2;
					quat1.x = (m322 - m231) * s2;
					quat1.y = (m131 - m312) * s2;
					quat1.z = (m211 - m121) * s2;
				} else if(m111 > m221 && m111 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
					quat1.w = (m322 - m231) / s2;
					quat1.x = 0.25 * s2;
					quat1.y = (m121 + m211) / s2;
					quat1.z = (m131 + m312) / s2;
				} else if(m221 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
					quat1.w = (m131 - m312) / s2;
					quat1.x = (m121 + m211) / s2;
					quat1.y = 0.25 * s2;
					quat1.z = (m231 + m322) / s2;
				} else {
					s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
					quat1.w = (m211 - m121) / s2;
					quat1.x = (m131 + m312) / s2;
					quat1.y = (m231 + m322) / s2;
					quat1.z = 0.25 * s2;
				}
				let _this17 = iron_object_BoneAnimation.v1;
				let from = iron_object_BoneAnimation.vpos;
				let to = iron_object_BoneAnimation.vpos2;
				_this17.x = from.x + (to.x - from.x) * s;
				_this17.y = from.y + (to.y - from.y) * s;
				_this17.z = from.z + (to.z - from.z) * s;
				let _this18 = iron_object_BoneAnimation.v2;
				let from1 = iron_object_BoneAnimation.vscl;
				let to1 = iron_object_BoneAnimation.vscl2;
				_this18.x = from1.x + (to1.x - from1.x) * s;
				_this18.y = from1.y + (to1.y - from1.y) * s;
				_this18.z = from1.z + (to1.z - from1.z) * s;
				let _this19 = iron_object_BoneAnimation.q3;
				let from2 = iron_object_BoneAnimation.q1;
				let to2 = iron_object_BoneAnimation.q2;
				let fromx = from2.x;
				let fromy = from2.y;
				let fromz = from2.z;
				let fromw = from2.w;
				let dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
				if(dot < 0.0) {
					fromx = -fromx;
					fromy = -fromy;
					fromz = -fromz;
					fromw = -fromw;
				}
				_this19.x = fromx + (to2.x - fromx) * s;
				_this19.y = fromy + (to2.y - fromy) * s;
				_this19.z = fromz + (to2.z - fromz) * s;
				_this19.w = fromw + (to2.w - fromw) * s;
				let l = Math.sqrt(_this19.x * _this19.x + _this19.y * _this19.y + _this19.z * _this19.z + _this19.w * _this19.w);
				if(l == 0.0) {
					_this19.x = 0;
					_this19.y = 0;
					_this19.z = 0;
					_this19.w = 0;
				} else {
					l = 1.0 / l;
					_this19.x *= l;
					_this19.y *= l;
					_this19.z *= l;
					_this19.w *= l;
				}
				let _this20 = iron_object_BoneAnimation.m;
				let q = iron_object_BoneAnimation.q3;
				let x = q.x;
				let y = q.y;
				let z = q.z;
				let w = q.w;
				let x2 = x + x;
				let y2 = y + y;
				let z2 = z + z;
				let xx = x * x2;
				let xy = x * y2;
				let xz = x * z2;
				let yy = y * y2;
				let yz = y * z2;
				let zz = z * z2;
				let wx = w * x2;
				let wy = w * y2;
				let wz = w * z2;
				_this20.self._00 = 1.0 - (yy + zz);
				_this20.self._10 = xy - wz;
				_this20.self._20 = xz + wy;
				_this20.self._01 = xy + wz;
				_this20.self._11 = 1.0 - (xx + zz);
				_this20.self._21 = yz - wx;
				_this20.self._02 = xz - wy;
				_this20.self._12 = yz + wx;
				_this20.self._22 = 1.0 - (xx + yy);
				_this20.self._03 = 0.0;
				_this20.self._13 = 0.0;
				_this20.self._23 = 0.0;
				_this20.self._30 = 0.0;
				_this20.self._31 = 0.0;
				_this20.self._32 = 0.0;
				_this20.self._33 = 1.0;
				let _this21 = iron_object_BoneAnimation.m;
				let v = iron_object_BoneAnimation.v2;
				let x1 = v.x;
				let y1 = v.y;
				let z1 = v.z;
				_this21.self._00 *= x1;
				_this21.self._01 *= x1;
				_this21.self._02 *= x1;
				_this21.self._03 *= x1;
				_this21.self._10 *= y1;
				_this21.self._11 *= y1;
				_this21.self._12 *= y1;
				_this21.self._13 *= y1;
				_this21.self._20 *= z1;
				_this21.self._21 *= z1;
				_this21.self._22 *= z1;
				_this21.self._23 *= z1;
				iron_object_BoneAnimation.m.self._30 = iron_object_BoneAnimation.v1.x;
				iron_object_BoneAnimation.m.self._31 = iron_object_BoneAnimation.v1.y;
				iron_object_BoneAnimation.m.self._32 = iron_object_BoneAnimation.v1.z;
			}
			if(this.absMats != null && i < this.absMats.length) {
				let _this = this.absMats[i];
				let m = iron_object_BoneAnimation.m;
				_this.self._00 = m.self._00;
				_this.self._01 = m.self._01;
				_this.self._02 = m.self._02;
				_this.self._03 = m.self._03;
				_this.self._10 = m.self._10;
				_this.self._11 = m.self._11;
				_this.self._12 = m.self._12;
				_this.self._13 = m.self._13;
				_this.self._20 = m.self._20;
				_this.self._21 = m.self._21;
				_this.self._22 = m.self._22;
				_this.self._23 = m.self._23;
				_this.self._30 = m.self._30;
				_this.self._31 = m.self._31;
				_this.self._32 = m.self._32;
				_this.self._33 = m.self._33;
			}
			if(this.boneChildren != null) {
				this.updateBoneChildren(bones[i],iron_object_BoneAnimation.m);
			}
			let _this1 = iron_object_BoneAnimation.m;
			let b = iron_object_BoneAnimation.m;
			let a = this.data.geom.skeletonTransformsI[i];
			let a00 = a.self._00;
			let a01 = a.self._01;
			let a02 = a.self._02;
			let a03 = a.self._03;
			let a10 = a.self._10;
			let a11 = a.self._11;
			let a12 = a.self._12;
			let a13 = a.self._13;
			let a20 = a.self._20;
			let a21 = a.self._21;
			let a22 = a.self._22;
			let a23 = a.self._23;
			let a30 = a.self._30;
			let a31 = a.self._31;
			let a32 = a.self._32;
			let a33 = a.self._33;
			let b0 = b.self._00;
			let b1 = b.self._10;
			let b2 = b.self._20;
			let b3 = b.self._30;
			_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			this.updateSkinBuffer(iron_object_BoneAnimation.m,i);
		}
	}
	updateSkinBuffer(m,i) {
		let loc = iron_object_BoneAnimation.vpos;
		let quat = iron_object_BoneAnimation.q1;
		let scale = iron_object_BoneAnimation.vscl;
		loc.x = m.self._30;
		loc.y = m.self._31;
		loc.z = m.self._32;
		let _this = iron_math_Mat4.helpVec;
		_this.x = m.self._00;
		_this.y = m.self._01;
		_this.z = m.self._02;
		_this.w = 1.0;
		let _this1 = _this;
		scale.x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		let _this2 = iron_math_Mat4.helpVec;
		_this2.x = m.self._10;
		_this2.y = m.self._11;
		_this2.z = m.self._12;
		_this2.w = 1.0;
		let _this3 = _this2;
		scale.y = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		let _this4 = iron_math_Mat4.helpVec;
		_this4.x = m.self._20;
		_this4.y = m.self._21;
		_this4.z = m.self._22;
		_this4.w = 1.0;
		let _this5 = _this4;
		scale.z = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		let _this6 = m.self;
		let m3 = _this6._12;
		let m4 = _this6._22;
		let m5 = _this6._32;
		let m6 = _this6._13;
		let m7 = _this6._23;
		let m8 = _this6._33;
		let c00 = _this6._11 * (m4 * m8 - m5 * m7) - _this6._21 * (m3 * m8 - m5 * m6) + _this6._31 * (m3 * m7 - m4 * m6);
		let m31 = _this6._12;
		let m41 = _this6._22;
		let m51 = _this6._32;
		let m61 = _this6._13;
		let m71 = _this6._23;
		let m81 = _this6._33;
		let c01 = _this6._10 * (m41 * m81 - m51 * m71) - _this6._20 * (m31 * m81 - m51 * m61) + _this6._30 * (m31 * m71 - m41 * m61);
		let m32 = _this6._11;
		let m42 = _this6._21;
		let m52 = _this6._31;
		let m62 = _this6._13;
		let m72 = _this6._23;
		let m82 = _this6._33;
		let c02 = _this6._10 * (m42 * m82 - m52 * m72) - _this6._20 * (m32 * m82 - m52 * m62) + _this6._30 * (m32 * m72 - m42 * m62);
		let m33 = _this6._11;
		let m43 = _this6._21;
		let m53 = _this6._31;
		let m63 = _this6._12;
		let m73 = _this6._22;
		let m83 = _this6._32;
		let c03 = _this6._10 * (m43 * m83 - m53 * m73) - _this6._20 * (m33 * m83 - m53 * m63) + _this6._30 * (m33 * m73 - m43 * m63);
		if(_this6._00 * c00 - _this6._01 * c01 + _this6._02 * c02 - _this6._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = m.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = m.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = m.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = m.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = m.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = m.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = m.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = m.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = m.self._22 * invs;
		let m1 = iron_math_Mat4.helpMat;
		let m11 = m1.self._00;
		let m12 = m1.self._10;
		let m13 = m1.self._20;
		let m21 = m1.self._01;
		let m22 = m1.self._11;
		let m23 = m1.self._21;
		let m311 = m1.self._02;
		let m321 = m1.self._12;
		let m331 = m1.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		let _this7 = iron_object_BoneAnimation.q1;
		let l = Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z + _this7.w * _this7.w);
		if(l == 0.0) {
			_this7.x = 0;
			_this7.y = 0;
			_this7.z = 0;
			_this7.w = 0;
		} else {
			l = 1.0 / l;
			_this7.x *= l;
			_this7.y *= l;
			_this7.z *= l;
			_this7.w *= l;
		}
		let _this8 = iron_object_BoneAnimation.q2;
		_this8.x = iron_object_BoneAnimation.vpos.x;
		_this8.y = iron_object_BoneAnimation.vpos.y;
		_this8.z = iron_object_BoneAnimation.vpos.z;
		_this8.w = 0.0;
		let _this9 = iron_object_BoneAnimation.q2;
		let q1 = iron_object_BoneAnimation.q2;
		let q2 = iron_object_BoneAnimation.q1;
		let q1x = q1.x;
		let q1y = q1.y;
		let q1z = q1.z;
		let q1w = q1.w;
		let q2x = q2.x;
		let q2y = q2.y;
		let q2z = q2.z;
		let q2w = q2.w;
		_this9.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this9.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this9.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this9.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		let v = iron_object_BoneAnimation.q1.x;
		this.skinBuffer.setFloat32(i * 8 * 4,v,true);
		let v1 = iron_object_BoneAnimation.q1.y;
		this.skinBuffer.setFloat32((i * 8 + 1) * 4,v1,true);
		let v2 = iron_object_BoneAnimation.q1.z;
		this.skinBuffer.setFloat32((i * 8 + 2) * 4,v2,true);
		let v3 = iron_object_BoneAnimation.q1.w;
		this.skinBuffer.setFloat32((i * 8 + 3) * 4,v3,true);
		let v4 = iron_object_BoneAnimation.q2.x * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 4) * 4,v4,true);
		let v5 = iron_object_BoneAnimation.q2.y * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 5) * 4,v5,true);
		let v6 = iron_object_BoneAnimation.q2.z * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 6) * 4,v6,true);
		let v7 = iron_object_BoneAnimation.q2.w * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 7) * 4,v7,true);
	}
	totalFrames() {
		if(this.skeletonBones == null) {
			return 0;
		}
		let track = this.skeletonBones[0].anim.tracks[0];
		return track.frames.getUint32(((track.frames.byteLength >> 2) - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) - track.frames.getUint32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) | 0;
	}
	getBone(name) {
		if(this.skeletonBones == null) {
			return null;
		}
		let _g = 0;
		let _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			let b = _g1[_g];
			++_g;
			if(b.name == name) {
				return b;
			}
		}
		return null;
	}
	getBoneIndex(bone,bones) {
		if(bones == null) {
			bones = this.skeletonBones;
		}
		if(bones != null) {
			let _g = 0;
			let _g1 = bones.length;
			while(_g < _g1) {
				let i = _g++;
				if(bones[i] == bone) {
					return i;
				}
			}
		}
		return -1;
	}
	getBoneMat(bone) {
		if(this.skeletonMats != null) {
			return this.skeletonMats[this.getBoneIndex(bone)];
		} else {
			return null;
		}
	}
	getBoneMatBlend(bone) {
		if(this.skeletonMatsBlend != null) {
			return this.skeletonMatsBlend[this.getBoneIndex(bone)];
		} else {
			return null;
		}
	}
	getAbsMat(bone) {
		if(this.skeletonMats == null) {
			return null;
		}
		if(this.absMats == null) {
			this.absMats = [];
			while(this.absMats.length < this.skeletonMats.length) this.absMats.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
		}
		return this.absMats[this.getBoneIndex(bone)];
	}
	getWorldMat(bone) {
		if(this.skeletonMats == null) {
			return null;
		}
		if(this.applyParent == null) {
			this.applyParent = [];
			let _g = 0;
			let _g1 = this.skeletonMats;
			while(_g < _g1.length) {
				let m = _g1[_g];
				++_g;
				this.applyParent.push(true);
			}
		}
		let i = this.getBoneIndex(bone);
		let _this = iron_object_BoneAnimation.wm;
		let m = this.skeletonMats[i];
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		this.multParents(iron_object_BoneAnimation.wm,i,this.skeletonBones,this.skeletonMats);
		return iron_object_BoneAnimation.wm;
	}
	getBoneLen(bone) {
		let refs = this.data.geom.skeletonBoneRefs;
		let lens = this.data.geom.skeletonBoneLens;
		let _g = 0;
		let _g1 = refs.length;
		while(_g < _g1) {
			let i = _g++;
			if(refs[i] == bone.name) {
				return lens.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
		}
		return 0.0;
	}
	getBoneAbsLen(bone) {
		let refs = this.data.geom.skeletonBoneRefs;
		let lens = this.data.geom.skeletonBoneLens;
		let _this = this.object.parent.transform.world;
		let x = Math.sqrt(_this.self._00 * _this.self._00 + _this.self._10 * _this.self._10 + _this.self._20 * _this.self._20);
		let y = Math.sqrt(_this.self._01 * _this.self._01 + _this.self._11 * _this.self._11 + _this.self._21 * _this.self._21);
		let z = Math.sqrt(_this.self._02 * _this.self._02 + _this.self._12 * _this.self._12 + _this.self._22 * _this.self._22);
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let inlVec4_x = x;
		let inlVec4_y = y;
		let inlVec4_z = z;
		let inlVec4_w = 1.0;
		let scale = inlVec4_z;
		let _g = 0;
		let _g1 = refs.length;
		while(_g < _g1) {
			let i = _g++;
			if(refs[i] == bone.name) {
				return lens.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * scale;
			}
		}
		return 0.0;
	}
	getAbsWorldMat(bone) {
		let wm = this.getWorldMat(bone);
		let m = this.object.parent.transform.world;
		let a00 = wm.self._00;
		let a01 = wm.self._01;
		let a02 = wm.self._02;
		let a03 = wm.self._03;
		let a10 = wm.self._10;
		let a11 = wm.self._11;
		let a12 = wm.self._12;
		let a13 = wm.self._13;
		let a20 = wm.self._20;
		let a21 = wm.self._21;
		let a22 = wm.self._22;
		let a23 = wm.self._23;
		let a30 = wm.self._30;
		let a31 = wm.self._31;
		let a32 = wm.self._32;
		let a33 = wm.self._33;
		let b0 = m.self._00;
		let b1 = m.self._10;
		let b2 = m.self._20;
		let b3 = m.self._30;
		wm.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		wm.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		wm.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		wm.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		wm.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		wm.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		wm.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		wm.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		wm.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		wm.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		wm.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		wm.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		wm.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		wm.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		wm.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		wm.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return wm;
	}
	solveIK(effector,goal,precision,maxIterations,chainLenght,pole,rollAngle) {
		if(rollAngle == null) {
			rollAngle = 0.0;
		}
		if(chainLenght == null) {
			chainLenght = 100;
		}
		if(maxIterations == null) {
			maxIterations = 100;
		}
		if(precision == null) {
			precision = 0.01;
		}
		let bones = [];
		let lengths = [];
		let tempLoc_x = 0.0;
		let tempLoc_y = 0.0;
		let tempLoc_z = 0.0;
		let tempLoc_w = 1.0;
		let tempRot_x = 0.0;
		let tempRot_y = 0.0;
		let tempRot_z = 0.0;
		let tempRot_w = 1.0;
		let tempRot2 = new iron_math_Quat();
		let tempScl_x = 0.0;
		let tempScl_y = 0.0;
		let tempScl_z = 0.0;
		let tempScl_w = 1.0;
		let roll_x = 0.0;
		let roll_y = 0.0;
		let roll_z = 0.0;
		let roll_w = 1.0;
		let f = 0.;
		let c1 = Math.cos(f);
		let s1 = Math.sin(f);
		f = rollAngle / 2;
		let c2 = Math.cos(f);
		let s2 = Math.sin(f);
		f = 0.;
		let c3 = Math.cos(f);
		let s3 = Math.sin(f);
		roll_x = s1 * c2 * c3 + c1 * s2 * s3;
		roll_y = c1 * s2 * c3 + s1 * c2 * s3;
		roll_z = c1 * c2 * s3 - s1 * s2 * c3;
		roll_w = c1 * c2 * c3 - s1 * s2 * s3;
		let tip = effector;
		bones.push(tip);
		lengths.push(this.getBoneAbsLen(tip));
		let root = tip;
		while(root.parent != null) {
			if(bones.length > chainLenght - 1) {
				break;
			}
			bones.push(root.parent);
			lengths.push(this.getBoneAbsLen(root.parent));
			root = root.parent;
		}
		root = bones[bones.length - 1];
		let _this = this.getWorldMat(root);
		let rootWorldMat = new iron_math_Mat4(_this.self._00,_this.self._10,_this.self._20,_this.self._30,_this.self._01,_this.self._11,_this.self._21,_this.self._31,_this.self._02,_this.self._12,_this.self._22,_this.self._32,_this.self._03,_this.self._13,_this.self._23,_this.self._33);
		let _this1 = this.object.parent.transform.world;
		let armatureMat_self__00 = _this1.self._00;
		let armatureMat_self__10 = _this1.self._10;
		let armatureMat_self__20 = _this1.self._20;
		let armatureMat_self__30 = _this1.self._30;
		let armatureMat_self__01 = _this1.self._01;
		let armatureMat_self__11 = _this1.self._11;
		let armatureMat_self__21 = _this1.self._21;
		let armatureMat_self__31 = _this1.self._31;
		let armatureMat_self__02 = _this1.self._02;
		let armatureMat_self__12 = _this1.self._12;
		let armatureMat_self__22 = _this1.self._22;
		let armatureMat_self__32 = _this1.self._32;
		let armatureMat_self__03 = _this1.self._03;
		let armatureMat_self__13 = _this1.self._13;
		let armatureMat_self__23 = _this1.self._23;
		let armatureMat_self__33 = _this1.self._33;
		let a00 = rootWorldMat.self._00;
		let a01 = rootWorldMat.self._01;
		let a02 = rootWorldMat.self._02;
		let a03 = rootWorldMat.self._03;
		let a10 = rootWorldMat.self._10;
		let a11 = rootWorldMat.self._11;
		let a12 = rootWorldMat.self._12;
		let a13 = rootWorldMat.self._13;
		let a20 = rootWorldMat.self._20;
		let a21 = rootWorldMat.self._21;
		let a22 = rootWorldMat.self._22;
		let a23 = rootWorldMat.self._23;
		let a30 = rootWorldMat.self._30;
		let a31 = rootWorldMat.self._31;
		let a32 = rootWorldMat.self._32;
		let a33 = rootWorldMat.self._33;
		let b0 = armatureMat_self__00;
		let b1 = armatureMat_self__10;
		let b2 = armatureMat_self__20;
		let b3 = armatureMat_self__30;
		rootWorldMat.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		rootWorldMat.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		rootWorldMat.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		rootWorldMat.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = armatureMat_self__01;
		b1 = armatureMat_self__11;
		b2 = armatureMat_self__21;
		b3 = armatureMat_self__31;
		rootWorldMat.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		rootWorldMat.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		rootWorldMat.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		rootWorldMat.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = armatureMat_self__02;
		b1 = armatureMat_self__12;
		b2 = armatureMat_self__22;
		b3 = armatureMat_self__32;
		rootWorldMat.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		rootWorldMat.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		rootWorldMat.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		rootWorldMat.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = armatureMat_self__03;
		b1 = armatureMat_self__13;
		b2 = armatureMat_self__23;
		b3 = armatureMat_self__33;
		rootWorldMat.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		rootWorldMat.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		rootWorldMat.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		rootWorldMat.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		let x = rootWorldMat.self._30;
		let y = rootWorldMat.self._31;
		let z = rootWorldMat.self._32;
		let w = rootWorldMat.self._33;
		if(w == null) {
			w = 1.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let v2_x = x;
		let v2_y = y;
		let v2_z = z;
		let v2_w = w;
		let vx = goal.x - v2_x;
		let vy = goal.y - v2_y;
		let vz = goal.z - v2_z;
		let dist = Math.sqrt(vx * vx + vy * vy + vz * vz);
		let totalLength = 0.0;
		let _g = 0;
		while(_g < lengths.length) {
			let l = lengths[_g];
			++_g;
			totalLength += l;
		}
		if(dist > totalLength) {
			let x = goal.x;
			let y = goal.y;
			let z = goal.z;
			let w = goal.w;
			if(w == null) {
				w = 1.0;
			}
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let newLook_x = x;
			let newLook_y = y;
			let newLook_z = z;
			let newLook_w = w;
			let x1 = rootWorldMat.self._30;
			let y1 = rootWorldMat.self._31;
			let z1 = rootWorldMat.self._32;
			let w1 = rootWorldMat.self._33;
			if(w1 == null) {
				w1 = 1.0;
			}
			if(z1 == null) {
				z1 = 0.0;
			}
			if(y1 == null) {
				y1 = 0.0;
			}
			if(x1 == null) {
				x1 = 0.0;
			}
			let v_x = x1;
			let v_y = y1;
			let v_z = z1;
			let v_w = w1;
			newLook_x -= v_x;
			newLook_y -= v_y;
			newLook_z -= v_z;
			let n = Math.sqrt(newLook_x * newLook_x + newLook_y * newLook_y + newLook_z * newLook_z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				newLook_x *= invN;
				newLook_y *= invN;
				newLook_z *= invN;
			}
			tempLoc_x = rootWorldMat.self._30;
			tempLoc_y = rootWorldMat.self._31;
			tempLoc_z = rootWorldMat.self._32;
			let _this = iron_math_Mat4.helpVec;
			_this.x = rootWorldMat.self._00;
			_this.y = rootWorldMat.self._01;
			_this.z = rootWorldMat.self._02;
			_this.w = 1.0;
			let _this1 = _this;
			tempScl_x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
			let _this2 = iron_math_Mat4.helpVec;
			_this2.x = rootWorldMat.self._10;
			_this2.y = rootWorldMat.self._11;
			_this2.z = rootWorldMat.self._12;
			_this2.w = 1.0;
			let _this3 = _this2;
			tempScl_y = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
			let _this4 = iron_math_Mat4.helpVec;
			_this4.x = rootWorldMat.self._20;
			_this4.y = rootWorldMat.self._21;
			_this4.z = rootWorldMat.self._22;
			_this4.w = 1.0;
			let _this5 = _this4;
			tempScl_z = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
			let _this6 = rootWorldMat.self;
			let m3 = _this6._12;
			let m4 = _this6._22;
			let m5 = _this6._32;
			let m6 = _this6._13;
			let m7 = _this6._23;
			let m8 = _this6._33;
			let c00 = _this6._11 * (m4 * m8 - m5 * m7) - _this6._21 * (m3 * m8 - m5 * m6) + _this6._31 * (m3 * m7 - m4 * m6);
			let m31 = _this6._12;
			let m41 = _this6._22;
			let m51 = _this6._32;
			let m61 = _this6._13;
			let m71 = _this6._23;
			let m81 = _this6._33;
			let c01 = _this6._10 * (m41 * m81 - m51 * m71) - _this6._20 * (m31 * m81 - m51 * m61) + _this6._30 * (m31 * m71 - m41 * m61);
			let m32 = _this6._11;
			let m42 = _this6._21;
			let m52 = _this6._31;
			let m62 = _this6._13;
			let m72 = _this6._23;
			let m82 = _this6._33;
			let c02 = _this6._10 * (m42 * m82 - m52 * m72) - _this6._20 * (m32 * m82 - m52 * m62) + _this6._30 * (m32 * m72 - m42 * m62);
			let m33 = _this6._11;
			let m43 = _this6._21;
			let m53 = _this6._31;
			let m63 = _this6._12;
			let m73 = _this6._22;
			let m83 = _this6._32;
			let c03 = _this6._10 * (m43 * m83 - m53 * m73) - _this6._20 * (m33 * m83 - m53 * m63) + _this6._30 * (m33 * m73 - m43 * m63);
			if(_this6._00 * c00 - _this6._01 * c01 + _this6._02 * c02 - _this6._03 * c03 < 0.0) {
				tempScl_x = -tempScl_x;
			}
			let invs = 1.0 / tempScl_x;
			iron_math_Mat4.helpMat.self._00 = rootWorldMat.self._00 * invs;
			iron_math_Mat4.helpMat.self._01 = rootWorldMat.self._01 * invs;
			iron_math_Mat4.helpMat.self._02 = rootWorldMat.self._02 * invs;
			invs = 1.0 / tempScl_y;
			iron_math_Mat4.helpMat.self._10 = rootWorldMat.self._10 * invs;
			iron_math_Mat4.helpMat.self._11 = rootWorldMat.self._11 * invs;
			iron_math_Mat4.helpMat.self._12 = rootWorldMat.self._12 * invs;
			invs = 1.0 / tempScl_z;
			iron_math_Mat4.helpMat.self._20 = rootWorldMat.self._20 * invs;
			iron_math_Mat4.helpMat.self._21 = rootWorldMat.self._21 * invs;
			iron_math_Mat4.helpMat.self._22 = rootWorldMat.self._22 * invs;
			let m = iron_math_Mat4.helpMat;
			let m11 = m.self._00;
			let m12 = m.self._10;
			let m13 = m.self._20;
			let m21 = m.self._01;
			let m22 = m.self._11;
			let m23 = m.self._21;
			let m311 = m.self._02;
			let m321 = m.self._12;
			let m331 = m.self._22;
			let tr = m11 + m22 + m331;
			let s = 0.0;
			if(tr > 0) {
				s = 0.5 / Math.sqrt(tr + 1.0);
				tempRot_w = 0.25 / s;
				tempRot_x = (m321 - m23) * s;
				tempRot_y = (m13 - m311) * s;
				tempRot_z = (m21 - m12) * s;
			} else if(m11 > m22 && m11 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
				tempRot_w = (m321 - m23) / s;
				tempRot_x = 0.25 * s;
				tempRot_y = (m12 + m21) / s;
				tempRot_z = (m13 + m311) / s;
			} else if(m22 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
				tempRot_w = (m13 - m311) / s;
				tempRot_x = (m12 + m21) / s;
				tempRot_y = 0.25 * s;
				tempRot_z = (m23 + m321) / s;
			} else {
				s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
				tempRot_w = (m21 - m12) / s;
				tempRot_x = (m13 + m311) / s;
				tempRot_y = (m23 + m321) / s;
				tempRot_z = 0.25 * s;
			}
			let x2 = rootWorldMat.self._10;
			let y2 = rootWorldMat.self._11;
			let z2 = rootWorldMat.self._12;
			if(z2 == null) {
				z2 = 0.0;
			}
			if(y2 == null) {
				y2 = 0.0;
			}
			if(x2 == null) {
				x2 = 0.0;
			}
			let v1_x = x2;
			let v1_y = y2;
			let v1_z = z2;
			let v1_w = 1.0;
			let n1 = Math.sqrt(v1_x * v1_x + v1_y * v1_y + v1_z * v1_z);
			if(n1 > 0.0) {
				let invN = 1.0 / n1;
				v1_x *= invN;
				v1_y *= invN;
				v1_z *= invN;
			}
			let a = iron_math_Quat.helpVec0;
			let dot = v1_x * newLook_x + v1_y * newLook_y + v1_z * newLook_z;
			if(dot < -0.999999) {
				let a1 = iron_math_Quat.xAxis;
				let ax = a1.x;
				let ay = a1.y;
				let az = a1.z;
				let bx = v1_x;
				let by = v1_y;
				let bz = v1_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
				if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
					let a1 = iron_math_Quat.yAxis;
					let ax = a1.x;
					let ay = a1.y;
					let az = a1.z;
					let bx = v1_x;
					let by = v1_y;
					let bz = v1_z;
					a.x = ay * bz - az * by;
					a.y = az * bx - ax * bz;
					a.z = ax * by - ay * bx;
				}
				let n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
				if(n > 0.0) {
					let invN = 1.0 / n;
					a.x *= invN;
					a.y *= invN;
					a.z *= invN;
				}
				let angle = Math.PI;
				let s = Math.sin(angle * 0.5);
				tempRot2.x = a.x * s;
				tempRot2.y = a.y * s;
				tempRot2.z = a.z * s;
				tempRot2.w = Math.cos(angle * 0.5);
				let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
				if(l == 0.0) {
					tempRot2.x = 0;
					tempRot2.y = 0;
					tempRot2.z = 0;
					tempRot2.w = 0;
				} else {
					l = 1.0 / l;
					tempRot2.x *= l;
					tempRot2.y *= l;
					tempRot2.z *= l;
					tempRot2.w *= l;
				}
			} else if(dot > 0.999999) {
				tempRot2.x = 0;
				tempRot2.y = 0;
				tempRot2.z = 0;
				tempRot2.w = 1;
			} else {
				let ax = v1_x;
				let ay = v1_y;
				let az = v1_z;
				let bx = newLook_x;
				let by = newLook_y;
				let bz = newLook_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
				tempRot2.x = a.x;
				tempRot2.y = a.y;
				tempRot2.z = a.z;
				tempRot2.w = 1 + dot;
				let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
				if(l == 0.0) {
					tempRot2.x = 0;
					tempRot2.y = 0;
					tempRot2.z = 0;
					tempRot2.w = 0;
				} else {
					l = 1.0 / l;
					tempRot2.x *= l;
					tempRot2.y *= l;
					tempRot2.z *= l;
					tempRot2.w *= l;
				}
			}
			let q1x = tempRot2.x;
			let q1y = tempRot2.y;
			let q1z = tempRot2.z;
			let q1w = tempRot2.w;
			let q2x = tempRot_x;
			let q2y = tempRot_y;
			let q2z = tempRot_z;
			let q2w = tempRot_w;
			tempRot2.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			tempRot2.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			tempRot2.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			tempRot2.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
			let q1x1 = tempRot2.x;
			let q1y1 = tempRot2.y;
			let q1z1 = tempRot2.z;
			let q1w1 = tempRot2.w;
			let q2x1 = roll_x;
			let q2y1 = roll_y;
			let q2z1 = roll_z;
			let q2w1 = roll_w;
			tempRot2.x = q1x1 * q2w1 + q1w1 * q2x1 + q1y1 * q2z1 - q1z1 * q2y1;
			tempRot2.y = q1w1 * q2y1 - q1x1 * q2z1 + q1y1 * q2w1 + q1z1 * q2x1;
			tempRot2.z = q1w1 * q2z1 + q1x1 * q2y1 - q1y1 * q2x1 + q1z1 * q2w1;
			tempRot2.w = q1w1 * q2w1 - q1x1 * q2x1 - q1y1 * q2y1 - q1z1 * q2z1;
			let x3 = tempRot2.x;
			let y3 = tempRot2.y;
			let z3 = tempRot2.z;
			let w2 = tempRot2.w;
			let x21 = x3 + x3;
			let y21 = y3 + y3;
			let z21 = z3 + z3;
			let xx = x3 * x21;
			let xy = x3 * y21;
			let xz = x3 * z21;
			let yy = y3 * y21;
			let yz = y3 * z21;
			let zz = z3 * z21;
			let wx = w2 * x21;
			let wy = w2 * y21;
			let wz = w2 * z21;
			rootWorldMat.self._00 = 1.0 - (yy + zz);
			rootWorldMat.self._10 = xy - wz;
			rootWorldMat.self._20 = xz + wy;
			rootWorldMat.self._01 = xy + wz;
			rootWorldMat.self._11 = 1.0 - (xx + zz);
			rootWorldMat.self._21 = yz - wx;
			rootWorldMat.self._02 = xz - wy;
			rootWorldMat.self._12 = yz + wx;
			rootWorldMat.self._22 = 1.0 - (xx + yy);
			rootWorldMat.self._03 = 0.0;
			rootWorldMat.self._13 = 0.0;
			rootWorldMat.self._23 = 0.0;
			rootWorldMat.self._30 = 0.0;
			rootWorldMat.self._31 = 0.0;
			rootWorldMat.self._32 = 0.0;
			rootWorldMat.self._33 = 1.0;
			let x4 = tempScl_x;
			let y4 = tempScl_y;
			let z4 = tempScl_z;
			rootWorldMat.self._00 *= x4;
			rootWorldMat.self._01 *= x4;
			rootWorldMat.self._02 *= x4;
			rootWorldMat.self._03 *= x4;
			rootWorldMat.self._10 *= y4;
			rootWorldMat.self._11 *= y4;
			rootWorldMat.self._12 *= y4;
			rootWorldMat.self._13 *= y4;
			rootWorldMat.self._20 *= z4;
			rootWorldMat.self._21 *= z4;
			rootWorldMat.self._22 *= z4;
			rootWorldMat.self._23 *= z4;
			rootWorldMat.self._30 = tempLoc_x;
			rootWorldMat.self._31 = tempLoc_y;
			rootWorldMat.self._32 = tempLoc_z;
			this.setBoneMatFromWorldMat(rootWorldMat,root);
			let _g = 0;
			let _g1 = bones.length - 1;
			while(_g < _g1) {
				let i = _g++;
				let _this = this.getBoneMat(bones[i]);
				tempLoc_x = _this.self._30;
				tempLoc_y = _this.self._31;
				tempLoc_z = _this.self._32;
				let _this1 = iron_math_Mat4.helpVec;
				_this1.x = _this.self._00;
				_this1.y = _this.self._01;
				_this1.z = _this.self._02;
				_this1.w = 1.0;
				let _this2 = _this1;
				tempScl_x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
				let _this3 = iron_math_Mat4.helpVec;
				_this3.x = _this.self._10;
				_this3.y = _this.self._11;
				_this3.z = _this.self._12;
				_this3.w = 1.0;
				let _this4 = _this3;
				tempScl_y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
				let _this5 = iron_math_Mat4.helpVec;
				_this5.x = _this.self._20;
				_this5.y = _this.self._21;
				_this5.z = _this.self._22;
				_this5.w = 1.0;
				let _this6 = _this5;
				tempScl_z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
				let _this7 = _this.self;
				let m3 = _this7._12;
				let m4 = _this7._22;
				let m5 = _this7._32;
				let m6 = _this7._13;
				let m7 = _this7._23;
				let m8 = _this7._33;
				let c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
				let m31 = _this7._12;
				let m41 = _this7._22;
				let m51 = _this7._32;
				let m61 = _this7._13;
				let m71 = _this7._23;
				let m81 = _this7._33;
				let c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
				let m32 = _this7._11;
				let m42 = _this7._21;
				let m52 = _this7._31;
				let m62 = _this7._13;
				let m72 = _this7._23;
				let m82 = _this7._33;
				let c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
				let m33 = _this7._11;
				let m43 = _this7._21;
				let m53 = _this7._31;
				let m63 = _this7._12;
				let m73 = _this7._22;
				let m83 = _this7._32;
				let c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
				if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
					tempScl_x = -tempScl_x;
				}
				let invs = 1.0 / tempScl_x;
				iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
				iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
				iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
				invs = 1.0 / tempScl_y;
				iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
				iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
				iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
				invs = 1.0 / tempScl_z;
				iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
				iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
				iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
				let m = iron_math_Mat4.helpMat;
				let m11 = m.self._00;
				let m12 = m.self._10;
				let m13 = m.self._20;
				let m21 = m.self._01;
				let m22 = m.self._11;
				let m23 = m.self._21;
				let m311 = m.self._02;
				let m321 = m.self._12;
				let m331 = m.self._22;
				let tr = m11 + m22 + m331;
				let s = 0.0;
				if(tr > 0) {
					s = 0.5 / Math.sqrt(tr + 1.0);
					tempRot_w = 0.25 / s;
					tempRot_x = (m321 - m23) * s;
					tempRot_y = (m13 - m311) * s;
					tempRot_z = (m21 - m12) * s;
				} else if(m11 > m22 && m11 > m331) {
					s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
					tempRot_w = (m321 - m23) / s;
					tempRot_x = 0.25 * s;
					tempRot_y = (m12 + m21) / s;
					tempRot_z = (m13 + m311) / s;
				} else if(m22 > m331) {
					s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
					tempRot_w = (m13 - m311) / s;
					tempRot_x = (m12 + m21) / s;
					tempRot_y = 0.25 * s;
					tempRot_z = (m23 + m321) / s;
				} else {
					s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
					tempRot_w = (m21 - m12) / s;
					tempRot_x = (m13 + m311) / s;
					tempRot_y = (m23 + m321) / s;
					tempRot_z = 0.25 * s;
				}
				let _this8 = this.getBoneMat(bones[i]);
				let x = roll_x;
				let y = roll_y;
				let z = roll_z;
				let w = roll_w;
				let x2 = x + x;
				let y2 = y + y;
				let z2 = z + z;
				let xx = x * x2;
				let xy = x * y2;
				let xz = x * z2;
				let yy = y * y2;
				let yz = y * z2;
				let zz = z * z2;
				let wx = w * x2;
				let wy = w * y2;
				let wz = w * z2;
				_this8.self._00 = 1.0 - (yy + zz);
				_this8.self._10 = xy - wz;
				_this8.self._20 = xz + wy;
				_this8.self._01 = xy + wz;
				_this8.self._11 = 1.0 - (xx + zz);
				_this8.self._21 = yz - wx;
				_this8.self._02 = xz - wy;
				_this8.self._12 = yz + wx;
				_this8.self._22 = 1.0 - (xx + yy);
				_this8.self._03 = 0.0;
				_this8.self._13 = 0.0;
				_this8.self._23 = 0.0;
				_this8.self._30 = 0.0;
				_this8.self._31 = 0.0;
				_this8.self._32 = 0.0;
				_this8.self._33 = 1.0;
				let x1 = tempScl_x;
				let y1 = tempScl_y;
				let z1 = tempScl_z;
				_this8.self._00 *= x1;
				_this8.self._01 *= x1;
				_this8.self._02 *= x1;
				_this8.self._03 *= x1;
				_this8.self._10 *= y1;
				_this8.self._11 *= y1;
				_this8.self._12 *= y1;
				_this8.self._13 *= y1;
				_this8.self._20 *= z1;
				_this8.self._21 *= z1;
				_this8.self._22 *= z1;
				_this8.self._23 *= z1;
				_this8.self._30 = tempLoc_x;
				_this8.self._31 = tempLoc_y;
				_this8.self._32 = tempLoc_z;
			}
			return;
		}
		let boneWorldMats = this.getWorldMatsFast(effector,bones.length);
		let boneWorldLocs = [];
		let _g1 = 0;
		while(_g1 < boneWorldMats.length) {
			let b = boneWorldMats[_g1];
			++_g1;
			boneWorldLocs.push(new iron_math_Vec4(b.self._30,b.self._31,b.self._32,b.self._33));
		}
		let vec_x = 0.0;
		let vec_y = 0.0;
		let vec_z = 0.0;
		let vec_w = 1.0;
		let _this2 = boneWorldLocs[0];
		let x1 = _this2.x;
		let y1 = _this2.y;
		let z1 = _this2.z;
		let w1 = _this2.w;
		if(w1 == null) {
			w1 = 1.0;
		}
		if(z1 == null) {
			z1 = 0.0;
		}
		if(y1 == null) {
			y1 = 0.0;
		}
		if(x1 == null) {
			x1 = 0.0;
		}
		let startLoc_x = x1;
		let startLoc_y = y1;
		let startLoc_z = z1;
		let startLoc_w = w1;
		let l = boneWorldLocs.length;
		let testLength = 0;
		let _g2 = 0;
		let _g3 = maxIterations;
		while(_g2 < _g3) {
			let iter = _g2++;
			vec_x = goal.x;
			vec_y = goal.y;
			vec_z = goal.z;
			vec_w = goal.w;
			let v = boneWorldLocs[l - 1];
			vec_x -= v.x;
			vec_y -= v.y;
			vec_z -= v.z;
			let n = Math.sqrt(vec_x * vec_x + vec_y * vec_y + vec_z * vec_z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				vec_x *= invN;
				vec_y *= invN;
				vec_z *= invN;
			}
			let f = lengths[0];
			vec_x *= f;
			vec_y *= f;
			vec_z *= f;
			let _this = boneWorldLocs[l - 1];
			_this.x = goal.x;
			_this.y = goal.y;
			_this.z = goal.z;
			_this.w = goal.w;
			let _this1 = boneWorldLocs[l - 1];
			_this1.x -= vec_x;
			_this1.y -= vec_y;
			_this1.z -= vec_z;
			let _g = 1;
			let _g1 = l;
			while(_g < _g1) {
				let j = _g++;
				let v = boneWorldLocs[l - 1 - j];
				vec_x = v.x;
				vec_y = v.y;
				vec_z = v.z;
				vec_w = v.w;
				let v1 = boneWorldLocs[l - j];
				vec_x -= v1.x;
				vec_y -= v1.y;
				vec_z -= v1.z;
				let n = Math.sqrt(vec_x * vec_x + vec_y * vec_y + vec_z * vec_z);
				if(n > 0.0) {
					let invN = 1.0 / n;
					vec_x *= invN;
					vec_y *= invN;
					vec_z *= invN;
				}
				let f = lengths[j];
				vec_x *= f;
				vec_y *= f;
				vec_z *= f;
				let _this = boneWorldLocs[l - 1 - j];
				let v2 = boneWorldLocs[l - j];
				_this.x = v2.x;
				_this.y = v2.y;
				_this.z = v2.z;
				_this.w = v2.w;
				let _this1 = boneWorldLocs[l - 1 - j];
				_this1.x += vec_x;
				_this1.y += vec_y;
				_this1.z += vec_z;
			}
			let _this2 = boneWorldLocs[0];
			_this2.x = startLoc_x;
			_this2.y = startLoc_y;
			_this2.z = startLoc_z;
			_this2.w = startLoc_w;
			let _g3 = 1;
			let _g4 = l;
			while(_g3 < _g4) {
				let j = _g3++;
				let v = boneWorldLocs[j];
				vec_x = v.x;
				vec_y = v.y;
				vec_z = v.z;
				vec_w = v.w;
				let v1 = boneWorldLocs[j - 1];
				vec_x -= v1.x;
				vec_y -= v1.y;
				vec_z -= v1.z;
				let n = Math.sqrt(vec_x * vec_x + vec_y * vec_y + vec_z * vec_z);
				if(n > 0.0) {
					let invN = 1.0 / n;
					vec_x *= invN;
					vec_y *= invN;
					vec_z *= invN;
				}
				let f = lengths[l - j];
				vec_x *= f;
				vec_y *= f;
				vec_z *= f;
				let _this = boneWorldLocs[j];
				let v2 = boneWorldLocs[j - 1];
				_this.x = v2.x;
				_this.y = v2.y;
				_this.z = v2.z;
				_this.w = v2.w;
				let _this1 = boneWorldLocs[j];
				_this1.x += vec_x;
				_this1.y += vec_y;
				_this1.z += vec_z;
			}
			let v1 = boneWorldLocs[l - 1];
			let vx = v1.x - goal.x;
			let vy = v1.y - goal.y;
			let vz = v1.z - goal.z;
			if(Math.sqrt(vx * vx + vy * vy + vz * vz) - lengths[0] <= precision) {
				break;
			}
		}
		if(pole != null) {
			let _g = 1;
			let _g1 = boneWorldLocs.length - 1;
			while(_g < _g1) {
				let i = _g++;
				let _this = boneWorldLocs[i - 1];
				let tmp = new iron_math_Vec4(_this.x,_this.y,_this.z,_this.w);
				let _this1 = boneWorldLocs[i];
				let tmp1 = new iron_math_Vec4(_this1.x,_this1.y,_this1.z,_this1.w);
				let _this2 = boneWorldLocs[i + 1];
				boneWorldLocs[i] = this.moveTowardPole(tmp,tmp1,new iron_math_Vec4(_this2.x,_this2.y,_this2.z,_this2.w),new iron_math_Vec4(pole.x,pole.y,pole.z,pole.w));
			}
		}
		let tempLook_x = 0.0;
		let tempLook_y = 0.0;
		let tempLook_z = 0.0;
		let tempLook_w = 1.0;
		let tempLoc2_x = 0.0;
		let tempLoc2_y = 0.0;
		let tempLoc2_z = 0.0;
		let tempLoc2_w = 1.0;
		let _g4 = 0;
		let _g5 = l - 1;
		while(_g4 < _g5) {
			let i = _g4++;
			let _this = boneWorldMats[i];
			tempLoc_x = _this.self._30;
			tempLoc_y = _this.self._31;
			tempLoc_z = _this.self._32;
			let _this1 = iron_math_Mat4.helpVec;
			_this1.x = _this.self._00;
			_this1.y = _this.self._01;
			_this1.z = _this.self._02;
			_this1.w = 1.0;
			let _this2 = _this1;
			tempScl_x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
			let _this3 = iron_math_Mat4.helpVec;
			_this3.x = _this.self._10;
			_this3.y = _this.self._11;
			_this3.z = _this.self._12;
			_this3.w = 1.0;
			let _this4 = _this3;
			tempScl_y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
			let _this5 = iron_math_Mat4.helpVec;
			_this5.x = _this.self._20;
			_this5.y = _this.self._21;
			_this5.z = _this.self._22;
			_this5.w = 1.0;
			let _this6 = _this5;
			tempScl_z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
			let _this7 = _this.self;
			let m3 = _this7._12;
			let m4 = _this7._22;
			let m5 = _this7._32;
			let m6 = _this7._13;
			let m7 = _this7._23;
			let m8 = _this7._33;
			let c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
			let m31 = _this7._12;
			let m41 = _this7._22;
			let m51 = _this7._32;
			let m61 = _this7._13;
			let m71 = _this7._23;
			let m81 = _this7._33;
			let c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
			let m32 = _this7._11;
			let m42 = _this7._21;
			let m52 = _this7._31;
			let m62 = _this7._13;
			let m72 = _this7._23;
			let m82 = _this7._33;
			let c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
			let m33 = _this7._11;
			let m43 = _this7._21;
			let m53 = _this7._31;
			let m63 = _this7._12;
			let m73 = _this7._22;
			let m83 = _this7._32;
			let c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
			if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
				tempScl_x = -tempScl_x;
			}
			let invs = 1.0 / tempScl_x;
			iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
			iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
			iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
			invs = 1.0 / tempScl_y;
			iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
			iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
			iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
			invs = 1.0 / tempScl_z;
			iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
			iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
			iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
			let m = iron_math_Mat4.helpMat;
			let m11 = m.self._00;
			let m12 = m.self._10;
			let m13 = m.self._20;
			let m21 = m.self._01;
			let m22 = m.self._11;
			let m23 = m.self._21;
			let m311 = m.self._02;
			let m321 = m.self._12;
			let m331 = m.self._22;
			let tr = m11 + m22 + m331;
			let s = 0.0;
			if(tr > 0) {
				s = 0.5 / Math.sqrt(tr + 1.0);
				tempRot_w = 0.25 / s;
				tempRot_x = (m321 - m23) * s;
				tempRot_y = (m13 - m311) * s;
				tempRot_z = (m21 - m12) * s;
			} else if(m11 > m22 && m11 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
				tempRot_w = (m321 - m23) / s;
				tempRot_x = 0.25 * s;
				tempRot_y = (m12 + m21) / s;
				tempRot_z = (m13 + m311) / s;
			} else if(m22 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
				tempRot_w = (m13 - m311) / s;
				tempRot_x = (m12 + m21) / s;
				tempRot_y = 0.25 * s;
				tempRot_z = (m23 + m321) / s;
			} else {
				s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
				tempRot_w = (m21 - m12) / s;
				tempRot_x = (m13 + m311) / s;
				tempRot_y = (m23 + m321) / s;
				tempRot_z = 0.25 * s;
			}
			let v = boneWorldLocs[i + 1];
			tempLoc2_x = v.x;
			tempLoc2_y = v.y;
			tempLoc2_z = v.z;
			tempLoc2_w = v.w;
			let v1 = boneWorldLocs[i];
			tempLoc2_x -= v1.x;
			tempLoc2_y -= v1.y;
			tempLoc2_z -= v1.z;
			let n = Math.sqrt(tempLoc2_x * tempLoc2_x + tempLoc2_y * tempLoc2_y + tempLoc2_z * tempLoc2_z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				tempLoc2_x *= invN;
				tempLoc2_y *= invN;
				tempLoc2_z *= invN;
			}
			let _this8 = boneWorldMats[i];
			let x = _this8.self._10;
			let y = _this8.self._11;
			let z = _this8.self._12;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v_x = x;
			let v_y = y;
			let v_z = z;
			let v_w = 1.0;
			tempLook_x = v_x;
			tempLook_y = v_y;
			tempLook_z = v_z;
			tempLook_w = v_w;
			let n1 = Math.sqrt(tempLook_x * tempLook_x + tempLook_y * tempLook_y + tempLook_z * tempLook_z);
			if(n1 > 0.0) {
				let invN = 1.0 / n1;
				tempLook_x *= invN;
				tempLook_y *= invN;
				tempLook_z *= invN;
			}
			let a = iron_math_Quat.helpVec0;
			let dot = tempLook_x * tempLoc2_x + tempLook_y * tempLoc2_y + tempLook_z * tempLoc2_z;
			if(dot < -0.999999) {
				let a1 = iron_math_Quat.xAxis;
				let ax = a1.x;
				let ay = a1.y;
				let az = a1.z;
				let bx = tempLook_x;
				let by = tempLook_y;
				let bz = tempLook_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
				if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
					let a1 = iron_math_Quat.yAxis;
					let ax = a1.x;
					let ay = a1.y;
					let az = a1.z;
					let bx = tempLook_x;
					let by = tempLook_y;
					let bz = tempLook_z;
					a.x = ay * bz - az * by;
					a.y = az * bx - ax * bz;
					a.z = ax * by - ay * bx;
				}
				let n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
				if(n > 0.0) {
					let invN = 1.0 / n;
					a.x *= invN;
					a.y *= invN;
					a.z *= invN;
				}
				let angle = Math.PI;
				let s = Math.sin(angle * 0.5);
				tempRot2.x = a.x * s;
				tempRot2.y = a.y * s;
				tempRot2.z = a.z * s;
				tempRot2.w = Math.cos(angle * 0.5);
				let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
				if(l == 0.0) {
					tempRot2.x = 0;
					tempRot2.y = 0;
					tempRot2.z = 0;
					tempRot2.w = 0;
				} else {
					l = 1.0 / l;
					tempRot2.x *= l;
					tempRot2.y *= l;
					tempRot2.z *= l;
					tempRot2.w *= l;
				}
			} else if(dot > 0.999999) {
				tempRot2.x = 0;
				tempRot2.y = 0;
				tempRot2.z = 0;
				tempRot2.w = 1;
			} else {
				let ax = tempLook_x;
				let ay = tempLook_y;
				let az = tempLook_z;
				let bx = tempLoc2_x;
				let by = tempLoc2_y;
				let bz = tempLoc2_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
				tempRot2.x = a.x;
				tempRot2.y = a.y;
				tempRot2.z = a.z;
				tempRot2.w = 1 + dot;
				let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
				if(l == 0.0) {
					tempRot2.x = 0;
					tempRot2.y = 0;
					tempRot2.z = 0;
					tempRot2.w = 0;
				} else {
					l = 1.0 / l;
					tempRot2.x *= l;
					tempRot2.y *= l;
					tempRot2.z *= l;
					tempRot2.w *= l;
				}
			}
			let q1x = tempRot2.x;
			let q1y = tempRot2.y;
			let q1z = tempRot2.z;
			let q1w = tempRot2.w;
			let q2x = tempRot_x;
			let q2y = tempRot_y;
			let q2z = tempRot_z;
			let q2w = tempRot_w;
			tempRot2.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
			tempRot2.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
			tempRot2.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
			tempRot2.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
			let q1x1 = tempRot2.x;
			let q1y1 = tempRot2.y;
			let q1z1 = tempRot2.z;
			let q1w1 = tempRot2.w;
			let q2x1 = roll_x;
			let q2y1 = roll_y;
			let q2z1 = roll_z;
			let q2w1 = roll_w;
			tempRot2.x = q1x1 * q2w1 + q1w1 * q2x1 + q1y1 * q2z1 - q1z1 * q2y1;
			tempRot2.y = q1w1 * q2y1 - q1x1 * q2z1 + q1y1 * q2w1 + q1z1 * q2x1;
			tempRot2.z = q1w1 * q2z1 + q1x1 * q2y1 - q1y1 * q2x1 + q1z1 * q2w1;
			tempRot2.w = q1w1 * q2w1 - q1x1 * q2x1 - q1y1 * q2y1 - q1z1 * q2z1;
			let _this9 = boneWorldMats[i];
			let loc = boneWorldLocs[i];
			let x1 = tempRot2.x;
			let y1 = tempRot2.y;
			let z1 = tempRot2.z;
			let w = tempRot2.w;
			let x2 = x1 + x1;
			let y2 = y1 + y1;
			let z2 = z1 + z1;
			let xx = x1 * x2;
			let xy = x1 * y2;
			let xz = x1 * z2;
			let yy = y1 * y2;
			let yz = y1 * z2;
			let zz = z1 * z2;
			let wx = w * x2;
			let wy = w * y2;
			let wz = w * z2;
			_this9.self._00 = 1.0 - (yy + zz);
			_this9.self._10 = xy - wz;
			_this9.self._20 = xz + wy;
			_this9.self._01 = xy + wz;
			_this9.self._11 = 1.0 - (xx + zz);
			_this9.self._21 = yz - wx;
			_this9.self._02 = xz - wy;
			_this9.self._12 = yz + wx;
			_this9.self._22 = 1.0 - (xx + yy);
			_this9.self._03 = 0.0;
			_this9.self._13 = 0.0;
			_this9.self._23 = 0.0;
			_this9.self._30 = 0.0;
			_this9.self._31 = 0.0;
			_this9.self._32 = 0.0;
			_this9.self._33 = 1.0;
			let x3 = tempScl_x;
			let y3 = tempScl_y;
			let z3 = tempScl_z;
			_this9.self._00 *= x3;
			_this9.self._01 *= x3;
			_this9.self._02 *= x3;
			_this9.self._03 *= x3;
			_this9.self._10 *= y3;
			_this9.self._11 *= y3;
			_this9.self._12 *= y3;
			_this9.self._13 *= y3;
			_this9.self._20 *= z3;
			_this9.self._21 *= z3;
			_this9.self._22 *= z3;
			_this9.self._23 *= z3;
			_this9.self._30 = loc.x;
			_this9.self._31 = loc.y;
			_this9.self._32 = loc.z;
			this.setBoneMatFromWorldMat(boneWorldMats[i],bones[bones.length - 1 - i]);
		}
		let _this3 = boneWorldMats[l - 1];
		tempLoc_x = _this3.self._30;
		tempLoc_y = _this3.self._31;
		tempLoc_z = _this3.self._32;
		let _this4 = iron_math_Mat4.helpVec;
		_this4.x = _this3.self._00;
		_this4.y = _this3.self._01;
		_this4.z = _this3.self._02;
		_this4.w = 1.0;
		let _this5 = _this4;
		tempScl_x = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		let _this6 = iron_math_Mat4.helpVec;
		_this6.x = _this3.self._10;
		_this6.y = _this3.self._11;
		_this6.z = _this3.self._12;
		_this6.w = 1.0;
		let _this7 = _this6;
		tempScl_y = Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z);
		let _this8 = iron_math_Mat4.helpVec;
		_this8.x = _this3.self._20;
		_this8.y = _this3.self._21;
		_this8.z = _this3.self._22;
		_this8.w = 1.0;
		let _this9 = _this8;
		tempScl_z = Math.sqrt(_this9.x * _this9.x + _this9.y * _this9.y + _this9.z * _this9.z);
		let _this10 = _this3.self;
		let m3 = _this10._12;
		let m4 = _this10._22;
		let m5 = _this10._32;
		let m6 = _this10._13;
		let m7 = _this10._23;
		let m8 = _this10._33;
		let c00 = _this10._11 * (m4 * m8 - m5 * m7) - _this10._21 * (m3 * m8 - m5 * m6) + _this10._31 * (m3 * m7 - m4 * m6);
		let m31 = _this10._12;
		let m41 = _this10._22;
		let m51 = _this10._32;
		let m61 = _this10._13;
		let m71 = _this10._23;
		let m81 = _this10._33;
		let c01 = _this10._10 * (m41 * m81 - m51 * m71) - _this10._20 * (m31 * m81 - m51 * m61) + _this10._30 * (m31 * m71 - m41 * m61);
		let m32 = _this10._11;
		let m42 = _this10._21;
		let m52 = _this10._31;
		let m62 = _this10._13;
		let m72 = _this10._23;
		let m82 = _this10._33;
		let c02 = _this10._10 * (m42 * m82 - m52 * m72) - _this10._20 * (m32 * m82 - m52 * m62) + _this10._30 * (m32 * m72 - m42 * m62);
		let m33 = _this10._11;
		let m43 = _this10._21;
		let m53 = _this10._31;
		let m63 = _this10._12;
		let m73 = _this10._22;
		let m83 = _this10._32;
		let c03 = _this10._10 * (m43 * m83 - m53 * m73) - _this10._20 * (m33 * m83 - m53 * m63) + _this10._30 * (m33 * m73 - m43 * m63);
		if(_this10._00 * c00 - _this10._01 * c01 + _this10._02 * c02 - _this10._03 * c03 < 0.0) {
			tempScl_x = -tempScl_x;
		}
		let invs = 1.0 / tempScl_x;
		iron_math_Mat4.helpMat.self._00 = _this3.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this3.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this3.self._02 * invs;
		invs = 1.0 / tempScl_y;
		iron_math_Mat4.helpMat.self._10 = _this3.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this3.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this3.self._12 * invs;
		invs = 1.0 / tempScl_z;
		iron_math_Mat4.helpMat.self._20 = _this3.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this3.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this3.self._22 * invs;
		let m = iron_math_Mat4.helpMat;
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m311 = m.self._02;
		let m321 = m.self._12;
		let m331 = m.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			tempRot_w = 0.25 / s;
			tempRot_x = (m321 - m23) * s;
			tempRot_y = (m13 - m311) * s;
			tempRot_z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			tempRot_w = (m321 - m23) / s;
			tempRot_x = 0.25 * s;
			tempRot_y = (m12 + m21) / s;
			tempRot_z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			tempRot_w = (m13 - m311) / s;
			tempRot_x = (m12 + m21) / s;
			tempRot_y = 0.25 * s;
			tempRot_z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			tempRot_w = (m21 - m12) / s;
			tempRot_x = (m13 + m311) / s;
			tempRot_y = (m23 + m321) / s;
			tempRot_z = 0.25 * s;
		}
		tempLoc2_x = goal.x;
		tempLoc2_y = goal.y;
		tempLoc2_z = goal.z;
		tempLoc2_w = goal.w;
		tempLoc2_x -= tempLoc_x;
		tempLoc2_y -= tempLoc_y;
		tempLoc2_z -= tempLoc_z;
		let n = Math.sqrt(tempLoc2_x * tempLoc2_x + tempLoc2_y * tempLoc2_y + tempLoc2_z * tempLoc2_z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			tempLoc2_x *= invN;
			tempLoc2_y *= invN;
			tempLoc2_z *= invN;
		}
		let _this11 = boneWorldMats[l - 1];
		let x2 = _this11.self._10;
		let y2 = _this11.self._11;
		let z2 = _this11.self._12;
		if(z2 == null) {
			z2 = 0.0;
		}
		if(y2 == null) {
			y2 = 0.0;
		}
		if(x2 == null) {
			x2 = 0.0;
		}
		let v_x = x2;
		let v_y = y2;
		let v_z = z2;
		let v_w = 1.0;
		tempLook_x = v_x;
		tempLook_y = v_y;
		tempLook_z = v_z;
		tempLook_w = v_w;
		let n1 = Math.sqrt(tempLook_x * tempLook_x + tempLook_y * tempLook_y + tempLook_z * tempLook_z);
		if(n1 > 0.0) {
			let invN = 1.0 / n1;
			tempLook_x *= invN;
			tempLook_y *= invN;
			tempLook_z *= invN;
		}
		let a = iron_math_Quat.helpVec0;
		let dot = tempLook_x * tempLoc2_x + tempLook_y * tempLoc2_y + tempLook_z * tempLoc2_z;
		if(dot < -0.999999) {
			let a1 = iron_math_Quat.xAxis;
			let ax = a1.x;
			let ay = a1.y;
			let az = a1.z;
			let bx = tempLook_x;
			let by = tempLook_y;
			let bz = tempLook_z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
				let a1 = iron_math_Quat.yAxis;
				let ax = a1.x;
				let ay = a1.y;
				let az = a1.z;
				let bx = tempLook_x;
				let by = tempLook_y;
				let bz = tempLook_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
			}
			let n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				a.x *= invN;
				a.y *= invN;
				a.z *= invN;
			}
			let angle = Math.PI;
			let s = Math.sin(angle * 0.5);
			tempRot2.x = a.x * s;
			tempRot2.y = a.y * s;
			tempRot2.z = a.z * s;
			tempRot2.w = Math.cos(angle * 0.5);
			let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
			if(l == 0.0) {
				tempRot2.x = 0;
				tempRot2.y = 0;
				tempRot2.z = 0;
				tempRot2.w = 0;
			} else {
				l = 1.0 / l;
				tempRot2.x *= l;
				tempRot2.y *= l;
				tempRot2.z *= l;
				tempRot2.w *= l;
			}
		} else if(dot > 0.999999) {
			tempRot2.x = 0;
			tempRot2.y = 0;
			tempRot2.z = 0;
			tempRot2.w = 1;
		} else {
			let ax = tempLook_x;
			let ay = tempLook_y;
			let az = tempLook_z;
			let bx = tempLoc2_x;
			let by = tempLoc2_y;
			let bz = tempLoc2_z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			tempRot2.x = a.x;
			tempRot2.y = a.y;
			tempRot2.z = a.z;
			tempRot2.w = 1 + dot;
			let l = Math.sqrt(tempRot2.x * tempRot2.x + tempRot2.y * tempRot2.y + tempRot2.z * tempRot2.z + tempRot2.w * tempRot2.w);
			if(l == 0.0) {
				tempRot2.x = 0;
				tempRot2.y = 0;
				tempRot2.z = 0;
				tempRot2.w = 0;
			} else {
				l = 1.0 / l;
				tempRot2.x *= l;
				tempRot2.y *= l;
				tempRot2.z *= l;
				tempRot2.w *= l;
			}
		}
		let q1x = tempRot2.x;
		let q1y = tempRot2.y;
		let q1z = tempRot2.z;
		let q1w = tempRot2.w;
		let q2x = tempRot_x;
		let q2y = tempRot_y;
		let q2z = tempRot_z;
		let q2w = tempRot_w;
		tempRot2.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		tempRot2.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		tempRot2.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		tempRot2.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		let q1x1 = tempRot2.x;
		let q1y1 = tempRot2.y;
		let q1z1 = tempRot2.z;
		let q1w1 = tempRot2.w;
		let q2x1 = roll_x;
		let q2y1 = roll_y;
		let q2z1 = roll_z;
		let q2w1 = roll_w;
		tempRot2.x = q1x1 * q2w1 + q1w1 * q2x1 + q1y1 * q2z1 - q1z1 * q2y1;
		tempRot2.y = q1w1 * q2y1 - q1x1 * q2z1 + q1y1 * q2w1 + q1z1 * q2x1;
		tempRot2.z = q1w1 * q2z1 + q1x1 * q2y1 - q1y1 * q2x1 + q1z1 * q2w1;
		tempRot2.w = q1w1 * q2w1 - q1x1 * q2x1 - q1y1 * q2y1 - q1z1 * q2z1;
		let _this12 = boneWorldMats[l - 1];
		let loc = boneWorldLocs[l - 1];
		let x3 = tempRot2.x;
		let y3 = tempRot2.y;
		let z3 = tempRot2.z;
		let w2 = tempRot2.w;
		let x21 = x3 + x3;
		let y21 = y3 + y3;
		let z21 = z3 + z3;
		let xx = x3 * x21;
		let xy = x3 * y21;
		let xz = x3 * z21;
		let yy = y3 * y21;
		let yz = y3 * z21;
		let zz = z3 * z21;
		let wx = w2 * x21;
		let wy = w2 * y21;
		let wz = w2 * z21;
		_this12.self._00 = 1.0 - (yy + zz);
		_this12.self._10 = xy - wz;
		_this12.self._20 = xz + wy;
		_this12.self._01 = xy + wz;
		_this12.self._11 = 1.0 - (xx + zz);
		_this12.self._21 = yz - wx;
		_this12.self._02 = xz - wy;
		_this12.self._12 = yz + wx;
		_this12.self._22 = 1.0 - (xx + yy);
		_this12.self._03 = 0.0;
		_this12.self._13 = 0.0;
		_this12.self._23 = 0.0;
		_this12.self._30 = 0.0;
		_this12.self._31 = 0.0;
		_this12.self._32 = 0.0;
		_this12.self._33 = 1.0;
		let x4 = tempScl_x;
		let y4 = tempScl_y;
		let z4 = tempScl_z;
		_this12.self._00 *= x4;
		_this12.self._01 *= x4;
		_this12.self._02 *= x4;
		_this12.self._03 *= x4;
		_this12.self._10 *= y4;
		_this12.self._11 *= y4;
		_this12.self._12 *= y4;
		_this12.self._13 *= y4;
		_this12.self._20 *= z4;
		_this12.self._21 *= z4;
		_this12.self._22 *= z4;
		_this12.self._23 *= z4;
		_this12.self._30 = loc.x;
		_this12.self._31 = loc.y;
		_this12.self._32 = loc.z;
		this.setBoneMatFromWorldMat(boneWorldMats[l - 1],bones[0]);
	}
	moveTowardPole(bone0Pos,bone1Pos,bone2Pos,polePos) {
		let plane = new iron_math_Plane();
		let _this = new iron_math_Vec4();
		_this.x = bone2Pos.x;
		_this.y = bone2Pos.y;
		_this.z = bone2Pos.z;
		_this.w = bone2Pos.w;
		let planeNormal = _this;
		planeNormal.x -= bone0Pos.x;
		planeNormal.y -= bone0Pos.y;
		planeNormal.z -= bone0Pos.z;
		let n = Math.sqrt(planeNormal.x * planeNormal.x + planeNormal.y * planeNormal.y + planeNormal.z * planeNormal.z);
		if(n > 0.0) {
			let invN = 1.0 / n;
			planeNormal.x *= invN;
			planeNormal.y *= invN;
			planeNormal.z *= invN;
		}
		plane.set(planeNormal,bone0Pos);
		let rayPos = new iron_math_Vec4();
		rayPos.x = bone1Pos.x;
		rayPos.y = bone1Pos.y;
		rayPos.z = bone1Pos.z;
		rayPos.w = bone1Pos.w;
		let rayDir = new iron_math_Vec4();
		rayDir.x -= planeNormal.x;
		rayDir.y -= planeNormal.y;
		rayDir.z -= planeNormal.z;
		let n1 = Math.sqrt(rayDir.x * rayDir.x + rayDir.y * rayDir.y + rayDir.z * rayDir.z);
		if(n1 > 0.0) {
			let invN = 1.0 / n1;
			rayDir.x *= invN;
			rayDir.y *= invN;
			rayDir.z *= invN;
		}
		let rayBone = new iron_math_Ray(rayPos,rayDir);
		if(!rayBone.intersectsPlane(plane)) {
			rayBone.direction = planeNormal;
		}
		let bone1Proj = rayBone.intersectPlane(plane);
		rayPos.x = polePos.x;
		rayPos.y = polePos.y;
		rayPos.z = polePos.z;
		rayPos.w = polePos.w;
		let rayPole = new iron_math_Ray(rayPos,rayDir);
		if(!rayPole.intersectsPlane(plane)) {
			rayPole.direction = planeNormal;
		}
		let poleProj = rayPole.intersectPlane(plane);
		let poleProjNormal_x = 0.0;
		let poleProjNormal_y = 0.0;
		let poleProjNormal_z = 0.0;
		let poleProjNormal_w = 1.0;
		poleProjNormal_x = bone0Pos.x;
		poleProjNormal_y = bone0Pos.y;
		poleProjNormal_z = bone0Pos.z;
		poleProjNormal_w = bone0Pos.w;
		poleProjNormal_x -= poleProj.x;
		poleProjNormal_y -= poleProj.y;
		poleProjNormal_z -= poleProj.z;
		let n2 = Math.sqrt(poleProjNormal_x * poleProjNormal_x + poleProjNormal_y * poleProjNormal_y + poleProjNormal_z * poleProjNormal_z);
		if(n2 > 0.0) {
			let invN = 1.0 / n2;
			poleProjNormal_x *= invN;
			poleProjNormal_y *= invN;
			poleProjNormal_z *= invN;
		}
		let bone1ProjNormal_x = 0.0;
		let bone1ProjNormal_y = 0.0;
		let bone1ProjNormal_z = 0.0;
		let bone1ProjNormal_w = 1.0;
		bone1ProjNormal_x = bone0Pos.x;
		bone1ProjNormal_y = bone0Pos.y;
		bone1ProjNormal_z = bone0Pos.z;
		bone1ProjNormal_w = bone0Pos.w;
		bone1ProjNormal_x -= bone1Proj.x;
		bone1ProjNormal_y -= bone1Proj.y;
		bone1ProjNormal_z -= bone1Proj.z;
		let n3 = Math.sqrt(bone1ProjNormal_x * bone1ProjNormal_x + bone1ProjNormal_y * bone1ProjNormal_y + bone1ProjNormal_z * bone1ProjNormal_z);
		if(n3 > 0.0) {
			let invN = 1.0 / n3;
			bone1ProjNormal_x *= invN;
			bone1ProjNormal_y *= invN;
			bone1ProjNormal_z *= invN;
		}
		let rotQuat = new iron_math_Quat();
		let a = iron_math_Quat.helpVec0;
		let dot = bone1ProjNormal_x * poleProjNormal_x + bone1ProjNormal_y * poleProjNormal_y + bone1ProjNormal_z * poleProjNormal_z;
		if(dot < -0.999999) {
			let a1 = iron_math_Quat.xAxis;
			let ax = a1.x;
			let ay = a1.y;
			let az = a1.z;
			let bx = bone1ProjNormal_x;
			let by = bone1ProjNormal_y;
			let bz = bone1ProjNormal_z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
				let a1 = iron_math_Quat.yAxis;
				let ax = a1.x;
				let ay = a1.y;
				let az = a1.z;
				let bx = bone1ProjNormal_x;
				let by = bone1ProjNormal_y;
				let bz = bone1ProjNormal_z;
				a.x = ay * bz - az * by;
				a.y = az * bx - ax * bz;
				a.z = ax * by - ay * bx;
			}
			let n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
			if(n > 0.0) {
				let invN = 1.0 / n;
				a.x *= invN;
				a.y *= invN;
				a.z *= invN;
			}
			let angle = Math.PI;
			let s = Math.sin(angle * 0.5);
			rotQuat.x = a.x * s;
			rotQuat.y = a.y * s;
			rotQuat.z = a.z * s;
			rotQuat.w = Math.cos(angle * 0.5);
			let l = Math.sqrt(rotQuat.x * rotQuat.x + rotQuat.y * rotQuat.y + rotQuat.z * rotQuat.z + rotQuat.w * rotQuat.w);
			if(l == 0.0) {
				rotQuat.x = 0;
				rotQuat.y = 0;
				rotQuat.z = 0;
				rotQuat.w = 0;
			} else {
				l = 1.0 / l;
				rotQuat.x *= l;
				rotQuat.y *= l;
				rotQuat.z *= l;
				rotQuat.w *= l;
			}
		} else if(dot > 0.999999) {
			rotQuat.x = 0;
			rotQuat.y = 0;
			rotQuat.z = 0;
			rotQuat.w = 1;
		} else {
			let ax = bone1ProjNormal_x;
			let ay = bone1ProjNormal_y;
			let az = bone1ProjNormal_z;
			let bx = poleProjNormal_x;
			let by = poleProjNormal_y;
			let bz = poleProjNormal_z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			rotQuat.x = a.x;
			rotQuat.y = a.y;
			rotQuat.z = a.z;
			rotQuat.w = 1 + dot;
			let l = Math.sqrt(rotQuat.x * rotQuat.x + rotQuat.y * rotQuat.y + rotQuat.z * rotQuat.z + rotQuat.w * rotQuat.w);
			if(l == 0.0) {
				rotQuat.x = 0;
				rotQuat.y = 0;
				rotQuat.z = 0;
				rotQuat.w = 0;
			} else {
				l = 1.0 / l;
				rotQuat.x *= l;
				rotQuat.y *= l;
				rotQuat.z *= l;
				rotQuat.w *= l;
			}
		}
		let _this1 = new iron_math_Vec4();
		_this1.x = bone1Pos.x;
		_this1.y = bone1Pos.y;
		_this1.z = bone1Pos.z;
		_this1.w = bone1Pos.w;
		let bone1Res = _this1;
		bone1Res.x -= bone0Pos.x;
		bone1Res.y -= bone0Pos.y;
		bone1Res.z -= bone0Pos.z;
		let ix = rotQuat.w * bone1Res.x + rotQuat.y * bone1Res.z - rotQuat.z * bone1Res.y;
		let iy = rotQuat.w * bone1Res.y + rotQuat.z * bone1Res.x - rotQuat.x * bone1Res.z;
		let iz = rotQuat.w * bone1Res.z + rotQuat.x * bone1Res.y - rotQuat.y * bone1Res.x;
		let iw = -rotQuat.x * bone1Res.x - rotQuat.y * bone1Res.y - rotQuat.z * bone1Res.z;
		bone1Res.x = ix * rotQuat.w + iw * -rotQuat.x + iy * -rotQuat.z - iz * -rotQuat.y;
		bone1Res.y = iy * rotQuat.w + iw * -rotQuat.y + iz * -rotQuat.x - ix * -rotQuat.z;
		bone1Res.z = iz * rotQuat.w + iw * -rotQuat.z + ix * -rotQuat.y - iy * -rotQuat.x;
		bone1Res.x += bone0Pos.x;
		bone1Res.y += bone0Pos.y;
		bone1Res.z += bone0Pos.z;
		return bone1Res;
	}
	getWorldMatsFast(tip,chainLength) {
		let wmArray = [];
		let armatureMat = this.object.parent.transform.world;
		let root = tip;
		let numP = chainLength;
		let _g = 0;
		let _g1 = chainLength;
		while(_g < _g1) {
			let i = _g++;
			let wm = this.getAbsWorldMat(root);
			wmArray[chainLength - 1 - i] = new iron_math_Mat4(wm.self._00,wm.self._10,wm.self._20,wm.self._30,wm.self._01,wm.self._11,wm.self._21,wm.self._31,wm.self._02,wm.self._12,wm.self._22,wm.self._32,wm.self._03,wm.self._13,wm.self._23,wm.self._33);
			root = root.parent;
			--numP;
		}
		return wmArray;
	}
	setBoneMatFromWorldMat(wm,bone) {
		let invMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		let tempMat = new iron_math_Mat4(wm.self._00,wm.self._10,wm.self._20,wm.self._30,wm.self._01,wm.self._11,wm.self._21,wm.self._31,wm.self._02,wm.self._12,wm.self._22,wm.self._32,wm.self._03,wm.self._13,wm.self._23,wm.self._33);
		let m = this.object.parent.transform.world;
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			invMat.self._00 = 1.0;
			invMat.self._01 = 0.0;
			invMat.self._02 = 0.0;
			invMat.self._03 = 0.0;
			invMat.self._10 = 0.0;
			invMat.self._11 = 1.0;
			invMat.self._12 = 0.0;
			invMat.self._13 = 0.0;
			invMat.self._20 = 0.0;
			invMat.self._21 = 0.0;
			invMat.self._22 = 1.0;
			invMat.self._23 = 0.0;
			invMat.self._30 = 0.0;
			invMat.self._31 = 0.0;
			invMat.self._32 = 0.0;
			invMat.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			invMat.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			invMat.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			invMat.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			invMat.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			invMat.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			invMat.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			invMat.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			invMat.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			invMat.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			invMat.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			invMat.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			invMat.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			invMat.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			invMat.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			invMat.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			invMat.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		let a001 = tempMat.self._00;
		let a011 = tempMat.self._01;
		let a021 = tempMat.self._02;
		let a031 = tempMat.self._03;
		let a101 = tempMat.self._10;
		let a111 = tempMat.self._11;
		let a121 = tempMat.self._12;
		let a131 = tempMat.self._13;
		let a201 = tempMat.self._20;
		let a211 = tempMat.self._21;
		let a221 = tempMat.self._22;
		let a231 = tempMat.self._23;
		let a301 = tempMat.self._30;
		let a311 = tempMat.self._31;
		let a321 = tempMat.self._32;
		let a331 = tempMat.self._33;
		let b0 = invMat.self._00;
		let b1 = invMat.self._10;
		let b2 = invMat.self._20;
		let b3 = invMat.self._30;
		tempMat.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		tempMat.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		tempMat.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		tempMat.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = invMat.self._01;
		b1 = invMat.self._11;
		b2 = invMat.self._21;
		b3 = invMat.self._31;
		tempMat.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		tempMat.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		tempMat.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		tempMat.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = invMat.self._02;
		b1 = invMat.self._12;
		b2 = invMat.self._22;
		b3 = invMat.self._32;
		tempMat.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		tempMat.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		tempMat.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		tempMat.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = invMat.self._03;
		b1 = invMat.self._13;
		b2 = invMat.self._23;
		b3 = invMat.self._33;
		tempMat.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		tempMat.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		tempMat.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		tempMat.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		let bones = [];
		let pBone = bone;
		while(pBone.parent != null) {
			bones.push(pBone.parent);
			pBone = pBone.parent;
		}
		let _g = 0;
		let _g1 = bones.length;
		while(_g < _g1) {
			let i = _g++;
			let x = bones.length - 1;
			let m = this.getBoneMat(bones[x - i]);
			let a00 = m.self._00;
			let a01 = m.self._01;
			let a02 = m.self._02;
			let a03 = m.self._03;
			let a10 = m.self._10;
			let a11 = m.self._11;
			let a12 = m.self._12;
			let a13 = m.self._13;
			let a20 = m.self._20;
			let a21 = m.self._21;
			let a22 = m.self._22;
			let a23 = m.self._23;
			let a30 = m.self._30;
			let a31 = m.self._31;
			let a32 = m.self._32;
			let a33 = m.self._33;
			let b00 = a00 * a11 - a01 * a10;
			let b01 = a00 * a12 - a02 * a10;
			let b02 = a00 * a13 - a03 * a10;
			let b03 = a01 * a12 - a02 * a11;
			let b04 = a01 * a13 - a03 * a11;
			let b05 = a02 * a13 - a03 * a12;
			let b06 = a20 * a31 - a21 * a30;
			let b07 = a20 * a32 - a22 * a30;
			let b08 = a20 * a33 - a23 * a30;
			let b09 = a21 * a32 - a22 * a31;
			let b10 = a21 * a33 - a23 * a31;
			let b11 = a22 * a33 - a23 * a32;
			let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				invMat.self._00 = 1.0;
				invMat.self._01 = 0.0;
				invMat.self._02 = 0.0;
				invMat.self._03 = 0.0;
				invMat.self._10 = 0.0;
				invMat.self._11 = 1.0;
				invMat.self._12 = 0.0;
				invMat.self._13 = 0.0;
				invMat.self._20 = 0.0;
				invMat.self._21 = 0.0;
				invMat.self._22 = 1.0;
				invMat.self._23 = 0.0;
				invMat.self._30 = 0.0;
				invMat.self._31 = 0.0;
				invMat.self._32 = 0.0;
				invMat.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				invMat.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				invMat.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				invMat.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				invMat.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				invMat.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				invMat.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				invMat.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				invMat.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				invMat.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				invMat.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				invMat.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				invMat.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				invMat.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				invMat.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				invMat.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				invMat.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			let a001 = tempMat.self._00;
			let a011 = tempMat.self._01;
			let a021 = tempMat.self._02;
			let a031 = tempMat.self._03;
			let a101 = tempMat.self._10;
			let a111 = tempMat.self._11;
			let a121 = tempMat.self._12;
			let a131 = tempMat.self._13;
			let a201 = tempMat.self._20;
			let a211 = tempMat.self._21;
			let a221 = tempMat.self._22;
			let a231 = tempMat.self._23;
			let a301 = tempMat.self._30;
			let a311 = tempMat.self._31;
			let a321 = tempMat.self._32;
			let a331 = tempMat.self._33;
			let b0 = invMat.self._00;
			let b1 = invMat.self._10;
			let b2 = invMat.self._20;
			let b3 = invMat.self._30;
			tempMat.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			tempMat.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			tempMat.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			tempMat.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = invMat.self._01;
			b1 = invMat.self._11;
			b2 = invMat.self._21;
			b3 = invMat.self._31;
			tempMat.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			tempMat.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			tempMat.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			tempMat.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = invMat.self._02;
			b1 = invMat.self._12;
			b2 = invMat.self._22;
			b3 = invMat.self._32;
			tempMat.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			tempMat.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			tempMat.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			tempMat.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = invMat.self._03;
			b1 = invMat.self._13;
			b2 = invMat.self._23;
			b3 = invMat.self._33;
			tempMat.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			tempMat.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			tempMat.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			tempMat.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		}
		let _this = this.getBoneMat(bone);
		_this.self._00 = tempMat.self._00;
		_this.self._01 = tempMat.self._01;
		_this.self._02 = tempMat.self._02;
		_this.self._03 = tempMat.self._03;
		_this.self._10 = tempMat.self._10;
		_this.self._11 = tempMat.self._11;
		_this.self._12 = tempMat.self._12;
		_this.self._13 = tempMat.self._13;
		_this.self._20 = tempMat.self._20;
		_this.self._21 = tempMat.self._21;
		_this.self._22 = tempMat.self._22;
		_this.self._23 = tempMat.self._23;
		_this.self._30 = tempMat.self._30;
		_this.self._31 = tempMat.self._31;
		_this.self._32 = tempMat.self._32;
		_this.self._33 = tempMat.self._33;
	}
}
$hxClasses["iron.object.BoneAnimation"] = iron_object_BoneAnimation;
iron_object_BoneAnimation.__name__ = "iron.object.BoneAnimation";
iron_object_BoneAnimation.__super__ = iron_object_Animation;
Object.assign(iron_object_BoneAnimation.prototype, {
	__class__: iron_object_BoneAnimation
	,object: null
	,data: null
	,skinBuffer: null
	,skeletonBones: null
	,skeletonMats: null
	,skeletonBonesBlend: null
	,skeletonMatsBlend: null
	,absMats: null
	,applyParent: null
	,matsFast: null
	,matsFastSort: null
	,matsFastBlend: null
	,matsFastBlendSort: null
	,boneChildren: null
	,constraintTargets: null
	,constraintTargetsI: null
	,constraintMats: null
	,relativeBoneConstraints: null
	,onUpdates: null
});
class iron_object_CameraObject extends iron_object_Object {
	constructor(data) {
		iron_object_Object._hx_skip_constructor = true;
		super();
		iron_object_Object._hx_skip_constructor = false;
		this._hx_constructor(data);
	}
	_hx_constructor(data) {
		this.currentFace = 0;
		this.renderTargetCube = null;
		this.renderTarget = null;
		this.frustumPlanes = null;
		this.prevV = null;
		super._hx_constructor();
		this.data = data;
		this.buildProjection();
		this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		if(data.raw.frustum_culling) {
			this.frustumPlanes = [];
			this.frustumPlanes.push(new iron_object_FrustumPlane());
			this.frustumPlanes.push(new iron_object_FrustumPlane());
			this.frustumPlanes.push(new iron_object_FrustumPlane());
			this.frustumPlanes.push(new iron_object_FrustumPlane());
			this.frustumPlanes.push(new iron_object_FrustumPlane());
			this.frustumPlanes.push(new iron_object_FrustumPlane());
		}
		iron_Scene.active.cameras.push(this);
	}
	buildProjection(screenAspect) {
		if(this.data.raw.ortho != null) {
			let left = this.data.raw.ortho.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let right = this.data.raw.ortho.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let bottom = this.data.raw.ortho.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let top = this.data.raw.ortho.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let near = this.data.raw.near_plane;
			let far = this.data.raw.far_plane;
			let rl = right - left;
			let tb = top - bottom;
			let fn = far - near;
			let tx = -(right + left) / rl;
			let ty = -(top + bottom) / tb;
			let tz = -(far + near) / fn;
			this.P = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		} else {
			if(screenAspect == null) {
				screenAspect = iron_App.w() / iron_App.h();
			}
			let aspect = this.data.raw.aspect != null ? this.data.raw.aspect : screenAspect;
			let zn = this.data.raw.near_plane;
			let zf = this.data.raw.far_plane;
			let uh = 1.0 / Math.tan(this.data.raw.fov / 2);
			let uw = uh / aspect;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		}
	}
	remove() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		super.remove();
	}
	renderFrame(g) {
		this.buildMatrix();
		iron_RenderPath.active.renderFrame(g);
		let _this = this.prevV;
		let m = this.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
	}
	buildMatrix() {
		this.transform.buildMatrix();
		let _this = this.transform.world;
		let x = Math.sqrt(_this.self._00 * _this.self._00 + _this.self._10 * _this.self._10 + _this.self._20 * _this.self._20);
		let y = Math.sqrt(_this.self._01 * _this.self._01 + _this.self._11 * _this.self._11 + _this.self._21 * _this.self._21);
		let z = Math.sqrt(_this.self._02 * _this.self._02 + _this.self._12 * _this.self._12 + _this.self._22 * _this.self._22);
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		let sc_x = x;
		let sc_y = y;
		let sc_z = z;
		let sc_w = 1.0;
		if(sc_x != 1.0 || sc_y != 1.0 || sc_z != 1.0) {
			let _this = iron_object_CameraObject.temp;
			_this.x = 1.0 / sc_x;
			_this.y = 1.0 / sc_y;
			_this.z = 1.0 / sc_z;
			_this.w = 1.0;
			let _this1 = this.transform.world;
			let v = iron_object_CameraObject.temp;
			let x = v.x;
			let y = v.y;
			let z = v.z;
			_this1.self._00 *= x;
			_this1.self._01 *= x;
			_this1.self._02 *= x;
			_this1.self._03 *= x;
			_this1.self._10 *= y;
			_this1.self._11 *= y;
			_this1.self._12 *= y;
			_this1.self._13 *= y;
			_this1.self._20 *= z;
			_this1.self._21 *= z;
			_this1.self._22 *= z;
			_this1.self._23 *= z;
		}
		let _this1 = this.V;
		let m = this.transform.world;
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this1.self._00 = 1.0;
			_this1.self._01 = 0.0;
			_this1.self._02 = 0.0;
			_this1.self._03 = 0.0;
			_this1.self._10 = 0.0;
			_this1.self._11 = 1.0;
			_this1.self._12 = 0.0;
			_this1.self._13 = 0.0;
			_this1.self._20 = 0.0;
			_this1.self._21 = 0.0;
			_this1.self._22 = 1.0;
			_this1.self._23 = 0.0;
			_this1.self._30 = 0.0;
			_this1.self._31 = 0.0;
			_this1.self._32 = 0.0;
			_this1.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this1.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this1.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this1.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this1.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this1.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this1.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this1.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this1.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this1.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this1.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this1.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this1.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this1.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this1.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this1.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this1.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		let _this2 = this.VP;
		let b = this.P;
		let a = this.V;
		let a001 = a.self._00;
		let a011 = a.self._01;
		let a021 = a.self._02;
		let a031 = a.self._03;
		let a101 = a.self._10;
		let a111 = a.self._11;
		let a121 = a.self._12;
		let a131 = a.self._13;
		let a201 = a.self._20;
		let a211 = a.self._21;
		let a221 = a.self._22;
		let a231 = a.self._23;
		let a301 = a.self._30;
		let a311 = a.self._31;
		let a321 = a.self._32;
		let a331 = a.self._33;
		let b0 = b.self._00;
		let b1 = b.self._10;
		let b2 = b.self._20;
		let b3 = b.self._30;
		_this2.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this2.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this2.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this2.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this2.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this2.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this2.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this2.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this2.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this2.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this2.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this2.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this2.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this2.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this2.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this2.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		if(this.data.raw.frustum_culling) {
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
		if(this.prevV == null) {
			this.prevV = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			let _this = this.prevV;
			let m = this.V;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
	}
	right() {
		return new iron_math_Vec4(this.transform.local.self._00,this.transform.local.self._01,this.transform.local.self._02);
	}
	up() {
		return new iron_math_Vec4(this.transform.local.self._10,this.transform.local.self._11,this.transform.local.self._12);
	}
	look() {
		return new iron_math_Vec4(-this.transform.local.self._20,-this.transform.local.self._21,-this.transform.local.self._22);
	}
	rightWorld() {
		return new iron_math_Vec4(this.transform.world.self._00,this.transform.world.self._01,this.transform.world.self._02);
	}
	upWorld() {
		return new iron_math_Vec4(this.transform.world.self._10,this.transform.world.self._11,this.transform.world.self._12);
	}
	lookWorld() {
		return new iron_math_Vec4(-this.transform.world.self._20,-this.transform.world.self._21,-this.transform.world.self._22);
	}
	static buildViewFrustum(VP,frustumPlanes) {
		let _this = frustumPlanes[0];
		let _this1 = _this.normal;
		_this1.x = VP.self._03 + VP.self._00;
		_this1.y = VP.self._13 + VP.self._10;
		_this1.z = VP.self._23 + VP.self._20;
		_this1.w = 1.0;
		_this.constant = VP.self._33 + VP.self._30;
		let _this2 = frustumPlanes[1];
		let _this3 = _this2.normal;
		_this3.x = VP.self._03 - VP.self._00;
		_this3.y = VP.self._13 - VP.self._10;
		_this3.z = VP.self._23 - VP.self._20;
		_this3.w = 1.0;
		_this2.constant = VP.self._33 - VP.self._30;
		let _this4 = frustumPlanes[2];
		let _this5 = _this4.normal;
		_this5.x = VP.self._03 - VP.self._01;
		_this5.y = VP.self._13 - VP.self._11;
		_this5.z = VP.self._23 - VP.self._21;
		_this5.w = 1.0;
		_this4.constant = VP.self._33 - VP.self._31;
		let _this6 = frustumPlanes[3];
		let _this7 = _this6.normal;
		_this7.x = VP.self._03 + VP.self._01;
		_this7.y = VP.self._13 + VP.self._11;
		_this7.z = VP.self._23 + VP.self._21;
		_this7.w = 1.0;
		_this6.constant = VP.self._33 + VP.self._31;
		let _this8 = frustumPlanes[4];
		let _this9 = _this8.normal;
		_this9.x = VP.self._02;
		_this9.y = VP.self._12;
		_this9.z = VP.self._22;
		_this9.w = 1.0;
		_this8.constant = VP.self._32;
		let _this10 = frustumPlanes[5];
		let _this11 = _this10.normal;
		_this11.x = VP.self._03 - VP.self._02;
		_this11.y = VP.self._13 - VP.self._12;
		_this11.z = VP.self._23 - VP.self._22;
		_this11.w = 1.0;
		_this10.constant = VP.self._33 - VP.self._32;
		let _g = 0;
		while(_g < frustumPlanes.length) {
			let plane = frustumPlanes[_g];
			++_g;
			plane.normalize();
		}
	}
	static sphereInFrustum(frustumPlanes,t,radiusScale,offsetX,offsetY,offsetZ) {
		if(offsetZ == null) {
			offsetZ = 0.0;
		}
		if(offsetY == null) {
			offsetY = 0.0;
		}
		if(offsetX == null) {
			offsetX = 0.0;
		}
		if(radiusScale == null) {
			radiusScale = 1.0;
		}
		let radius = t.radius * radiusScale;
		let _g = 0;
		while(_g < frustumPlanes.length) {
			let plane = frustumPlanes[_g];
			++_g;
			let _this = iron_object_CameraObject.sphereCenter;
			_this.x = t.world.self._30 + offsetX;
			_this.y = t.world.self._31 + offsetY;
			_this.z = t.world.self._32 + offsetZ;
			_this.w = 1.0;
			if(plane.distanceToSphere(iron_object_CameraObject.sphereCenter,radius) + radius * 2 < 0) {
				return false;
			}
		}
		return true;
	}
	static setCubeFace(m,eye,face,flip) {
		if(flip == null) {
			flip = false;
		}
		let _this = iron_object_CameraObject.vcenter;
		_this.x = eye.x;
		_this.y = eye.y;
		_this.z = eye.z;
		_this.w = eye.w;
		let f = flip ? -1.0 : 1.0;
		switch(face) {
		case 0:
			let _this1 = iron_object_CameraObject.vcenter;
			_this1.x += f;
			_this1.y += 0.0;
			_this1.z += 0.0;
			let _this2 = iron_object_CameraObject.vup;
			_this2.x = 0.0;
			_this2.y = -1.0 * f;
			_this2.z = 0.0;
			_this2.w = 1.0;
			break;
		case 1:
			let _this3 = iron_object_CameraObject.vcenter;
			_this3.x += -1.0 * f;
			_this3.y += 0.0;
			_this3.z += 0.0;
			let _this4 = iron_object_CameraObject.vup;
			_this4.x = 0.0;
			_this4.y = -1.0 * f;
			_this4.z = 0.0;
			_this4.w = 1.0;
			break;
		case 2:
			let _this5 = iron_object_CameraObject.vcenter;
			_this5.x += 0.0;
			_this5.y += f;
			_this5.z += 0.0;
			let _this6 = iron_object_CameraObject.vup;
			_this6.x = 0.0;
			_this6.y = 0.0;
			_this6.z = f;
			_this6.w = 1.0;
			break;
		case 3:
			let _this7 = iron_object_CameraObject.vcenter;
			_this7.x += 0.0;
			_this7.y += -1.0 * f;
			_this7.z += 0.0;
			let _this8 = iron_object_CameraObject.vup;
			_this8.x = 0.0;
			_this8.y = 0.0;
			_this8.z = -1.0 * f;
			_this8.w = 1.0;
			break;
		case 4:
			let _this9 = iron_object_CameraObject.vcenter;
			_this9.x += 0.0;
			_this9.y += 0.0;
			_this9.z += f;
			let _this10 = iron_object_CameraObject.vup;
			_this10.x = 0.0;
			_this10.y = -1.0 * f;
			_this10.z = 0.0;
			_this10.w = 1.0;
			break;
		case 5:
			let _this11 = iron_object_CameraObject.vcenter;
			_this11.x += 0.0;
			_this11.y += 0.0;
			_this11.z += -1.0 * f;
			let _this12 = iron_object_CameraObject.vup;
			_this12.x = 0.0;
			_this12.y = -1.0 * f;
			_this12.z = 0.0;
			_this12.w = 1.0;
			break;
		}
		let center = iron_object_CameraObject.vcenter;
		let up = iron_object_CameraObject.vup;
		let f0 = center.x - eye.x;
		let f1 = center.y - eye.y;
		let f2 = center.z - eye.z;
		let n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
		f0 *= n;
		f1 *= n;
		f2 *= n;
		let s0 = f1 * up.z - f2 * up.y;
		let s1 = f2 * up.x - f0 * up.z;
		let s2 = f0 * up.y - f1 * up.x;
		n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
		s0 *= n;
		s1 *= n;
		s2 *= n;
		let u0 = s1 * f2 - s2 * f1;
		let u1 = s2 * f0 - s0 * f2;
		let u2 = s0 * f1 - s1 * f0;
		let d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
		let d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
		let d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
		m.self._00 = s0;
		m.self._10 = s1;
		m.self._20 = s2;
		m.self._30 = d0;
		m.self._01 = u0;
		m.self._11 = u1;
		m.self._21 = u2;
		m.self._31 = d1;
		m.self._02 = -f0;
		m.self._12 = -f1;
		m.self._22 = -f2;
		m.self._32 = d2;
		m.self._03 = 0.0;
		m.self._13 = 0.0;
		m.self._23 = 0.0;
		m.self._33 = 1.0;
	}
}
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = "iron.object.CameraObject";
iron_object_CameraObject.__super__ = iron_object_Object;
Object.assign(iron_object_CameraObject.prototype, {
	__class__: iron_object_CameraObject
	,data: null
	,P: null
	,V: null
	,prevV: null
	,VP: null
	,frustumPlanes: null
	,renderTarget: null
	,renderTargetCube: null
	,currentFace: null
});
class iron_object_FrustumPlane {
	constructor() {
		this.constant = 0.0;
		this.normal = new iron_math_Vec4(1.0,0.0,0.0);
	}
	normalize() {
		let _this = this.normal;
		let inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		let _this1 = this.normal;
		_this1.x *= inverseNormalLength;
		_this1.y *= inverseNormalLength;
		_this1.z *= inverseNormalLength;
		this.constant *= inverseNormalLength;
	}
	distanceToSphere(sphereCenter,sphereRadius) {
		let _this = this.normal;
		return _this.x * sphereCenter.x + _this.y * sphereCenter.y + _this.z * sphereCenter.z + this.constant - sphereRadius;
	}
	setComponents(x,y,z,w) {
		let _this = this.normal;
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.0;
		this.constant = w;
	}
}
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = "iron.object.FrustumPlane";
Object.assign(iron_object_FrustumPlane.prototype, {
	__class__: iron_object_FrustumPlane
	,normal: null
	,constant: null
});
class iron_object_Constraint {
	constructor(constr) {
		this.target = null;
		this.raw = constr;
	}
	apply(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.world.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					transform.world.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.world.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					transform.world.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.world.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					transform.world.self._32 += transform.loc.z;
				}
			}
		}
	}
}
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = "iron.object.Constraint";
Object.assign(iron_object_Constraint.prototype, {
	__class__: iron_object_Constraint
	,raw: null
	,target: null
});
class iron_object_DecalObject extends iron_object_Object {
	constructor() {
		super();
	}
}
$hxClasses["iron.object.DecalObject"] = iron_object_DecalObject;
iron_object_DecalObject.__name__ = "iron.object.DecalObject";
iron_object_DecalObject.__super__ = iron_object_Object;
Object.assign(iron_object_DecalObject.prototype, {
	__class__: iron_object_DecalObject
});
class iron_object_LightObject extends iron_object_Object {
	constructor(data) {
		iron_object_Object._hx_skip_constructor = true;
		super();
		iron_object_Object._hx_skip_constructor = false;
		this._hx_constructor(data);
	}
	_hx_constructor(data) {
		this.frustumPlanes = null;
		this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.P = null;
		this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.bias = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.camSlicedP = null;
		this.cascadeData = null;
		super._hx_constructor();
		this.data = data;
		let type = data.raw.type;
		let fov = data.raw.fov;
		if(type == "sun") {
			if(iron_object_LightObject.corners == null) {
				iron_object_LightObject.corners = [];
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
				iron_object_LightObject.corners.push(new iron_math_Vec4());
			}
			this.P = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		} else if(type == "point" || type == "area") {
			let zn = data.raw.near_plane;
			let zf = data.raw.far_plane;
			let uh = 1.0 / Math.tan(fov / 2);
			let uw = uh / 1;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		} else if(type == "spot") {
			let zn = data.raw.near_plane;
			let zf = data.raw.far_plane;
			let uh = 1.0 / Math.tan(fov / 2);
			let uw = uh / 1;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		}
		iron_Scene.active.lights.push(this);
	}
	remove() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.lights,this);
		}
		let rp = iron_RenderPath.active;
		if(rp.light == this) {
			rp.light = null;
		}
		if(rp.point == this) {
			rp.point = null;
		} else if(rp.sun == this) {
			rp.sun = null;
		}
		super.remove();
	}
	buildMatrix(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type == "sun") {
			let _this = this.V;
			let m = this.transform.world;
			let a00 = m.self._00;
			let a01 = m.self._01;
			let a02 = m.self._02;
			let a03 = m.self._03;
			let a10 = m.self._10;
			let a11 = m.self._11;
			let a12 = m.self._12;
			let a13 = m.self._13;
			let a20 = m.self._20;
			let a21 = m.self._21;
			let a22 = m.self._22;
			let a23 = m.self._23;
			let a30 = m.self._30;
			let a31 = m.self._31;
			let a32 = m.self._32;
			let a33 = m.self._33;
			let b00 = a00 * a11 - a01 * a10;
			let b01 = a00 * a12 - a02 * a10;
			let b02 = a00 * a13 - a03 * a10;
			let b03 = a01 * a12 - a02 * a11;
			let b04 = a01 * a13 - a03 * a11;
			let b05 = a02 * a13 - a03 * a12;
			let b06 = a20 * a31 - a21 * a30;
			let b07 = a20 * a32 - a22 * a30;
			let b08 = a20 * a33 - a23 * a30;
			let b09 = a21 * a32 - a22 * a31;
			let b10 = a21 * a33 - a23 * a31;
			let b11 = a22 * a33 - a23 * a32;
			let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		} else {
			let _this = this.V;
			let m = this.transform.world;
			let a00 = m.self._00;
			let a01 = m.self._01;
			let a02 = m.self._02;
			let a03 = m.self._03;
			let a10 = m.self._10;
			let a11 = m.self._11;
			let a12 = m.self._12;
			let a13 = m.self._13;
			let a20 = m.self._20;
			let a21 = m.self._21;
			let a22 = m.self._22;
			let a23 = m.self._23;
			let a30 = m.self._30;
			let a31 = m.self._31;
			let a32 = m.self._32;
			let a33 = m.self._33;
			let b00 = a00 * a11 - a01 * a10;
			let b01 = a00 * a12 - a02 * a10;
			let b02 = a00 * a13 - a03 * a10;
			let b03 = a01 * a12 - a02 * a11;
			let b04 = a01 * a13 - a03 * a11;
			let b05 = a02 * a13 - a03 * a12;
			let b06 = a20 * a31 - a21 * a30;
			let b07 = a20 * a32 - a22 * a30;
			let b08 = a20 * a33 - a23 * a30;
			let b09 = a21 * a32 - a22 * a31;
			let b10 = a21 * a33 - a23 * a31;
			let b11 = a22 * a33 - a23 * a32;
			let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		}
	}
	setCascade(camera,cascade) {
		let _this = iron_object_LightObject.m;
		let m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.camSlicedP == null) {
			this.camSlicedP = [];
			this.cascadeSplit = [];
			let ortho = camera.data.raw.ortho;
			if(ortho == null) {
				let aspect = camera.data.raw.aspect != null ? camera.data.raw.aspect : iron_App.w() / iron_App.h();
				let fov = camera.data.raw.fov;
				let near = camera.data.raw.near_plane;
				let far = camera.data.raw.far_plane;
				let factor = iron_object_LightObject.cascadeCount > 2 ? iron_object_LightObject.cascadeSplitFactor : iron_object_LightObject.cascadeSplitFactor * 0.25;
				let _g = 0;
				let _g1 = iron_object_LightObject.cascadeCount;
				while(_g < _g1) {
					let i = _g++;
					let f = i + 1.0;
					let cfar = (near + f / iron_object_LightObject.cascadeCount * (far - near)) * (1 - factor) + near * Math.pow(far / near,f / iron_object_LightObject.cascadeCount) * factor;
					this.cascadeSplit.push(cfar);
					let uh = 1.0 / Math.tan(fov / 2);
					let uw = uh / aspect;
					this.camSlicedP.push(new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(cfar + near) / (near - cfar),2 * cfar * near / (near - cfar),0,0,-1,0));
				}
			} else {
				let _g = 0;
				let _g1 = iron_object_LightObject.cascadeCount;
				while(_g < _g1) {
					let i = _g++;
					this.cascadeSplit.push(this.data.raw.far_plane);
					let left = ortho.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let right = ortho.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let bottom = ortho.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let top = ortho.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let near = this.data.raw.near_plane;
					let far = this.data.raw.far_plane;
					let rl = right - left;
					let tb = top - bottom;
					let fn = far - near;
					let tx = -(right + left) / rl;
					let ty = -(top + bottom) / tb;
					let tz = -(far + near) / fn;
					this.camSlicedP.push(new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1));
				}
			}
		}
		let _this1 = iron_object_LightObject.m;
		let m1 = this.camSlicedP[cascade];
		let a00 = _this1.self._00;
		let a01 = _this1.self._01;
		let a02 = _this1.self._02;
		let a03 = _this1.self._03;
		let a10 = _this1.self._10;
		let a11 = _this1.self._11;
		let a12 = _this1.self._12;
		let a13 = _this1.self._13;
		let a20 = _this1.self._20;
		let a21 = _this1.self._21;
		let a22 = _this1.self._22;
		let a23 = _this1.self._23;
		let a30 = _this1.self._30;
		let a31 = _this1.self._31;
		let a32 = _this1.self._32;
		let a33 = _this1.self._33;
		let b0 = m1.self._00;
		let b1 = m1.self._10;
		let b2 = m1.self._20;
		let b3 = m1.self._30;
		_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		let _this2 = iron_object_LightObject.m;
		let m2 = iron_object_LightObject.m;
		let a001 = m2.self._00;
		let a011 = m2.self._01;
		let a021 = m2.self._02;
		let a031 = m2.self._03;
		let a101 = m2.self._10;
		let a111 = m2.self._11;
		let a121 = m2.self._12;
		let a131 = m2.self._13;
		let a201 = m2.self._20;
		let a211 = m2.self._21;
		let a221 = m2.self._22;
		let a231 = m2.self._23;
		let a301 = m2.self._30;
		let a311 = m2.self._31;
		let a321 = m2.self._32;
		let a331 = m2.self._33;
		let b00 = a001 * a111 - a011 * a101;
		let b01 = a001 * a121 - a021 * a101;
		let b02 = a001 * a131 - a031 * a101;
		let b03 = a011 * a121 - a021 * a111;
		let b04 = a011 * a131 - a031 * a111;
		let b05 = a021 * a131 - a031 * a121;
		let b06 = a201 * a311 - a211 * a301;
		let b07 = a201 * a321 - a221 * a301;
		let b08 = a201 * a331 - a231 * a301;
		let b09 = a211 * a321 - a221 * a311;
		let b10 = a211 * a331 - a231 * a311;
		let b11 = a221 * a331 - a231 * a321;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this2.self._00 = 1.0;
			_this2.self._01 = 0.0;
			_this2.self._02 = 0.0;
			_this2.self._03 = 0.0;
			_this2.self._10 = 0.0;
			_this2.self._11 = 1.0;
			_this2.self._12 = 0.0;
			_this2.self._13 = 0.0;
			_this2.self._20 = 0.0;
			_this2.self._21 = 0.0;
			_this2.self._22 = 1.0;
			_this2.self._23 = 0.0;
			_this2.self._30 = 0.0;
			_this2.self._31 = 0.0;
			_this2.self._32 = 0.0;
			_this2.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this2.self._00 = (a111 * b11 - a121 * b10 + a131 * b09) * det;
			_this2.self._01 = (a021 * b10 - a011 * b11 - a031 * b09) * det;
			_this2.self._02 = (a311 * b05 - a321 * b04 + a331 * b03) * det;
			_this2.self._03 = (a221 * b04 - a211 * b05 - a231 * b03) * det;
			_this2.self._10 = (a121 * b08 - a101 * b11 - a131 * b07) * det;
			_this2.self._11 = (a001 * b11 - a021 * b08 + a031 * b07) * det;
			_this2.self._12 = (a321 * b02 - a301 * b05 - a331 * b01) * det;
			_this2.self._13 = (a201 * b05 - a221 * b02 + a231 * b01) * det;
			_this2.self._20 = (a101 * b10 - a111 * b08 + a131 * b06) * det;
			_this2.self._21 = (a011 * b08 - a001 * b10 - a031 * b06) * det;
			_this2.self._22 = (a301 * b04 - a311 * b02 + a331 * b00) * det;
			_this2.self._23 = (a211 * b02 - a201 * b04 - a231 * b00) * det;
			_this2.self._30 = (a111 * b07 - a101 * b09 - a121 * b06) * det;
			_this2.self._31 = (a001 * b09 - a011 * b07 + a021 * b06) * det;
			_this2.self._32 = (a311 * b01 - a301 * b03 - a321 * b00) * det;
			_this2.self._33 = (a201 * b03 - a211 * b01 + a221 * b00) * det;
		}
		let _this3 = this.V;
		let m3 = this.transform.world;
		let a002 = m3.self._00;
		let a012 = m3.self._01;
		let a022 = m3.self._02;
		let a032 = m3.self._03;
		let a102 = m3.self._10;
		let a112 = m3.self._11;
		let a122 = m3.self._12;
		let a132 = m3.self._13;
		let a202 = m3.self._20;
		let a212 = m3.self._21;
		let a222 = m3.self._22;
		let a232 = m3.self._23;
		let a302 = m3.self._30;
		let a312 = m3.self._31;
		let a322 = m3.self._32;
		let a332 = m3.self._33;
		let b001 = a002 * a112 - a012 * a102;
		let b011 = a002 * a122 - a022 * a102;
		let b021 = a002 * a132 - a032 * a102;
		let b031 = a012 * a122 - a022 * a112;
		let b041 = a012 * a132 - a032 * a112;
		let b051 = a022 * a132 - a032 * a122;
		let b061 = a202 * a312 - a212 * a302;
		let b071 = a202 * a322 - a222 * a302;
		let b081 = a202 * a332 - a232 * a302;
		let b091 = a212 * a322 - a222 * a312;
		let b101 = a212 * a332 - a232 * a312;
		let b111 = a222 * a332 - a232 * a322;
		let det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
		if(det1 == 0.0) {
			_this3.self._00 = 1.0;
			_this3.self._01 = 0.0;
			_this3.self._02 = 0.0;
			_this3.self._03 = 0.0;
			_this3.self._10 = 0.0;
			_this3.self._11 = 1.0;
			_this3.self._12 = 0.0;
			_this3.self._13 = 0.0;
			_this3.self._20 = 0.0;
			_this3.self._21 = 0.0;
			_this3.self._22 = 1.0;
			_this3.self._23 = 0.0;
			_this3.self._30 = 0.0;
			_this3.self._31 = 0.0;
			_this3.self._32 = 0.0;
			_this3.self._33 = 1.0;
		} else {
			det1 = 1.0 / det1;
			_this3.self._00 = (a112 * b111 - a122 * b101 + a132 * b091) * det1;
			_this3.self._01 = (a022 * b101 - a012 * b111 - a032 * b091) * det1;
			_this3.self._02 = (a312 * b051 - a322 * b041 + a332 * b031) * det1;
			_this3.self._03 = (a222 * b041 - a212 * b051 - a232 * b031) * det1;
			_this3.self._10 = (a122 * b081 - a102 * b111 - a132 * b071) * det1;
			_this3.self._11 = (a002 * b111 - a022 * b081 + a032 * b071) * det1;
			_this3.self._12 = (a322 * b021 - a302 * b051 - a332 * b011) * det1;
			_this3.self._13 = (a202 * b051 - a222 * b021 + a232 * b011) * det1;
			_this3.self._20 = (a102 * b101 - a112 * b081 + a132 * b061) * det1;
			_this3.self._21 = (a012 * b081 - a002 * b101 - a032 * b061) * det1;
			_this3.self._22 = (a302 * b041 - a312 * b021 + a332 * b001) * det1;
			_this3.self._23 = (a212 * b021 - a202 * b041 - a232 * b001) * det1;
			_this3.self._30 = (a112 * b071 - a102 * b091 - a122 * b061) * det1;
			_this3.self._31 = (a002 * b091 - a012 * b071 + a022 * b061) * det1;
			_this3.self._32 = (a312 * b011 - a302 * b031 - a322 * b001) * det1;
			_this3.self._33 = (a202 * b031 - a212 * b011 + a222 * b001) * det1;
		}
		let _this4 = this.V;
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this4.self._00;
		_this5.y = _this4.self._01;
		_this5.z = _this4.self._02;
		_this5.w = 1.0;
		let _this6 = _this5;
		let scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this4.self._00 *= scale;
		_this4.self._01 *= scale;
		_this4.self._02 *= scale;
		let _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this4.self._10;
		_this7.y = _this4.self._11;
		_this7.z = _this4.self._12;
		_this7.w = 1.0;
		let _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this4.self._10 *= scale;
		_this4.self._11 *= scale;
		_this4.self._12 *= scale;
		let _this9 = iron_math_Mat4.helpVec;
		_this9.x = _this4.self._20;
		_this9.y = _this4.self._21;
		_this9.z = _this4.self._22;
		_this9.w = 1.0;
		let _this10 = _this9;
		scale = 1.0 / Math.sqrt(_this10.x * _this10.x + _this10.y * _this10.y + _this10.z * _this10.z);
		_this4.self._20 *= scale;
		_this4.self._21 *= scale;
		_this4.self._22 *= scale;
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		let _this11 = iron_object_LightObject.m;
		let m4 = this.V;
		let a003 = _this11.self._00;
		let a013 = _this11.self._01;
		let a023 = _this11.self._02;
		let a033 = _this11.self._03;
		let a103 = _this11.self._10;
		let a113 = _this11.self._11;
		let a123 = _this11.self._12;
		let a133 = _this11.self._13;
		let a203 = _this11.self._20;
		let a213 = _this11.self._21;
		let a223 = _this11.self._22;
		let a233 = _this11.self._23;
		let a303 = _this11.self._30;
		let a313 = _this11.self._31;
		let a323 = _this11.self._32;
		let a333 = _this11.self._33;
		let b010 = m4.self._00;
		let b12 = m4.self._10;
		let b21 = m4.self._20;
		let b31 = m4.self._30;
		_this11.self._00 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._10 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._20 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._30 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._01;
		b12 = m4.self._11;
		b21 = m4.self._21;
		b31 = m4.self._31;
		_this11.self._01 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._11 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._21 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._31 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._02;
		b12 = m4.self._12;
		b21 = m4.self._22;
		b31 = m4.self._32;
		_this11.self._02 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._12 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._22 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._32 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._03;
		b12 = m4.self._13;
		b21 = m4.self._23;
		b31 = m4.self._33;
		_this11.self._03 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._13 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._23 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._33 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		let _this12 = iron_object_LightObject.corners[0];
		_this12.x = -1.0;
		_this12.y = -1.0;
		_this12.z = 1.0;
		_this12.w = 1.0;
		let _this13 = iron_object_LightObject.corners[1];
		_this13.x = -1.0;
		_this13.y = -1.0;
		_this13.z = -1.0;
		_this13.w = 1.0;
		let _this14 = iron_object_LightObject.corners[2];
		_this14.x = -1.0;
		_this14.y = 1.0;
		_this14.z = 1.0;
		_this14.w = 1.0;
		let _this15 = iron_object_LightObject.corners[3];
		_this15.x = -1.0;
		_this15.y = 1.0;
		_this15.z = -1.0;
		_this15.w = 1.0;
		let _this16 = iron_object_LightObject.corners[4];
		_this16.x = 1.0;
		_this16.y = -1.0;
		_this16.z = 1.0;
		_this16.w = 1.0;
		let _this17 = iron_object_LightObject.corners[5];
		_this17.x = 1.0;
		_this17.y = -1.0;
		_this17.z = -1.0;
		_this17.w = 1.0;
		let _this18 = iron_object_LightObject.corners[6];
		_this18.x = 1.0;
		_this18.y = 1.0;
		_this18.z = 1.0;
		_this18.w = 1.0;
		let _this19 = iron_object_LightObject.corners[7];
		_this19.x = 1.0;
		_this19.y = 1.0;
		_this19.z = -1.0;
		_this19.w = 1.0;
		let _g = 0;
		let _g1 = iron_object_LightObject.corners;
		while(_g < _g1.length) {
			let v = _g1[_g];
			++_g;
			let m = iron_object_LightObject.m;
			let x = v.x;
			let y = v.y;
			let z = v.z;
			let w = v.w;
			v.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
			v.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
			v.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
			v.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
			v.x /= v.w;
			v.y /= v.w;
			v.z /= v.w;
			v.w = 1.0;
		}
		let minx = iron_object_LightObject.corners[0].x;
		let miny = iron_object_LightObject.corners[0].y;
		let minz = iron_object_LightObject.corners[0].z;
		let maxx = iron_object_LightObject.corners[0].x;
		let maxy = iron_object_LightObject.corners[0].y;
		let maxz = iron_object_LightObject.corners[0].z;
		let _g2 = 0;
		let _g3 = iron_object_LightObject.corners;
		while(_g2 < _g3.length) {
			let v = _g3[_g2];
			++_g2;
			if(v.x < minx) {
				minx = v.x;
			}
			if(v.x > maxx) {
				maxx = v.x;
			}
			if(v.y < miny) {
				miny = v.y;
			}
			if(v.y > maxy) {
				maxy = v.y;
			}
			if(v.z < minz) {
				minz = v.z;
			}
			if(v.z > maxz) {
				maxz = v.z;
			}
		}
		let v1 = iron_object_LightObject.corners[0];
		let v2 = iron_object_LightObject.corners[7];
		let vx = v1.x - v2.x;
		let vy = v1.y - v2.y;
		let vz = v1.z - v2.z;
		let diag0 = Math.sqrt(vx * vx + vy * vy + vz * vz);
		let offx = (diag0 - (maxx - minx)) * 0.5;
		let offy = (diag0 - (maxy - miny)) * 0.5;
		minx -= offx;
		maxx += offx;
		miny -= offy;
		maxy += offy;
		let smsize = this.data.raw.shadowmap_size;
		smsize = smsize / 4 | 0;
		let worldPerTexelX = (maxx - minx) / smsize;
		let worldPerTexelY = (maxy - miny) / smsize;
		let worldPerTexelZ = (maxz - minz) / smsize;
		minx = Math.floor(minx / worldPerTexelX) * worldPerTexelX;
		miny = Math.floor(miny / worldPerTexelY) * worldPerTexelY;
		minz = Math.floor(minz / worldPerTexelZ) * worldPerTexelZ;
		maxx = Math.floor(maxx / worldPerTexelX) * worldPerTexelX;
		maxy = Math.floor(maxy / worldPerTexelY) * worldPerTexelY;
		maxz = Math.floor(maxz / worldPerTexelZ) * worldPerTexelZ;
		let hx = (maxx - minx) / 2;
		let hy = (maxy - miny) / 2;
		let hz = (maxz - minz) / 2;
		this.V.self._30 = -(minx + hx);
		this.V.self._31 = -(miny + hy);
		this.V.self._32 = -(minz + hz);
		let left = -hx;
		let bottom = -hy;
		let near = -hz * 4 * iron_object_LightObject.cascadeBounds;
		let rl = hx - left;
		let tb = hy - bottom;
		let fn = hz - near;
		let tx = -(hx + left) / rl;
		let ty = -(hy + bottom) / tb;
		let tz = -(hz + near) / fn;
		iron_object_LightObject.m = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		let _this20 = this.P;
		let m5 = iron_object_LightObject.m;
		_this20.self._00 = m5.self._00;
		_this20.self._01 = m5.self._01;
		_this20.self._02 = m5.self._02;
		_this20.self._03 = m5.self._03;
		_this20.self._10 = m5.self._10;
		_this20.self._11 = m5.self._11;
		_this20.self._12 = m5.self._12;
		_this20.self._13 = m5.self._13;
		_this20.self._20 = m5.self._20;
		_this20.self._21 = m5.self._21;
		_this20.self._22 = m5.self._22;
		_this20.self._23 = m5.self._23;
		_this20.self._30 = m5.self._30;
		_this20.self._31 = m5.self._31;
		_this20.self._32 = m5.self._32;
		_this20.self._33 = m5.self._33;
		this.updateViewFrustum(camera);
		if(this.cascadeVP == null) {
			this.cascadeVP = [];
			let _g = 0;
			let _g1 = iron_object_LightObject.cascadeCount;
			while(_g < _g1) {
				let i = _g++;
				this.cascadeVP.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			}
		}
		let _this21 = this.cascadeVP[cascade];
		let m6 = this.VP;
		_this21.self._00 = m6.self._00;
		_this21.self._01 = m6.self._01;
		_this21.self._02 = m6.self._02;
		_this21.self._03 = m6.self._03;
		_this21.self._10 = m6.self._10;
		_this21.self._11 = m6.self._11;
		_this21.self._12 = m6.self._12;
		_this21.self._13 = m6.self._13;
		_this21.self._20 = m6.self._20;
		_this21.self._21 = m6.self._21;
		_this21.self._22 = m6.self._22;
		_this21.self._23 = m6.self._23;
		_this21.self._30 = m6.self._30;
		_this21.self._31 = m6.self._31;
		_this21.self._32 = m6.self._32;
		_this21.self._33 = m6.self._33;
	}
	updateViewFrustum(camera) {
		let _this = this.VP;
		let b = this.P;
		let a = this.V;
		let a00 = a.self._00;
		let a01 = a.self._01;
		let a02 = a.self._02;
		let a03 = a.self._03;
		let a10 = a.self._10;
		let a11 = a.self._11;
		let a12 = a.self._12;
		let a13 = a.self._13;
		let a20 = a.self._20;
		let a21 = a.self._21;
		let a22 = a.self._22;
		let a23 = a.self._23;
		let a30 = a.self._30;
		let a31 = a.self._31;
		let a32 = a.self._32;
		let a33 = a.self._33;
		let b0 = b.self._00;
		let b1 = b.self._10;
		let b2 = b.self._20;
		let b3 = b.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
			}
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	setCubeFace(face,camera) {
		let _this = iron_object_LightObject.eye;
		_this.x = this.transform.world.self._30;
		_this.y = this.transform.world.self._31;
		_this.z = this.transform.world.self._32;
		_this.w = 1.0;
		let flip = face == 2 || face == 3;
		iron_object_CameraObject.setCubeFace(this.V,iron_object_LightObject.eye,face,flip);
		this.updateViewFrustum(camera);
	}
	getCascadeData() {
		if(this.cascadeData == null) {
			this.cascadeData = kha_arrays_Float32Array._new(iron_object_LightObject.cascadeCount * 16 + 4);
		}
		if(this.cascadeVP == null) {
			return this.cascadeData;
		}
		let _g = 0;
		let _g1 = iron_object_LightObject.cascadeCount;
		while(_g < _g1) {
			let i = _g++;
			let _this = iron_object_LightObject.m;
			let m = this.cascadeVP[i];
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			let _this1 = this.bias;
			let m1 = iron_object_Uniforms.biasMat;
			_this1.self._00 = m1.self._00;
			_this1.self._01 = m1.self._01;
			_this1.self._02 = m1.self._02;
			_this1.self._03 = m1.self._03;
			_this1.self._10 = m1.self._10;
			_this1.self._11 = m1.self._11;
			_this1.self._12 = m1.self._12;
			_this1.self._13 = m1.self._13;
			_this1.self._20 = m1.self._20;
			_this1.self._21 = m1.self._21;
			_this1.self._22 = m1.self._22;
			_this1.self._23 = m1.self._23;
			_this1.self._30 = m1.self._30;
			_this1.self._31 = m1.self._31;
			_this1.self._32 = m1.self._32;
			_this1.self._33 = m1.self._33;
			this.bias.self._00 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 += i * (1 / iron_object_LightObject.cascadeCount);
			let _this2 = iron_object_LightObject.m;
			let m2 = this.bias;
			let a00 = _this2.self._00;
			let a01 = _this2.self._01;
			let a02 = _this2.self._02;
			let a03 = _this2.self._03;
			let a10 = _this2.self._10;
			let a11 = _this2.self._11;
			let a12 = _this2.self._12;
			let a13 = _this2.self._13;
			let a20 = _this2.self._20;
			let a21 = _this2.self._21;
			let a22 = _this2.self._22;
			let a23 = _this2.self._23;
			let a30 = _this2.self._30;
			let a31 = _this2.self._31;
			let a32 = _this2.self._32;
			let a33 = _this2.self._33;
			let b0 = m2.self._00;
			let b1 = m2.self._10;
			let b2 = m2.self._20;
			let b3 = m2.self._30;
			_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._01;
			b1 = m2.self._11;
			b2 = m2.self._21;
			b3 = m2.self._31;
			_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._02;
			b1 = m2.self._12;
			b2 = m2.self._22;
			b3 = m2.self._32;
			_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._03;
			b1 = m2.self._13;
			b2 = m2.self._23;
			b3 = m2.self._33;
			_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			let v = iron_object_LightObject.m.self._00;
			this.cascadeData.setFloat32(i * 16 * 4,v,true);
			let v1 = iron_object_LightObject.m.self._01;
			this.cascadeData.setFloat32((i * 16 + 1) * 4,v1,true);
			let v2 = iron_object_LightObject.m.self._02;
			this.cascadeData.setFloat32((i * 16 + 2) * 4,v2,true);
			let v3 = iron_object_LightObject.m.self._03;
			this.cascadeData.setFloat32((i * 16 + 3) * 4,v3,true);
			let v4 = iron_object_LightObject.m.self._10;
			this.cascadeData.setFloat32((i * 16 + 4) * 4,v4,true);
			let v5 = iron_object_LightObject.m.self._11;
			this.cascadeData.setFloat32((i * 16 + 5) * 4,v5,true);
			let v6 = iron_object_LightObject.m.self._12;
			this.cascadeData.setFloat32((i * 16 + 6) * 4,v6,true);
			let v7 = iron_object_LightObject.m.self._13;
			this.cascadeData.setFloat32((i * 16 + 7) * 4,v7,true);
			let v8 = iron_object_LightObject.m.self._20;
			this.cascadeData.setFloat32((i * 16 + 8) * 4,v8,true);
			let v9 = iron_object_LightObject.m.self._21;
			this.cascadeData.setFloat32((i * 16 + 9) * 4,v9,true);
			let v10 = iron_object_LightObject.m.self._22;
			this.cascadeData.setFloat32((i * 16 + 10) * 4,v10,true);
			let v11 = iron_object_LightObject.m.self._23;
			this.cascadeData.setFloat32((i * 16 + 11) * 4,v11,true);
			let v12 = iron_object_LightObject.m.self._30;
			this.cascadeData.setFloat32((i * 16 + 12) * 4,v12,true);
			let v13 = iron_object_LightObject.m.self._31;
			this.cascadeData.setFloat32((i * 16 + 13) * 4,v13,true);
			let v14 = iron_object_LightObject.m.self._32;
			this.cascadeData.setFloat32((i * 16 + 14) * 4,v14,true);
			let v15 = iron_object_LightObject.m.self._33;
			this.cascadeData.setFloat32((i * 16 + 15) * 4,v15,true);
		}
		let v = this.cascadeSplit[0];
		this.cascadeData.setFloat32(iron_object_LightObject.cascadeCount * 16 * 4,v,true);
		let v1 = this.cascadeSplit[1];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 1) * 4,v1,true);
		let v2 = this.cascadeSplit[2];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 2) * 4,v2,true);
		let v3 = this.cascadeSplit[3];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 3) * 4,v3,true);
		return this.cascadeData;
	}
	right() {
		return new iron_math_Vec4(this.V.self._00,this.V.self._10,this.V.self._20);
	}
	up() {
		return new iron_math_Vec4(this.V.self._01,this.V.self._11,this.V.self._21);
	}
	look() {
		return new iron_math_Vec4(this.V.self._02,this.V.self._12,this.V.self._22);
	}
	static setCorners() {
		let _this = iron_object_LightObject.corners[0];
		_this.x = -1.0;
		_this.y = -1.0;
		_this.z = 1.0;
		_this.w = 1.0;
		let _this1 = iron_object_LightObject.corners[1];
		_this1.x = -1.0;
		_this1.y = -1.0;
		_this1.z = -1.0;
		_this1.w = 1.0;
		let _this2 = iron_object_LightObject.corners[2];
		_this2.x = -1.0;
		_this2.y = 1.0;
		_this2.z = 1.0;
		_this2.w = 1.0;
		let _this3 = iron_object_LightObject.corners[3];
		_this3.x = -1.0;
		_this3.y = 1.0;
		_this3.z = -1.0;
		_this3.w = 1.0;
		let _this4 = iron_object_LightObject.corners[4];
		_this4.x = 1.0;
		_this4.y = -1.0;
		_this4.z = 1.0;
		_this4.w = 1.0;
		let _this5 = iron_object_LightObject.corners[5];
		_this5.x = 1.0;
		_this5.y = -1.0;
		_this5.z = -1.0;
		_this5.w = 1.0;
		let _this6 = iron_object_LightObject.corners[6];
		_this6.x = 1.0;
		_this6.y = 1.0;
		_this6.z = 1.0;
		_this6.w = 1.0;
		let _this7 = iron_object_LightObject.corners[7];
		_this7.x = 1.0;
		_this7.y = 1.0;
		_this7.z = -1.0;
		_this7.w = 1.0;
	}
	static mix(a,b,f) {
		return a * (1 - f) + b * f;
	}
}
$hxClasses["iron.object.LightObject"] = iron_object_LightObject;
iron_object_LightObject.__name__ = "iron.object.LightObject";
iron_object_LightObject.__super__ = iron_object_Object;
Object.assign(iron_object_LightObject.prototype, {
	__class__: iron_object_LightObject
	,data: null
	,cascadeData: null
	,cascadeVP: null
	,camSlicedP: null
	,cascadeSplit: null
	,bias: null
	,V: null
	,P: null
	,VP: null
	,frustumPlanes: null
});
class iron_object_MeshObject extends iron_object_Object {
	constructor(data,materials) {
		iron_object_Object._hx_skip_constructor = true;
		super();
		iron_object_Object._hx_skip_constructor = false;
		this._hx_constructor(data,materials);
	}
	_hx_constructor(data,materials) {
		this.morphTarget = null;
		this.force_context = null;
		this.skip_context = null;
		this.tilesheet = null;
		this.frustumCulling = true;
		this.screenSize = 0.0;
		this.particleIndex = -1;
		this.particleOwner = null;
		this.particleChildren = null;
		this.particleSystems = null;
		this.depthRead = false;
		this.materialIndex = 0;
		this.data = null;
		super._hx_constructor();
		this.materials = materials;
		this.setData(data);
		iron_Scene.active.meshes.push(this);
	}
	setData(data) {
		this.data = data;
		data.refcount++;
		data.geom.build();
		this.transform.scaleWorld = data.scalePos;
	}
	remove() {
		if(this.particleChildren != null) {
			let _g = 0;
			let _g1 = this.particleChildren;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				c.remove();
			}
			this.particleChildren = null;
		}
		if(this.particleSystems != null) {
			let _g = 0;
			let _g1 = this.particleSystems;
			while(_g < _g1.length) {
				let psys = _g1[_g];
				++_g;
				psys.remove();
			}
			this.particleSystems = null;
		}
		if(this.tilesheet != null) {
			this.tilesheet.remove();
		}
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.meshes,this);
		}
		this.data.refcount--;
		super.remove();
	}
	setupAnimation(oactions) {
		let hasAction = this.parent != null && this.parent.raw != null && this.parent.raw.bone_actions != null;
		if(hasAction) {
			let armatureName = this.parent.name;
			this.animation = this.getParentArmature(armatureName);
			if(this.animation == null) {
				this.animation = new iron_object_BoneAnimation(armatureName);
			}
			if(this.data.isSkinned) {
				(js_Boot.__cast(this.animation , iron_object_BoneAnimation)).setSkin(this);
			}
		}
		super.setupAnimation(oactions);
	}
	setupMorphTargets() {
		if(this.data.raw.morph_target != null) {
			this.morphTarget = new iron_object_MorphTarget(this.data.raw.morph_target);
		}
	}
	setupParticleSystem(sceneName,pref) {
		if(this.particleSystems == null) {
			this.particleSystems = [];
		}
		let psys = new iron_object_ParticleSystem(sceneName,pref);
		this.particleSystems.push(psys);
	}
	setupTilesheet(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.tilesheet = new iron_object_Tilesheet(sceneName,tilesheet_ref,tilesheet_action_ref);
	}
	isLodMaterial() {
		if(this.raw != null && this.raw.lod_material != null) {
			return this.raw.lod_material == true;
		} else {
			return false;
		}
	}
	setCulled(isShadow,b) {
		if(isShadow) {
			this.culledShadow = b;
		} else {
			this.culledMesh = b;
		}
		this.culled = this.culledMesh && this.culledShadow;
		if(b) {
			iron_RenderPath.culled++;
		}
		return b;
	}
	cullMaterial(context) {
		let mats = this.materials;
		if(!(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) && !this.validContext(mats,context)) {
			return true;
		}
		let isShadow = context == "shadowmap";
		if(!this.visibleMesh && !isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(!this.visibleShadow && isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(this.skip_context == context) {
			return this.setCulled(isShadow,true);
		}
		if(this.force_context != null && this.force_context != context) {
			return this.setCulled(isShadow,true);
		}
		if(context == "voxel" && this.raw != null && this.raw.mobile == true) {
			return this.setCulled(isShadow,true);
		}
		return this.setCulled(isShadow,false);
	}
	cullMesh(context,camera,light) {
		if(camera == null) {
			return false;
		}
		if(camera.data.raw.frustum_culling && this.frustumCulling) {
			let radiusScale = this.data.isSkinned ? 2.0 : 1.0;
			if(this.particleSystems != null || this.particleOwner != null) {
				radiusScale *= 1000;
			}
			if(context == "voxel") {
				radiusScale *= 100;
			}
			if(this.data.geom.instanced) {
				radiusScale *= 100;
			}
			let isShadow = context == "shadowmap";
			let frustumPlanes = isShadow ? light.frustumPlanes : camera.frustumPlanes;
			if(isShadow && light.data.raw.type != "sun") {
				light.transform.radius = light.data.raw.far_plane;
				if(!iron_object_CameraObject.sphereInFrustum(camera.frustumPlanes,light.transform)) {
					return this.setCulled(isShadow,true);
				}
			}
			if(!iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale)) {
				return this.setCulled(isShadow,true);
			}
		}
		this.culled = false;
		return this.culled;
	}
	skipContext(context,mat) {
		if(mat.raw.skip_context != null && mat.raw.skip_context == context) {
			return true;
		}
		return false;
	}
	getContexts(context,materials,materialContexts,shaderContexts) {
		let _g = 0;
		while(_g < materials.length) {
			let mat = materials[_g];
			++_g;
			let found = false;
			let _g1 = 0;
			let _g2 = mat.raw.contexts.length;
			while(_g1 < _g2) {
				let i = _g1++;
				if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
					materialContexts.push(mat.contexts[i]);
					shaderContexts.push(mat.shader.getContext(context));
					found = true;
					break;
				}
			}
			if(!found) {
				materialContexts.push(null);
				shaderContexts.push(null);
			}
		}
	}
	render(g,context,bindParams) {
		if(this.data == null || !this.data.geom.ready) {
			return;
		}
		if(!this.visible) {
			return;
		}
		if(this.cullMesh(context,iron_Scene.active.camera,iron_RenderPath.active.light)) {
			return;
		}
		let meshContext = this.raw != null && context == "mesh";
		if(this.raw != null && this.raw.is_particle && this.particleOwner == null) {
			return;
		}
		let _gthis = this;
		if(this.particleSystems != null && meshContext) {
			if(this.particleChildren == null) {
				this.particleChildren = [];
				let _g = 0;
				let _g1 = this.particleSystems;
				while(_g < _g1.length) {
					let psys = _g1[_g];
					++_g;
					iron_Scene.active.spawnObject(psys.data.raw.instance_object,null,function(o) {
						if(o != null) {
							let c = o;
							_gthis.particleChildren.push(c);
							c.particleOwner = _gthis;
							c.particleIndex = _gthis.particleChildren.length - 1;
						}
					});
				}
			}
			let _g = 0;
			let _g1 = this.particleSystems.length;
			while(_g < _g1) {
				let i = _g++;
				this.particleSystems[i].update(this.particleChildren[i],this);
			}
		}
		if(this.particleSystems != null && this.particleSystems.length > 0 && !this.raw.render_emitter) {
			return;
		}
		if(this.cullMaterial(context)) {
			return;
		}
		let mats = this.materials;
		let lod = this;
		if(this.raw != null && this.raw.lods != null && this.raw.lods.length > 0) {
			let camera = iron_Scene.active.camera;
			let tr = this.transform;
			let volume = tr.dim.x * tr.dim.y * tr.dim.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
			if(this.lods == null) {
				this.lods = [];
				let _g = 0;
				let _g1 = this.raw.lods;
				while(_g < _g1.length) {
					let l = _g1[_g];
					++_g;
					if(l.object_ref == "") {
						this.lods.push(null);
					} else {
						this.lods.push(iron_Scene.active.getChild(l.object_ref));
					}
				}
			}
			if(context == "voxel") {
				lod = this.lods[this.lods.length - 1];
			} else {
				let _g = 0;
				let _g1 = this.raw.lods.length;
				while(_g < _g1) {
					let i = _g++;
					if(this.screenSize > this.raw.lods[i].screen_size) {
						break;
					}
					lod = this.lods[i];
					if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) {
						mats = lod.materials;
					}
				}
			}
			if(lod == null) {
				return;
			}
		} else {
			let camera = iron_Scene.active.camera;
			let tr = this.transform;
			let volume = tr.dim.x * tr.dim.y * tr.dim.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
		}
		if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true && !this.validContext(mats,context)) {
			return;
		}
		let materialContexts = [];
		let shaderContexts = [];
		this.getContexts(context,mats,materialContexts,shaderContexts);
		iron_object_Uniforms.posUnpack = this.data.scalePos;
		iron_object_Uniforms.texUnpack = this.data.scaleTex;
		this.transform.update();
		let ldata = lod.data;
		let _g = 0;
		let _g1 = ldata.geom.indexBuffers.length;
		while(_g < _g1) {
			let i = _g++;
			let mi = ldata.geom.materialIndices[i];
			if(shaderContexts.length <= mi || shaderContexts[mi] == null) {
				continue;
			}
			this.materialIndex = mi;
			if(this.materials.length > mi && this.skipContext(context,this.materials[mi])) {
				continue;
			}
			let scontext = shaderContexts[mi];
			if(scontext == null) {
				continue;
			}
			let elems = scontext.raw.vertex_elements;
			if(scontext.pipeState != iron_object_MeshObject.lastPipeline) {
				g.setPipeline(scontext.pipeState);
				iron_object_MeshObject.lastPipeline = scontext.pipeState;
			}
			iron_object_Uniforms.setContextConstants(g,scontext,bindParams);
			iron_object_Uniforms.setObjectConstants(g,scontext,this);
			if(materialContexts.length > mi) {
				iron_object_Uniforms.setMaterialConstants(g,scontext,materialContexts[mi]);
			}
			if(ldata.geom.instancedVB != null) {
				g.setVertexBuffers([ldata.geom.get(elems),ldata.geom.instancedVB]);
			} else {
				g.setVertexBuffer(ldata.geom.get(elems));
			}
			g.setIndexBuffer(ldata.geom.indexBuffers[i]);
			if(ldata.geom.instanced) {
				g.drawIndexedVerticesInstanced(ldata.geom.instanceCount,ldata.geom.start,ldata.geom.count);
			} else {
				g.drawIndexedVertices(ldata.geom.start,ldata.geom.count);
			}
		}
		let isShadow = context == "shadowmap";
		if(meshContext) {
			iron_RenderPath.numTrisMesh += ldata.geom.numTris;
		} else if(isShadow) {
			iron_RenderPath.numTrisShadow += ldata.geom.numTris;
		}
		iron_RenderPath.drawCalls++;
	}
	validContext(mats,context) {
		let _g = 0;
		while(_g < mats.length) {
			let mat = mats[_g];
			++_g;
			if(mat.getContext(context) != null) {
				return true;
			}
		}
		return false;
	}
	computeCameraDistance(camX,camY,camZ) {
		let vx = camX - this.transform.world.self._30;
		let vy = camY - this.transform.world.self._31;
		let vz = camZ - this.transform.world.self._32;
		this.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	computeDepthRead() {
	}
	computeScreenSize(camera) {
		let tr = this.transform;
		let volume = tr.dim.x * tr.dim.y * tr.dim.z;
		this.screenSize = volume * (1.0 / this.cameraDistance);
		this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
	}
	initLods() {
		if(this.lods == null) {
			this.lods = [];
			let _g = 0;
			let _g1 = this.raw.lods;
			while(_g < _g1.length) {
				let l = _g1[_g];
				++_g;
				if(l.object_ref == "") {
					this.lods.push(null);
				} else {
					this.lods.push(iron_Scene.active.getChild(l.object_ref));
				}
			}
		}
	}
}
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = "iron.object.MeshObject";
iron_object_MeshObject.__super__ = iron_object_Object;
Object.assign(iron_object_MeshObject.prototype, {
	__class__: iron_object_MeshObject
	,data: null
	,materials: null
	,materialIndex: null
	,depthRead: null
	,particleSystems: null
	,particleChildren: null
	,particleOwner: null
	,particleIndex: null
	,cameraDistance: null
	,screenSize: null
	,frustumCulling: null
	,tilesheet: null
	,skip_context: null
	,force_context: null
	,morphTarget: null
});
class iron_object_MorphTarget {
	constructor(data) {
		this.morphMap = null;
		this.morphBlockSize = 0;
		this.morphImageSize = 0;
		this.numMorphTargets = 0;
		let defaults = data.morph_target_defaults;
		this.morphWeights = kha_arrays_Float32Array._new(defaults.byteLength >> 2);
		let _g = 0;
		let _g1 = this.morphWeights.byteLength >> 2;
		while(_g < _g1) {
			let i = _g++;
			let v = defaults.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			this.morphWeights.setFloat32(i * 4,v,true);
		}
		this.scaling = data.morph_scale;
		this.offset = data.morph_offset;
		this.numMorphTargets = data.num_morph_targets;
		this.morphImageSize = data.morph_img_size;
		this.morphBlockSize = data.morph_block_size;
		let _gthis = this;
		iron_data_Data.getImage(data.morph_target_data_file + "_morph_pos.png",function(img) {
			if(img != null) {
				_gthis.morphDataPos = img;
			}
		});
		iron_data_Data.getImage(data.morph_target_data_file + "_morph_nor.png",function(img) {
			if(img != null) {
				_gthis.morphDataNor = img;
			}
		});
		this.morphMap = new haxe_ds_StringMap();
		let i = 0;
		let _g2 = 0;
		let _g3 = data.morph_target_ref;
		while(_g2 < _g3.length) {
			let name = _g3[_g2];
			++_g2;
			this.morphMap.h[name] = i;
			++i;
		}
	}
	initWeights(defaults) {
		this.morphWeights = kha_arrays_Float32Array._new(defaults.byteLength >> 2);
		let _g = 0;
		let _g1 = this.morphWeights.byteLength >> 2;
		while(_g < _g1) {
			let i = _g++;
			let v = defaults.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			this.morphWeights.setFloat32(i * 4,v,true);
		}
	}
	setMorphValue(name,value) {
		let i = this.morphMap.h[name];
		if(i != null) {
			this.morphWeights.setFloat32(i * 4,value,true);
		}
	}
}
$hxClasses["iron.object.MorphTarget"] = iron_object_MorphTarget;
iron_object_MorphTarget.__name__ = "iron.object.MorphTarget";
Object.assign(iron_object_MorphTarget.prototype, {
	__class__: iron_object_MorphTarget
	,data: null
	,numMorphTargets: null
	,morphImageSize: null
	,morphBlockSize: null
	,scaling: null
	,offset: null
	,morphWeights: null
	,morphDataPos: null
	,morphDataNor: null
	,morphMap: null
});
class iron_object_ObjectAnimation extends iron_object_Animation {
	constructor(object,oactions) {
		iron_object_Animation._hx_skip_constructor = true;
		super();
		iron_object_Animation._hx_skip_constructor = false;
		this._hx_constructor(object,oactions);
	}
	_hx_constructor(object,oactions) {
		this.bezierFrameIndex = -1;
		this.s0 = 0.0;
		this.object = object;
		this.oactions = oactions;
		this.isSkinned = false;
		super._hx_constructor();
	}
	getAction(action) {
		let _g = 0;
		let _g1 = this.oactions;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a != null && a.objects[0].name == action) {
				return a.objects[0];
			}
		}
		return null;
	}
	play(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		super.play(action,onComplete,blendTime,speed,loop);
		if(this.action == "" && this.oactions[0] != null) {
			this.action = this.oactions[0].objects[0].name;
		}
		this.oaction = this.getAction(this.action);
		if(this.oaction != null) {
			this.isSampled = this.oaction.sampled != null && this.oaction.sampled;
		}
	}
	update(delta) {
		if(!this.object.visible || this.object.culled || this.oaction == null) {
			return;
		}
		iron_object_Animation.beginProfile();
		super.update(delta);
		if(this.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
		iron_object_Animation.endProfile();
	}
	updateObjectAnim() {
		this.updateTransformAnim(this.oaction.anim,this.object.transform);
		this.object.transform.buildMatrix();
	}
	interpolateLinear(t,t1,t2,v1,v2) {
		let s = (t - t1) / (t2 - t1);
		return (1.0 - s) * v1 + s * v2;
	}
	isTrackEnd(track) {
		if(this.speed > 0) {
			return this.frameIndex >= (track.frames.byteLength >> 2) - 2;
		} else {
			return this.frameIndex <= 0;
		}
	}
	checkFrameIndexT(frameValues,t) {
		if(this.speed > 0) {
			if(this.frameIndex < (frameValues.byteLength >> 2) - 2) {
				return t > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			} else {
				return false;
			}
		} else if(this.frameIndex > 1) {
			return t > frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		} else {
			return false;
		}
	}
	updateTransformAnim(anim,transform) {
		if(anim == null) {
			return;
		}
		let total = anim.end * this.frameTime - anim.begin * this.frameTime;
		if(anim.has_delta) {
			let t = transform;
			if(t.dloc == null) {
				t.dloc = new iron_math_Vec4();
				t.drot = new iron_math_Quat();
				t.dscale = new iron_math_Vec4();
			}
			let _this = t.dloc;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			let _this1 = t.dscale;
			_this1.x = 0;
			_this1.y = 0;
			_this1.z = 0;
			_this1.w = 1.0;
			t._deulerX = t._deulerY = t._deulerZ = 0.0;
		}
		let _g = 0;
		let _g1 = anim.tracks;
		while(_g < _g1.length) {
			let track = _g1[_g];
			++_g;
			if(this.frameIndex == -1) {
				this.rewind(track);
			}
			let sign = this.speed > 0 ? 1 : -1;
			let t = this.time + anim.begin * this.frameTime;
			while(true) {
				let frameValues = track.frames;
				if(!(this.speed > 0 ? this.frameIndex < (frameValues.byteLength >> 2) - 2 && t > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime : this.frameIndex > 1 && t > frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime)) {
					break;
				}
				this.frameIndex += sign;
			}
			if(this.frameIndex >= track.frames.byteLength >> 2) {
				continue;
			}
			if(this.time > total) {
				if(this.onComplete != null) {
					this.onComplete();
				}
				if(this.loop) {
					this.rewind(track);
				} else {
					this.frameIndex -= sign;
					this.paused = true;
				}
				return;
			}
			let ti = this.frameIndex;
			let t1 = track.frames.getUint32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			let t2 = track.frames.getUint32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			let v1 = track.values.getFloat32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let v2 = track.values.getFloat32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let s = (t - t1) / (t2 - t1);
			let value = (1.0 - s) * v1 + s * v2;
			switch(track.target) {
			case "dqwrot":
				transform.drot.w = value;
				break;
			case "dqxrot":
				transform.drot.x = value;
				break;
			case "dqyrot":
				transform.drot.y = value;
				break;
			case "dqzrot":
				transform.drot.z = value;
				break;
			case "dxloc":
				transform.dloc.x = value;
				break;
			case "dxrot":
				transform._deulerX = value;
				break;
			case "dxscl":
				transform.dscale.x = value;
				break;
			case "dyloc":
				transform.dloc.y = value;
				break;
			case "dyrot":
				transform._deulerY = value;
				break;
			case "dyscl":
				transform.dscale.y = value;
				break;
			case "dzloc":
				transform.dloc.z = value;
				break;
			case "dzrot":
				transform._deulerZ = value;
				break;
			case "dzscl":
				transform.dscale.z = value;
				break;
			case "qwrot":
				transform.rot.w = value;
				break;
			case "qxrot":
				transform.rot.x = value;
				break;
			case "qyrot":
				transform.rot.y = value;
				break;
			case "qzrot":
				transform.rot.z = value;
				break;
			case "xloc":
				transform.loc.x = value;
				break;
			case "xrot":
				transform.setRotation(value,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = value;
				break;
			case "yloc":
				transform.loc.y = value;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,value,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = value;
				break;
			case "zloc":
				transform.loc.z = value;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,value);
				break;
			case "zscl":
				transform.scale.z = value;
				break;
			}
		}
	}
	totalFrames() {
		if(this.oaction == null || this.oaction.anim == null) {
			return 0;
		}
		return this.oaction.anim.end - this.oaction.anim.begin;
	}
}
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = "iron.object.ObjectAnimation";
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
Object.assign(iron_object_ObjectAnimation.prototype, {
	__class__: iron_object_ObjectAnimation
	,object: null
	,oactions: null
	,oaction: null
	,s0: null
	,bezierFrameIndex: null
});
class iron_object_ParticleSystem {
	constructor(sceneName,pref) {
		this.ownerScl = new iron_math_Vec4();
		this.ownerRot = new iron_math_Quat();
		this.ownerLoc = new iron_math_Vec4();
		this.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.lapTime = 0.0;
		this.lap = 0;
		this.count = 0;
		this.seed = 0;
		this.spawnRate = 0.0;
		this.time = 0.0;
		this.animtime = 0.0;
		this.lifetime = 0.0;
		this.frameRate = 24;
		this.speed = 1.0;
		this.seed = pref.seed;
		this.particles = [];
		this.ready = false;
		let _gthis = this;
		iron_data_Data.getParticle(sceneName,pref.particle,function(b) {
			_gthis.data = b;
			_gthis.r = _gthis.data.raw;
			if(iron_Scene.active.raw.gravity != null) {
				_gthis.gx = iron_Scene.active.raw.gravity.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
				_gthis.gy = iron_Scene.active.raw.gravity.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
				_gthis.gz = iron_Scene.active.raw.gravity.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
			} else {
				_gthis.gx = 0;
				_gthis.gy = 0;
				_gthis.gz = -9.81 * _gthis.r.weight_gravity;
			}
			_gthis.alignx = _gthis.r.object_align_factor.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
			_gthis.aligny = _gthis.r.object_align_factor.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
			_gthis.alignz = _gthis.r.object_align_factor.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
			_gthis.lifetime = _gthis.r.lifetime / _gthis.frameRate;
			_gthis.animtime = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.frameRate;
			_gthis.spawnRate = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.r.count / _gthis.frameRate;
			let _g = 0;
			let _g1 = _gthis.r.count;
			while(_g < _g1) {
				let i = _g++;
				_gthis.particles.push(new iron_object_Particle(i));
			}
			_gthis.ready = true;
		});
	}
	pause() {
		this.lifetime = 0;
	}
	resume() {
		this.lifetime = this.r.lifetime / this.frameRate;
	}
	update(object,owner) {
		if(!this.ready || object == null || this.speed == 0.0) {
			return;
		}
		let _this = owner.transform.world;
		let loc = this.ownerLoc;
		let quat = this.ownerRot;
		let scale = this.ownerScl;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		let _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		let _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this.self._10;
		_this3.y = _this.self._11;
		_this3.z = _this.self._12;
		_this3.w = 1.0;
		let _this4 = _this3;
		scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this.self._20;
		_this5.y = _this.self._21;
		_this5.z = _this.self._22;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		let _this7 = _this.self;
		let m3 = _this7._12;
		let m4 = _this7._22;
		let m5 = _this7._32;
		let m6 = _this7._13;
		let m7 = _this7._23;
		let m8 = _this7._33;
		let c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
		let m31 = _this7._12;
		let m41 = _this7._22;
		let m51 = _this7._32;
		let m61 = _this7._13;
		let m71 = _this7._23;
		let m81 = _this7._33;
		let c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
		let m32 = _this7._11;
		let m42 = _this7._21;
		let m52 = _this7._31;
		let m62 = _this7._13;
		let m72 = _this7._23;
		let m82 = _this7._33;
		let c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
		let m33 = _this7._11;
		let m43 = _this7._21;
		let m53 = _this7._31;
		let m63 = _this7._12;
		let m73 = _this7._22;
		let m83 = _this7._32;
		let c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
		if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		let m = iron_math_Mat4.helpMat;
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m311 = m.self._02;
		let m321 = m.self._12;
		let m331 = m.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		object.transform.loc = this.ownerLoc;
		object.transform.rot = this.ownerRot;
		object.transform.scale = new iron_math_Vec4(this.r.particle_size,this.r.particle_size,this.r.particle_size,1);
		object.transform.buildMatrix();
		owner.transform.buildMatrix();
		let _this8 = object.transform.dim;
		let v = owner.transform.dim;
		_this8.x = v.x;
		_this8.y = v.y;
		_this8.z = v.z;
		_this8.w = v.w;
		this.dimx = object.transform.dim.x;
		this.dimy = object.transform.dim.y;
		if(object.tilesheet != null) {
			this.tilesx = object.tilesheet.raw.tilesx;
			this.tilesy = object.tilesheet.raw.tilesy;
			this.tilesFramerate = object.tilesheet.raw.framerate;
		}
		this.time += iron_system_Time.realDelta * this.speed;
		this.lap = this.time / this.animtime | 0;
		this.lapTime = this.time - this.lap * this.animtime;
		this.count = this.lapTime / this.spawnRate | 0;
		this.updateGpu(object,owner);
	}
	getData() {
		let hair = this.r.type == 1;
		this.m.self._00 = this.r.loop ? this.animtime : -this.animtime;
		this.m.self._01 = hair ? 1 / this.particles.length : this.spawnRate;
		this.m.self._02 = hair ? 1 : this.lifetime;
		this.m.self._03 = this.particles.length;
		this.m.self._10 = hair ? 0 : this.alignx;
		this.m.self._11 = hair ? 0 : this.aligny;
		this.m.self._12 = hair ? 0 : this.alignz;
		this.m.self._13 = hair ? 0 : this.r.factor_random;
		this.m.self._20 = hair ? 0 : this.gx * this.r.mass;
		this.m.self._21 = hair ? 0 : this.gy * this.r.mass;
		this.m.self._22 = hair ? 0 : this.gz * this.r.mass;
		this.m.self._23 = hair ? 0 : this.r.lifetime_random;
		this.m.self._30 = this.tilesx;
		this.m.self._31 = this.tilesy;
		this.m.self._32 = 1 / this.tilesFramerate;
		this.m.self._33 = hair ? 1 : this.lapTime;
		return this.m;
	}
	updateGpu(object,owner) {
		if(!object.data.geom.instanced) {
			this.setupGeomGpu(object,owner);
		}
	}
	setupGeomGpu(object,owner) {
		let instancedData = kha_arrays_Float32Array._new(this.particles.length * 3);
		let i = 0;
		let normFactor = 3.0518509475997192e-005;
		let scalePosOwner = owner.data.scalePos;
		let scalePosParticle = object.data.scalePos;
		let particleSize = this.r.particle_size;
		let scaleFactor_x = 0.0;
		let scaleFactor_y = 0.0;
		let scaleFactor_z = 0.0;
		let scaleFactor_w = 1.0;
		let v = owner.transform.scale;
		scaleFactor_x = v.x;
		scaleFactor_y = v.y;
		scaleFactor_z = v.z;
		scaleFactor_w = v.w;
		let f = scalePosOwner / (particleSize * scalePosParticle);
		scaleFactor_x *= f;
		scaleFactor_y *= f;
		scaleFactor_z *= f;
		switch(this.r.emit_from) {
		case 0:
			let pa = owner.data.geom.positions;
			let _g = 0;
			let _g1 = this.particles;
			while(_g < _g1.length) {
				let p = _g1[_g];
				++_g;
				let j = this.fhash(i) * ((pa.values.byteLength >> 1) / pa.size) | 0;
				let v = pa.values.getInt16(j * pa.size * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				let v1 = pa.values.getInt16((j * pa.size + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				let v2 = pa.values.getInt16((j * pa.size + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		case 1:
			let positions = owner.data.geom.positions.values;
			let _g2 = 0;
			let _g3 = this.particles;
			while(_g2 < _g3.length) {
				let p = _g3[_g2];
				++_g2;
				let ia = owner.data.geom.indices[Std.random(owner.data.geom.indices.length)];
				let faceIndex = Std.random((ia.byteLength >> 2) / 3 | 0);
				let i0 = ia.getUint32(faceIndex * 3 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let i1 = ia.getUint32((faceIndex * 3 + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let i2 = ia.getUint32((faceIndex * 3 + 2) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let x = positions.getInt16(i0 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let y = positions.getInt16((i0 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let z = positions.getInt16((i0 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let pos_x = x;
				let pos_y = y;
				let pos_z = z;
				let x1 = positions.getInt16(i1 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let y1 = positions.getInt16((i1 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let z1 = positions.getInt16((i1 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let v_x = x1;
				let v_y = y1;
				let v_z = z1;
				let x2 = positions.getInt16(i2 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let y2 = positions.getInt16((i2 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let z2 = positions.getInt16((i2 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				let v_x1 = x2;
				let v_y1 = y2;
				let v_z1 = z2;
				let x3 = Math.random();
				let y3 = Math.random();
				if(x3 + y3 > 1) {
					x3 = 1 - x3;
					y3 = 1 - y3;
				}
				v_x -= pos_x;
				v_y -= pos_y;
				v_z -= pos_z;
				v_x1 -= pos_x;
				v_y1 -= pos_y;
				v_z1 -= pos_z;
				v_x *= x3;
				v_y *= x3;
				v_z *= x3;
				v_x1 *= y3;
				v_y1 *= y3;
				v_z1 *= y3;
				v_x += v_x1;
				v_y += v_y1;
				v_z += v_z1;
				pos_x += v_x;
				pos_y += v_y;
				pos_z += v_z;
				let v = pos_x * normFactor * scaleFactor_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				let v1 = pos_y * normFactor * scaleFactor_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				let v2 = pos_z * normFactor * scaleFactor_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		case 2:
			let scaleFactorVolume_x = 0.0;
			let scaleFactorVolume_y = 0.0;
			let scaleFactorVolume_z = 0.0;
			let scaleFactorVolume_w = 1.0;
			let v1 = object.transform.dim;
			scaleFactorVolume_x = v1.x;
			scaleFactorVolume_y = v1.y;
			scaleFactorVolume_z = v1.z;
			scaleFactorVolume_w = v1.w;
			let f1 = 0.5 / (particleSize * scalePosParticle);
			scaleFactorVolume_x *= f1;
			scaleFactorVolume_y *= f1;
			scaleFactorVolume_z *= f1;
			let _g4 = 0;
			let _g5 = this.particles;
			while(_g4 < _g5.length) {
				let p = _g5[_g4];
				++_g4;
				let v = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				let v1 = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				let v2 = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		}
		object.data.geom.setupInstanced(instancedData,1,0);
	}
	fhash(n) {
		let s = n + 1.0;
		s *= 9301.0 % s;
		s = (s * 9301.0 + 49297.0) % 233280.0;
		return s / 233280.0;
	}
	remove() {
	}
	static randomPointInTriangle(a,b,c) {
		let x = Math.random();
		let y = Math.random();
		if(x + y > 1) {
			x = 1 - x;
			y = 1 - y;
		}
		b.x -= a.x;
		b.y -= a.y;
		b.z -= a.z;
		let u = b;
		c.x -= a.x;
		c.y -= a.y;
		c.z -= a.z;
		let v = c;
		u.x *= x;
		u.y *= x;
		u.z *= x;
		let _this = u;
		v.x *= y;
		v.y *= y;
		v.z *= y;
		let v1 = v;
		_this.x += v1.x;
		_this.y += v1.y;
		_this.z += v1.z;
		let v2 = _this;
		a.x += v2.x;
		a.y += v2.y;
		a.z += v2.z;
		return a;
	}
}
$hxClasses["iron.object.ParticleSystem"] = iron_object_ParticleSystem;
iron_object_ParticleSystem.__name__ = "iron.object.ParticleSystem";
Object.assign(iron_object_ParticleSystem.prototype, {
	__class__: iron_object_ParticleSystem
	,data: null
	,speed: null
	,particles: null
	,ready: null
	,frameRate: null
	,lifetime: null
	,animtime: null
	,time: null
	,spawnRate: null
	,seed: null
	,r: null
	,gx: null
	,gy: null
	,gz: null
	,alignx: null
	,aligny: null
	,alignz: null
	,dimx: null
	,dimy: null
	,tilesx: null
	,tilesy: null
	,tilesFramerate: null
	,count: null
	,lap: null
	,lapTime: null
	,m: null
	,ownerLoc: null
	,ownerRot: null
	,ownerScl: null
});
class iron_object_Particle {
	constructor(i) {
		this.z = 0.0;
		this.y = 0.0;
		this.x = 0.0;
		this.i = i;
	}
}
$hxClasses["iron.object.Particle"] = iron_object_Particle;
iron_object_Particle.__name__ = "iron.object.Particle";
Object.assign(iron_object_Particle.prototype, {
	__class__: iron_object_Particle
	,i: null
	,x: null
	,y: null
	,z: null
	,cameraDistance: null
});
class iron_object_ProbeObject extends iron_object_Object {
	constructor() {
		super();
	}
}
$hxClasses["iron.object.ProbeObject"] = iron_object_ProbeObject;
iron_object_ProbeObject.__name__ = "iron.object.ProbeObject";
iron_object_ProbeObject.__super__ = iron_object_Object;
Object.assign(iron_object_ProbeObject.prototype, {
	__class__: iron_object_ProbeObject
});
class iron_object_SpeakerObject extends iron_object_Object {
	constructor(data) {
		iron_object_Object._hx_skip_constructor = true;
		super();
		iron_object_Object._hx_skip_constructor = false;
		this._hx_constructor(data);
	}
	_hx_constructor(data) {
		this.channels = [];
		this.sound = null;
		this.paused = false;
		super._hx_constructor();
		this.data = data;
		iron_Scene.active.speakers.push(this);
		if(data.sound == "") {
			return;
		}
		let _gthis = this;
		iron_data_Data.getSound(data.sound,function(sound) {
			_gthis.sound = sound;
			iron_App.notifyOnInit($bind(_gthis,_gthis.init));
		});
	}
	init() {
		if(this.visible && this.data.play_on_start) {
			this.play();
		}
	}
	play() {
		if(this.sound == null || this.data.muted) {
			return;
		}
		if(this.paused) {
			let _g = 0;
			let _g1 = this.channels;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				c.play();
			}
			this.paused = false;
			return;
		}
		let channel = iron_system_Audio.play(this.sound,this.data.loop,this.data.stream);
		if(channel != null) {
			this.channels.push(channel);
			if(this.data.attenuation > 0 && this.channels.length == 1) {
				iron_App.notifyOnUpdate($bind(this,this.update));
			}
		}
	}
	pause() {
		let _g = 0;
		let _g1 = this.channels;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			c.pause();
		}
		this.paused = true;
	}
	stop() {
		let _g = 0;
		let _g1 = this.channels;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			c.stop();
		}
		this.channels.splice(0,this.channels.length);
	}
	update() {
		if(this.paused) {
			return;
		}
		let _g = 0;
		let _g1 = this.channels;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c.get_finished()) {
				HxOverrides.remove(this.channels,c);
			}
		}
		if(this.channels.length == 0) {
			iron_App.removeUpdate($bind(this,this.update));
			return;
		}
		if(this.data.attenuation > 0) {
			let _this = iron_Scene.active.camera.transform.world;
			let x = _this.self._30;
			let y = _this.self._31;
			let z = _this.self._32;
			let w = _this.self._33;
			if(w == null) {
				w = 1.0;
			}
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			let v1_x = x;
			let v1_y = y;
			let v1_z = z;
			let v1_w = w;
			let _this1 = this.transform.world;
			let x1 = _this1.self._30;
			let y1 = _this1.self._31;
			let z1 = _this1.self._32;
			let w1 = _this1.self._33;
			if(w1 == null) {
				w1 = 1.0;
			}
			if(z1 == null) {
				z1 = 0.0;
			}
			if(y1 == null) {
				y1 = 0.0;
			}
			if(x1 == null) {
				x1 = 0.0;
			}
			let v2_x = x1;
			let v2_y = y1;
			let v2_z = z1;
			let v2_w = w1;
			let vx = v1_x - v2_x;
			let vy = v1_y - v2_y;
			let vz = v1_z - v2_z;
			let distance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			distance = Math.max(Math.min(this.data.distance_max,distance),this.data.distance_reference);
			this.volume = this.data.distance_reference / (this.data.distance_reference + this.data.attenuation * (distance - this.data.distance_reference));
			this.volume *= this.data.volume;
		} else {
			this.volume = this.data.volume;
		}
		if(this.volume > this.data.volume_max) {
			this.volume = this.data.volume_max;
		} else if(this.volume < this.data.volume_min) {
			this.volume = this.data.volume_min;
		}
		let _g2 = 0;
		let _g3 = this.channels;
		while(_g2 < _g3.length) {
			let c = _g3[_g2];
			++_g2;
			c.set_volume(this.volume);
		}
	}
	remove() {
		this.stop();
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.speakers,this);
		}
		super.remove();
	}
}
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = "iron.object.SpeakerObject";
iron_object_SpeakerObject.__super__ = iron_object_Object;
Object.assign(iron_object_SpeakerObject.prototype, {
	__class__: iron_object_SpeakerObject
	,data: null
	,paused: null
	,sound: null
	,channels: null
	,volume: null
});
class iron_object_Tilesheet {
	constructor(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.onActionComplete = null;
		this.time = 0.0;
		this.frame = 0;
		this.paused = false;
		this.action = null;
		this.tileY = 0.0;
		this.tileX = 0.0;
		this.ready = false;
		let _gthis = this;
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			let _g = 0;
			let _g1 = format.tilesheet_datas;
			while(_g < _g1.length) {
				let ts = _g1[_g];
				++_g;
				if(ts.name == tilesheet_ref) {
					_gthis.raw = ts;
					iron_Scene.active.tilesheets.push(_gthis);
					_gthis.play(tilesheet_action_ref);
					_gthis.ready = true;
					break;
				}
			}
		});
	}
	play(action_ref,onActionComplete) {
		this.onActionComplete = onActionComplete;
		let _g = 0;
		let _g1 = this.raw.actions;
		while(_g < _g1.length) {
			let a = _g1[_g];
			++_g;
			if(a.name == action_ref) {
				this.action = a;
				break;
			}
		}
		this.setFrame(this.action.start);
		this.paused = false;
	}
	pause() {
		this.paused = true;
	}
	resume() {
		this.paused = false;
	}
	remove() {
		HxOverrides.remove(iron_Scene.active.tilesheets,this);
	}
	update() {
		if(!this.ready || this.paused || this.action.start >= this.action.end) {
			return;
		}
		this.time += iron_system_Time.realDelta;
		let frameTime = 1 / this.raw.framerate;
		let framesToAdvance = 0;
		while(this.time >= frameTime) {
			this.time -= frameTime;
			++framesToAdvance;
		}
		if(framesToAdvance != 0) {
			this.setFrame(this.frame + framesToAdvance);
		}
	}
	setFrame(f) {
		this.frame = f;
		let tx = this.frame % this.raw.tilesx;
		let ty = this.frame / this.raw.tilesx | 0;
		this.tileX = tx * (1 / this.raw.tilesx);
		this.tileY = ty * (1 / this.raw.tilesy);
		if(this.frame >= this.action.end && this.action.start < this.action.end) {
			if(this.onActionComplete != null) {
				this.onActionComplete();
			}
			if(this.action.loop) {
				this.setFrame(this.action.start);
			} else {
				this.paused = true;
			}
		}
	}
}
$hxClasses["iron.object.Tilesheet"] = iron_object_Tilesheet;
iron_object_Tilesheet.__name__ = "iron.object.Tilesheet";
Object.assign(iron_object_Tilesheet.prototype, {
	__class__: iron_object_Tilesheet
	,tileX: null
	,tileY: null
	,raw: null
	,action: null
	,ready: null
	,paused: null
	,frame: null
	,time: null
	,onActionComplete: null
});
class iron_object_Transform {
	constructor(object) {
		this.dscale = null;
		this.drot = null;
		this.dloc = null;
		this.lastWorld = null;
		this.boneParent = null;
		this.scaleWorld = 1.0;
		this.localOnly = false;
		this.object = object;
		this.reset();
	}
	reset() {
		this.world = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.worldUnpack = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.local = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.loc = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.dim = new iron_math_Vec4(2.0,2.0,2.0);
		this.radius = 1.0;
		this.dirty = true;
	}
	update() {
		if(this.dirty) {
			this.buildMatrix();
		}
	}
	composeDelta() {
		let _this = this.dloc;
		let a = this.loc;
		let b = this.dloc;
		_this.x = a.x + b.x;
		_this.y = a.y + b.y;
		_this.z = a.z + b.z;
		let _this1 = this.dscale;
		let a1 = this.dscale;
		let b1 = this.scale;
		_this1.x = a1.x + b1.x;
		_this1.y = a1.y + b1.y;
		_this1.z = a1.z + b1.z;
		let _this2 = this.drot;
		let f = this._deulerX / 2;
		let c1 = Math.cos(f);
		let s1 = Math.sin(f);
		f = this._deulerY / 2;
		let c2 = Math.cos(f);
		let s2 = Math.sin(f);
		f = this._deulerZ / 2;
		let c3 = Math.cos(f);
		let s3 = Math.sin(f);
		_this2.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this2.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this2.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this2.w = c1 * c2 * c3 - s1 * s2 * s3;
		let _this3 = this.drot;
		let q1 = this.rot;
		let q2 = this.drot;
		let q1x = q1.x;
		let q1y = q1.y;
		let q1z = q1.z;
		let q1w = q1.w;
		let q2x = q2.x;
		let q2y = q2.y;
		let q2z = q2.z;
		let q2w = q2.w;
		_this3.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this3.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this3.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this3.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		let _this4 = this.local;
		let loc = this.dloc;
		let quat = this.drot;
		let sc = this.dscale;
		let x = quat.x;
		let y = quat.y;
		let z = quat.z;
		let w = quat.w;
		let x2 = x + x;
		let y2 = y + y;
		let z2 = z + z;
		let xx = x * x2;
		let xy = x * y2;
		let xz = x * z2;
		let yy = y * y2;
		let yz = y * z2;
		let zz = z * z2;
		let wx = w * x2;
		let wy = w * y2;
		let wz = w * z2;
		_this4.self._00 = 1.0 - (yy + zz);
		_this4.self._10 = xy - wz;
		_this4.self._20 = xz + wy;
		_this4.self._01 = xy + wz;
		_this4.self._11 = 1.0 - (xx + zz);
		_this4.self._21 = yz - wx;
		_this4.self._02 = xz - wy;
		_this4.self._12 = yz + wx;
		_this4.self._22 = 1.0 - (xx + yy);
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		let x1 = sc.x;
		let y1 = sc.y;
		let z1 = sc.z;
		_this4.self._00 *= x1;
		_this4.self._01 *= x1;
		_this4.self._02 *= x1;
		_this4.self._03 *= x1;
		_this4.self._10 *= y1;
		_this4.self._11 *= y1;
		_this4.self._12 *= y1;
		_this4.self._13 *= y1;
		_this4.self._20 *= z1;
		_this4.self._21 *= z1;
		_this4.self._22 *= z1;
		_this4.self._23 *= z1;
		_this4.self._30 = loc.x;
		_this4.self._31 = loc.y;
		_this4.self._32 = loc.z;
	}
	buildMatrix() {
		if(this.dloc == null) {
			let _this = this.local;
			let loc = this.loc;
			let quat = this.rot;
			let sc = this.scale;
			let x = quat.x;
			let y = quat.y;
			let z = quat.z;
			let w = quat.w;
			let x2 = x + x;
			let y2 = y + y;
			let z2 = z + z;
			let xx = x * x2;
			let xy = x * y2;
			let xz = x * z2;
			let yy = y * y2;
			let yz = y * z2;
			let zz = z * z2;
			let wx = w * x2;
			let wy = w * y2;
			let wz = w * z2;
			_this.self._00 = 1.0 - (yy + zz);
			_this.self._10 = xy - wz;
			_this.self._20 = xz + wy;
			_this.self._01 = xy + wz;
			_this.self._11 = 1.0 - (xx + zz);
			_this.self._21 = yz - wx;
			_this.self._02 = xz - wy;
			_this.self._12 = yz + wx;
			_this.self._22 = 1.0 - (xx + yy);
			_this.self._03 = 0.0;
			_this.self._13 = 0.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
			let x1 = sc.x;
			let y1 = sc.y;
			let z1 = sc.z;
			_this.self._00 *= x1;
			_this.self._01 *= x1;
			_this.self._02 *= x1;
			_this.self._03 *= x1;
			_this.self._10 *= y1;
			_this.self._11 *= y1;
			_this.self._12 *= y1;
			_this.self._13 *= y1;
			_this.self._20 *= z1;
			_this.self._21 *= z1;
			_this.self._22 *= z1;
			_this.self._23 *= z1;
			_this.self._30 = loc.x;
			_this.self._31 = loc.y;
			_this.self._32 = loc.z;
		} else {
			this.composeDelta();
		}
		if(this.boneParent != null) {
			let _this = this.local;
			let b = this.boneParent;
			let a = this.local;
			let a00 = a.self._00;
			let a01 = a.self._01;
			let a02 = a.self._02;
			let a03 = a.self._03;
			let a10 = a.self._10;
			let a11 = a.self._11;
			let a12 = a.self._12;
			let a13 = a.self._13;
			let a20 = a.self._20;
			let a21 = a.self._21;
			let a22 = a.self._22;
			let a23 = a.self._23;
			let a30 = a.self._30;
			let a31 = a.self._31;
			let a32 = a.self._32;
			let a33 = a.self._33;
			let b0 = b.self._00;
			let b1 = b.self._10;
			let b2 = b.self._20;
			let b3 = b.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		}
		if(this.object.parent != null && !this.localOnly) {
			let _this = this.world;
			let a = this.local;
			let b = this.object.parent.transform.world;
			let a00 = a.self._00;
			let a01 = a.self._01;
			let a02 = a.self._02;
			let a03 = a.self._03;
			let a10 = a.self._10;
			let a11 = a.self._11;
			let a12 = a.self._12;
			let a13 = a.self._13;
			let a20 = a.self._20;
			let a21 = a.self._21;
			let a22 = a.self._22;
			let a23 = a.self._23;
			let a30 = a.self._30;
			let a31 = a.self._31;
			let a32 = a.self._32;
			let a33 = a.self._33;
			let b0 = b.self._00;
			let b1 = b.self._10;
			let b2 = b.self._20;
			let b3 = b.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			_this.self._03 = 0;
			_this.self._13 = 0;
			_this.self._23 = 0;
			_this.self._33 = 1;
		} else {
			let _this = this.world;
			let m = this.local;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
		let _this = this.worldUnpack;
		let m = this.world;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.scaleWorld != 1.0) {
			this.worldUnpack.self._00 *= this.scaleWorld;
			this.worldUnpack.self._01 *= this.scaleWorld;
			this.worldUnpack.self._02 *= this.scaleWorld;
			this.worldUnpack.self._03 *= this.scaleWorld;
			this.worldUnpack.self._10 *= this.scaleWorld;
			this.worldUnpack.self._11 *= this.scaleWorld;
			this.worldUnpack.self._12 *= this.scaleWorld;
			this.worldUnpack.self._13 *= this.scaleWorld;
			this.worldUnpack.self._20 *= this.scaleWorld;
			this.worldUnpack.self._21 *= this.scaleWorld;
			this.worldUnpack.self._22 *= this.scaleWorld;
			this.worldUnpack.self._23 *= this.scaleWorld;
		}
		if(this.object.constraints != null) {
			let _g = 0;
			let _g1 = this.object.constraints;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				c.apply(this);
			}
		}
		this.computeDim();
		let _g = 0;
		let _g1 = this.object.children;
		while(_g < _g1.length) {
			let n = _g1[_g];
			++_g;
			n.transform.buildMatrix();
		}
		this.dirty = false;
	}
	translate(x,y,z) {
		this.loc.x += x;
		this.loc.y += y;
		this.loc.z += z;
		this.buildMatrix();
	}
	setMatrix(mat) {
		let _this = this.local;
		_this.self._00 = mat.self._00;
		_this.self._01 = mat.self._01;
		_this.self._02 = mat.self._02;
		_this.self._03 = mat.self._03;
		_this.self._10 = mat.self._10;
		_this.self._11 = mat.self._11;
		_this.self._12 = mat.self._12;
		_this.self._13 = mat.self._13;
		_this.self._20 = mat.self._20;
		_this.self._21 = mat.self._21;
		_this.self._22 = mat.self._22;
		_this.self._23 = mat.self._23;
		_this.self._30 = mat.self._30;
		_this.self._31 = mat.self._31;
		_this.self._32 = mat.self._32;
		_this.self._33 = mat.self._33;
		this.decompose();
		this.buildMatrix();
	}
	multMatrix(mat) {
		let _this = this.local;
		let a00 = _this.self._00;
		let a01 = _this.self._01;
		let a02 = _this.self._02;
		let a03 = _this.self._03;
		let a10 = _this.self._10;
		let a11 = _this.self._11;
		let a12 = _this.self._12;
		let a13 = _this.self._13;
		let a20 = _this.self._20;
		let a21 = _this.self._21;
		let a22 = _this.self._22;
		let a23 = _this.self._23;
		let a30 = _this.self._30;
		let a31 = _this.self._31;
		let a32 = _this.self._32;
		let a33 = _this.self._33;
		let b0 = mat.self._00;
		let b1 = mat.self._10;
		let b2 = mat.self._20;
		let b3 = mat.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._01;
		b1 = mat.self._11;
		b2 = mat.self._21;
		b3 = mat.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._02;
		b1 = mat.self._12;
		b2 = mat.self._22;
		b3 = mat.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._03;
		b1 = mat.self._13;
		b2 = mat.self._23;
		b3 = mat.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
		this.buildMatrix();
	}
	decompose() {
		let _this = this.local;
		let loc = this.loc;
		let quat = this.rot;
		let scale = this.scale;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		let _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		let _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		let _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this.self._10;
		_this3.y = _this.self._11;
		_this3.z = _this.self._12;
		_this3.w = 1.0;
		let _this4 = _this3;
		scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		let _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this.self._20;
		_this5.y = _this.self._21;
		_this5.z = _this.self._22;
		_this5.w = 1.0;
		let _this6 = _this5;
		scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		let _this7 = _this.self;
		let m3 = _this7._12;
		let m4 = _this7._22;
		let m5 = _this7._32;
		let m6 = _this7._13;
		let m7 = _this7._23;
		let m8 = _this7._33;
		let c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
		let m31 = _this7._12;
		let m41 = _this7._22;
		let m51 = _this7._32;
		let m61 = _this7._13;
		let m71 = _this7._23;
		let m81 = _this7._33;
		let c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
		let m32 = _this7._11;
		let m42 = _this7._21;
		let m52 = _this7._31;
		let m62 = _this7._13;
		let m72 = _this7._23;
		let m82 = _this7._33;
		let c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
		let m33 = _this7._11;
		let m43 = _this7._21;
		let m53 = _this7._31;
		let m63 = _this7._12;
		let m73 = _this7._22;
		let m83 = _this7._32;
		let c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
		if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		let invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		let m = iron_math_Mat4.helpMat;
		let m11 = m.self._00;
		let m12 = m.self._10;
		let m13 = m.self._20;
		let m21 = m.self._01;
		let m22 = m.self._11;
		let m23 = m.self._21;
		let m311 = m.self._02;
		let m321 = m.self._12;
		let m331 = m.self._22;
		let tr = m11 + m22 + m331;
		let s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
	}
	rotate(axis,f) {
		let _this = iron_object_Transform.q;
		let s = Math.sin(f * 0.5);
		_this.x = axis.x * s;
		_this.y = axis.y * s;
		_this.z = axis.z * s;
		_this.w = Math.cos(f * 0.5);
		let l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		let _this1 = this.rot;
		let q1 = iron_object_Transform.q;
		let q2 = this.rot;
		let q1x = q1.x;
		let q1y = q1.y;
		let q1z = q1.z;
		let q1w = q1.w;
		let q2x = q2.x;
		let q2y = q2.y;
		let q2z = q2.z;
		let q2w = q2.w;
		_this1.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this1.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this1.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this1.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		this.buildMatrix();
	}
	move(axis,f) {
		if(f == null) {
			f = 1.0;
		}
		let _this = this.loc;
		_this.x += axis.x * f;
		_this.y += axis.y * f;
		_this.z += axis.z * f;
		this.buildMatrix();
	}
	setRotation(x,y,z) {
		let _this = this.rot;
		let f = x / 2;
		let c1 = Math.cos(f);
		let s1 = Math.sin(f);
		f = y / 2;
		let c2 = Math.cos(f);
		let s2 = Math.sin(f);
		f = z / 2;
		let c3 = Math.cos(f);
		let s3 = Math.sin(f);
		_this.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this.w = c1 * c2 * c3 - s1 * s2 * s3;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
		this.dirty = true;
	}
	computeRadius() {
		this.radius = Math.sqrt(this.dim.x * this.dim.x + this.dim.y * this.dim.y + this.dim.z * this.dim.z);
	}
	computeDim() {
		if(this.object.raw == null) {
			this.computeRadius();
			return;
		}
		let d = this.object.raw.dimensions;
		if(d == null) {
			let _this = this.dim;
			_this.x = 2 * this.scale.x;
			_this.y = 2 * this.scale.y;
			_this.z = 2 * this.scale.z;
			_this.w = 1.0;
		} else {
			let _this = this.dim;
			let y = d.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.y;
			let z = d.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.z;
			_this.x = d.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
		}
		this.computeRadius();
	}
	applyParentInverse() {
		let pt = this.object.parent.transform;
		pt.buildMatrix();
		let _this = iron_object_Transform.temp;
		let m = pt.world;
		let a00 = m.self._00;
		let a01 = m.self._01;
		let a02 = m.self._02;
		let a03 = m.self._03;
		let a10 = m.self._10;
		let a11 = m.self._11;
		let a12 = m.self._12;
		let a13 = m.self._13;
		let a20 = m.self._20;
		let a21 = m.self._21;
		let a22 = m.self._22;
		let a23 = m.self._23;
		let a30 = m.self._30;
		let a31 = m.self._31;
		let a32 = m.self._32;
		let a33 = m.self._33;
		let b00 = a00 * a11 - a01 * a10;
		let b01 = a00 * a12 - a02 * a10;
		let b02 = a00 * a13 - a03 * a10;
		let b03 = a01 * a12 - a02 * a11;
		let b04 = a01 * a13 - a03 * a11;
		let b05 = a02 * a13 - a03 * a12;
		let b06 = a20 * a31 - a21 * a30;
		let b07 = a20 * a32 - a22 * a30;
		let b08 = a20 * a33 - a23 * a30;
		let b09 = a21 * a32 - a22 * a31;
		let b10 = a21 * a33 - a23 * a31;
		let b11 = a22 * a33 - a23 * a32;
		let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		let _this1 = this.local;
		let m1 = iron_object_Transform.temp;
		let a001 = _this1.self._00;
		let a011 = _this1.self._01;
		let a021 = _this1.self._02;
		let a031 = _this1.self._03;
		let a101 = _this1.self._10;
		let a111 = _this1.self._11;
		let a121 = _this1.self._12;
		let a131 = _this1.self._13;
		let a201 = _this1.self._20;
		let a211 = _this1.self._21;
		let a221 = _this1.self._22;
		let a231 = _this1.self._23;
		let a301 = _this1.self._30;
		let a311 = _this1.self._31;
		let a321 = _this1.self._32;
		let a331 = _this1.self._33;
		let b0 = m1.self._00;
		let b1 = m1.self._10;
		let b2 = m1.self._20;
		let b3 = m1.self._30;
		_this1.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		this.decompose();
		this.buildMatrix();
	}
	applyParent() {
		let pt = this.object.parent.transform;
		pt.buildMatrix();
		let _this = this.local;
		let m = pt.world;
		let a00 = _this.self._00;
		let a01 = _this.self._01;
		let a02 = _this.self._02;
		let a03 = _this.self._03;
		let a10 = _this.self._10;
		let a11 = _this.self._11;
		let a12 = _this.self._12;
		let a13 = _this.self._13;
		let a20 = _this.self._20;
		let a21 = _this.self._21;
		let a22 = _this.self._22;
		let a23 = _this.self._23;
		let a30 = _this.self._30;
		let a31 = _this.self._31;
		let a32 = _this.self._32;
		let a33 = _this.self._33;
		let b0 = m.self._00;
		let b1 = m.self._10;
		let b2 = m.self._20;
		let b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
		this.buildMatrix();
	}
	diff() {
		if(this.lastWorld == null) {
			let _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			let m = this.world;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			this.lastWorld = _this;
			return false;
		}
		let a = this.world;
		let b = this.lastWorld;
		let r = a.self._00 != b.self._00 || a.self._01 != b.self._01 || a.self._02 != b.self._02 || a.self._03 != b.self._03 || a.self._10 != b.self._10 || a.self._11 != b.self._11 || a.self._12 != b.self._12 || a.self._13 != b.self._13 || a.self._20 != b.self._20 || a.self._21 != b.self._21 || a.self._22 != b.self._22 || a.self._23 != b.self._23 || a.self._30 != b.self._30 || a.self._31 != b.self._31 || a.self._32 != b.self._32 || a.self._33 != b.self._33;
		if(r) {
			let _this = this.lastWorld;
			let m = this.world;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
		return r;
	}
	look() {
		let _this = this.world;
		return new iron_math_Vec4(_this.self._10,_this.self._11,_this.self._12);
	}
	right() {
		let _this = this.world;
		return new iron_math_Vec4(_this.self._00,_this.self._01,_this.self._02);
	}
	up() {
		let _this = this.world;
		return new iron_math_Vec4(_this.self._20,_this.self._21,_this.self._22);
	}
	worldx() {
		return this.world.self._30;
	}
	worldy() {
		return this.world.self._31;
	}
	worldz() {
		return this.world.self._32;
	}
}
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = "iron.object.Transform";
Object.assign(iron_object_Transform.prototype, {
	__class__: iron_object_Transform
	,world: null
	,localOnly: null
	,local: null
	,loc: null
	,rot: null
	,scale: null
	,scaleWorld: null
	,worldUnpack: null
	,dirty: null
	,object: null
	,dim: null
	,radius: null
	,boneParent: null
	,lastWorld: null
	,_eulerX: null
	,_eulerY: null
	,_eulerZ: null
	,dloc: null
	,drot: null
	,dscale: null
	,_deulerX: null
	,_deulerY: null
	,_deulerZ: null
});
class kha_math_FastMatrix3 {
	constructor(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
		this._00 = _00;
		this._10 = _10;
		this._20 = _20;
		this._01 = _01;
		this._11 = _11;
		this._21 = _21;
		this._02 = _02;
		this._12 = _12;
		this._22 = _22;
	}
	static fromMatrix3(m) {
		return new kha_math_FastMatrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
	}
}
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = "kha.math.FastMatrix3";
Object.assign(kha_math_FastMatrix3.prototype, {
	__class__: kha_math_FastMatrix3
	,_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
});
class iron_object_Uniforms {
	static setContextConstants(g,context,bindParams) {
		if(context.raw.constants != null) {
			let _g = 0;
			let _g1 = context.raw.constants.length;
			while(_g < _g1) {
				let i = _g++;
				let c = context.raw.constants[i];
				iron_object_Uniforms.setContextConstant(g,context.constants[i],c);
			}
		}
		if(bindParams != null) {
			let _g = 0;
			let _g1 = bindParams.length / 2 | 0;
			while(_g < _g1) {
				let i = _g++;
				let pos = i * 2;
				let rtID = bindParams[pos];
				let samplerID = bindParams[pos + 1];
				let attachDepth = false;
				let char = rtID.charAt(0);
				if(char == "_") {
					attachDepth = true;
					rtID = HxOverrides.substr(rtID,1,null);
				}
				let rt = attachDepth ? iron_RenderPath.active.depthToRenderTarget.h[rtID] : iron_RenderPath.active.renderTargets.h[rtID];
				iron_object_Uniforms.bindRenderTarget(g,rt,context,samplerID,attachDepth);
			}
		}
		if(context.raw.texture_units != null) {
			let _g = 0;
			let _g1 = context.raw.texture_units.length;
			while(_g < _g1) {
				let j = _g++;
				let tulink = context.raw.texture_units[j].link;
				if(tulink == null) {
					continue;
				}
				if(tulink.charAt(0) == "$") {
					g.setTexture(context.textureUnits[j],iron_Scene.active.embedded.h[HxOverrides.substr(tulink,1,null)]);
					if(tulink.endsWith(".raw")) {
						g.setTexture3DParameters(context.textureUnits[j],0,0,0,1,1,0);
					} else {
						g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
					}
				} else {
					switch(tulink) {
					case "_envmap":
						let w = iron_Scene.active.world;
						if(w != null) {
							g.setTexture(context.textureUnits[j],w.envmap);
							g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
						}
						break;
					case "_envmapRadiance":
						let w1 = iron_Scene.active.world;
						if(w1 != null) {
							g.setTexture(context.textureUnits[j],w1.probe.radiance);
							g.setTextureParameters(context.textureUnits[j],0,0,1,1,2);
						}
						break;
					}
				}
			}
		}
	}
	static setObjectConstants(g,context,object) {
		if(context.raw.constants != null) {
			let _g = 0;
			let _g1 = context.raw.constants.length;
			while(_g < _g1) {
				let i = _g++;
				let c = context.raw.constants[i];
				iron_object_Uniforms.setObjectConstant(g,object,context.constants[i],c);
			}
		}
		if(iron_object_Uniforms.externalTextureLinks != null) {
			if(context.raw.texture_units != null) {
				let _g = 0;
				let _g1 = context.raw.texture_units.length;
				while(_g < _g1) {
					let j = _g++;
					let tu = context.raw.texture_units[j];
					if(tu.link == null) {
						continue;
					}
					let tuAddrU;
					switch(tu.addressing_u) {
					case "clamp":
						tuAddrU = 2;
						break;
					case "mirror":
						tuAddrU = 1;
						break;
					default:
						tuAddrU = 0;
					}
					let tuAddrV;
					switch(tu.addressing_v) {
					case "clamp":
						tuAddrV = 2;
						break;
					case "mirror":
						tuAddrV = 1;
						break;
					default:
						tuAddrV = 0;
					}
					let tuFilterMin;
					switch(tu.filter_min) {
					case "anisotropic":
						tuFilterMin = 2;
						break;
					case "point":
						tuFilterMin = 0;
						break;
					default:
						tuFilterMin = 1;
					}
					let tuFilterMag;
					switch(tu.filter_mag) {
					case "anisotropic":
						tuFilterMag = 2;
						break;
					case "point":
						tuFilterMag = 0;
						break;
					default:
						tuFilterMag = 1;
					}
					let tuMipMapFilter;
					switch(tu.mipmap_filter) {
					case "linear":
						tuMipMapFilter = 2;
						break;
					case "point":
						tuMipMapFilter = 1;
						break;
					default:
						tuMipMapFilter = 0;
					}
					let _g1 = 0;
					let _g2 = iron_object_Uniforms.externalTextureLinks;
					while(_g1 < _g2.length) {
						let f = _g2[_g1];
						++_g1;
						let image = f(object,iron_object_Uniforms.currentMat(object),tu.link);
						if(image != null) {
							if(tu.link.endsWith("_depth")) {
								g.setTextureDepth(context.textureUnits[j],image);
							} else {
								g.setTexture(context.textureUnits[j],image);
							}
							g.setTextureParameters(context.textureUnits[j],tuAddrU,tuAddrV,tuFilterMin,tuFilterMag,tuMipMapFilter);
							break;
						}
					}
				}
			}
		}
	}
	static bindRenderTarget(g,rt,context,samplerID,attachDepth) {
		if(rt != null) {
			let tus = context.raw.texture_units;
			let _g = 0;
			let _g1 = tus.length;
			while(_g < _g1) {
				let j = _g++;
				if(samplerID == tus[j].name) {
					let isImage = tus[j].is_image != null && tus[j].is_image;
					let paramsSet = false;
					if(rt.raw.depth > 1) {
						g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,2,2);
						paramsSet = true;
					}
					if(isImage) {
						g.setImageTexture(context.textureUnits[j],rt.image);
						g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,0,2);
						paramsSet = true;
					} else if(rt.isCubeMap) {
						if(attachDepth) {
							g.setCubeMapDepth(context.textureUnits[j],rt.cubeMap);
						} else {
							g.setCubeMap(context.textureUnits[j],rt.cubeMap);
						}
					} else if(attachDepth) {
						g.setTextureDepth(context.textureUnits[j],rt.image);
					} else {
						g.setTexture(context.textureUnits[j],rt.image);
					}
					if(!paramsSet && rt.raw.mipmaps != null && rt.raw.mipmaps == true && !isImage) {
						g.setTextureParameters(context.textureUnits[j],2,2,1,1,2);
						paramsSet = true;
					}
					if(!paramsSet) {
						if(rt.raw.name.startsWith("bloom")) {
							g.setTextureParameters(context.textureUnits[j],2,2,1,1,2);
						}
						if(samplerID.startsWith("shadowMap")) {
							if(rt.isCubeMap) {
								g.setCubeMapCompareMode(context.textureUnits[j],true);
							} else {
								g.setTextureParameters(context.textureUnits[j],2,2,1,1,0);
								g.setTextureCompareMode(context.textureUnits[j],true);
							}
							paramsSet = true;
						} else if(attachDepth) {
							g.setTextureParameters(context.textureUnits[j],2,2,0,0,0);
							paramsSet = true;
						}
					}
					if(!paramsSet) {
						let oc = context.overrideContext;
						let allowParams = oc == null || oc.shared_sampler == null || oc.shared_sampler == samplerID;
						if(allowParams) {
							let addressing = oc != null && oc.addressing == "repeat" ? 0 : 2;
							let filter = oc != null && oc.filter == "point" ? 0 : iron_object_Uniforms.defaultFilter;
							g.setTextureParameters(context.textureUnits[j],addressing,addressing,filter,filter,0);
						}
						paramsSet = true;
					}
				}
			}
		}
	}
	static setContextConstant(g,location,c) {
		if(c.link == null) {
			return true;
		}
		let camera = iron_Scene.active.camera;
		let light = iron_RenderPath.active.light;
		if(c.type == "mat4") {
			let m = null;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else {
				switch(_g) {
				case "_biasLightViewProjectionMatrix":
					if(light != null) {
						let _this = iron_object_Uniforms.helpMat;
						let m1 = light.VP;
						_this.self._00 = m1.self._00;
						_this.self._01 = m1.self._01;
						_this.self._02 = m1.self._02;
						_this.self._03 = m1.self._03;
						_this.self._10 = m1.self._10;
						_this.self._11 = m1.self._11;
						_this.self._12 = m1.self._12;
						_this.self._13 = m1.self._13;
						_this.self._20 = m1.self._20;
						_this.self._21 = m1.self._21;
						_this.self._22 = m1.self._22;
						_this.self._23 = m1.self._23;
						_this.self._30 = m1.self._30;
						_this.self._31 = m1.self._31;
						_this.self._32 = m1.self._32;
						_this.self._33 = m1.self._33;
						let _this1 = iron_object_Uniforms.helpMat;
						let m2 = iron_object_Uniforms.biasMat;
						let a00 = _this1.self._00;
						let a01 = _this1.self._01;
						let a02 = _this1.self._02;
						let a03 = _this1.self._03;
						let a10 = _this1.self._10;
						let a11 = _this1.self._11;
						let a12 = _this1.self._12;
						let a13 = _this1.self._13;
						let a20 = _this1.self._20;
						let a21 = _this1.self._21;
						let a22 = _this1.self._22;
						let a23 = _this1.self._23;
						let a30 = _this1.self._30;
						let a31 = _this1.self._31;
						let a32 = _this1.self._32;
						let a33 = _this1.self._33;
						let b0 = m2.self._00;
						let b1 = m2.self._10;
						let b2 = m2.self._20;
						let b3 = m2.self._30;
						_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m2.self._01;
						b1 = m2.self._11;
						b2 = m2.self._21;
						b3 = m2.self._31;
						_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m2.self._02;
						b1 = m2.self._12;
						b2 = m2.self._22;
						b3 = m2.self._32;
						_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m2.self._03;
						b1 = m2.self._13;
						b2 = m2.self._23;
						b3 = m2.self._33;
						_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						m = iron_object_Uniforms.helpMat;
					}
					break;
				case "_inverseProjectionMatrix":
					let _this = iron_object_Uniforms.helpMat;
					let m1 = camera.P;
					let a00 = m1.self._00;
					let a01 = m1.self._01;
					let a02 = m1.self._02;
					let a03 = m1.self._03;
					let a10 = m1.self._10;
					let a11 = m1.self._11;
					let a12 = m1.self._12;
					let a13 = m1.self._13;
					let a20 = m1.self._20;
					let a21 = m1.self._21;
					let a22 = m1.self._22;
					let a23 = m1.self._23;
					let a30 = m1.self._30;
					let a31 = m1.self._31;
					let a32 = m1.self._32;
					let a33 = m1.self._33;
					let b00 = a00 * a11 - a01 * a10;
					let b01 = a00 * a12 - a02 * a10;
					let b02 = a00 * a13 - a03 * a10;
					let b03 = a01 * a12 - a02 * a11;
					let b04 = a01 * a13 - a03 * a11;
					let b05 = a02 * a13 - a03 * a12;
					let b06 = a20 * a31 - a21 * a30;
					let b07 = a20 * a32 - a22 * a30;
					let b08 = a20 * a33 - a23 * a30;
					let b09 = a21 * a32 - a22 * a31;
					let b10 = a21 * a33 - a23 * a31;
					let b11 = a22 * a33 - a23 * a32;
					let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						_this.self._00 = 1.0;
						_this.self._01 = 0.0;
						_this.self._02 = 0.0;
						_this.self._03 = 0.0;
						_this.self._10 = 0.0;
						_this.self._11 = 1.0;
						_this.self._12 = 0.0;
						_this.self._13 = 0.0;
						_this.self._20 = 0.0;
						_this.self._21 = 0.0;
						_this.self._22 = 1.0;
						_this.self._23 = 0.0;
						_this.self._30 = 0.0;
						_this.self._31 = 0.0;
						_this.self._32 = 0.0;
						_this.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
					m = iron_object_Uniforms.helpMat;
					break;
				case "_inverseViewProjectionMatrix":
					let _this1 = iron_object_Uniforms.helpMat;
					let m2 = camera.V;
					_this1.self._00 = m2.self._00;
					_this1.self._01 = m2.self._01;
					_this1.self._02 = m2.self._02;
					_this1.self._03 = m2.self._03;
					_this1.self._10 = m2.self._10;
					_this1.self._11 = m2.self._11;
					_this1.self._12 = m2.self._12;
					_this1.self._13 = m2.self._13;
					_this1.self._20 = m2.self._20;
					_this1.self._21 = m2.self._21;
					_this1.self._22 = m2.self._22;
					_this1.self._23 = m2.self._23;
					_this1.self._30 = m2.self._30;
					_this1.self._31 = m2.self._31;
					_this1.self._32 = m2.self._32;
					_this1.self._33 = m2.self._33;
					let _this2 = iron_object_Uniforms.helpMat;
					let m3 = camera.P;
					let a001 = _this2.self._00;
					let a011 = _this2.self._01;
					let a021 = _this2.self._02;
					let a031 = _this2.self._03;
					let a101 = _this2.self._10;
					let a111 = _this2.self._11;
					let a121 = _this2.self._12;
					let a131 = _this2.self._13;
					let a201 = _this2.self._20;
					let a211 = _this2.self._21;
					let a221 = _this2.self._22;
					let a231 = _this2.self._23;
					let a301 = _this2.self._30;
					let a311 = _this2.self._31;
					let a321 = _this2.self._32;
					let a331 = _this2.self._33;
					let b0 = m3.self._00;
					let b1 = m3.self._10;
					let b2 = m3.self._20;
					let b3 = m3.self._30;
					_this2.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
					_this2.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
					_this2.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
					_this2.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
					b0 = m3.self._01;
					b1 = m3.self._11;
					b2 = m3.self._21;
					b3 = m3.self._31;
					_this2.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
					_this2.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
					_this2.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
					_this2.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
					b0 = m3.self._02;
					b1 = m3.self._12;
					b2 = m3.self._22;
					b3 = m3.self._32;
					_this2.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
					_this2.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
					_this2.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
					_this2.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
					b0 = m3.self._03;
					b1 = m3.self._13;
					b2 = m3.self._23;
					b3 = m3.self._33;
					_this2.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
					_this2.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
					_this2.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
					_this2.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
					let _this3 = iron_object_Uniforms.helpMat;
					let m4 = iron_object_Uniforms.helpMat;
					let a002 = m4.self._00;
					let a012 = m4.self._01;
					let a022 = m4.self._02;
					let a032 = m4.self._03;
					let a102 = m4.self._10;
					let a112 = m4.self._11;
					let a122 = m4.self._12;
					let a132 = m4.self._13;
					let a202 = m4.self._20;
					let a212 = m4.self._21;
					let a222 = m4.self._22;
					let a232 = m4.self._23;
					let a302 = m4.self._30;
					let a312 = m4.self._31;
					let a322 = m4.self._32;
					let a332 = m4.self._33;
					let b001 = a002 * a112 - a012 * a102;
					let b011 = a002 * a122 - a022 * a102;
					let b021 = a002 * a132 - a032 * a102;
					let b031 = a012 * a122 - a022 * a112;
					let b041 = a012 * a132 - a032 * a112;
					let b051 = a022 * a132 - a032 * a122;
					let b061 = a202 * a312 - a212 * a302;
					let b071 = a202 * a322 - a222 * a302;
					let b081 = a202 * a332 - a232 * a302;
					let b091 = a212 * a322 - a222 * a312;
					let b101 = a212 * a332 - a232 * a312;
					let b111 = a222 * a332 - a232 * a322;
					let det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
					if(det1 == 0.0) {
						_this3.self._00 = 1.0;
						_this3.self._01 = 0.0;
						_this3.self._02 = 0.0;
						_this3.self._03 = 0.0;
						_this3.self._10 = 0.0;
						_this3.self._11 = 1.0;
						_this3.self._12 = 0.0;
						_this3.self._13 = 0.0;
						_this3.self._20 = 0.0;
						_this3.self._21 = 0.0;
						_this3.self._22 = 1.0;
						_this3.self._23 = 0.0;
						_this3.self._30 = 0.0;
						_this3.self._31 = 0.0;
						_this3.self._32 = 0.0;
						_this3.self._33 = 1.0;
					} else {
						det1 = 1.0 / det1;
						_this3.self._00 = (a112 * b111 - a122 * b101 + a132 * b091) * det1;
						_this3.self._01 = (a022 * b101 - a012 * b111 - a032 * b091) * det1;
						_this3.self._02 = (a312 * b051 - a322 * b041 + a332 * b031) * det1;
						_this3.self._03 = (a222 * b041 - a212 * b051 - a232 * b031) * det1;
						_this3.self._10 = (a122 * b081 - a102 * b111 - a132 * b071) * det1;
						_this3.self._11 = (a002 * b111 - a022 * b081 + a032 * b071) * det1;
						_this3.self._12 = (a322 * b021 - a302 * b051 - a332 * b011) * det1;
						_this3.self._13 = (a202 * b051 - a222 * b021 + a232 * b011) * det1;
						_this3.self._20 = (a102 * b101 - a112 * b081 + a132 * b061) * det1;
						_this3.self._21 = (a012 * b081 - a002 * b101 - a032 * b061) * det1;
						_this3.self._22 = (a302 * b041 - a312 * b021 + a332 * b001) * det1;
						_this3.self._23 = (a212 * b021 - a202 * b041 - a232 * b001) * det1;
						_this3.self._30 = (a112 * b071 - a102 * b091 - a122 * b061) * det1;
						_this3.self._31 = (a002 * b091 - a012 * b071 + a022 * b061) * det1;
						_this3.self._32 = (a312 * b011 - a302 * b031 - a322 * b001) * det1;
						_this3.self._33 = (a202 * b031 - a212 * b011 + a222 * b001) * det1;
					}
					m = iron_object_Uniforms.helpMat;
					break;
				case "_lightViewProjectionMatrix":
					if(light != null) {
						m = light.VP;
					}
					break;
				case "_prevViewProjectionMatrix":
					let _this4 = iron_object_Uniforms.helpMat;
					let m5 = camera.prevV;
					_this4.self._00 = m5.self._00;
					_this4.self._01 = m5.self._01;
					_this4.self._02 = m5.self._02;
					_this4.self._03 = m5.self._03;
					_this4.self._10 = m5.self._10;
					_this4.self._11 = m5.self._11;
					_this4.self._12 = m5.self._12;
					_this4.self._13 = m5.self._13;
					_this4.self._20 = m5.self._20;
					_this4.self._21 = m5.self._21;
					_this4.self._22 = m5.self._22;
					_this4.self._23 = m5.self._23;
					_this4.self._30 = m5.self._30;
					_this4.self._31 = m5.self._31;
					_this4.self._32 = m5.self._32;
					_this4.self._33 = m5.self._33;
					let _this5 = iron_object_Uniforms.helpMat;
					let m6 = camera.P;
					let a003 = _this5.self._00;
					let a013 = _this5.self._01;
					let a023 = _this5.self._02;
					let a033 = _this5.self._03;
					let a103 = _this5.self._10;
					let a113 = _this5.self._11;
					let a123 = _this5.self._12;
					let a133 = _this5.self._13;
					let a203 = _this5.self._20;
					let a213 = _this5.self._21;
					let a223 = _this5.self._22;
					let a233 = _this5.self._23;
					let a303 = _this5.self._30;
					let a313 = _this5.self._31;
					let a323 = _this5.self._32;
					let a333 = _this5.self._33;
					let b010 = m6.self._00;
					let b12 = m6.self._10;
					let b21 = m6.self._20;
					let b31 = m6.self._30;
					_this5.self._00 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
					_this5.self._10 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
					_this5.self._20 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
					_this5.self._30 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
					b010 = m6.self._01;
					b12 = m6.self._11;
					b21 = m6.self._21;
					b31 = m6.self._31;
					_this5.self._01 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
					_this5.self._11 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
					_this5.self._21 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
					_this5.self._31 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
					b010 = m6.self._02;
					b12 = m6.self._12;
					b21 = m6.self._22;
					b31 = m6.self._32;
					_this5.self._02 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
					_this5.self._12 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
					_this5.self._22 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
					_this5.self._32 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
					b010 = m6.self._03;
					b12 = m6.self._13;
					b21 = m6.self._23;
					b31 = m6.self._33;
					_this5.self._03 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
					_this5.self._13 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
					_this5.self._23 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
					_this5.self._33 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
					m = iron_object_Uniforms.helpMat;
					break;
				case "_projectionMatrix":
					m = camera.P;
					break;
				case "_skydomeMatrix":
					let tr = camera.transform;
					let _this6 = iron_object_Uniforms.helpVec;
					_this6.x = tr.world.self._30;
					_this6.y = tr.world.self._31;
					_this6.z = tr.world.self._32 - 3.5;
					_this6.w = 1.0;
					let bounds = camera.data.raw.far_plane * 0.95;
					let _this7 = iron_object_Uniforms.helpVec2;
					_this7.x = bounds;
					_this7.y = bounds;
					_this7.z = bounds;
					_this7.w = 1.0;
					let _this8 = iron_object_Uniforms.helpMat;
					let loc = iron_object_Uniforms.helpVec;
					let quat = iron_object_Uniforms.helpQuat;
					let sc = iron_object_Uniforms.helpVec2;
					let x = quat.x;
					let y = quat.y;
					let z = quat.z;
					let w = quat.w;
					let x2 = x + x;
					let y2 = y + y;
					let z2 = z + z;
					let xx = x * x2;
					let xy = x * y2;
					let xz = x * z2;
					let yy = y * y2;
					let yz = y * z2;
					let zz = z * z2;
					let wx = w * x2;
					let wy = w * y2;
					let wz = w * z2;
					_this8.self._00 = 1.0 - (yy + zz);
					_this8.self._10 = xy - wz;
					_this8.self._20 = xz + wy;
					_this8.self._01 = xy + wz;
					_this8.self._11 = 1.0 - (xx + zz);
					_this8.self._21 = yz - wx;
					_this8.self._02 = xz - wy;
					_this8.self._12 = yz + wx;
					_this8.self._22 = 1.0 - (xx + yy);
					_this8.self._03 = 0.0;
					_this8.self._13 = 0.0;
					_this8.self._23 = 0.0;
					_this8.self._30 = 0.0;
					_this8.self._31 = 0.0;
					_this8.self._32 = 0.0;
					_this8.self._33 = 1.0;
					let x1 = sc.x;
					let y1 = sc.y;
					let z1 = sc.z;
					_this8.self._00 *= x1;
					_this8.self._01 *= x1;
					_this8.self._02 *= x1;
					_this8.self._03 *= x1;
					_this8.self._10 *= y1;
					_this8.self._11 *= y1;
					_this8.self._12 *= y1;
					_this8.self._13 *= y1;
					_this8.self._20 *= z1;
					_this8.self._21 *= z1;
					_this8.self._22 *= z1;
					_this8.self._23 *= z1;
					_this8.self._30 = loc.x;
					_this8.self._31 = loc.y;
					_this8.self._32 = loc.z;
					let _this9 = iron_object_Uniforms.helpMat;
					let m7 = camera.V;
					let a004 = _this9.self._00;
					let a014 = _this9.self._01;
					let a024 = _this9.self._02;
					let a034 = _this9.self._03;
					let a104 = _this9.self._10;
					let a114 = _this9.self._11;
					let a124 = _this9.self._12;
					let a134 = _this9.self._13;
					let a204 = _this9.self._20;
					let a214 = _this9.self._21;
					let a224 = _this9.self._22;
					let a234 = _this9.self._23;
					let a304 = _this9.self._30;
					let a314 = _this9.self._31;
					let a324 = _this9.self._32;
					let a334 = _this9.self._33;
					let b012 = m7.self._00;
					let b13 = m7.self._10;
					let b22 = m7.self._20;
					let b32 = m7.self._30;
					_this9.self._00 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
					_this9.self._10 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
					_this9.self._20 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
					_this9.self._30 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
					b012 = m7.self._01;
					b13 = m7.self._11;
					b22 = m7.self._21;
					b32 = m7.self._31;
					_this9.self._01 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
					_this9.self._11 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
					_this9.self._21 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
					_this9.self._31 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
					b012 = m7.self._02;
					b13 = m7.self._12;
					b22 = m7.self._22;
					b32 = m7.self._32;
					_this9.self._02 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
					_this9.self._12 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
					_this9.self._22 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
					_this9.self._32 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
					b012 = m7.self._03;
					b13 = m7.self._13;
					b22 = m7.self._23;
					b32 = m7.self._33;
					_this9.self._03 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
					_this9.self._13 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
					_this9.self._23 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
					_this9.self._33 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
					let _this10 = iron_object_Uniforms.helpMat;
					let m8 = camera.P;
					let a005 = _this10.self._00;
					let a015 = _this10.self._01;
					let a025 = _this10.self._02;
					let a035 = _this10.self._03;
					let a105 = _this10.self._10;
					let a115 = _this10.self._11;
					let a125 = _this10.self._12;
					let a135 = _this10.self._13;
					let a205 = _this10.self._20;
					let a215 = _this10.self._21;
					let a225 = _this10.self._22;
					let a235 = _this10.self._23;
					let a305 = _this10.self._30;
					let a315 = _this10.self._31;
					let a325 = _this10.self._32;
					let a335 = _this10.self._33;
					let b013 = m8.self._00;
					let b14 = m8.self._10;
					let b23 = m8.self._20;
					let b33 = m8.self._30;
					_this10.self._00 = a005 * b013 + a015 * b14 + a025 * b23 + a035 * b33;
					_this10.self._10 = a105 * b013 + a115 * b14 + a125 * b23 + a135 * b33;
					_this10.self._20 = a205 * b013 + a215 * b14 + a225 * b23 + a235 * b33;
					_this10.self._30 = a305 * b013 + a315 * b14 + a325 * b23 + a335 * b33;
					b013 = m8.self._01;
					b14 = m8.self._11;
					b23 = m8.self._21;
					b33 = m8.self._31;
					_this10.self._01 = a005 * b013 + a015 * b14 + a025 * b23 + a035 * b33;
					_this10.self._11 = a105 * b013 + a115 * b14 + a125 * b23 + a135 * b33;
					_this10.self._21 = a205 * b013 + a215 * b14 + a225 * b23 + a235 * b33;
					_this10.self._31 = a305 * b013 + a315 * b14 + a325 * b23 + a335 * b33;
					b013 = m8.self._02;
					b14 = m8.self._12;
					b23 = m8.self._22;
					b33 = m8.self._32;
					_this10.self._02 = a005 * b013 + a015 * b14 + a025 * b23 + a035 * b33;
					_this10.self._12 = a105 * b013 + a115 * b14 + a125 * b23 + a135 * b33;
					_this10.self._22 = a205 * b013 + a215 * b14 + a225 * b23 + a235 * b33;
					_this10.self._32 = a305 * b013 + a315 * b14 + a325 * b23 + a335 * b33;
					b013 = m8.self._03;
					b14 = m8.self._13;
					b23 = m8.self._23;
					b33 = m8.self._33;
					_this10.self._03 = a005 * b013 + a015 * b14 + a025 * b23 + a035 * b33;
					_this10.self._13 = a105 * b013 + a115 * b14 + a125 * b23 + a135 * b33;
					_this10.self._23 = a205 * b013 + a215 * b14 + a225 * b23 + a235 * b33;
					_this10.self._33 = a305 * b013 + a315 * b14 + a325 * b23 + a335 * b33;
					m = iron_object_Uniforms.helpMat;
					break;
				case "_transposeViewMatrix":
					let _this11 = iron_object_Uniforms.helpMat;
					let m9 = camera.V;
					_this11.self._00 = m9.self._00;
					_this11.self._01 = m9.self._01;
					_this11.self._02 = m9.self._02;
					_this11.self._03 = m9.self._03;
					_this11.self._10 = m9.self._10;
					_this11.self._11 = m9.self._11;
					_this11.self._12 = m9.self._12;
					_this11.self._13 = m9.self._13;
					_this11.self._20 = m9.self._20;
					_this11.self._21 = m9.self._21;
					_this11.self._22 = m9.self._22;
					_this11.self._23 = m9.self._23;
					_this11.self._30 = m9.self._30;
					_this11.self._31 = m9.self._31;
					_this11.self._32 = m9.self._32;
					_this11.self._33 = m9.self._33;
					let _this12 = iron_object_Uniforms.helpMat;
					let f = _this12.self._01;
					_this12.self._01 = _this12.self._10;
					_this12.self._10 = f;
					f = _this12.self._02;
					_this12.self._02 = _this12.self._20;
					_this12.self._20 = f;
					f = _this12.self._12;
					_this12.self._12 = _this12.self._21;
					_this12.self._21 = f;
					m = iron_object_Uniforms.helpMat;
					break;
				case "_viewMatrix":
					m = camera.V;
					break;
				case "_viewProjectionMatrix":
					m = camera.VP;
					break;
				default:
					return false;
				}
			}
			g.setMatrix(location,m != null ? m.self : new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));
			return true;
		} else if(c.type == "vec4") {
			let v = null;
			let _this = iron_object_Uniforms.helpVec;
			let w = 0;
			if(w == null) {
				w = 1.0;
			}
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = w;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else if(_g == "_input") {
				let _this = iron_object_Uniforms.helpVec;
				let x = iron_system_Input.getMouse().x / iron_App.w();
				let y = iron_system_Input.getMouse().y / iron_App.h();
				let z = iron_system_Input.getMouse().down() ? 1.0 : 0.0;
				let w = 0.0;
				if(w == null) {
					w = 1.0;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = w;
				v = iron_object_Uniforms.helpVec;
			} else {
				return false;
			}
			if(v != null) {
				g.setFloat4(location,v.x,v.y,v.z,v.w);
			} else {
				g.setFloat4(location,0,0,0,0);
			}
			return true;
		} else if(c.type == "vec3") {
			let v = null;
			let _this = iron_object_Uniforms.helpVec;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else {
				switch(_g) {
				case "_backgroundCol":
					if(camera.data.raw.clear_color != null) {
						let _this = iron_object_Uniforms.helpVec;
						let y = camera.data.raw.clear_color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
						let z = camera.data.raw.clear_color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
						_this.x = camera.data.raw.clear_color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
						_this.y = y;
						_this.z = z;
						_this.w = 1.0;
					}
					v = iron_object_Uniforms.helpVec;
					break;
				case "_cameraLook":
					let _this1 = new iron_math_Vec4(-camera.transform.world.self._20,-camera.transform.world.self._21,-camera.transform.world.self._22);
					let n = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
					if(n > 0.0) {
						let invN = 1.0 / n;
						_this1.x *= invN;
						_this1.y *= invN;
						_this1.z *= invN;
					}
					iron_object_Uniforms.helpVec = _this1;
					v = iron_object_Uniforms.helpVec;
					break;
				case "_cameraPosition":
					let _this2 = iron_object_Uniforms.helpVec;
					_this2.x = camera.transform.world.self._30;
					_this2.y = camera.transform.world.self._31;
					_this2.z = camera.transform.world.self._32;
					_this2.w = 1.0;
					v = iron_object_Uniforms.helpVec;
					break;
				case "_cameraRight":
					let _this3 = new iron_math_Vec4(camera.transform.world.self._00,camera.transform.world.self._01,camera.transform.world.self._02);
					let n1 = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
					if(n1 > 0.0) {
						let invN = 1.0 / n1;
						_this3.x *= invN;
						_this3.y *= invN;
						_this3.z *= invN;
					}
					iron_object_Uniforms.helpVec = _this3;
					v = iron_object_Uniforms.helpVec;
					break;
				case "_cameraUp":
					let _this4 = new iron_math_Vec4(camera.transform.world.self._10,camera.transform.world.self._11,camera.transform.world.self._12);
					let n2 = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
					if(n2 > 0.0) {
						let invN = 1.0 / n2;
						_this4.x *= invN;
						_this4.y *= invN;
						_this4.z *= invN;
					}
					iron_object_Uniforms.helpVec = _this4;
					v = iron_object_Uniforms.helpVec;
					break;
				case "_hosekSunDirection":
					let w = iron_Scene.active.world;
					if(w != null) {
						let _this = iron_object_Uniforms.helpVec;
						let y = w.raw.sun_direction.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
						let z = w.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) > 0 ? w.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) : 0;
						_this.x = w.raw.sun_direction.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
						_this.y = y;
						_this.z = z;
						_this.w = 1.0;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_lightDirection":
					if(light != null) {
						let _this = new iron_math_Vec4(light.V.self._02,light.V.self._12,light.V.self._22);
						let n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
						if(n > 0.0) {
							let invN = 1.0 / n;
							_this.x *= invN;
							_this.y *= invN;
							_this.z *= invN;
						}
						iron_object_Uniforms.helpVec = _this;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_lightPosition":
					if(light != null) {
						let _this = iron_object_Uniforms.helpVec;
						_this.x = light.transform.world.self._30;
						_this.y = light.transform.world.self._31;
						_this.z = light.transform.world.self._32;
						_this.w = 1.0;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_pointColor":
					let point = iron_RenderPath.active.point;
					if(point != null) {
						let str = point.visible ? point.data.raw.strength : 0.0;
						let _this = iron_object_Uniforms.helpVec;
						let y = point.data.raw.color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						let z = point.data.raw.color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						_this.x = point.data.raw.color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						_this.y = y;
						_this.z = z;
						_this.w = 1.0;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_pointPosition":
					let point1 = iron_RenderPath.active.point;
					if(point1 != null) {
						let _this = iron_object_Uniforms.helpVec;
						_this.x = point1.transform.world.self._30;
						_this.y = point1.transform.world.self._31;
						_this.z = point1.transform.world.self._32;
						_this.w = 1.0;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_sunColor":
					let sun = iron_RenderPath.active.sun;
					if(sun != null) {
						let str = sun.visible ? sun.data.raw.strength : 0.0;
						let _this = iron_object_Uniforms.helpVec;
						let y = sun.data.raw.color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						let z = sun.data.raw.color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						_this.x = sun.data.raw.color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
						_this.y = y;
						_this.z = z;
						_this.w = 1.0;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				case "_sunDirection":
					let sun1 = iron_RenderPath.active.sun;
					if(sun1 != null) {
						let _this = new iron_math_Vec4(sun1.V.self._02,sun1.V.self._12,sun1.V.self._22);
						let n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
						if(n > 0.0) {
							let invN = 1.0 / n;
							_this.x *= invN;
							_this.y *= invN;
							_this.z *= invN;
						}
						iron_object_Uniforms.helpVec = _this;
						v = iron_object_Uniforms.helpVec;
					}
					break;
				default:
					return false;
				}
			}
			if(v != null) {
				g.setFloat3(location,v.x,v.y,v.z);
			} else {
				g.setFloat3(location,0.0,0.0,0.0);
			}
			return true;
		} else if(c.type == "vec2") {
			let v = null;
			let _this = iron_object_Uniforms.helpVec;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else {
				switch(_g) {
				case "_aspectRatio":
					v = iron_object_Uniforms.helpVec;
					v.x = iron_RenderPath.active.currentH / iron_RenderPath.active.currentW;
					v.y = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
					v.x = v.x > 1.0 ? 1.0 : v.x;
					v.y = v.y > 1.0 ? 1.0 : v.y;
					break;
				case "_cameraPlane":
					v = iron_object_Uniforms.helpVec;
					v.x = camera.data.raw.near_plane;
					v.y = camera.data.raw.far_plane;
					break;
				case "_cameraPlaneProj":
					let near = camera.data.raw.near_plane;
					let far = camera.data.raw.far_plane;
					v = iron_object_Uniforms.helpVec;
					v.x = far / (far - near);
					v.y = -far * near / (far - near);
					break;
				case "_lightPlane":
					if(light != null) {
						v = iron_object_Uniforms.helpVec;
						v.x = light.data.raw.near_plane;
						v.y = light.data.raw.far_plane;
					}
					break;
				case "_lightPlaneProj":
					if(light != null) {
						let near = light.data.raw.near_plane;
						let far = light.data.raw.far_plane;
						let a = far + near;
						let b = far - near;
						let f2 = 2.0;
						let c = f2 * far * near;
						v = iron_object_Uniforms.helpVec;
						v.x = a / b;
						v.y = c / b;
					}
					break;
				case "_screenSize":
					v = iron_object_Uniforms.helpVec;
					v.x = iron_RenderPath.active.currentW;
					v.y = iron_RenderPath.active.currentH;
					break;
				case "_screenSizeInv":
					v = iron_object_Uniforms.helpVec;
					v.x = 1.0 / iron_RenderPath.active.currentW;
					v.y = 1.0 / iron_RenderPath.active.currentH;
					break;
				case "_shadowMapSize":
					if(light != null && light.data.raw.cast_shadow) {
						v = iron_object_Uniforms.helpVec;
						v.x = v.y = light.data.raw.shadowmap_size;
					}
					break;
				case "_vec2x":
					v = iron_object_Uniforms.helpVec;
					v.x = 1.0;
					v.y = 0.0;
					break;
				case "_vec2x2":
					v = iron_object_Uniforms.helpVec;
					v.x = 2.0;
					v.y = 0.0;
					break;
				case "_vec2x2Inv":
					v = iron_object_Uniforms.helpVec;
					v.x = 2.0 / iron_RenderPath.active.currentW;
					v.y = 0.0;
					break;
				case "_vec2xInv":
					v = iron_object_Uniforms.helpVec;
					v.x = 1.0 / iron_RenderPath.active.currentW;
					v.y = 0.0;
					break;
				case "_vec2y":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 1.0;
					break;
				case "_vec2y2":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 2.0;
					break;
				case "_vec2y2Inv":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 2.0 / iron_RenderPath.active.currentH;
					break;
				case "_vec2y3":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 3.0;
					break;
				case "_vec2y3Inv":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 3.0 / iron_RenderPath.active.currentH;
					break;
				case "_vec2yInv":
					v = iron_object_Uniforms.helpVec;
					v.x = 0.0;
					v.y = 1.0 / iron_RenderPath.active.currentH;
					break;
				case "_windowSize":
					v = iron_object_Uniforms.helpVec;
					v.x = iron_App.w();
					v.y = iron_App.h();
					break;
				default:
					return false;
				}
			}
			if(v != null) {
				g.setFloat2(location,v.x,v.y);
			} else {
				g.setFloat2(location,0.0,0.0);
			}
			return true;
		} else if(c.type == "float") {
			let f = null;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else {
				switch(_g) {
				case "_aspectRatioF":
					f = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
					break;
				case "_aspectRatioWindowF":
					f = iron_App.w() / iron_App.h();
					break;
				case "_envmapStrength":
					f = iron_Scene.active.world == null ? 0.0 : iron_Scene.active.world.probe.raw.strength;
					break;
				case "_fieldOfView":
					f = camera.data.raw.fov;
					break;
				case "_frameScale":
					f = iron_RenderPath.active.frameTime / iron_system_Time.get_delta();
					break;
				case "_pointShadowsBias":
					let point = iron_RenderPath.active.point;
					f = point == null ? 0.0 : point.data.raw.shadows_bias;
					break;
				case "_sunShadowsBias":
					let sun = iron_RenderPath.active.sun;
					f = sun == null ? 0.0 : sun.data.raw.shadows_bias;
					break;
				case "_time":
					f = kha_Scheduler.time();
					break;
				default:
					return false;
				}
			}
			g.setFloat(location,f != null ? f : 0);
			return true;
		} else if(c.type == "floats") {
			let fa = null;
			switch(c.link) {
			case "_cascadeData":
				let _g = 0;
				let _g1 = iron_Scene.active.lights;
				while(_g < _g1.length) {
					let l = _g1[_g];
					++_g;
					if(l.data.raw.type == "sun") {
						fa = l.getCascadeData();
						break;
					}
				}
				break;
			case "_envmapIrradiance":
				fa = iron_Scene.active.world == null ? iron_data_WorldData.getEmptyIrradiance() : iron_Scene.active.world.probe.irradiance;
				break;
			}
			if(fa != null) {
				g.setFloats(location,fa);
				return true;
			}
		} else if(c.type == "int") {
			let i = null;
			let _g = c.link;
			if(_g == null) {
				return false;
			} else if(_g == "_envmapNumMipmaps") {
				let w = iron_Scene.active.world;
				i = w != null ? w.probe.raw.radiance_mipmaps + 1 - 2 : 1;
			} else {
				return false;
			}
			g.setInt(location,i != null ? i : 0);
			return true;
		}
		return false;
	}
	static setObjectConstant(g,object,location,c) {
		if(c.link == null) {
			return;
		}
		let camera = iron_Scene.active.camera;
		let light = iron_RenderPath.active.light;
		if(c.type == "mat4") {
			let m = null;
			switch(c.link) {
			case "_biasLightWorldViewProjectionMatrix":
				if(light != null) {
					if(object == null) {
						let _this = iron_object_Uniforms.helpMat;
						_this.self._00 = 1.0;
						_this.self._01 = 0.0;
						_this.self._02 = 0.0;
						_this.self._03 = 0.0;
						_this.self._10 = 0.0;
						_this.self._11 = 1.0;
						_this.self._12 = 0.0;
						_this.self._13 = 0.0;
						_this.self._20 = 0.0;
						_this.self._21 = 0.0;
						_this.self._22 = 1.0;
						_this.self._23 = 0.0;
						_this.self._30 = 0.0;
						_this.self._31 = 0.0;
						_this.self._32 = 0.0;
						_this.self._33 = 1.0;
					} else {
						let _this = iron_object_Uniforms.helpMat;
						let m = object.transform.worldUnpack;
						_this.self._00 = m.self._00;
						_this.self._01 = m.self._01;
						_this.self._02 = m.self._02;
						_this.self._03 = m.self._03;
						_this.self._10 = m.self._10;
						_this.self._11 = m.self._11;
						_this.self._12 = m.self._12;
						_this.self._13 = m.self._13;
						_this.self._20 = m.self._20;
						_this.self._21 = m.self._21;
						_this.self._22 = m.self._22;
						_this.self._23 = m.self._23;
						_this.self._30 = m.self._30;
						_this.self._31 = m.self._31;
						_this.self._32 = m.self._32;
						_this.self._33 = m.self._33;
					}
					let _this = iron_object_Uniforms.helpMat;
					let m1 = light.VP;
					let a00 = _this.self._00;
					let a01 = _this.self._01;
					let a02 = _this.self._02;
					let a03 = _this.self._03;
					let a10 = _this.self._10;
					let a11 = _this.self._11;
					let a12 = _this.self._12;
					let a13 = _this.self._13;
					let a20 = _this.self._20;
					let a21 = _this.self._21;
					let a22 = _this.self._22;
					let a23 = _this.self._23;
					let a30 = _this.self._30;
					let a31 = _this.self._31;
					let a32 = _this.self._32;
					let a33 = _this.self._33;
					let b0 = m1.self._00;
					let b1 = m1.self._10;
					let b2 = m1.self._20;
					let b3 = m1.self._30;
					_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._01;
					b1 = m1.self._11;
					b2 = m1.self._21;
					b3 = m1.self._31;
					_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._02;
					b1 = m1.self._12;
					b2 = m1.self._22;
					b3 = m1.self._32;
					_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._03;
					b1 = m1.self._13;
					b2 = m1.self._23;
					b3 = m1.self._33;
					_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					let _this1 = iron_object_Uniforms.helpMat;
					let m2 = iron_object_Uniforms.biasMat;
					let a001 = _this1.self._00;
					let a011 = _this1.self._01;
					let a021 = _this1.self._02;
					let a031 = _this1.self._03;
					let a101 = _this1.self._10;
					let a111 = _this1.self._11;
					let a121 = _this1.self._12;
					let a131 = _this1.self._13;
					let a201 = _this1.self._20;
					let a211 = _this1.self._21;
					let a221 = _this1.self._22;
					let a231 = _this1.self._23;
					let a301 = _this1.self._30;
					let a311 = _this1.self._31;
					let a321 = _this1.self._32;
					let a331 = _this1.self._33;
					let b01 = m2.self._00;
					let b11 = m2.self._10;
					let b21 = m2.self._20;
					let b31 = m2.self._30;
					_this1.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this1.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this1.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this1.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m2.self._01;
					b11 = m2.self._11;
					b21 = m2.self._21;
					b31 = m2.self._31;
					_this1.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this1.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this1.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this1.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m2.self._02;
					b11 = m2.self._12;
					b21 = m2.self._22;
					b31 = m2.self._32;
					_this1.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this1.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this1.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this1.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m2.self._03;
					b11 = m2.self._13;
					b21 = m2.self._23;
					b31 = m2.self._33;
					_this1.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this1.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this1.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this1.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_biasLightWorldViewProjectionMatrixSun":
				let _g = 0;
				let _g1 = iron_Scene.active.lights;
				while(_g < _g1.length) {
					let l = _g1[_g];
					++_g;
					if(l.data.raw.type == "sun") {
						if(object == null) {
							let _this = iron_object_Uniforms.helpMat;
							_this.self._00 = 1.0;
							_this.self._01 = 0.0;
							_this.self._02 = 0.0;
							_this.self._03 = 0.0;
							_this.self._10 = 0.0;
							_this.self._11 = 1.0;
							_this.self._12 = 0.0;
							_this.self._13 = 0.0;
							_this.self._20 = 0.0;
							_this.self._21 = 0.0;
							_this.self._22 = 1.0;
							_this.self._23 = 0.0;
							_this.self._30 = 0.0;
							_this.self._31 = 0.0;
							_this.self._32 = 0.0;
							_this.self._33 = 1.0;
						} else {
							let _this = iron_object_Uniforms.helpMat;
							let m = object.transform.worldUnpack;
							_this.self._00 = m.self._00;
							_this.self._01 = m.self._01;
							_this.self._02 = m.self._02;
							_this.self._03 = m.self._03;
							_this.self._10 = m.self._10;
							_this.self._11 = m.self._11;
							_this.self._12 = m.self._12;
							_this.self._13 = m.self._13;
							_this.self._20 = m.self._20;
							_this.self._21 = m.self._21;
							_this.self._22 = m.self._22;
							_this.self._23 = m.self._23;
							_this.self._30 = m.self._30;
							_this.self._31 = m.self._31;
							_this.self._32 = m.self._32;
							_this.self._33 = m.self._33;
						}
						let _this = iron_object_Uniforms.helpMat;
						let m1 = l.VP;
						let a00 = _this.self._00;
						let a01 = _this.self._01;
						let a02 = _this.self._02;
						let a03 = _this.self._03;
						let a10 = _this.self._10;
						let a11 = _this.self._11;
						let a12 = _this.self._12;
						let a13 = _this.self._13;
						let a20 = _this.self._20;
						let a21 = _this.self._21;
						let a22 = _this.self._22;
						let a23 = _this.self._23;
						let a30 = _this.self._30;
						let a31 = _this.self._31;
						let a32 = _this.self._32;
						let a33 = _this.self._33;
						let b0 = m1.self._00;
						let b1 = m1.self._10;
						let b2 = m1.self._20;
						let b3 = m1.self._30;
						_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m1.self._01;
						b1 = m1.self._11;
						b2 = m1.self._21;
						b3 = m1.self._31;
						_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m1.self._02;
						b1 = m1.self._12;
						b2 = m1.self._22;
						b3 = m1.self._32;
						_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						b0 = m1.self._03;
						b1 = m1.self._13;
						b2 = m1.self._23;
						b3 = m1.self._33;
						_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
						_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
						_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
						_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
						let _this1 = iron_object_Uniforms.helpMat;
						let m2 = iron_object_Uniforms.biasMat;
						let a001 = _this1.self._00;
						let a011 = _this1.self._01;
						let a021 = _this1.self._02;
						let a031 = _this1.self._03;
						let a101 = _this1.self._10;
						let a111 = _this1.self._11;
						let a121 = _this1.self._12;
						let a131 = _this1.self._13;
						let a201 = _this1.self._20;
						let a211 = _this1.self._21;
						let a221 = _this1.self._22;
						let a231 = _this1.self._23;
						let a301 = _this1.self._30;
						let a311 = _this1.self._31;
						let a321 = _this1.self._32;
						let a331 = _this1.self._33;
						let b01 = m2.self._00;
						let b11 = m2.self._10;
						let b21 = m2.self._20;
						let b31 = m2.self._30;
						_this1.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
						_this1.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
						_this1.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
						_this1.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
						b01 = m2.self._01;
						b11 = m2.self._11;
						b21 = m2.self._21;
						b31 = m2.self._31;
						_this1.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
						_this1.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
						_this1.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
						_this1.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
						b01 = m2.self._02;
						b11 = m2.self._12;
						b21 = m2.self._22;
						b31 = m2.self._32;
						_this1.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
						_this1.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
						_this1.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
						_this1.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
						b01 = m2.self._03;
						b11 = m2.self._13;
						b21 = m2.self._23;
						b31 = m2.self._33;
						_this1.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
						_this1.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
						_this1.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
						_this1.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
						m = iron_object_Uniforms.helpMat;
						break;
					}
				}
				break;
			case "_inverseWorldMatrix":
				let _this = iron_object_Uniforms.helpMat;
				let m1 = object.transform.worldUnpack;
				let a00 = m1.self._00;
				let a01 = m1.self._01;
				let a02 = m1.self._02;
				let a03 = m1.self._03;
				let a10 = m1.self._10;
				let a11 = m1.self._11;
				let a12 = m1.self._12;
				let a13 = m1.self._13;
				let a20 = m1.self._20;
				let a21 = m1.self._21;
				let a22 = m1.self._22;
				let a23 = m1.self._23;
				let a30 = m1.self._30;
				let a31 = m1.self._31;
				let a32 = m1.self._32;
				let a33 = m1.self._33;
				let b00 = a00 * a11 - a01 * a10;
				let b01 = a00 * a12 - a02 * a10;
				let b02 = a00 * a13 - a03 * a10;
				let b03 = a01 * a12 - a02 * a11;
				let b04 = a01 * a13 - a03 * a11;
				let b05 = a02 * a13 - a03 * a12;
				let b06 = a20 * a31 - a21 * a30;
				let b07 = a20 * a32 - a22 * a30;
				let b08 = a20 * a33 - a23 * a30;
				let b09 = a21 * a32 - a22 * a31;
				let b10 = a21 * a33 - a23 * a31;
				let b11 = a22 * a33 - a23 * a32;
				let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				m = iron_object_Uniforms.helpMat;
				break;
			case "_lightWorldViewProjectionMatrix":
				if(light != null) {
					if(object == null) {
						let _this = iron_object_Uniforms.helpMat;
						_this.self._00 = 1.0;
						_this.self._01 = 0.0;
						_this.self._02 = 0.0;
						_this.self._03 = 0.0;
						_this.self._10 = 0.0;
						_this.self._11 = 1.0;
						_this.self._12 = 0.0;
						_this.self._13 = 0.0;
						_this.self._20 = 0.0;
						_this.self._21 = 0.0;
						_this.self._22 = 1.0;
						_this.self._23 = 0.0;
						_this.self._30 = 0.0;
						_this.self._31 = 0.0;
						_this.self._32 = 0.0;
						_this.self._33 = 1.0;
					} else {
						let _this = iron_object_Uniforms.helpMat;
						let m = object.transform.worldUnpack;
						_this.self._00 = m.self._00;
						_this.self._01 = m.self._01;
						_this.self._02 = m.self._02;
						_this.self._03 = m.self._03;
						_this.self._10 = m.self._10;
						_this.self._11 = m.self._11;
						_this.self._12 = m.self._12;
						_this.self._13 = m.self._13;
						_this.self._20 = m.self._20;
						_this.self._21 = m.self._21;
						_this.self._22 = m.self._22;
						_this.self._23 = m.self._23;
						_this.self._30 = m.self._30;
						_this.self._31 = m.self._31;
						_this.self._32 = m.self._32;
						_this.self._33 = m.self._33;
					}
					let _this = iron_object_Uniforms.helpMat;
					let m1 = light.VP;
					let a00 = _this.self._00;
					let a01 = _this.self._01;
					let a02 = _this.self._02;
					let a03 = _this.self._03;
					let a10 = _this.self._10;
					let a11 = _this.self._11;
					let a12 = _this.self._12;
					let a13 = _this.self._13;
					let a20 = _this.self._20;
					let a21 = _this.self._21;
					let a22 = _this.self._22;
					let a23 = _this.self._23;
					let a30 = _this.self._30;
					let a31 = _this.self._31;
					let a32 = _this.self._32;
					let a33 = _this.self._33;
					let b0 = m1.self._00;
					let b1 = m1.self._10;
					let b2 = m1.self._20;
					let b3 = m1.self._30;
					_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._01;
					b1 = m1.self._11;
					b2 = m1.self._21;
					b3 = m1.self._31;
					_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._02;
					b1 = m1.self._12;
					b2 = m1.self._22;
					b3 = m1.self._32;
					_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._03;
					b1 = m1.self._13;
					b2 = m1.self._23;
					b3 = m1.self._33;
					_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_lightWorldViewProjectionMatrixCylinder":
				if(light != null) {
					let _this = iron_object_Uniforms.helpMat;
					let m1 = object.transform.worldUnpack;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					let _this1 = iron_object_Uniforms.helpMat;
					let m2 = camera.V;
					let a00 = _this1.self._00;
					let a01 = _this1.self._01;
					let a02 = _this1.self._02;
					let a03 = _this1.self._03;
					let a10 = _this1.self._10;
					let a11 = _this1.self._11;
					let a12 = _this1.self._12;
					let a13 = _this1.self._13;
					let a20 = _this1.self._20;
					let a21 = _this1.self._21;
					let a22 = _this1.self._22;
					let a23 = _this1.self._23;
					let a30 = _this1.self._30;
					let a31 = _this1.self._31;
					let a32 = _this1.self._32;
					let a33 = _this1.self._33;
					let b0 = m2.self._00;
					let b1 = m2.self._10;
					let b2 = m2.self._20;
					let b3 = m2.self._30;
					_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._01;
					b1 = m2.self._11;
					b2 = m2.self._21;
					b3 = m2.self._31;
					_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._02;
					b1 = m2.self._12;
					b2 = m2.self._22;
					b3 = m2.self._32;
					_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._03;
					b1 = m2.self._13;
					b2 = m2.self._23;
					b3 = m2.self._33;
					_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					iron_object_Uniforms.helpMat.self._00 = 1.0;
					iron_object_Uniforms.helpMat.self._20 = 0.0;
					iron_object_Uniforms.helpMat.self._01 = 0.0;
					iron_object_Uniforms.helpMat.self._21 = 0.0;
					iron_object_Uniforms.helpMat.self._02 = 0.0;
					iron_object_Uniforms.helpMat.self._22 = 1.0;
					let _this2 = iron_object_Uniforms.helpMat2;
					let m3 = camera.V;
					let a001 = m3.self._00;
					let a011 = m3.self._01;
					let a021 = m3.self._02;
					let a031 = m3.self._03;
					let a101 = m3.self._10;
					let a111 = m3.self._11;
					let a121 = m3.self._12;
					let a131 = m3.self._13;
					let a201 = m3.self._20;
					let a211 = m3.self._21;
					let a221 = m3.self._22;
					let a231 = m3.self._23;
					let a301 = m3.self._30;
					let a311 = m3.self._31;
					let a321 = m3.self._32;
					let a331 = m3.self._33;
					let b00 = a001 * a111 - a011 * a101;
					let b01 = a001 * a121 - a021 * a101;
					let b02 = a001 * a131 - a031 * a101;
					let b03 = a011 * a121 - a021 * a111;
					let b04 = a011 * a131 - a031 * a111;
					let b05 = a021 * a131 - a031 * a121;
					let b06 = a201 * a311 - a211 * a301;
					let b07 = a201 * a321 - a221 * a301;
					let b08 = a201 * a331 - a231 * a301;
					let b09 = a211 * a321 - a221 * a311;
					let b10 = a211 * a331 - a231 * a311;
					let b11 = a221 * a331 - a231 * a321;
					let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						_this2.self._00 = 1.0;
						_this2.self._01 = 0.0;
						_this2.self._02 = 0.0;
						_this2.self._03 = 0.0;
						_this2.self._10 = 0.0;
						_this2.self._11 = 1.0;
						_this2.self._12 = 0.0;
						_this2.self._13 = 0.0;
						_this2.self._20 = 0.0;
						_this2.self._21 = 0.0;
						_this2.self._22 = 1.0;
						_this2.self._23 = 0.0;
						_this2.self._30 = 0.0;
						_this2.self._31 = 0.0;
						_this2.self._32 = 0.0;
						_this2.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						_this2.self._00 = (a111 * b11 - a121 * b10 + a131 * b09) * det;
						_this2.self._01 = (a021 * b10 - a011 * b11 - a031 * b09) * det;
						_this2.self._02 = (a311 * b05 - a321 * b04 + a331 * b03) * det;
						_this2.self._03 = (a221 * b04 - a211 * b05 - a231 * b03) * det;
						_this2.self._10 = (a121 * b08 - a101 * b11 - a131 * b07) * det;
						_this2.self._11 = (a001 * b11 - a021 * b08 + a031 * b07) * det;
						_this2.self._12 = (a321 * b02 - a301 * b05 - a331 * b01) * det;
						_this2.self._13 = (a201 * b05 - a221 * b02 + a231 * b01) * det;
						_this2.self._20 = (a101 * b10 - a111 * b08 + a131 * b06) * det;
						_this2.self._21 = (a011 * b08 - a001 * b10 - a031 * b06) * det;
						_this2.self._22 = (a301 * b04 - a311 * b02 + a331 * b00) * det;
						_this2.self._23 = (a211 * b02 - a201 * b04 - a231 * b00) * det;
						_this2.self._30 = (a111 * b07 - a101 * b09 - a121 * b06) * det;
						_this2.self._31 = (a001 * b09 - a011 * b07 + a021 * b06) * det;
						_this2.self._32 = (a311 * b01 - a301 * b03 - a321 * b00) * det;
						_this2.self._33 = (a201 * b03 - a211 * b01 + a221 * b00) * det;
					}
					let _this3 = iron_object_Uniforms.helpMat;
					let m4 = iron_object_Uniforms.helpMat2;
					let a002 = _this3.self._00;
					let a012 = _this3.self._01;
					let a022 = _this3.self._02;
					let a032 = _this3.self._03;
					let a102 = _this3.self._10;
					let a112 = _this3.self._11;
					let a122 = _this3.self._12;
					let a132 = _this3.self._13;
					let a202 = _this3.self._20;
					let a212 = _this3.self._21;
					let a222 = _this3.self._22;
					let a232 = _this3.self._23;
					let a302 = _this3.self._30;
					let a312 = _this3.self._31;
					let a322 = _this3.self._32;
					let a332 = _this3.self._33;
					let b010 = m4.self._00;
					let b12 = m4.self._10;
					let b21 = m4.self._20;
					let b31 = m4.self._30;
					_this3.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._01;
					b12 = m4.self._11;
					b21 = m4.self._21;
					b31 = m4.self._31;
					_this3.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._02;
					b12 = m4.self._12;
					b21 = m4.self._22;
					b31 = m4.self._32;
					_this3.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._03;
					b12 = m4.self._13;
					b21 = m4.self._23;
					b31 = m4.self._33;
					_this3.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					let _this4 = iron_object_Uniforms.helpMat;
					let m5 = light.VP;
					let a003 = _this4.self._00;
					let a013 = _this4.self._01;
					let a023 = _this4.self._02;
					let a033 = _this4.self._03;
					let a103 = _this4.self._10;
					let a113 = _this4.self._11;
					let a123 = _this4.self._12;
					let a133 = _this4.self._13;
					let a203 = _this4.self._20;
					let a213 = _this4.self._21;
					let a223 = _this4.self._22;
					let a233 = _this4.self._23;
					let a303 = _this4.self._30;
					let a313 = _this4.self._31;
					let a323 = _this4.self._32;
					let a333 = _this4.self._33;
					let b011 = m5.self._00;
					let b13 = m5.self._10;
					let b22 = m5.self._20;
					let b32 = m5.self._30;
					_this4.self._00 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._10 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._20 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._30 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._01;
					b13 = m5.self._11;
					b22 = m5.self._21;
					b32 = m5.self._31;
					_this4.self._01 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._11 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._21 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._31 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._02;
					b13 = m5.self._12;
					b22 = m5.self._22;
					b32 = m5.self._32;
					_this4.self._02 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._12 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._22 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._32 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._03;
					b13 = m5.self._13;
					b22 = m5.self._23;
					b32 = m5.self._33;
					_this4.self._03 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._13 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._23 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._33 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_lightWorldViewProjectionMatrixSphere":
				if(light != null) {
					let _this = iron_object_Uniforms.helpMat;
					let m1 = object.transform.worldUnpack;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					let _this1 = iron_object_Uniforms.helpMat;
					let m2 = camera.V;
					let a00 = _this1.self._00;
					let a01 = _this1.self._01;
					let a02 = _this1.self._02;
					let a03 = _this1.self._03;
					let a10 = _this1.self._10;
					let a11 = _this1.self._11;
					let a12 = _this1.self._12;
					let a13 = _this1.self._13;
					let a20 = _this1.self._20;
					let a21 = _this1.self._21;
					let a22 = _this1.self._22;
					let a23 = _this1.self._23;
					let a30 = _this1.self._30;
					let a31 = _this1.self._31;
					let a32 = _this1.self._32;
					let a33 = _this1.self._33;
					let b0 = m2.self._00;
					let b1 = m2.self._10;
					let b2 = m2.self._20;
					let b3 = m2.self._30;
					_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._01;
					b1 = m2.self._11;
					b2 = m2.self._21;
					b3 = m2.self._31;
					_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._02;
					b1 = m2.self._12;
					b2 = m2.self._22;
					b3 = m2.self._32;
					_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._03;
					b1 = m2.self._13;
					b2 = m2.self._23;
					b3 = m2.self._33;
					_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					iron_object_Uniforms.helpMat.self._00 = 1.0;
					iron_object_Uniforms.helpMat.self._10 = 0.0;
					iron_object_Uniforms.helpMat.self._20 = 0.0;
					iron_object_Uniforms.helpMat.self._01 = 0.0;
					iron_object_Uniforms.helpMat.self._11 = 1.0;
					iron_object_Uniforms.helpMat.self._21 = 0.0;
					iron_object_Uniforms.helpMat.self._02 = 0.0;
					iron_object_Uniforms.helpMat.self._12 = 0.0;
					iron_object_Uniforms.helpMat.self._22 = 1.0;
					let _this2 = iron_object_Uniforms.helpMat2;
					let m3 = camera.V;
					let a001 = m3.self._00;
					let a011 = m3.self._01;
					let a021 = m3.self._02;
					let a031 = m3.self._03;
					let a101 = m3.self._10;
					let a111 = m3.self._11;
					let a121 = m3.self._12;
					let a131 = m3.self._13;
					let a201 = m3.self._20;
					let a211 = m3.self._21;
					let a221 = m3.self._22;
					let a231 = m3.self._23;
					let a301 = m3.self._30;
					let a311 = m3.self._31;
					let a321 = m3.self._32;
					let a331 = m3.self._33;
					let b00 = a001 * a111 - a011 * a101;
					let b01 = a001 * a121 - a021 * a101;
					let b02 = a001 * a131 - a031 * a101;
					let b03 = a011 * a121 - a021 * a111;
					let b04 = a011 * a131 - a031 * a111;
					let b05 = a021 * a131 - a031 * a121;
					let b06 = a201 * a311 - a211 * a301;
					let b07 = a201 * a321 - a221 * a301;
					let b08 = a201 * a331 - a231 * a301;
					let b09 = a211 * a321 - a221 * a311;
					let b10 = a211 * a331 - a231 * a311;
					let b11 = a221 * a331 - a231 * a321;
					let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						_this2.self._00 = 1.0;
						_this2.self._01 = 0.0;
						_this2.self._02 = 0.0;
						_this2.self._03 = 0.0;
						_this2.self._10 = 0.0;
						_this2.self._11 = 1.0;
						_this2.self._12 = 0.0;
						_this2.self._13 = 0.0;
						_this2.self._20 = 0.0;
						_this2.self._21 = 0.0;
						_this2.self._22 = 1.0;
						_this2.self._23 = 0.0;
						_this2.self._30 = 0.0;
						_this2.self._31 = 0.0;
						_this2.self._32 = 0.0;
						_this2.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						_this2.self._00 = (a111 * b11 - a121 * b10 + a131 * b09) * det;
						_this2.self._01 = (a021 * b10 - a011 * b11 - a031 * b09) * det;
						_this2.self._02 = (a311 * b05 - a321 * b04 + a331 * b03) * det;
						_this2.self._03 = (a221 * b04 - a211 * b05 - a231 * b03) * det;
						_this2.self._10 = (a121 * b08 - a101 * b11 - a131 * b07) * det;
						_this2.self._11 = (a001 * b11 - a021 * b08 + a031 * b07) * det;
						_this2.self._12 = (a321 * b02 - a301 * b05 - a331 * b01) * det;
						_this2.self._13 = (a201 * b05 - a221 * b02 + a231 * b01) * det;
						_this2.self._20 = (a101 * b10 - a111 * b08 + a131 * b06) * det;
						_this2.self._21 = (a011 * b08 - a001 * b10 - a031 * b06) * det;
						_this2.self._22 = (a301 * b04 - a311 * b02 + a331 * b00) * det;
						_this2.self._23 = (a211 * b02 - a201 * b04 - a231 * b00) * det;
						_this2.self._30 = (a111 * b07 - a101 * b09 - a121 * b06) * det;
						_this2.self._31 = (a001 * b09 - a011 * b07 + a021 * b06) * det;
						_this2.self._32 = (a311 * b01 - a301 * b03 - a321 * b00) * det;
						_this2.self._33 = (a201 * b03 - a211 * b01 + a221 * b00) * det;
					}
					let _this3 = iron_object_Uniforms.helpMat;
					let m4 = iron_object_Uniforms.helpMat2;
					let a002 = _this3.self._00;
					let a012 = _this3.self._01;
					let a022 = _this3.self._02;
					let a032 = _this3.self._03;
					let a102 = _this3.self._10;
					let a112 = _this3.self._11;
					let a122 = _this3.self._12;
					let a132 = _this3.self._13;
					let a202 = _this3.self._20;
					let a212 = _this3.self._21;
					let a222 = _this3.self._22;
					let a232 = _this3.self._23;
					let a302 = _this3.self._30;
					let a312 = _this3.self._31;
					let a322 = _this3.self._32;
					let a332 = _this3.self._33;
					let b010 = m4.self._00;
					let b12 = m4.self._10;
					let b21 = m4.self._20;
					let b31 = m4.self._30;
					_this3.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._01;
					b12 = m4.self._11;
					b21 = m4.self._21;
					b31 = m4.self._31;
					_this3.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._02;
					b12 = m4.self._12;
					b21 = m4.self._22;
					b31 = m4.self._32;
					_this3.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					b010 = m4.self._03;
					b12 = m4.self._13;
					b21 = m4.self._23;
					b31 = m4.self._33;
					_this3.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
					_this3.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
					_this3.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
					_this3.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
					let _this4 = iron_object_Uniforms.helpMat;
					let m5 = light.VP;
					let a003 = _this4.self._00;
					let a013 = _this4.self._01;
					let a023 = _this4.self._02;
					let a033 = _this4.self._03;
					let a103 = _this4.self._10;
					let a113 = _this4.self._11;
					let a123 = _this4.self._12;
					let a133 = _this4.self._13;
					let a203 = _this4.self._20;
					let a213 = _this4.self._21;
					let a223 = _this4.self._22;
					let a233 = _this4.self._23;
					let a303 = _this4.self._30;
					let a313 = _this4.self._31;
					let a323 = _this4.self._32;
					let a333 = _this4.self._33;
					let b011 = m5.self._00;
					let b13 = m5.self._10;
					let b22 = m5.self._20;
					let b32 = m5.self._30;
					_this4.self._00 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._10 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._20 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._30 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._01;
					b13 = m5.self._11;
					b22 = m5.self._21;
					b32 = m5.self._31;
					_this4.self._01 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._11 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._21 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._31 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._02;
					b13 = m5.self._12;
					b22 = m5.self._22;
					b32 = m5.self._32;
					_this4.self._02 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._12 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._22 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._32 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					b011 = m5.self._03;
					b13 = m5.self._13;
					b22 = m5.self._23;
					b32 = m5.self._33;
					_this4.self._03 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
					_this4.self._13 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
					_this4.self._23 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
					_this4.self._33 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_particleData":
				let mo = js_Boot.__cast(object , iron_object_MeshObject);
				if(mo.particleOwner != null && mo.particleOwner.particleSystems != null) {
					m = mo.particleOwner.particleSystems[mo.particleIndex].getData();
				}
				break;
			case "_sunWorldMatrix":
				let sun = iron_RenderPath.active.sun;
				if(sun != null) {
					let _this = iron_object_Uniforms.helpMat;
					let m1 = sun.transform.worldUnpack;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_worldMatrix":
				m = object.transform.worldUnpack;
				break;
			case "_worldViewMatrix":
				let _this1 = iron_object_Uniforms.helpMat;
				let m2 = object.transform.worldUnpack;
				_this1.self._00 = m2.self._00;
				_this1.self._01 = m2.self._01;
				_this1.self._02 = m2.self._02;
				_this1.self._03 = m2.self._03;
				_this1.self._10 = m2.self._10;
				_this1.self._11 = m2.self._11;
				_this1.self._12 = m2.self._12;
				_this1.self._13 = m2.self._13;
				_this1.self._20 = m2.self._20;
				_this1.self._21 = m2.self._21;
				_this1.self._22 = m2.self._22;
				_this1.self._23 = m2.self._23;
				_this1.self._30 = m2.self._30;
				_this1.self._31 = m2.self._31;
				_this1.self._32 = m2.self._32;
				_this1.self._33 = m2.self._33;
				let _this2 = iron_object_Uniforms.helpMat;
				let m3 = camera.V;
				let a001 = _this2.self._00;
				let a011 = _this2.self._01;
				let a021 = _this2.self._02;
				let a031 = _this2.self._03;
				let a101 = _this2.self._10;
				let a111 = _this2.self._11;
				let a121 = _this2.self._12;
				let a131 = _this2.self._13;
				let a201 = _this2.self._20;
				let a211 = _this2.self._21;
				let a221 = _this2.self._22;
				let a231 = _this2.self._23;
				let a301 = _this2.self._30;
				let a311 = _this2.self._31;
				let a321 = _this2.self._32;
				let a331 = _this2.self._33;
				let b0 = m3.self._00;
				let b1 = m3.self._10;
				let b2 = m3.self._20;
				let b3 = m3.self._30;
				_this2.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				_this2.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				_this2.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				_this2.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._01;
				b1 = m3.self._11;
				b2 = m3.self._21;
				b3 = m3.self._31;
				_this2.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				_this2.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				_this2.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				_this2.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._02;
				b1 = m3.self._12;
				b2 = m3.self._22;
				b3 = m3.self._32;
				_this2.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				_this2.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				_this2.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				_this2.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._03;
				b1 = m3.self._13;
				b2 = m3.self._23;
				b3 = m3.self._33;
				_this2.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				_this2.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				_this2.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				_this2.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_worldViewProjectionMatrix":
				let _this3 = iron_object_Uniforms.helpMat;
				let m4 = object.transform.worldUnpack;
				_this3.self._00 = m4.self._00;
				_this3.self._01 = m4.self._01;
				_this3.self._02 = m4.self._02;
				_this3.self._03 = m4.self._03;
				_this3.self._10 = m4.self._10;
				_this3.self._11 = m4.self._11;
				_this3.self._12 = m4.self._12;
				_this3.self._13 = m4.self._13;
				_this3.self._20 = m4.self._20;
				_this3.self._21 = m4.self._21;
				_this3.self._22 = m4.self._22;
				_this3.self._23 = m4.self._23;
				_this3.self._30 = m4.self._30;
				_this3.self._31 = m4.self._31;
				_this3.self._32 = m4.self._32;
				_this3.self._33 = m4.self._33;
				let _this4 = iron_object_Uniforms.helpMat;
				let m5 = camera.V;
				let a002 = _this4.self._00;
				let a012 = _this4.self._01;
				let a022 = _this4.self._02;
				let a032 = _this4.self._03;
				let a102 = _this4.self._10;
				let a112 = _this4.self._11;
				let a122 = _this4.self._12;
				let a132 = _this4.self._13;
				let a202 = _this4.self._20;
				let a212 = _this4.self._21;
				let a222 = _this4.self._22;
				let a232 = _this4.self._23;
				let a302 = _this4.self._30;
				let a312 = _this4.self._31;
				let a322 = _this4.self._32;
				let a332 = _this4.self._33;
				let b010 = m5.self._00;
				let b12 = m5.self._10;
				let b21 = m5.self._20;
				let b31 = m5.self._30;
				_this4.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				_this4.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				_this4.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				_this4.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m5.self._01;
				b12 = m5.self._11;
				b21 = m5.self._21;
				b31 = m5.self._31;
				_this4.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				_this4.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				_this4.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				_this4.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m5.self._02;
				b12 = m5.self._12;
				b21 = m5.self._22;
				b31 = m5.self._32;
				_this4.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				_this4.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				_this4.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				_this4.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m5.self._03;
				b12 = m5.self._13;
				b21 = m5.self._23;
				b31 = m5.self._33;
				_this4.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				_this4.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				_this4.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				_this4.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				let _this5 = iron_object_Uniforms.helpMat;
				let m6 = camera.P;
				let a003 = _this5.self._00;
				let a013 = _this5.self._01;
				let a023 = _this5.self._02;
				let a033 = _this5.self._03;
				let a103 = _this5.self._10;
				let a113 = _this5.self._11;
				let a123 = _this5.self._12;
				let a133 = _this5.self._13;
				let a203 = _this5.self._20;
				let a213 = _this5.self._21;
				let a223 = _this5.self._22;
				let a233 = _this5.self._23;
				let a303 = _this5.self._30;
				let a313 = _this5.self._31;
				let a323 = _this5.self._32;
				let a333 = _this5.self._33;
				let b011 = m6.self._00;
				let b13 = m6.self._10;
				let b22 = m6.self._20;
				let b32 = m6.self._30;
				_this5.self._00 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
				_this5.self._10 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
				_this5.self._20 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
				_this5.self._30 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
				b011 = m6.self._01;
				b13 = m6.self._11;
				b22 = m6.self._21;
				b32 = m6.self._31;
				_this5.self._01 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
				_this5.self._11 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
				_this5.self._21 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
				_this5.self._31 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
				b011 = m6.self._02;
				b13 = m6.self._12;
				b22 = m6.self._22;
				b32 = m6.self._32;
				_this5.self._02 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
				_this5.self._12 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
				_this5.self._22 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
				_this5.self._32 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
				b011 = m6.self._03;
				b13 = m6.self._13;
				b22 = m6.self._23;
				b32 = m6.self._33;
				_this5.self._03 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
				_this5.self._13 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
				_this5.self._23 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
				_this5.self._33 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_worldViewProjectionMatrixCylinder":
				let t = object.transform;
				let _this6 = iron_object_Uniforms.helpMat;
				let m7 = t.worldUnpack;
				_this6.self._00 = m7.self._00;
				_this6.self._01 = m7.self._01;
				_this6.self._02 = m7.self._02;
				_this6.self._03 = m7.self._03;
				_this6.self._10 = m7.self._10;
				_this6.self._11 = m7.self._11;
				_this6.self._12 = m7.self._12;
				_this6.self._13 = m7.self._13;
				_this6.self._20 = m7.self._20;
				_this6.self._21 = m7.self._21;
				_this6.self._22 = m7.self._22;
				_this6.self._23 = m7.self._23;
				_this6.self._30 = m7.self._30;
				_this6.self._31 = m7.self._31;
				_this6.self._32 = m7.self._32;
				_this6.self._33 = m7.self._33;
				let _this7 = iron_object_Uniforms.helpMat;
				let m8 = camera.V;
				let a004 = _this7.self._00;
				let a014 = _this7.self._01;
				let a024 = _this7.self._02;
				let a034 = _this7.self._03;
				let a104 = _this7.self._10;
				let a114 = _this7.self._11;
				let a124 = _this7.self._12;
				let a134 = _this7.self._13;
				let a204 = _this7.self._20;
				let a214 = _this7.self._21;
				let a224 = _this7.self._22;
				let a234 = _this7.self._23;
				let a304 = _this7.self._30;
				let a314 = _this7.self._31;
				let a324 = _this7.self._32;
				let a334 = _this7.self._33;
				let b012 = m8.self._00;
				let b14 = m8.self._10;
				let b23 = m8.self._20;
				let b33 = m8.self._30;
				_this7.self._00 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
				_this7.self._10 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
				_this7.self._20 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
				_this7.self._30 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
				b012 = m8.self._01;
				b14 = m8.self._11;
				b23 = m8.self._21;
				b33 = m8.self._31;
				_this7.self._01 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
				_this7.self._11 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
				_this7.self._21 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
				_this7.self._31 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
				b012 = m8.self._02;
				b14 = m8.self._12;
				b23 = m8.self._22;
				b33 = m8.self._32;
				_this7.self._02 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
				_this7.self._12 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
				_this7.self._22 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
				_this7.self._32 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
				b012 = m8.self._03;
				b14 = m8.self._13;
				b23 = m8.self._23;
				b33 = m8.self._33;
				_this7.self._03 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
				_this7.self._13 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
				_this7.self._23 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
				_this7.self._33 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
				let x = t.scale.x;
				let y = t.scale.y;
				let z = t.scale.z;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				let scl_x = x;
				let scl_y = y;
				let scl_z = z;
				let scl_w = 1.0;
				let f = t.scaleWorld;
				scl_x *= f;
				scl_y *= f;
				scl_z *= f;
				iron_object_Uniforms.helpMat.self._00 = scl_x;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = scl_y;
				let _this8 = iron_object_Uniforms.helpMat;
				let m9 = camera.P;
				let a005 = _this8.self._00;
				let a015 = _this8.self._01;
				let a025 = _this8.self._02;
				let a035 = _this8.self._03;
				let a105 = _this8.self._10;
				let a115 = _this8.self._11;
				let a125 = _this8.self._12;
				let a135 = _this8.self._13;
				let a205 = _this8.self._20;
				let a215 = _this8.self._21;
				let a225 = _this8.self._22;
				let a235 = _this8.self._23;
				let a305 = _this8.self._30;
				let a315 = _this8.self._31;
				let a325 = _this8.self._32;
				let a335 = _this8.self._33;
				let b013 = m9.self._00;
				let b15 = m9.self._10;
				let b24 = m9.self._20;
				let b34 = m9.self._30;
				_this8.self._00 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
				_this8.self._10 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
				_this8.self._20 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
				_this8.self._30 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
				b013 = m9.self._01;
				b15 = m9.self._11;
				b24 = m9.self._21;
				b34 = m9.self._31;
				_this8.self._01 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
				_this8.self._11 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
				_this8.self._21 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
				_this8.self._31 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
				b013 = m9.self._02;
				b15 = m9.self._12;
				b24 = m9.self._22;
				b34 = m9.self._32;
				_this8.self._02 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
				_this8.self._12 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
				_this8.self._22 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
				_this8.self._32 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
				b013 = m9.self._03;
				b15 = m9.self._13;
				b24 = m9.self._23;
				b34 = m9.self._33;
				_this8.self._03 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
				_this8.self._13 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
				_this8.self._23 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
				_this8.self._33 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_worldViewProjectionMatrixSphere":
				let t1 = object.transform;
				let _this9 = iron_object_Uniforms.helpMat;
				let m10 = t1.worldUnpack;
				_this9.self._00 = m10.self._00;
				_this9.self._01 = m10.self._01;
				_this9.self._02 = m10.self._02;
				_this9.self._03 = m10.self._03;
				_this9.self._10 = m10.self._10;
				_this9.self._11 = m10.self._11;
				_this9.self._12 = m10.self._12;
				_this9.self._13 = m10.self._13;
				_this9.self._20 = m10.self._20;
				_this9.self._21 = m10.self._21;
				_this9.self._22 = m10.self._22;
				_this9.self._23 = m10.self._23;
				_this9.self._30 = m10.self._30;
				_this9.self._31 = m10.self._31;
				_this9.self._32 = m10.self._32;
				_this9.self._33 = m10.self._33;
				let _this10 = iron_object_Uniforms.helpMat;
				let m11 = camera.V;
				let a006 = _this10.self._00;
				let a016 = _this10.self._01;
				let a026 = _this10.self._02;
				let a036 = _this10.self._03;
				let a106 = _this10.self._10;
				let a116 = _this10.self._11;
				let a126 = _this10.self._12;
				let a136 = _this10.self._13;
				let a206 = _this10.self._20;
				let a216 = _this10.self._21;
				let a226 = _this10.self._22;
				let a236 = _this10.self._23;
				let a306 = _this10.self._30;
				let a316 = _this10.self._31;
				let a326 = _this10.self._32;
				let a336 = _this10.self._33;
				let b014 = m11.self._00;
				let b16 = m11.self._10;
				let b25 = m11.self._20;
				let b35 = m11.self._30;
				_this10.self._00 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
				_this10.self._10 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
				_this10.self._20 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
				_this10.self._30 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
				b014 = m11.self._01;
				b16 = m11.self._11;
				b25 = m11.self._21;
				b35 = m11.self._31;
				_this10.self._01 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
				_this10.self._11 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
				_this10.self._21 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
				_this10.self._31 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
				b014 = m11.self._02;
				b16 = m11.self._12;
				b25 = m11.self._22;
				b35 = m11.self._32;
				_this10.self._02 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
				_this10.self._12 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
				_this10.self._22 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
				_this10.self._32 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
				b014 = m11.self._03;
				b16 = m11.self._13;
				b25 = m11.self._23;
				b35 = m11.self._33;
				_this10.self._03 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
				_this10.self._13 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
				_this10.self._23 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
				_this10.self._33 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
				let x1 = t1.scale.x;
				let y1 = t1.scale.y;
				let z1 = t1.scale.z;
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				let scl_x1 = x1;
				let scl_y1 = y1;
				let scl_z1 = z1;
				let scl_w1 = 1.0;
				let f1 = t1.scaleWorld;
				scl_x1 *= f1;
				scl_y1 *= f1;
				scl_z1 *= f1;
				iron_object_Uniforms.helpMat.self._00 = scl_x1;
				iron_object_Uniforms.helpMat.self._10 = 0.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._11 = scl_y1;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._12 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = scl_z1;
				let _this11 = iron_object_Uniforms.helpMat;
				let m12 = camera.P;
				let a007 = _this11.self._00;
				let a017 = _this11.self._01;
				let a027 = _this11.self._02;
				let a037 = _this11.self._03;
				let a107 = _this11.self._10;
				let a117 = _this11.self._11;
				let a127 = _this11.self._12;
				let a137 = _this11.self._13;
				let a207 = _this11.self._20;
				let a217 = _this11.self._21;
				let a227 = _this11.self._22;
				let a237 = _this11.self._23;
				let a307 = _this11.self._30;
				let a317 = _this11.self._31;
				let a327 = _this11.self._32;
				let a337 = _this11.self._33;
				let b015 = m12.self._00;
				let b17 = m12.self._10;
				let b26 = m12.self._20;
				let b36 = m12.self._30;
				_this11.self._00 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
				_this11.self._10 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
				_this11.self._20 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
				_this11.self._30 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
				b015 = m12.self._01;
				b17 = m12.self._11;
				b26 = m12.self._21;
				b36 = m12.self._31;
				_this11.self._01 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
				_this11.self._11 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
				_this11.self._21 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
				_this11.self._31 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
				b015 = m12.self._02;
				b17 = m12.self._12;
				b26 = m12.self._22;
				b36 = m12.self._32;
				_this11.self._02 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
				_this11.self._12 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
				_this11.self._22 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
				_this11.self._32 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
				b015 = m12.self._03;
				b17 = m12.self._13;
				b26 = m12.self._23;
				b36 = m12.self._33;
				_this11.self._03 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
				_this11.self._13 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
				_this11.self._23 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
				_this11.self._33 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
				m = iron_object_Uniforms.helpMat;
				break;
			}
			let tmp = m == null;
			if(m == null && iron_object_Uniforms.externalMat4Links != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalMat4Links;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					m = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(m != null) {
						break;
					}
				}
			}
			if(m == null) {
				return;
			}
			g.setMatrix(location,m.self);
		} else if(c.type == "mat3") {
			let m = null;
			switch(c.link) {
			case "_normalMatrix":
				let _this = iron_object_Uniforms.helpMat;
				let m1 = object.transform.world;
				let a00 = m1.self._00;
				let a01 = m1.self._01;
				let a02 = m1.self._02;
				let a03 = m1.self._03;
				let a10 = m1.self._10;
				let a11 = m1.self._11;
				let a12 = m1.self._12;
				let a13 = m1.self._13;
				let a20 = m1.self._20;
				let a21 = m1.self._21;
				let a22 = m1.self._22;
				let a23 = m1.self._23;
				let a30 = m1.self._30;
				let a31 = m1.self._31;
				let a32 = m1.self._32;
				let a33 = m1.self._33;
				let b00 = a00 * a11 - a01 * a10;
				let b01 = a00 * a12 - a02 * a10;
				let b02 = a00 * a13 - a03 * a10;
				let b03 = a01 * a12 - a02 * a11;
				let b04 = a01 * a13 - a03 * a11;
				let b05 = a02 * a13 - a03 * a12;
				let b06 = a20 * a31 - a21 * a30;
				let b07 = a20 * a32 - a22 * a30;
				let b08 = a20 * a33 - a23 * a30;
				let b09 = a21 * a32 - a22 * a31;
				let b10 = a21 * a33 - a23 * a31;
				let b11 = a22 * a33 - a23 * a32;
				let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				let _this1 = iron_object_Uniforms.helpMat;
				let f = _this1.self._01;
				_this1.self._01 = _this1.self._10;
				_this1.self._10 = f;
				f = _this1.self._02;
				_this1.self._02 = _this1.self._20;
				_this1.self._20 = f;
				f = _this1.self._12;
				_this1.self._12 = _this1.self._21;
				_this1.self._21 = f;
				let _this2 = iron_object_Uniforms.helpMat3;
				let m2 = iron_object_Uniforms.helpMat;
				_this2.self._00 = m2.self._00;
				_this2.self._01 = m2.self._01;
				_this2.self._02 = m2.self._02;
				_this2.self._10 = m2.self._10;
				_this2.self._11 = m2.self._11;
				_this2.self._12 = m2.self._12;
				_this2.self._20 = m2.self._20;
				_this2.self._21 = m2.self._21;
				_this2.self._22 = m2.self._22;
				m = iron_object_Uniforms.helpMat3;
				break;
			case "_viewMatrix3":
				let _this3 = iron_object_Uniforms.helpMat3;
				let m3 = camera.V;
				_this3.self._00 = m3.self._00;
				_this3.self._01 = m3.self._01;
				_this3.self._02 = m3.self._02;
				_this3.self._10 = m3.self._10;
				_this3.self._11 = m3.self._11;
				_this3.self._12 = m3.self._12;
				_this3.self._20 = m3.self._20;
				_this3.self._21 = m3.self._21;
				_this3.self._22 = m3.self._22;
				m = iron_object_Uniforms.helpMat3;
				break;
			}
			if(m == null) {
				return;
			}
			g.setMatrix3(location,m.self);
		} else if(c.type == "vec4") {
			let v = null;
			let _this = iron_object_Uniforms.helpVec;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			if(v == null && iron_object_Uniforms.externalVec4Links != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalVec4Links;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					v = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(v != null) {
						break;
					}
				}
			}
			if(v == null) {
				return;
			}
			g.setFloat4(location,v.x,v.y,v.z,v.w);
		} else if(c.type == "vec3") {
			let v = null;
			let _this = iron_object_Uniforms.helpVec;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			switch(c.link) {
			case "_dim":
				let d = object.transform.dim;
				let s = object.transform.scale;
				let _this1 = iron_object_Uniforms.helpVec;
				_this1.x = d.x / s.x;
				_this1.y = d.y / s.y;
				_this1.z = d.z / s.z;
				_this1.w = 1.0;
				v = iron_object_Uniforms.helpVec;
				break;
			case "_halfDim":
				let d1 = object.transform.dim;
				let s1 = object.transform.scale;
				let _this2 = iron_object_Uniforms.helpVec;
				_this2.x = d1.x / s1.x / 2;
				_this2.y = d1.y / s1.y / 2;
				_this2.z = d1.z / s1.z / 2;
				_this2.w = 1.0;
				v = iron_object_Uniforms.helpVec;
				break;
			}
			if(v == null && iron_object_Uniforms.externalVec3Links != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalVec3Links;
				while(_g < _g1.length) {
					let f = _g1[_g];
					++_g;
					v = f(object,iron_object_Uniforms.currentMat(object),c.link);
					if(v != null) {
						break;
					}
				}
			}
			if(v == null) {
				return;
			}
			g.setFloat3(location,v.x,v.y,v.z);
		} else if(c.type == "vec2") {
			let vx = null;
			let vy = null;
			switch(c.link) {
			case "_morphDataDim":
				let mt = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget;
				vx = mt.numMorphTargets;
				vy = mt.morphBlockSize / mt.morphImageSize;
				break;
			case "_morphScaleOffset":
				let mt1 = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget;
				vx = mt1.scaling;
				vy = mt1.offset;
				break;
			case "_tilesheetOffset":
				let ts = (js_Boot.__cast(object , iron_object_MeshObject)).tilesheet;
				vx = ts.tileX;
				vy = ts.tileY;
				break;
			}
			if(vx == null && iron_object_Uniforms.externalVec2Links != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalVec2Links;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					let v = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(v != null) {
						vx = v.x;
						vy = v.y;
						break;
					}
				}
			}
			if(vx == null) {
				return;
			}
			g.setFloat2(location,vx,vy);
		} else if(c.type == "float") {
			let f = null;
			switch(c.link) {
			case "_objectInfoIndex":
				f = object.uid;
				break;
			case "_objectInfoMaterialIndex":
				f = iron_object_Uniforms.currentMat(object).uid;
				break;
			case "_objectInfoRandom":
				f = object.urandom;
				break;
			case "_posUnpack":
				f = iron_object_Uniforms.posUnpack != null ? iron_object_Uniforms.posUnpack : 1.0;
				break;
			case "_texUnpack":
				f = iron_object_Uniforms.texUnpack != null ? iron_object_Uniforms.texUnpack : 1.0;
				break;
			}
			if(f == null && iron_object_Uniforms.externalFloatLinks != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalFloatLinks;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					let res = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(res != null) {
						f = res;
						break;
					}
				}
			}
			if(f == null) {
				return;
			}
			g.setFloat(location,f);
		} else if(c.type == "floats") {
			let fa = null;
			switch(c.link) {
			case "_morphWeights":
				fa = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphWeights;
				break;
			case "_skinBones":
				if(object.animation != null) {
					fa = (js_Boot.__cast(object.animation , iron_object_BoneAnimation)).skinBuffer;
				}
				break;
			}
			if(fa == null && iron_object_Uniforms.externalFloatsLinks != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalFloatsLinks;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					fa = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(fa != null) {
						break;
					}
				}
			}
			if(fa == null) {
				return;
			}
			g.setFloats(location,fa);
		} else if(c.type == "int") {
			let i = null;
			if(c.link == "_uid") {
				i = object.uid;
			}
			if(i == null && iron_object_Uniforms.externalIntLinks != null) {
				let _g = 0;
				let _g1 = iron_object_Uniforms.externalIntLinks;
				while(_g < _g1.length) {
					let fn = _g1[_g];
					++_g;
					let res = fn(object,iron_object_Uniforms.currentMat(object),c.link);
					if(res != null) {
						i = res;
						break;
					}
				}
			}
			if(i == null) {
				return;
			}
			g.setInt(location,i);
		}
	}
	static setMaterialConstants(g,context,materialContext) {
		if(materialContext.raw.bind_constants != null) {
			let _g = 0;
			let _g1 = materialContext.raw.bind_constants.length;
			while(_g < _g1) {
				let i = _g++;
				let matc = materialContext.raw.bind_constants[i];
				let pos = -1;
				let _g1 = 0;
				let _g2 = context.raw.constants.length;
				while(_g1 < _g2) {
					let i = _g1++;
					if(context.raw.constants[i].name == matc.name) {
						pos = i;
						break;
					}
				}
				if(pos == -1) {
					continue;
				}
				let c = context.raw.constants[pos];
				iron_object_Uniforms.setMaterialConstant(g,context.constants[pos],c,matc);
			}
		}
		if(materialContext.textures != null) {
			let _g = 0;
			let _g1 = materialContext.textures.length;
			while(_g < _g1) {
				let i = _g++;
				let mname = materialContext.raw.bind_textures[i].name;
				let _g1 = 0;
				let _g2 = context.textureUnits.length;
				while(_g1 < _g2) {
					let j = _g1++;
					let sname = context.raw.texture_units[j].name;
					if(mname == sname) {
						g.setTexture(context.textureUnits[j],materialContext.textures[i]);
						materialContext.setTextureParameters(g,i,context,j);
						break;
					}
				}
			}
		}
	}
	static currentMat(object) {
		if(object != null && ((object) instanceof iron_object_MeshObject)) {
			let mo = js_Boot.__cast(object , iron_object_MeshObject);
			return mo.materials[mo.materialIndex];
		}
		return null;
	}
	static setMaterialConstant(g,location,c,matc) {
		switch(c.type) {
		case "bool":
			g.setBool(location,matc.bool);
			break;
		case "float":
			g.setFloat(location,matc.float);
			break;
		case "int":
			g.setInt(location,matc.int);
			break;
		case "vec2":
			g.setFloat2(location,matc.vec2.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec2.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN));
			break;
		case "vec3":
			g.setFloat3(location,matc.vec3.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec3.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec3.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
			break;
		case "vec4":
			g.setFloat4(location,matc.vec4.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN));
			break;
		}
	}
	static getTextureAddressing(s) {
		switch(s) {
		case "clamp":
			return 2;
		case "mirror":
			return 1;
		default:
			return 0;
		}
	}
	static getTextureFilter(s) {
		switch(s) {
		case "anisotropic":
			return 2;
		case "point":
			return 0;
		default:
			return 1;
		}
	}
	static getMipMapFilter(s) {
		switch(s) {
		case "linear":
			return 2;
		case "point":
			return 1;
		default:
			return 0;
		}
	}
}
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = "iron.object.Uniforms";
class iron_system_ArmPack {
	static decode(b) {
		let i = new haxe_io_BytesInput(b);
		i.set_bigEndian(false);
		return iron_system_ArmPack.read(i);
	}
	static read(i,key,parentKey) {
		if(parentKey == null) {
			parentKey = "";
		}
		if(key == null) {
			key = "";
		}
		try {
			let b = i.readByte();
			switch(b) {
			case 192:
				return null;
			case 194:
				return false;
			case 195:
				return true;
			case 196:
				return i.read(i.readByte());
			case 197:
				return i.read(i.readUInt16());
			case 198:
				return i.read(i.readInt32());
			case 202:
				return i.readFloat();
			case 204:
				return i.readByte();
			case 205:
				return i.readUInt16();
			case 206:
				return i.readInt32();
			case 208:
				return i.readInt8();
			case 209:
				return i.readInt16();
			case 210:
				return i.readInt32();
			case 217:
				return i.readString(i.readByte());
			case 218:
				return i.readString(i.readUInt16());
			case 219:
				return i.readString(i.readInt32());
			case 220:
				return iron_system_ArmPack.readArray(i,i.readUInt16(),key,parentKey);
			case 221:
				return iron_system_ArmPack.readArray(i,i.readInt32(),key,parentKey);
			case 222:
				return iron_system_ArmPack.readMap(i,i.readUInt16(),key,parentKey);
			case 223:
				return iron_system_ArmPack.readMap(i,i.readInt32(),key,parentKey);
			default:
				if(b < 128) {
					return b;
				} else if(b < 144) {
					return iron_system_ArmPack.readMap(i,15 & b,key,parentKey);
				} else if(b < 160) {
					return iron_system_ArmPack.readArray(i,15 & b,key,parentKey);
				} else if(b < 192) {
					return i.readString(31 & b);
				} else if(b > 223) {
					return -256 | b;
				}
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return null;
	}
	static readArray(i,length,key,parentKey) {
		if(parentKey == null) {
			parentKey = "";
		}
		if(key == null) {
			key = "";
		}
		let b = i.readByte();
		i.set_position(i.pos - 1);
		if(b == 202) {
			i.set_position(i.pos + 1);
			let a = kha_arrays_Float32Array._new(length);
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let x = _g++;
				let v = i.readFloat();
				a.setFloat32(x * 4,v,true);
			}
			return a;
		} else if(b == 210) {
			i.set_position(i.pos + 1);
			let a = kha_arrays_Uint32Array._new(length);
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let x = _g++;
				a.setUint32(x * 4,i.readInt32(),kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = x * 4;
			}
			return a;
		} else if(b == 209) {
			i.set_position(i.pos + 1);
			let a = kha_arrays_Int16Array._new(length);
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let x = _g++;
				a.setInt16(x * 2,i.readInt16(),kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = x * 2;
			}
			return a;
		} else {
			let a = [];
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let x = _g++;
				a.push(iron_system_ArmPack.read(i,key,parentKey));
			}
			return a;
		}
	}
	static readMap(i,length,key,parentKey) {
		if(parentKey == null) {
			parentKey = "";
		}
		if(key == null) {
			key = "";
		}
		let out = { };
		let _g = 0;
		let _g1 = length;
		while(_g < _g1) {
			let n = _g++;
			let k = Std.string(iron_system_ArmPack.read(i));
			let v = iron_system_ArmPack.read(i,k,key);
			out[k] = v;
		}
		return out;
	}
}
$hxClasses["iron.system.ArmPack"] = iron_system_ArmPack;
iron_system_ArmPack.__name__ = "iron.system.ArmPack";
class iron_system_Audio {
	constructor() {
	}
	static play(sound,loop,stream) {
		if(stream == null) {
			stream = false;
		}
		if(loop == null) {
			loop = false;
		}
		if(stream && sound.compressedData != null) {
			return kha_audio2_Audio1.stream(sound,loop);
		} else if(sound.uncompressedData != null) {
			return kha_audio2_Audio1.play(sound,loop);
		} else {
			return null;
		}
	}
}
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = "iron.system.Audio";
Object.assign(iron_system_Audio.prototype, {
	__class__: iron_system_Audio
});
class iron_system_VirtualButton {
	constructor() {
		this.down = false;
		this.released = false;
		this.started = false;
	}
}
$hxClasses["iron.system.VirtualButton"] = iron_system_VirtualButton;
iron_system_VirtualButton.__name__ = "iron.system.VirtualButton";
Object.assign(iron_system_VirtualButton.prototype, {
	__class__: iron_system_VirtualButton
	,started: null
	,released: null
	,down: null
});
class iron_system_VirtualInput {
	constructor() {
		if(iron_system_VirtualInput._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.virtualButtons = null;
	}
	setVirtual(virtual,button) {
		if(iron_system_Input.virtualButtons == null) {
			iron_system_Input.virtualButtons = new haxe_ds_StringMap();
		}
		let vb = iron_system_Input.virtualButtons.h[virtual];
		if(vb == null) {
			vb = new iron_system_VirtualButton();
			iron_system_Input.virtualButtons.h[virtual] = vb;
		}
		if(this.virtualButtons == null) {
			this.virtualButtons = new haxe_ds_StringMap();
		}
		this.virtualButtons.h[button] = vb;
	}
	downVirtual(button) {
		if(this.virtualButtons != null) {
			let vb = this.virtualButtons.h[button];
			if(vb != null) {
				vb.down = true;
				vb.started = true;
			}
		}
	}
	upVirtual(button) {
		if(this.virtualButtons != null) {
			let vb = this.virtualButtons.h[button];
			if(vb != null) {
				vb.down = false;
				vb.released = true;
			}
		}
	}
}
$hxClasses["iron.system.VirtualInput"] = iron_system_VirtualInput;
iron_system_VirtualInput.__name__ = "iron.system.VirtualInput";
Object.assign(iron_system_VirtualInput.prototype, {
	__class__: iron_system_VirtualInput
	,virtualButtons: null
});
class iron_system_Mouse extends iron_system_VirtualInput {
	constructor() {
		iron_system_VirtualInput._hx_skip_constructor = true;
		super();
		iron_system_VirtualInput._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.lastY = -1.0;
		this.lastX = -1.0;
		this.hidden = false;
		this.locked = false;
		this.wheelDelta = 0;
		this.movementY = 0.0;
		this.movementX = 0.0;
		this.moved = false;
		this.viewY = 0.0;
		this.viewX = 0.0;
		this.y = 0.0;
		this.x = 0.0;
		this.buttonsReleased = [false,false,false,false,false];
		this.buttonsStarted = [false,false,false,false,false];
		this.buttonsDown = [false,false,false,false,false];
		super._hx_constructor();
		kha_input_Mouse.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener),$bind(this,this.wheelListener));
	}
	endFrame() {
		let tmp = this.buttonsStarted[1] = this.buttonsStarted[2] = this.buttonsStarted[3] = this.buttonsStarted[4] = false;
		this.buttonsStarted[0] = tmp;
		let tmp1 = this.buttonsReleased[1] = this.buttonsReleased[2] = this.buttonsReleased[3] = this.buttonsReleased[4] = false;
		this.buttonsReleased[0] = tmp1;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.wheelDelta = 0;
	}
	reset() {
		let tmp = this.buttonsDown[1] = this.buttonsDown[2] = this.buttonsDown[3] = this.buttonsDown[4] = false;
		this.buttonsDown[0] = tmp;
		this.endFrame();
	}
	buttonIndex(button) {
		let _g = 0;
		let _g1 = iron_system_Mouse.buttons.length;
		while(_g < _g1) {
			let i = _g++;
			if(iron_system_Mouse.buttons[i] == button) {
				return i;
			}
		}
		return 0;
	}
	down(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsDown[this.buttonIndex(button)];
	}
	started(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	released(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsReleased[this.buttonIndex(button)];
	}
	lock() {
		if(kha_input_Mouse.get().canLock()) {
			kha_input_Mouse.get().lock();
			this.locked = true;
			this.hidden = true;
		}
	}
	unlock() {
		if(kha_input_Mouse.get().canLock()) {
			kha_input_Mouse.get().unlock();
			this.locked = false;
			this.hidden = false;
		}
	}
	hide() {
		kha_input_Mouse.get().hideSystemCursor();
		this.hidden = true;
	}
	show() {
		kha_input_Mouse.get().showSystemCursor();
		this.hidden = false;
	}
	downListener(index,x,y) {
		if(iron_system_Input.getPen().inUse) {
			return;
		}
		this.buttonsDown[index] = true;
		this.buttonsStarted[index] = true;
		this.x = x;
		this.y = y;
		this.downVirtual(iron_system_Mouse.buttons[index]);
	}
	upListener(index,x,y) {
		if(iron_system_Input.getPen().inUse) {
			return;
		}
		this.buttonsDown[index] = false;
		this.buttonsReleased[index] = true;
		this.x = x;
		this.y = y;
		this.upVirtual(iron_system_Mouse.buttons[index]);
	}
	moveListener(x,y,movementX,movementY) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		if(this.locked) {
			this.movementX += movementX;
			this.movementY += movementY;
		} else {
			this.movementX += x - this.lastX;
			this.movementY += y - this.lastY;
		}
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
	}
	wheelListener(delta) {
		this.wheelDelta = delta;
	}
	get_viewX() {
		return this.x - iron_App.x();
	}
	get_viewY() {
		return this.y - iron_App.y();
	}
}
$hxClasses["iron.system.Mouse"] = iron_system_Mouse;
iron_system_Mouse.__name__ = "iron.system.Mouse";
iron_system_Mouse.__super__ = iron_system_VirtualInput;
Object.assign(iron_system_Mouse.prototype, {
	__class__: iron_system_Mouse
	,buttonsDown: null
	,buttonsStarted: null
	,buttonsReleased: null
	,x: null
	,y: null
	,viewX: null
	,viewY: null
	,moved: null
	,movementX: null
	,movementY: null
	,wheelDelta: null
	,locked: null
	,hidden: null
	,lastX: null
	,lastY: null
	,__properties__: {get_viewY: "get_viewY",get_viewX: "get_viewX"}
});
class iron_system_Pen extends iron_system_VirtualInput {
	constructor() {
		iron_system_VirtualInput._hx_skip_constructor = true;
		super();
		iron_system_VirtualInput._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.lastY = -1.0;
		this.lastX = -1.0;
		this.inUse = false;
		this.connected = false;
		this.pressure = 0.0;
		this.movementY = 0.0;
		this.movementX = 0.0;
		this.moved = false;
		this.viewY = 0.0;
		this.viewX = 0.0;
		this.y = 0.0;
		this.x = 0.0;
		this.buttonsReleased = [false];
		this.buttonsStarted = [false];
		this.buttonsDown = [false];
		super._hx_constructor();
		let pen = kha_input_Pen.get();
		if(pen != null) {
			pen.notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener));
		}
	}
	endFrame() {
		this.buttonsStarted[0] = false;
		this.buttonsReleased[0] = false;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.inUse = false;
	}
	reset() {
		this.buttonsDown[0] = false;
		this.endFrame();
	}
	buttonIndex(button) {
		return 0;
	}
	down(button) {
		if(button == null) {
			button = "tip";
		}
		return this.buttonsDown[this.buttonIndex(button)];
	}
	started(button) {
		if(button == null) {
			button = "tip";
		}
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	released(button) {
		if(button == null) {
			button = "tip";
		}
		return this.buttonsReleased[this.buttonIndex(button)];
	}
	downListener(x,y,pressure) {
		this.buttonsDown[0] = true;
		this.buttonsStarted[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
		iron_system_Input.getMouse().downListener(0,x,y);
	}
	upListener(x,y,pressure) {
		if(this.buttonsStarted[0]) {
			this.buttonsStarted[0] = false;
			this.inUse = true;
			return;
		}
		this.buttonsDown[0] = false;
		this.buttonsReleased[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
		iron_system_Input.getMouse().upListener(0,x,y);
		this.inUse = true;
	}
	moveListener(x,y,pressure) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		this.movementX = x - this.lastX;
		this.movementY = y - this.lastY;
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
		this.pressure = pressure;
		this.connected = true;
	}
	get_viewX() {
		return this.x - iron_App.x();
	}
	get_viewY() {
		return this.y - iron_App.y();
	}
}
$hxClasses["iron.system.Pen"] = iron_system_Pen;
iron_system_Pen.__name__ = "iron.system.Pen";
iron_system_Pen.__super__ = iron_system_VirtualInput;
Object.assign(iron_system_Pen.prototype, {
	__class__: iron_system_Pen
	,buttonsDown: null
	,buttonsStarted: null
	,buttonsReleased: null
	,x: null
	,y: null
	,viewX: null
	,viewY: null
	,moved: null
	,movementX: null
	,movementY: null
	,pressure: null
	,connected: null
	,inUse: null
	,lastX: null
	,lastY: null
	,__properties__: {get_viewY: "get_viewY",get_viewX: "get_viewX"}
});
class iron_system_Keyboard extends iron_system_VirtualInput {
	constructor() {
		iron_system_VirtualInput._hx_skip_constructor = true;
		super();
		iron_system_VirtualInput._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.repeatTime = 0.0;
		this.repeatKey = false;
		this.keysFrame = [];
		this.keysReleased = new haxe_ds_StringMap();
		this.keysStarted = new haxe_ds_StringMap();
		this.keysDown = new haxe_ds_StringMap();
		super._hx_constructor();
		this.reset();
		kha_input_Keyboard.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.pressListener));
	}
	endFrame() {
		if(this.keysFrame.length > 0) {
			let _g = 0;
			let _g1 = this.keysFrame;
			while(_g < _g1.length) {
				let s = _g1[_g];
				++_g;
				this.keysStarted.h[s] = false;
				this.keysReleased.h[s] = false;
			}
			this.keysFrame.splice(0,this.keysFrame.length);
		}
		if(kha_Scheduler.time() - this.repeatTime > 0.05) {
			this.repeatTime = kha_Scheduler.time();
			this.repeatKey = true;
		} else {
			this.repeatKey = false;
		}
	}
	reset() {
		let _g = 0;
		let _g1 = iron_system_Keyboard.keys;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			this.keysDown.h[s] = false;
			this.keysStarted.h[s] = false;
			this.keysReleased.h[s] = false;
		}
		this.endFrame();
	}
	down(key) {
		return this.keysDown.h[key];
	}
	started(key) {
		return this.keysStarted.h[key];
	}
	released(key) {
		return this.keysReleased.h[key];
	}
	repeat(key) {
		if(!this.keysStarted.h[key]) {
			if(this.repeatKey) {
				return this.keysDown.h[key];
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	downListener(code) {
		let s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		this.keysStarted.h[s] = true;
		this.keysDown.h[s] = true;
		this.repeatTime = kha_Scheduler.time() + 0.4;
		this.downVirtual(s);
	}
	upListener(code) {
		let s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		this.keysReleased.h[s] = true;
		this.keysDown.h[s] = false;
		this.upVirtual(s);
	}
	pressListener(char) {
	}
	static keyCode(key) {
		switch(key) {
		case 1:
			return "back";
		case 8:
			return "backspace";
		case 9:
			return "tab";
		case 13:
			return "enter";
		case 16:
			return "shift";
		case 17:
			return "control";
		case 18:
			return "alt";
		case 20:
			return "capslock";
		case 27:
			return "escape";
		case 32:
			return "space";
		case 37:
			return "left";
		case 38:
			return "up";
		case 39:
			return "right";
		case 40:
			return "down";
		case 46:
			return "delete";
		case 48:
			return "0";
		case 49:
			return "1";
		case 50:
			return "2";
		case 51:
			return "3";
		case 52:
			return "4";
		case 53:
			return "5";
		case 54:
			return "6";
		case 55:
			return "7";
		case 56:
			return "8";
		case 57:
			return "9";
		case 58:
			return ":";
		case 59:
			return ";";
		case 60:
			return "<";
		case 61:
			return "=";
		case 62:
			return ">";
		case 63:
			return "?";
		case 64:
			return "@";
		case 91:
			return "win";
		case 96:
			return "0";
		case 97:
			return "1";
		case 98:
			return "2";
		case 99:
			return "3";
		case 100:
			return "4";
		case 101:
			return "5";
		case 102:
			return "6";
		case 103:
			return "7";
		case 104:
			return "8";
		case 105:
			return "9";
		case 106:
			return "*";
		case 107:
			return "+";
		case 109:
			return "-";
		case 110:
			return ".";
		case 111:
			return "/";
		case 112:
			return "f1";
		case 113:
			return "f2";
		case 114:
			return "f3";
		case 115:
			return "f4";
		case 116:
			return "f5";
		case 117:
			return "f6";
		case 118:
			return "f7";
		case 119:
			return "f8";
		case 120:
			return "f9";
		case 121:
			return "f10";
		case 122:
			return "f11";
		case 123:
			return "f12";
		case 161:
			return "!";
		case 162:
			return "\"";
		case 163:
			return "#";
		case 164:
			return "$";
		case 165:
			return "%";
		case 166:
			return "&";
		case 167:
			return "_";
		case 168:
			return "(";
		case 169:
			return ")";
		case 170:
			return "*";
		case 171:
			return "+";
		case 172:
			return "|";
		case 173:
			return "-";
		case 174:
			return "{";
		case 175:
			return "}";
		case 176:
			return "~";
		case 188:
			return ",";
		case 190:
			return ".";
		case 191:
			return "/";
		case 192:
			return "`";
		case 219:
			return "[";
		case 220:
			return "\\";
		case 221:
			return "]";
		default:
			return String.fromCodePoint(key).toLowerCase();
		}
	}
}
$hxClasses["iron.system.Keyboard"] = iron_system_Keyboard;
iron_system_Keyboard.__name__ = "iron.system.Keyboard";
iron_system_Keyboard.__super__ = iron_system_VirtualInput;
Object.assign(iron_system_Keyboard.prototype, {
	__class__: iron_system_Keyboard
	,keysDown: null
	,keysStarted: null
	,keysReleased: null
	,keysFrame: null
	,repeatKey: null
	,repeatTime: null
});
class iron_system_GamepadStick {
	constructor() {
		this.movementY = 0.0;
		this.movementX = 0.0;
		this.moved = false;
		this.lastY = 0.0;
		this.lastX = 0.0;
		this.y = 0.0;
		this.x = 0.0;
	}
}
$hxClasses["iron.system.GamepadStick"] = iron_system_GamepadStick;
iron_system_GamepadStick.__name__ = "iron.system.GamepadStick";
Object.assign(iron_system_GamepadStick.prototype, {
	__class__: iron_system_GamepadStick
	,x: null
	,y: null
	,lastX: null
	,lastY: null
	,moved: null
	,movementX: null
	,movementY: null
});
class iron_system_Gamepad extends iron_system_VirtualInput {
	constructor(i,virtual) {
		iron_system_VirtualInput._hx_skip_constructor = true;
		super();
		iron_system_VirtualInput._hx_skip_constructor = false;
		this._hx_constructor(i,virtual);
	}
	_hx_constructor(i,virtual) {
		if(virtual == null) {
			virtual = false;
		}
		this.connects = 0;
		this.num = 0;
		this.connected = false;
		this.rightStick = new iron_system_GamepadStick();
		this.leftStick = new iron_system_GamepadStick();
		this.buttonsFrame = [];
		this.buttonsReleased = [];
		this.buttonsStarted = [];
		this.buttonsDown = [];
		super._hx_constructor();
		let _g = 0;
		let _g1 = iron_system_Gamepad.buttons;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			this.buttonsDown.push(0.0);
			this.buttonsStarted.push(false);
			this.buttonsReleased.push(false);
		}
		this.num = i;
		this.reset();
		if(virtual) {
			this.connected = true;
		} else {
			this.connect();
		}
	}
	get_id() {
		return kha_input_Gamepad.get(this.num).get_id();
	}
	connect() {
		let gamepad = kha_input_Gamepad.get(this.num);
		if(gamepad == null) {
			return;
		}
		this.connected = true;
		gamepad.notify($bind(this,this.axisListener),$bind(this,this.buttonListener));
	}
	endFrame() {
		if(this.buttonsFrame.length > 0) {
			let _g = 0;
			let _g1 = this.buttonsFrame;
			while(_g < _g1.length) {
				let i = _g1[_g];
				++_g;
				this.buttonsStarted[i] = false;
				this.buttonsReleased[i] = false;
			}
			this.buttonsFrame.splice(0,this.buttonsFrame.length);
		}
		this.leftStick.moved = false;
		this.leftStick.movementX = 0;
		this.leftStick.movementY = 0;
		this.rightStick.moved = false;
		this.rightStick.movementX = 0;
		this.rightStick.movementY = 0;
	}
	reset() {
		let _g = 0;
		let _g1 = this.buttonsDown.length;
		while(_g < _g1) {
			let i = _g++;
			this.buttonsDown[i] = 0.0;
			this.buttonsStarted[i] = false;
			this.buttonsReleased[i] = false;
		}
		this.endFrame();
	}
	buttonIndex(button) {
		let _g = 0;
		let _g1 = iron_system_Gamepad.buttons.length;
		while(_g < _g1) {
			let i = _g++;
			if(iron_system_Gamepad.buttons[i] == button) {
				return i;
			}
		}
		return 0;
	}
	down(button) {
		return this.buttonsDown[this.buttonIndex(button)];
	}
	started(button) {
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	released(button) {
		return this.buttonsReleased[this.buttonIndex(button)];
	}
	axisListener(axis,value) {
		let stick = axis <= 1 ? this.leftStick : this.rightStick;
		if(axis == 0 || axis == 2) {
			stick.lastX = stick.x;
			stick.x = value;
			stick.movementX = stick.x - stick.lastX;
		} else if(axis == 1 || axis == 3) {
			stick.lastY = stick.y;
			stick.y = value;
			stick.movementY = stick.y - stick.lastY;
		}
		stick.moved = true;
	}
	buttonListener(button,value) {
		this.buttonsFrame.push(button);
		this.buttonsDown[button] = value;
		if(value > 0) {
			this.buttonsStarted[button] = true;
		} else {
			this.buttonsReleased[button] = true;
		}
		if(value == 0.0) {
			this.upVirtual(iron_system_Gamepad.buttons[button]);
		} else if(value == 1.0) {
			this.downVirtual(iron_system_Gamepad.buttons[button]);
		}
	}
	static keyCode(button) {
		return iron_system_Gamepad.buttons[button];
	}
}
$hxClasses["iron.system.Gamepad"] = iron_system_Gamepad;
iron_system_Gamepad.__name__ = "iron.system.Gamepad";
iron_system_Gamepad.__super__ = iron_system_VirtualInput;
Object.assign(iron_system_Gamepad.prototype, {
	__class__: iron_system_Gamepad
	,buttonsDown: null
	,buttonsStarted: null
	,buttonsReleased: null
	,buttonsFrame: null
	,leftStick: null
	,rightStick: null
	,connected: null
	,num: null
	,connects: null
	,__properties__: {get_id: "get_id"}
});
class iron_system_Sensor {
	constructor() {
		this.z = 0.0;
		this.y = 0.0;
		this.x = 0.0;
		kha_input_Sensor.get(0).notify($bind(this,this.listener));
	}
	listener(x,y,z) {
		this.x = x;
		this.y = y;
		this.z = z;
	}
}
$hxClasses["iron.system.Sensor"] = iron_system_Sensor;
iron_system_Sensor.__name__ = "iron.system.Sensor";
Object.assign(iron_system_Sensor.prototype, {
	__class__: iron_system_Sensor
	,x: null
	,y: null
	,z: null
});
class iron_system_Lz4 {
	static encodeBound(size) {
		if(size > 2113929216) {
			return 0;
		} else {
			return size + (size / 255 | 0) + 16;
		}
	}
	static encode(b) {
		let iBuf = kha_arrays_Uint8Array._new(b.length);
		let _g = 0;
		let _g1 = b.length;
		while(_g < _g1) {
			let i = _g++;
			iBuf.setUint8(i,b.b[i]);
		}
		let iLen = iBuf.byteLength;
		if(iLen >= 2113929216) {
			haxe_Log.trace("LZ4 range error",{ fileName : "Sources/iron/system/Lz4.hx", lineNumber : 52, className : "iron.system.Lz4", methodName : "encode"});
			return null;
		}
		let lastMatchPos = iLen - 12;
		let lastLiteralPos = iLen - 5;
		if(iron_system_Lz4.hashTable == null) {
			iron_system_Lz4.hashTable = kha_arrays_Int32Array._new(65536);
		}
		let _g2 = 0;
		let _g3 = iron_system_Lz4.hashTable.byteLength >> 2;
		while(_g2 < _g3) {
			let i = _g2++;
			let this1 = iron_system_Lz4.hashTable;
			this1.setInt32(i * 4,-65536,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let tmp = i * 4;
		}
		let oLen = iLen > 2113929216 ? 0 : iLen + (iLen / 255 | 0) + 16;
		let oBuf = kha_arrays_Uint8Array._new(oLen);
		let iPos = 0;
		let oPos = 0;
		let anchorPos = 0;
		while(true) {
			let refPos = 0;
			let mOffset = 0;
			let sequence = iBuf.getUint8(iPos) << 8 | iBuf.getUint8(iPos + 1) << 16 | iBuf.getUint8(iPos + 2) << 24;
			while(iPos <= lastMatchPos) {
				sequence = sequence >>> 8 | iBuf.getUint8(iPos + 3) << 24;
				let hash = (sequence * 40503 & 65535) + (sequence * 31153 >>> 16) & 65535;
				refPos = iron_system_Lz4.hashTable.getInt32(hash * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let this1 = iron_system_Lz4.hashTable;
				this1.setInt32(hash * 4,iPos,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = hash * 4;
				mOffset = iPos - refPos;
				if(mOffset < 65536 && iBuf.getUint8(refPos) == (sequence & 255) && iBuf.getUint8(refPos + 1) == (sequence >>> 8 & 255) && iBuf.getUint8(refPos + 2) == (sequence >>> 16 & 255) && iBuf.getUint8(refPos + 3) == (sequence >>> 24 & 255)) {
					break;
				}
				++iPos;
			}
			if(iPos > lastMatchPos) {
				break;
			}
			let lLen = iPos - anchorPos;
			let mLen = iPos;
			iPos += 4;
			refPos += 4;
			while(iPos < lastLiteralPos && iBuf.getUint8(iPos) == iBuf.getUint8(refPos)) {
				++iPos;
				++refPos;
			}
			mLen = iPos - mLen;
			let token = mLen < 19 ? mLen - 4 : 15;
			if(lLen >= 15) {
				let k = oPos++;
				oBuf.setUint8(k,240 | token);
				let l = lLen - 15;
				while(l >= 255) {
					let k = oPos++;
					oBuf.setUint8(k,255);
					l -= 255;
				}
				let k1 = oPos++;
				oBuf.setUint8(k1,l);
			} else {
				let k = oPos++;
				oBuf.setUint8(k,lLen << 4 | token);
			}
			while(lLen-- > 0) {
				let k = oPos++;
				oBuf.setUint8(k,iBuf.getUint8(anchorPos++));
			}
			if(mLen == 0) {
				break;
			}
			oBuf.setUint8(oPos,mOffset);
			let k = oPos + 1;
			oBuf.setUint8(k,mOffset >>> 8);
			oPos += 2;
			if(mLen >= 19) {
				let l = mLen - 19;
				while(l >= 255) {
					let k = oPos++;
					oBuf.setUint8(k,255);
					l -= 255;
				}
				let k = oPos++;
				oBuf.setUint8(k,l);
			}
			anchorPos = iPos;
		}
		let lLen = iLen - anchorPos;
		if(lLen >= 15) {
			let k = oPos++;
			oBuf.setUint8(k,240);
			let l = lLen - 15;
			while(l >= 255) {
				let k = oPos++;
				oBuf.setUint8(k,255);
				l -= 255;
			}
			let k1 = oPos++;
			oBuf.setUint8(k1,l);
		} else {
			let k = oPos++;
			oBuf.setUint8(k,lLen << 4);
		}
		while(lLen-- > 0) {
			let k = oPos++;
			oBuf.setUint8(k,iBuf.getUint8(anchorPos++));
		}
		return haxe_io_Bytes.ofData(oBuf.buffer.slice(0,oPos));
	}
	static decode(b,oLen) {
		let iBuf = kha_arrays_Uint8Array._new(b.length);
		let _g = 0;
		let _g1 = b.length;
		while(_g < _g1) {
			let i = _g++;
			iBuf.setUint8(i,b.b[i]);
		}
		let iLen = iBuf.byteLength;
		let oBuf = kha_arrays_Uint8Array._new(oLen);
		let iPos = 0;
		let oPos = 0;
		while(iPos < iLen) {
			let token = iBuf.getUint8(iPos++);
			let clen = token >>> 4;
			if(clen != 0) {
				if(clen == 15) {
					let l = 0;
					while(true) {
						l = iBuf.getUint8(iPos++);
						if(l != 255) {
							break;
						}
						clen += 255;
					}
					clen += l;
				}
				let end = iPos + clen;
				while(iPos < end) {
					let k = oPos++;
					oBuf.setUint8(k,iBuf.getUint8(iPos++));
				}
				if(iPos == iLen) {
					break;
				}
			}
			let mOffset = iBuf.getUint8(iPos) | iBuf.getUint8(iPos + 1) << 8;
			if(mOffset == 0 || mOffset > oPos) {
				return null;
			}
			iPos += 2;
			clen = (token & 15) + 4;
			if(clen == 19) {
				let l = 0;
				while(true) {
					l = iBuf.getUint8(iPos++);
					if(l != 255) {
						break;
					}
					clen += 255;
				}
				clen += l;
			}
			let mPos = oPos - mOffset;
			let end = oPos + clen;
			while(oPos < end) {
				let k = oPos++;
				oBuf.setUint8(k,oBuf.getUint8(mPos++));
			}
		}
		return haxe_io_Bytes.ofData(oBuf.buffer);
	}
}
$hxClasses["iron.system.Lz4"] = iron_system_Lz4;
iron_system_Lz4.__name__ = "iron.system.Lz4";
class js_Boot {
	static getClass(o) {
		if(o == null) {
			return null;
		} else if(((o) instanceof Array)) {
			return Array;
		} else {
			let cl = o.__class__;
			if(cl != null) {
				return cl;
			}
			let name = js_Boot.__nativeClassName(o);
			if(name != null) {
				return js_Boot.__resolveNativeClass(name);
			}
			return null;
		}
	}
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		let t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				let e = $hxEnums[o.__enum__];
				let con = e.__constructs__[o._hx_index];
				let n = con._hx_name;
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						let _g = [];
						{
							let _g1 = 0;
							let _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								let p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				let str = "[";
				s += "\t";
				let _g = 0;
				let _g1 = o.length;
				while(_g < _g1) {
					let i = _g++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			let tostr;
			try {
				tostr = o.toString;
			} catch( _g ) {
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				let s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			let str = "{\n";
			s += "\t";
			let hasp = o.hasOwnProperty != null;
			let k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str.length != 2) {
				str += ", \n";
			}
			str += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str += "\n" + s + "}";
			return str;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
	static __interfLoop(cc,cl) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		let intf = cc.__interfaces__;
		if(intf != null && (cc.__super__ == null || cc.__super__.__interfaces__ != intf)) {
			let _g = 0;
			let _g1 = intf.length;
			while(_g < _g1) {
				let i = _g++;
				let i1 = intf[i];
				if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
					return true;
				}
			}
		}
		return js_Boot.__interfLoop(cc.__super__,cl);
	}
	static __instanceof(o,cl) {
		if(cl == null) {
			return false;
		}
		switch(cl) {
		case Array:
			return ((o) instanceof Array);
		case Bool:
			return typeof(o) == "boolean";
		case Dynamic:
			return o != null;
		case Float:
			return typeof(o) == "number";
		case Int:
			if(typeof(o) == "number") {
				return ((o | 0) === o);
			} else {
				return false;
			}
			break;
		case String:
			return typeof(o) == "string";
		default:
			if(o != null) {
				if(typeof(cl) == "function") {
					if(js_Boot.__downcastCheck(o,cl)) {
						return true;
					}
				} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
					if(((o) instanceof cl)) {
						return true;
					}
				}
			} else {
				return false;
			}
			if(cl == Class ? o.__name__ != null : false) {
				return true;
			}
			if(cl == Enum ? o.__ename__ != null : false) {
				return true;
			}
			return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
		}
	}
	static __downcastCheck(o,cl) {
		if(!((o) instanceof cl)) {
			if(cl.__isInterface__) {
				return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static __cast(o,t) {
		if(o == null || js_Boot.__instanceof(o,t)) {
			return o;
		} else {
			throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
		}
	}
	static __nativeClassName(o) {
		let name = js_Boot.__toStr.call(o).slice(8,-1);
		if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
			return null;
		}
		return name;
	}
	static __isNativeObj(o) {
		return js_Boot.__nativeClassName(o) != null;
	}
	static __resolveNativeClass(name) {
		return $global[name];
	}
}
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
class kha__$Assets_ImageList {
	constructor() {
		this.names = [];
	}
	get(name) {
		return Reflect.field(this,name);
	}
}
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = "kha._Assets.ImageList";
Object.assign(kha__$Assets_ImageList.prototype, {
	__class__: kha__$Assets_ImageList
	,names: null
});
class kha__$Assets_SoundList {
	constructor() {
		this.names = [];
	}
	get(name) {
		return Reflect.field(this,name);
	}
}
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = "kha._Assets.SoundList";
Object.assign(kha__$Assets_SoundList.prototype, {
	__class__: kha__$Assets_SoundList
	,names: null
});
class kha__$Assets_BlobList {
	constructor() {
		this.names = [];
	}
	get(name) {
		return Reflect.field(this,name);
	}
}
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = "kha._Assets.BlobList";
Object.assign(kha__$Assets_BlobList.prototype, {
	__class__: kha__$Assets_BlobList
	,names: null
});
class kha__$Assets_FontList {
	constructor() {
		this.names = ["font_default"];
		this.font_defaultSize = 1;
		this.font_defaultDescription = { name : "font_default", file_sizes : [1], files : ["font_default.ttf"], type : "font"};
		this.font_defaultName = "font_default";
		this.font_default = null;
	}
	get(name) {
		return Reflect.field(this,name);
	}
	font_defaultLoad(done,failure) {
		kha_Assets.loadFont("font_default",function(font) {
			done();
		},failure,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 155, className : "kha._Assets.FontList", methodName : "font_defaultLoad"});
	}
	font_defaultUnload() {
		this.font_default.unload();
		this.font_default = null;
	}
}
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = "kha._Assets.FontList";
Object.assign(kha__$Assets_FontList.prototype, {
	__class__: kha__$Assets_FontList
	,font_default: null
	,font_defaultName: null
	,font_defaultDescription: null
	,font_defaultSize: null
	,names: null
});
class kha__$Assets_VideoList {
	constructor() {
		this.names = [];
	}
	get(name) {
		return Reflect.field(this,name);
	}
}
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = "kha._Assets.VideoList";
Object.assign(kha__$Assets_VideoList.prototype, {
	__class__: kha__$Assets_VideoList
	,names: null
});
class kha_Assets {
	static loadEverything(callback,filter,uncompressSoundsFilter,failed) {
		let lists = [kha__$Assets_ImageList,kha__$Assets_SoundList,kha__$Assets_BlobList,kha__$Assets_FontList,kha__$Assets_VideoList];
		let listInstances = [kha_Assets.images,kha_Assets.sounds,kha_Assets.blobs,kha_Assets.fonts,kha_Assets.videos];
		let fileCount = 0;
		let byteCount = 0;
		let _g = 0;
		let _g1 = lists.length;
		while(_g < _g1) {
			let i = _g++;
			let list = lists[i];
			let _g1 = 0;
			let _g2 = Type.getInstanceFields(list);
			while(_g1 < _g2.length) {
				let file = _g2[_g1];
				++_g1;
				if(file.endsWith("Description")) {
					++fileCount;
				} else if(file.endsWith("Size")) {
					let size = Reflect.field(listInstances[i],file);
					byteCount += size;
				}
			}
		}
		if(fileCount == 0) {
			callback();
			return;
		}
		let filesLeft = fileCount;
		let bytesLeft = byteCount;
		let onLoaded = function(bytes) {
			filesLeft -= 1;
			bytesLeft -= bytes;
			kha_Assets.progress = 1 - bytesLeft / byteCount;
			if(filesLeft == 0) {
				callback();
			}
		};
		let onError = function(err,bytes) {
			(kha_Assets.reporter(failed,{ fileName : "kha/Assets.hx", lineNumber : 116, className : "kha.Assets", methodName : "loadEverything"}))(err);
			onLoaded(bytes);
		};
		let loadFunc = function(desc,done,failure) {
			let name = desc.name;
			let size = desc.file_sizes[0];
			switch(desc.type) {
			case "blob":
				kha_Assets.loadBlob(name,function(blob) {
					done(size);
				},function(err) {
					onError(err,size);
				},{ fileName : "kha/Assets.hx", lineNumber : 142, className : "kha.Assets", methodName : "loadEverything"});
				break;
			case "font":
				kha_Assets.loadFont(name,function(font) {
					done(size);
				},function(err) {
					onError(err,size);
				},{ fileName : "kha/Assets.hx", lineNumber : 146, className : "kha.Assets", methodName : "loadEverything"});
				break;
			case "image":
				kha_Assets.loadImage(name,function(image) {
					done(size);
				},function(err) {
					onError(err,size);
				},{ fileName : "kha/Assets.hx", lineNumber : 125, className : "kha.Assets", methodName : "loadEverything"});
				break;
			case "sound":
				kha_Assets.loadSound(name,function(sound) {
					if(uncompressSoundsFilter == null || uncompressSoundsFilter(desc)) {
						sound.uncompress(function() {
							done(size);
						});
					} else {
						done(size);
					}
				},function(err) {
					onError(err,size);
				},{ fileName : "kha/Assets.hx", lineNumber : 129, className : "kha.Assets", methodName : "loadEverything"});
				break;
			case "video":
				kha_Assets.loadVideo(name,function(video) {
					done(size);
				},function(err) {
					onError(err,size);
				},{ fileName : "kha/Assets.hx", lineNumber : 150, className : "kha.Assets", methodName : "loadEverything"});
				break;
			}
		};
		let _g2 = 0;
		let _g3 = lists.length;
		while(_g2 < _g3) {
			let i = _g2++;
			let list = lists[i];
			let listInstance = listInstances[i];
			let _g = 0;
			let _g1 = Type.getInstanceFields(list);
			while(_g < _g1.length) {
				let field = _g1[_g];
				++_g;
				if(!field.endsWith("Description")) {
					continue;
				}
				let desc = Reflect.field(listInstance,field);
				if(filter == null || filter(desc)) {
					loadFunc(desc,onLoaded,onError);
				} else {
					onLoaded(desc.file_sizes[0]);
				}
			}
		}
	}
	static loadImage(name,done,failed,pos) {
		let description = Reflect.field(kha_Assets.images,name + "Description");
		if(description == null) {
			(kha_Assets.reporter(failed,pos))({ url : name, error : "Name not found"});
			return;
		}
		kha_LoaderImpl.loadImageFromDescription(description,function(image) {
			kha_Assets.images[name] = image;
			done(image);
		},kha_Assets.reporter(failed,pos));
	}
	static loadImageFromPath(path,readable,done,failed,pos) {
		let description = { files : [path], readable : readable};
		kha_LoaderImpl.loadImageFromDescription(description,done,kha_Assets.reporter(failed,pos));
	}
	static get_imageFormats() {
		return kha_LoaderImpl.getImageFormats();
	}
	static loadBlob(name,done,failed,pos) {
		let description = Reflect.field(kha_Assets.blobs,name + "Description");
		if(description == null) {
			(kha_Assets.reporter(failed,pos))({ url : name, error : "Name not found"});
			return;
		}
		kha_LoaderImpl.loadBlobFromDescription(description,function(blob) {
			kha_Assets.blobs[name] = blob;
			done(blob);
		},kha_Assets.reporter(failed,pos));
	}
	static loadBlobFromPath(path,done,failed,pos) {
		let description = { files : [path]};
		kha_LoaderImpl.loadBlobFromDescription(description,done,kha_Assets.reporter(failed,pos));
	}
	static loadSound(name,done,failed,pos) {
		let description = Reflect.field(kha_Assets.sounds,name + "Description");
		if(description == null) {
			(kha_Assets.reporter(failed,pos))({ url : name, error : "Name not found"});
			return;
		}
		kha_LoaderImpl.loadSoundFromDescription(description,function(sound) {
			kha_Assets.sounds[name] = sound;
			done(sound);
		},kha_Assets.reporter(failed,pos));
	}
	static loadSoundFromPath(path,done,failed,pos) {
		let description = { files : [path]};
		kha_LoaderImpl.loadSoundFromDescription(description,done,kha_Assets.reporter(failed,pos));
	}
	static get_soundFormats() {
		return kha_LoaderImpl.getSoundFormats();
	}
	static loadFont(name,done,failed,pos) {
		let description = Reflect.field(kha_Assets.fonts,name + "Description");
		if(description == null) {
			(kha_Assets.reporter(failed,pos))({ url : name, error : "Name not found"});
			return;
		}
		kha_LoaderImpl.loadFontFromDescription(description,function(font) {
			kha_Assets.fonts[name] = font;
			done(font);
		},kha_Assets.reporter(failed,pos));
	}
	static loadFontFromPath(path,done,failed,pos) {
		let description = { files : [path]};
		kha_LoaderImpl.loadFontFromDescription(description,done,kha_Assets.reporter(failed,pos));
	}
	static get_fontFormats() {
		return ["ttf"];
	}
	static loadVideo(name,done,failed,pos) {
		let description = Reflect.field(kha_Assets.videos,name + "Description");
		if(description == null) {
			(kha_Assets.reporter(failed,pos))({ url : name, error : "Name not found"});
			return;
		}
		kha_LoaderImpl.loadVideoFromDescription(description,function(video) {
			kha_Assets.videos[name] = video;
			done(video);
		},kha_Assets.reporter(failed,pos));
	}
	static loadVideoFromPath(path,done,failed,pos) {
		let description = { files : [path]};
		kha_LoaderImpl.loadVideoFromDescription(description,done,kha_Assets.reporter(failed,pos));
	}
	static get_videoFormats() {
		return kha_LoaderImpl.getVideoFormats();
	}
	static reporter(custom,pos) {
		if(custom != null) {
			return custom;
		} else {
			let _g = haxe_Log.trace;
			let infos = pos;
			return function(v) {
				_g(v,infos);
			};
		}
	}
}
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = "kha.Assets";
kha_Assets.__properties__ = {get_videoFormats: "get_videoFormats",get_fontFormats: "get_fontFormats",get_soundFormats: "get_soundFormats",get_imageFormats: "get_imageFormats"};
class kha_Canvas {
}
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = "kha.Canvas";
kha_Canvas.__isInterface__ = true;
Object.assign(kha_Canvas.prototype, {
	__class__: kha_Canvas
	,get_width: null
	,get_height: null
	,get_g1: null
	,get_g2: null
	,get_g4: null
	,width: null
	,height: null
	,g1: null
	,g2: null
	,g4: null
	,__properties__: {get_g4: "get_g4",get_g2: "get_g2",get_g1: "get_g1",get_height: "get_height",get_width: "get_width"}
});
class kha_Color {
	static fromValue(value) {
		return kha_Color._new(value);
	}
	static fromBytes(r,g,b,a) {
		if(a == null) {
			a = 255;
		}
		return kha_Color._new(a << 24 | r << 16 | g << 8 | b);
	}
	static fromFloats(r,g,b,a) {
		if(a == null) {
			a = 1;
		}
		return kha_Color._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
	}
	static fromString(value) {
		if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
			let colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
			if(value.length == 7) {
				colorValue += -16777216;
			}
			return kha_Color._new(colorValue | 0);
		} else {
			throw haxe_Exception.thrown("Invalid Color string: '" + value + "'");
		}
	}
	static _new(value) {
		let this1 = value;
		return this1;
	}
	static get_value(this1) {
		return this1;
	}
	static set_value(this1,value) {
		this1 = value;
		return this1;
	}
	static get_Rb(this1) {
		return (this1 & 16711680) >>> 16;
	}
	static get_Gb(this1) {
		return (this1 & 65280) >>> 8;
	}
	static get_Bb(this1) {
		return this1 & 255;
	}
	static get_Ab(this1) {
		return this1 >>> 24;
	}
	static set_Rb(this1,i) {
		this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
		return i;
	}
	static set_Gb(this1,i) {
		this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
		return i;
	}
	static set_Bb(this1,i) {
		this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
		return i;
	}
	static set_Ab(this1,i) {
		this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
		return i;
	}
	static get_R(this1) {
		return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
	}
	static get_G(this1) {
		return ((this1 & 65280) >>> 8) * 0.00392156862745098;
	}
	static get_B(this1) {
		return (this1 & 255) * 0.00392156862745098;
	}
	static get_A(this1) {
		return (this1 >>> 24) * 0.00392156862745098;
	}
	static set_R(this1,f) {
		this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
		return f;
	}
	static set_G(this1,f) {
		this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
		return f;
	}
	static set_B(this1,f) {
		this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
		return f;
	}
	static set_A(this1,f) {
		this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
		return f;
	}
}
kha_Color.__properties__ = {set_value: "set_value",get_value: "get_value",set_A: "set_A",get_A: "get_A",set_B: "set_B",get_B: "get_B",set_G: "set_G",get_G: "get_G",set_R: "set_R",get_R: "get_R",set_Ab: "set_Ab",get_Ab: "get_Ab",set_Bb: "set_Bb",get_Bb: "get_Bb",set_Gb: "set_Gb",get_Gb: "get_Gb",set_Rb: "set_Rb",get_Rb: "get_Rb"};
class kha_Display {
	constructor(num,isPrimary) {
		this.num = num;
		this.isPrimary = isPrimary;
	}
	get_available() {
		return true;
	}
	get_name() {
		return "Display";
	}
	get_x() {
		return Krom.displayX(this.num);
	}
	get_y() {
		return Krom.displayY(this.num);
	}
	get_width() {
		return Krom.displayWidth(this.num);
	}
	get_height() {
		return Krom.displayHeight(this.num);
	}
	get_frequency() {
		return 60;
	}
	get_pixelsPerInch() {
		return Krom.screenDpi();
	}
	get_modes() {
		return [];
	}
	static init() {
		if(kha_Display.displays == null) {
			kha_Display.displays = [];
			let _g = 0;
			let _g1 = Krom.displayCount();
			while(_g < _g1) {
				let i = _g++;
				kha_Display.displays.push(new kha_Display(i,Krom.displayIsPrimary(i)));
			}
		}
	}
	static get_primary() {
		kha_Display.init();
		let _g = 0;
		let _g1 = kha_Display.displays;
		while(_g < _g1.length) {
			let display = _g1[_g];
			++_g;
			if(display.isPrimary) {
				return display;
			}
		}
		return null;
	}
	static get_all() {
		kha_Display.init();
		return kha_Display.displays;
	}
}
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = "kha.Display";
kha_Display.__properties__ = {get_all: "get_all",get_primary: "get_primary"};
Object.assign(kha_Display.prototype, {
	__class__: kha_Display
	,num: null
	,isPrimary: null
	,__properties__: {get_modes: "get_modes",get_pixelsPerInch: "get_pixelsPerInch",get_frequency: "get_frequency",get_height: "get_height",get_width: "get_width",get_y: "get_y",get_x: "get_x",get_name: "get_name",get_available: "get_available"}
});
class kha_DisplayMode {
	constructor(width,height,frequency,bitsPerPixel) {
		this.width = width;
		this.height = height;
		this.frequency = frequency;
		this.bitsPerPixel = bitsPerPixel;
	}
}
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = "kha.DisplayMode";
Object.assign(kha_DisplayMode.prototype, {
	__class__: kha_DisplayMode
	,width: null
	,height: null
	,frequency: null
	,bitsPerPixel: null
});
class kha_FontStyle {
	constructor(bold,italic,underlined) {
		this.bold = bold;
		this.italic = italic;
		this.underlined = underlined;
	}
	getBold() {
		return this.bold;
	}
	getItalic() {
		return this.italic;
	}
	getUnderlined() {
		return this.underlined;
	}
}
$hxClasses["kha.FontStyle"] = kha_FontStyle;
kha_FontStyle.__name__ = "kha.FontStyle";
Object.assign(kha_FontStyle.prototype, {
	__class__: kha_FontStyle
	,bold: null
	,italic: null
	,underlined: null
});
class kha_Framebuffer {
	constructor($window,g1,g2,g4) {
		this.window = $window;
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	init(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	get_g1() {
		return this.graphics1;
	}
	get_g2() {
		return this.graphics2;
	}
	get_g4() {
		return this.graphics4;
	}
	get_width() {
		return kha_System.windowWidth(this.window);
	}
	get_height() {
		return kha_System.windowHeight(this.window);
	}
}
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = "kha.Framebuffer";
kha_Framebuffer.__interfaces__ = [kha_Canvas];
Object.assign(kha_Framebuffer.prototype, {
	__class__: kha_Framebuffer
	,window: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,width: null
	,height: null
	,__properties__: {get_height: "get_height",get_width: "get_width",get_g4: "get_g4",get_g2: "get_g2",get_g1: "get_g1"}
});
class kha_FramebufferOptions {
	constructor(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
		if(samplesPerPixel == null) {
			samplesPerPixel = 1;
		}
		if(stencilBufferBits == null) {
			stencilBufferBits = 8;
		}
		if(depthBufferBits == null) {
			depthBufferBits = 16;
		}
		if(colorBufferBits == null) {
			colorBufferBits = 32;
		}
		if(verticalSync == null) {
			verticalSync = true;
		}
		if(frequency == null) {
			frequency = 60;
		}
		this.samplesPerPixel = 1;
		this.stencilBufferBits = 8;
		this.depthBufferBits = 16;
		this.colorBufferBits = 32;
		this.verticalSync = true;
		this.frequency = 60;
		this.frequency = frequency;
		this.verticalSync = verticalSync;
		this.colorBufferBits = colorBufferBits;
		this.depthBufferBits = depthBufferBits;
		this.stencilBufferBits = stencilBufferBits;
		this.samplesPerPixel = samplesPerPixel;
	}
}
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = "kha.FramebufferOptions";
Object.assign(kha_FramebufferOptions.prototype, {
	__class__: kha_FramebufferOptions
	,frequency: null
	,verticalSync: null
	,colorBufferBits: null
	,depthBufferBits: null
	,stencilBufferBits: null
	,samplesPerPixel: null
});
class kha_Resource {
}
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = "kha.Resource";
kha_Resource.__isInterface__ = true;
Object.assign(kha_Resource.prototype, {
	__class__: kha_Resource
	,unload: null
});
class kha_Image {
	constructor(texture) {
		this.pixels = null;
		this.texture_ = texture;
	}
	isOpaque(x,y) {
		return false;
	}
	at(x,y) {
		return -16777216;
	}
	unload() {
		Krom.unloadImage(this);
		this.texture_ = null;
		this.renderTarget_ = null;
	}
	lock(level) {
		if(level == null) {
			level = 0;
		}
		return haxe_io_Bytes.ofData(Krom.lockTexture(this.texture_,level));
	}
	unlock() {
		Krom.unlockTexture(this.texture_);
	}
	getPixels() {
		if(this.renderTarget_ != null) {
			if(this.pixels == null) {
				this.pixels = new haxe_io_Bytes(new ArrayBuffer(kha_Image.formatByteSize(this.myFormat) * this.get_width() * this.get_height()));
			}
			Krom.getRenderTargetPixels(this.renderTarget_,this.pixels.b.bufferValue);
			return this.pixels;
		} else {
			return haxe_io_Bytes.ofData(Krom.getTexturePixels(this.texture_));
		}
	}
	generateMipmaps(levels) {
		if(this.texture_ == null) {
			Krom.generateRenderTargetMipmaps(this.renderTarget_,levels);
		} else {
			Krom.generateTextureMipmaps(this.texture_,levels);
		}
	}
	setMipmaps(mipmaps) {
		Krom.setMipmaps(this.texture_,mipmaps);
	}
	setDepthStencilFrom(image) {
		Krom.setDepthStencilFrom(this.renderTarget_,image.renderTarget_);
	}
	clear(x,y,z,width,height,depth,color) {
		Krom.clearTexture(this.texture_,x,y,z,width,height,depth,color);
	}
	get_width() {
		if(this.texture_ == null) {
			return this.renderTarget_.width;
		} else {
			return this.texture_.width;
		}
	}
	get_height() {
		if(this.texture_ == null) {
			return this.renderTarget_.height;
		} else {
			return this.texture_.height;
		}
	}
	get_depth() {
		if(this.texture_ != null) {
			return this.texture_.depth;
		} else {
			return 1;
		}
	}
	get_format() {
		return this.myFormat;
	}
	get_realWidth() {
		if(this.texture_ == null) {
			return this.renderTarget_.width;
		} else {
			return this.texture_.realWidth;
		}
	}
	get_realHeight() {
		if(this.texture_ == null) {
			return this.renderTarget_.height;
		} else {
			return this.texture_.realHeight;
		}
	}
	get_stride() {
		return this.texture_.stride;
	}
	get_g1() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	get_g2() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	get_g4() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_krom_Graphics(this);
		}
		return this.graphics4;
	}
	static getRenderTargetFormat(format) {
		switch(format) {
		case 0:
			return 0;
		case 1:
			return 5;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 1;
		case 5:
			return 2;
		case 6:
			return 6;
		default:
			return 0;
		}
	}
	static getDepthBufferBits(depthAndStencil) {
		switch(depthAndStencil) {
		case 0:
			return -1;
		case 1:
			return 24;
		case 2:
			return 24;
		case 3:
			return 24;
		case 4:
			return 32;
		case 5:
			return 16;
		}
	}
	static getStencilBufferBits(depthAndStencil) {
		switch(depthAndStencil) {
		case 0:
			return -1;
		case 1:
			return -1;
		case 2:
			return 8;
		case 3:
			return 8;
		case 4:
			return 8;
		case 5:
			return 0;
		}
	}
	static getTextureFormat(format) {
		switch(format) {
		case 0:
			return 0;
		case 2:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		case 6:
			return 7;
		default:
			return 1;
		}
	}
	static _fromTexture(texture) {
		return new kha_Image(texture);
	}
	static fromBytes(bytes,width,height,format,usage,readable) {
		if(readable == null) {
			readable = false;
		}
		if(format == null) {
			format = 0;
		}
		let image = new kha_Image(null);
		image.myFormat = format;
		image.texture_ = Krom.createTextureFromBytes(bytes.b.bufferValue,width,height,kha_Image.getTextureFormat(format),readable);
		return image;
	}
	static fromBytes3D(bytes,width,height,depth,format,usage,readable) {
		if(readable == null) {
			readable = false;
		}
		if(format == null) {
			format = 0;
		}
		let image = new kha_Image(null);
		image.myFormat = format;
		image.texture_ = Krom.createTextureFromBytes3D(bytes.b.bufferValue,width,height,depth,kha_Image.getTextureFormat(format),readable);
		return image;
	}
	static fromEncodedBytes(bytes,format,doneCallback,errorCallback,readable) {
		if(readable == null) {
			readable = false;
		}
		let image = new kha_Image(null);
		image.texture_ = Krom.createTextureFromEncodedBytes(bytes.b.bufferValue,format,readable);
		doneCallback(image);
	}
	static create(width,height,format,usage,readable) {
		if(readable == null) {
			readable = false;
		}
		if(format == null) {
			format = 0;
		}
		let image = new kha_Image(null);
		image.myFormat = format;
		image.texture_ = Krom.createTexture(width,height,kha_Image.getTextureFormat(format));
		return image;
	}
	static create3D(width,height,depth,format,usage,readable) {
		if(readable == null) {
			readable = false;
		}
		if(format == null) {
			format = 0;
		}
		let image = new kha_Image(null);
		image.myFormat = format;
		image.texture_ = Krom.createTexture3D(width,height,depth,kha_Image.getTextureFormat(format));
		return image;
	}
	static createRenderTarget(width,height,format,depthStencil,antiAliasingSamples) {
		if(antiAliasingSamples == null) {
			antiAliasingSamples = 1;
		}
		if(depthStencil == null) {
			depthStencil = 0;
		}
		if(format == null) {
			format = 0;
		}
		let image = new kha_Image(null);
		image.myFormat = format;
		image.renderTarget_ = Krom.createRenderTarget(width,height,kha_Image.getRenderTargetFormat(format),kha_Image.getDepthBufferBits(depthStencil),kha_Image.getStencilBufferBits(depthStencil));
		return image;
	}
	static get_maxSize() {
		return 4096;
	}
	static get_nonPow2Supported() {
		return true;
	}
	static renderTargetsInvertedY() {
		return Krom.renderTargetsInvertedY();
	}
	static formatByteSize(format) {
		switch(format) {
		case 0:
			return 4;
		case 1:
			return 1;
		case 2:
			return 16;
		case 3:
			return 2;
		case 4:
			return 8;
		case 5:
			return 4;
		case 6:
			return 2;
		default:
			return 4;
		}
	}
}
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = "kha.Image";
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported: "get_nonPow2Supported",get_maxSize: "get_maxSize"};
Object.assign(kha_Image.prototype, {
	__class__: kha_Image
	,texture_: null
	,renderTarget_: null
	,myFormat: null
	,readable: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,pixels: null
	,__properties__: {get_g4: "get_g4",get_g2: "get_g2",get_g1: "get_g1",get_stride: "get_stride",get_realHeight: "get_realHeight",get_realWidth: "get_realWidth",get_format: "get_format",get_depth: "get_depth",get_height: "get_height",get_width: "get_width"}
});
class kha_AlignedQuad {
	constructor() {
	}
}
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = "kha.AlignedQuad";
Object.assign(kha_AlignedQuad.prototype, {
	__class__: kha_AlignedQuad
	,x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
});
class kha_KravurImage {
	constructor(size,ascent,descent,lineGap,width,height,chars,pixels) {
		this.mySize = size;
		this.width = width;
		this.height = height;
		this.chars = chars;
		this.baseline = ascent;
		let _g = 0;
		while(_g < chars.length) {
			let char = chars[_g];
			++_g;
			char.yoff += this.baseline;
		}
		this.texture = kha_Image.create(width,height,1);
		let bytes = this.texture.lock();
		let pos = 0;
		let _g1 = 0;
		let _g2 = height;
		while(_g1 < _g2) {
			let y = _g1++;
			let _g = 0;
			let _g2 = width;
			while(_g < _g2) {
				let x = _g++;
				let v = pixels.readU8(pos);
				bytes.b[pos] = v;
				++pos;
			}
		}
		this.texture.unlock();
	}
	getTexture() {
		return this.texture;
	}
	getBakedQuad(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		let ipw = 1.0 / this.width;
		let iph = 1.0 / this.height;
		let b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		let round_x = Math.round(xpos + b.xoff);
		let round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	getCharWidth(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		let offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		let _g = 1;
		let _g1 = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g < _g1) {
			let i = _g++;
			let prevEnd = kha_KravurImage.charBlocks[i * 2 - 1];
			let start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - prevEnd;
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	getHeight() {
		return this.mySize;
	}
	stringWidth(str) {
		let width = 0;
		let _g = 0;
		let _g1 = str.length;
		while(_g < _g1) {
			let c = _g++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	charactersWidth(characters,start,length) {
		let width = 0;
		let _g = start;
		let _g1 = start + length;
		while(_g < _g1) {
			let i = _g++;
			width += this.getCharWidth(characters[i]);
		}
		return width;
	}
	getBaselinePosition() {
		return this.baseline;
	}
}
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = "kha.KravurImage";
Object.assign(kha_KravurImage.prototype, {
	__class__: kha_KravurImage
	,mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
});
class kha_Kravur {
	constructor(blob,fontIndex) {
		if(fontIndex == null) {
			fontIndex = 0;
		}
		this.images = new haxe_ds_IntMap();
		this.blob = blob;
		this.fontIndex = fontIndex;
	}
	_get(fontSize) {
		let glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			let nextChar = kha_KravurImage.charBlocks[0] + 1;
			let _g = 1;
			let _g1 = glyphs.length;
			while(_g < _g1) {
				let i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		let imageIndex = this.fontIndex * 10000000 + fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			let width = 64;
			let height = 32;
			let this1 = new Array(glyphs.length);
			let baked = this1;
			let _g = 0;
			let _g1 = baked.length;
			while(_g < _g1) {
				let i = _g++;
				baked[i] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			let pixels = null;
			let offset = kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex(this.blob,this.fontIndex);
			if(offset == -1) {
				offset = kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex(this.blob,0);
			}
			let status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,offset,fontSize,pixels,width,height,glyphs,baked);
			}
			let info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,offset);
			let metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			let scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			let ascent = Math.round(metrics.ascent * scale);
			let descent = Math.round(metrics.descent * scale);
			let lineGap = Math.round(metrics.lineGap * scale);
			let image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	height(fontSize) {
		return this._get(fontSize).getHeight();
	}
	width(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	widthOfCharacters(fontSize,characters,start,length) {
		return this._get(fontSize).charactersWidth(characters,start,length);
	}
	baseline(fontSize) {
		return this._get(fontSize).getBaselinePosition();
	}
	setFontIndex(fontIndex) {
		this.fontIndex = fontIndex;
	}
	unload() {
		this.blob = null;
		this.images = null;
	}
	static fromBytes(bytes,fontIndex) {
		if(fontIndex == null) {
			fontIndex = 0;
		}
		return new kha_Kravur(kha_internal_BytesBlob.fromBytes(bytes),fontIndex);
	}
}
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = "kha.Kravur";
kha_Kravur.__interfaces__ = [kha_Resource];
Object.assign(kha_Kravur.prototype, {
	__class__: kha_Kravur
	,oldGlyphs: null
	,blob: null
	,images: null
	,fontIndex: null
});
class kha_LoaderImpl {
	static getImageFormats() {
		return ["png","jpg"];
	}
	static loadImageFromDescription(desc,done,failed) {
		let readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
		let texture = Krom.loadImage(desc.files[0],readable);
		if(texture == null) {
			failed({ url : desc.files.join(","), error : "Could not load image(s)"});
		} else {
			done(kha_Image._fromTexture(texture));
		}
	}
	static getSoundFormats() {
		return ["wav","ogg"];
	}
	static loadSoundFromDescription(desc,done,failed) {
		let sound = Krom.loadSound(desc.files[0]);
		if(sound == null) {
			failed({ url : desc.files.join(","), error : "Could not load sound(s)"});
		} else {
			done(new kha_krom_Sound(haxe_io_Bytes.ofData(sound)));
		}
	}
	static getVideoFormats() {
		return ["webm"];
	}
	static loadVideoFromDescription(desc,done,failed) {
		failed({ url : desc.files.join(","), error : "Could not load video(s), Krom currently does not support loading videos"});
	}
	static loadBlobFromDescription(desc,done,failed) {
		let blob = Krom.loadBlob(desc.files[0]);
		if(blob == null) {
			failed({ url : desc.files.join(","), error : "Could not load blob(s)"});
		} else {
			done(new kha_internal_BytesBlob(haxe_io_Bytes.ofData(blob)));
		}
	}
	static loadFontFromDescription(desc,done,failed) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			done(new kha_Kravur(blob));
		},function(a) {
			a.error = "Could not load font(s)";
			failed(a);
		});
	}
}
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = "kha.LoaderImpl";
class kha_TimeTask {
	constructor() {
	}
}
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = "kha.TimeTask";
Object.assign(kha_TimeTask.prototype, {
	__class__: kha_TimeTask
	,task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
});
class kha_FrameTask {
	constructor(task,priority,id) {
		this.task = task;
		this.priority = priority;
		this.id = id;
		this.active = true;
		this.paused = false;
	}
}
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = "kha.FrameTask";
Object.assign(kha_FrameTask.prototype, {
	__class__: kha_FrameTask
	,task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
});
class kha_Scheduler {
	static init() {
		kha_Scheduler.deltas = [];
		let _g = 0;
		let _g1 = kha_Scheduler.DIF_COUNT;
		while(_g < _g1) {
			let i = _g++;
			kha_Scheduler.deltas[i] = 0;
		}
		kha_Scheduler.stopped = true;
		kha_Scheduler.frame_tasks_sorted = true;
		kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.lastFrameEnd = kha_Scheduler.realTime();
		kha_Scheduler.currentFrameTaskId = 0;
		kha_Scheduler.currentTimeTaskId = 0;
		kha_Scheduler.currentGroupId = 0;
		kha_Scheduler.timeTasks = [];
		kha_Scheduler.pausedTimeTasks = [];
		kha_Scheduler.outdatedTimeTasks = [];
		kha_Scheduler.timeTasksScratchpad = [];
		kha_Scheduler.frameTasks = [];
		kha_Scheduler.toDeleteFrame = [];
	}
	static start(restartTimers) {
		if(restartTimers == null) {
			restartTimers = false;
		}
		kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
		let hz = kha_Display.get_primary() != null ? kha_Display.get_primary().get_frequency() : 60;
		if(hz >= 57 && hz <= 63) {
			hz = 60;
		}
		kha_Scheduler.onedifhz = 1.0 / hz;
		kha_Scheduler.stopped = false;
		kha_Scheduler.resetTime();
		kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
		let _g = 0;
		let _g1 = kha_Scheduler.DIF_COUNT;
		while(_g < _g1) {
			let i = _g++;
			kha_Scheduler.deltas[i] = 0;
		}
		if(restartTimers) {
			let _g = 0;
			let _g1 = kha_Scheduler.timeTasks;
			while(_g < _g1.length) {
				let timeTask = _g1[_g];
				++_g;
				timeTask.paused = false;
			}
			let _g2 = 0;
			let _g3 = kha_Scheduler.frameTasks;
			while(_g2 < _g3.length) {
				let frameTask = _g3[_g2];
				++_g2;
				frameTask.paused = false;
			}
		}
	}
	static stop() {
		kha_Scheduler.stopped = true;
	}
	static isStopped() {
		return kha_Scheduler.stopped;
	}
	static warpTimeTasksBack(time,tasks) {
		let _g = 0;
		while(_g < tasks.length) {
			let timeTask = tasks[_g];
			++_g;
			if(timeTask.start >= time) {
				timeTask.next = timeTask.start;
			} else if(timeTask.period > 0) {
				let sinceStart = time - timeTask.start;
				let times = Math.ceil(sinceStart / timeTask.period);
				timeTask.next = timeTask.start + times * timeTask.period;
			}
		}
	}
	static warp(time) {
		if(time < kha_Scheduler.lastTime) {
			kha_Scheduler.current = time;
			kha_Scheduler.lastTime = time;
			kha_Scheduler.lastFrameEnd = time;
			kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.outdatedTimeTasks);
			kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.timeTasks);
			let _g = 0;
			let _g1 = kha_Scheduler.outdatedTimeTasks;
			while(_g < _g1.length) {
				let task = _g1[_g];
				++_g;
				if(task.next >= time) {
					kha_Scheduler.timeTasksScratchpad.push(task);
				}
			}
			let _g2 = 0;
			let _g3 = kha_Scheduler.timeTasksScratchpad;
			while(_g2 < _g3.length) {
				let task = _g3[_g2];
				++_g2;
				HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task);
			}
			let _g4 = 0;
			let _g5 = kha_Scheduler.timeTasksScratchpad;
			while(_g4 < _g5.length) {
				let task = _g5[_g4];
				++_g4;
				kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,task);
			}
			while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
		} else if(time > kha_Scheduler.lastTime) {
			kha_Scheduler.startTime -= time - kha_Scheduler.lastTime;
			kha_Scheduler.current = time;
			kha_Scheduler.lastTime = time;
			kha_Scheduler.lastFrameEnd = time;
			kha_Scheduler.executeTimeTasks(time);
		}
	}
	static executeFrame() {
		let real = kha_Scheduler.realTime();
		let now = real - kha_Scheduler.startTime;
		let delta = now - kha_Scheduler.lastTime;
		let frameEnd = kha_Scheduler.lastFrameEnd;
		if(delta >= 0) {
			if(kha_netsync_Session.the() == null) {
				if(delta > kha_Scheduler.maxframetime) {
					kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
					now = real - kha_Scheduler.startTime;
					delta = kha_Scheduler.maxframetime;
					frameEnd += delta;
				} else if(kha_Scheduler.vsync) {
					let frames = Math.round(delta / kha_Scheduler.onedifhz);
					if(frames < 1) {
						return;
					}
					let realdif = frames * kha_Scheduler.onedifhz;
					delta = realdif;
					let _g = 0;
					let _g1 = kha_Scheduler.DIF_COUNT - 2;
					while(_g < _g1) {
						let i = _g++;
						delta += kha_Scheduler.deltas[i];
						kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
					}
					delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
					delta /= kha_Scheduler.DIF_COUNT;
					kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
					frameEnd += delta;
				} else {
					let _g = 0;
					let _g1 = kha_Scheduler.DIF_COUNT - 1;
					while(_g < _g1) {
						let i = _g++;
						kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
					}
					kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
					let next = 0;
					let _g2 = 0;
					let _g3 = kha_Scheduler.DIF_COUNT;
					while(_g2 < _g3) {
						let i = _g2++;
						next += kha_Scheduler.deltas[i];
					}
					next /= kha_Scheduler.DIF_COUNT;
					frameEnd += next;
				}
			} else {
				frameEnd += delta;
			}
			kha_Scheduler.lastTime = now;
			if(!kha_Scheduler.stopped) {
				kha_Scheduler.lastFrameEnd = frameEnd;
			}
			let _g = 0;
			let _g1 = kha_Scheduler.pausedTimeTasks;
			while(_g < _g1.length) {
				let pausedTask = _g1[_g];
				++_g;
				pausedTask.next += delta;
			}
			if(kha_Scheduler.stopped) {
				let _g = 0;
				let _g1 = kha_Scheduler.timeTasks;
				while(_g < _g1.length) {
					let timeTask = _g1[_g];
					++_g;
					timeTask.next += delta;
				}
			}
			kha_Scheduler.executeTimeTasks(frameEnd);
			let _g2 = 0;
			let _g3 = kha_Scheduler.outdatedTimeTasks;
			while(_g2 < _g3.length) {
				let task = _g3[_g2];
				++_g2;
				if(task.next < frameEnd - 10.0) {
					kha_Scheduler.timeTasksScratchpad.push(task);
				}
			}
			let _g4 = 0;
			let _g5 = kha_Scheduler.timeTasksScratchpad;
			while(_g4 < _g5.length) {
				let task = _g5[_g4];
				++_g4;
				HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task);
			}
			while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
		}
		kha_Scheduler.current = frameEnd;
		kha_Scheduler.sortFrameTasks();
		let _g = 0;
		let _g1 = kha_Scheduler.frameTasks;
		while(_g < _g1.length) {
			let frameTask = _g1[_g];
			++_g;
			if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
				if(!frameTask.task()) {
					frameTask.active = false;
				}
			}
		}
		let _g2 = 0;
		let _g3 = kha_Scheduler.frameTasks;
		while(_g2 < _g3.length) {
			let frameTask = _g3[_g2];
			++_g2;
			if(!frameTask.active) {
				kha_Scheduler.toDeleteFrame.push(frameTask);
			}
		}
		while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
	}
	static executeTimeTasks(until) {
		while(kha_Scheduler.timeTasks.length > 0) {
			kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
			if(kha_Scheduler.activeTimeTask.next <= until) {
				kha_Scheduler.current = kha_Scheduler.activeTimeTask.next;
				kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
				HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
					if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
						kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
					} else {
						kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
					}
				} else {
					kha_Scheduler.activeTimeTask.active = false;
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				break;
			}
		}
		kha_Scheduler.activeTimeTask = null;
	}
	static archiveTimeTask(timeTask,frameEnd) {
	}
	static time() {
		return kha_Scheduler.current;
	}
	static realTime() {
		return kha_System.get_time();
	}
	static resetTime() {
		let now = kha_System.get_time();
		let dif = now - kha_Scheduler.startTime;
		kha_Scheduler.startTime = now;
		let _g = 0;
		let _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) {
			let timeTask = _g1[_g];
			++_g;
			timeTask.start -= dif;
			timeTask.next -= dif;
		}
		let _g2 = 0;
		let _g3 = kha_Scheduler.DIF_COUNT;
		while(_g2 < _g3) {
			let i = _g2++;
			kha_Scheduler.deltas[i] = 0;
		}
		kha_Scheduler.current = 0;
		kha_Scheduler.lastTime = 0;
		kha_Scheduler.lastFrameEnd = 0;
	}
	static addBreakableFrameTask(task,priority) {
		kha_Scheduler.frameTasks.push(new kha_FrameTask(task,priority,++kha_Scheduler.currentFrameTaskId));
		kha_Scheduler.frame_tasks_sorted = false;
		return kha_Scheduler.currentFrameTaskId;
	}
	static addFrameTask(task,priority) {
		return kha_Scheduler.addBreakableFrameTask(function() {
			task();
			return true;
		},priority);
	}
	static pauseFrameTask(id,paused) {
		let _g = 0;
		let _g1 = kha_Scheduler.frameTasks;
		while(_g < _g1.length) {
			let frameTask = _g1[_g];
			++_g;
			if(frameTask.id == id) {
				frameTask.paused = paused;
				break;
			}
		}
	}
	static removeFrameTask(id) {
		let _g = 0;
		let _g1 = kha_Scheduler.frameTasks;
		while(_g < _g1.length) {
			let frameTask = _g1[_g];
			++_g;
			if(frameTask.id == id) {
				frameTask.active = false;
				break;
			}
		}
	}
	static generateGroupId() {
		return ++kha_Scheduler.currentGroupId;
	}
	static addBreakableTimeTaskToGroup(groupId,task,start,period,duration) {
		if(duration == null) {
			duration = 0;
		}
		if(period == null) {
			period = 0;
		}
		let t = new kha_TimeTask();
		t.active = true;
		t.task = task;
		t.id = ++kha_Scheduler.currentTimeTaskId;
		t.groupId = groupId;
		t.start = kha_Scheduler.current + start;
		t.period = 0;
		if(period != 0) {
			t.period = period;
		}
		t.duration = 0;
		if(duration != 0) {
			t.duration = t.start + duration;
		}
		t.next = t.start;
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
		return t.id;
	}
	static addTimeTaskToGroup(groupId,task,start,period,duration) {
		if(duration == null) {
			duration = 0;
		}
		if(period == null) {
			period = 0;
		}
		return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
			task();
			return true;
		},start,period,duration);
	}
	static addBreakableTimeTask(task,start,period,duration) {
		if(duration == null) {
			duration = 0;
		}
		if(period == null) {
			period = 0;
		}
		return kha_Scheduler.addBreakableTimeTaskToGroup(0,task,start,period,duration);
	}
	static addTimeTask(task,start,period,duration) {
		if(duration == null) {
			duration = 0;
		}
		if(period == null) {
			period = 0;
		}
		return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
	}
	static getTimeTask(id) {
		if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
			return kha_Scheduler.activeTimeTask;
		}
		let _g = 0;
		let _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) {
			let timeTask = _g1[_g];
			++_g;
			if(timeTask.id == id) {
				return timeTask;
			}
		}
		let _g2 = 0;
		let _g3 = kha_Scheduler.pausedTimeTasks;
		while(_g2 < _g3.length) {
			let timeTask = _g3[_g2];
			++_g2;
			if(timeTask.id == id) {
				return timeTask;
			}
		}
		return null;
	}
	static pauseTimeTask(id,paused) {
		let timeTask = kha_Scheduler.getTimeTask(id);
		if(timeTask != null) {
			kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
		}
		if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
			kha_Scheduler.activeTimeTask.paused = paused;
		}
	}
	static pauseRunningTimeTask(timeTask,paused) {
		timeTask.paused = paused;
		if(paused) {
			HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
			kha_Scheduler.pausedTimeTasks.push(timeTask);
		} else {
			kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,timeTask);
			HxOverrides.remove(kha_Scheduler.pausedTimeTasks,timeTask);
		}
	}
	static pauseTimeTasks(groupId,paused) {
		let _g = 0;
		let _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) {
			let timeTask = _g1[_g];
			++_g;
			if(timeTask.groupId == groupId) {
				kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
			}
		}
		if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
			kha_Scheduler.activeTimeTask.paused = paused;
		}
	}
	static removeTimeTask(id) {
		let timeTask = kha_Scheduler.getTimeTask(id);
		if(timeTask != null) {
			timeTask.active = false;
			HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		}
	}
	static removeTimeTasks(groupId) {
		let _g = 0;
		let _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) {
			let timeTask = _g1[_g];
			++_g;
			if(timeTask.groupId == groupId) {
				timeTask.active = false;
				kha_Scheduler.timeTasksScratchpad.push(timeTask);
			}
		}
		let _g2 = 0;
		let _g3 = kha_Scheduler.timeTasksScratchpad;
		while(_g2 < _g3.length) {
			let timeTask = _g3[_g2];
			++_g2;
			HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
		if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
			kha_Scheduler.activeTimeTask.active = false;
		}
	}
	static numTasksInSchedule() {
		return kha_Scheduler.timeTasks.length + kha_Scheduler.frameTasks.length;
	}
	static insertSorted(list,task) {
		let _g = 0;
		let _g1 = list.length;
		while(_g < _g1) {
			let i = _g++;
			if(list[i].next > task.next) {
				list.splice(i,0,task);
				return;
			}
		}
		list.push(task);
	}
	static sortFrameTasks() {
		if(kha_Scheduler.frame_tasks_sorted) {
			return;
		}
		kha_Scheduler.frameTasks.sort(function(a,b) {
			if(a.priority > b.priority) {
				return 1;
			} else if(a.priority < b.priority) {
				return -1;
			} else {
				return 0;
			}
		});
		kha_Scheduler.frame_tasks_sorted = true;
	}
}
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = "kha.Scheduler";
class kha_Shaders {
	static init() {
		let blobs = [];
		let data = Reflect.field(kha_Shaders,"GroundMaterial_mesh_fragData" + 0);
		let bytes = haxe_Unserializer.run(data);
		blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
		kha_Shaders.GroundMaterial_mesh_frag = new kha_graphics4_FragmentShader(blobs,["GroundMaterial_mesh.frag.d3d11"]);
		let blobs1 = [];
		let data1 = Reflect.field(kha_Shaders,"GroundMaterial_mesh_vertData" + 0);
		let bytes1 = haxe_Unserializer.run(data1);
		blobs1.push(kha_internal_BytesBlob.fromBytes(bytes1));
		kha_Shaders.GroundMaterial_mesh_vert = new kha_graphics4_VertexShader(blobs1,["GroundMaterial_mesh.vert.d3d11"]);
		let blobs2 = [];
		let data2 = Reflect.field(kha_Shaders,"GroundMaterial_shadowmap_vertData" + 0);
		let bytes2 = haxe_Unserializer.run(data2);
		blobs2.push(kha_internal_BytesBlob.fromBytes(bytes2));
		kha_Shaders.GroundMaterial_shadowmap_vert = new kha_graphics4_VertexShader(blobs2,["GroundMaterial_shadowmap.vert.d3d11"]);
		let blobs3 = [];
		let data3 = Reflect.field(kha_Shaders,"World_World_fragData" + 0);
		let bytes3 = haxe_Unserializer.run(data3);
		blobs3.push(kha_internal_BytesBlob.fromBytes(bytes3));
		kha_Shaders.World_World_frag = new kha_graphics4_FragmentShader(blobs3,["World_World.frag.d3d11"]);
		let blobs4 = [];
		let data4 = Reflect.field(kha_Shaders,"World_World_vertData" + 0);
		let bytes4 = haxe_Unserializer.run(data4);
		blobs4.push(kha_internal_BytesBlob.fromBytes(bytes4));
		kha_Shaders.World_World_vert = new kha_graphics4_VertexShader(blobs4,["World_World.vert.d3d11"]);
		let blobs5 = [];
		let data5 = Reflect.field(kha_Shaders,"armdefaultskin_mesh_fragData" + 0);
		let bytes5 = haxe_Unserializer.run(data5);
		blobs5.push(kha_internal_BytesBlob.fromBytes(bytes5));
		kha_Shaders.armdefaultskin_mesh_frag = new kha_graphics4_FragmentShader(blobs5,["armdefaultskin_mesh.frag.d3d11"]);
		let blobs6 = [];
		let data6 = Reflect.field(kha_Shaders,"armdefaultskin_mesh_vertData" + 0);
		let bytes6 = haxe_Unserializer.run(data6);
		blobs6.push(kha_internal_BytesBlob.fromBytes(bytes6));
		kha_Shaders.armdefaultskin_mesh_vert = new kha_graphics4_VertexShader(blobs6,["armdefaultskin_mesh.vert.d3d11"]);
		let blobs7 = [];
		let data7 = Reflect.field(kha_Shaders,"armdefaultskin_shadowmap_fragData" + 0);
		let bytes7 = haxe_Unserializer.run(data7);
		blobs7.push(kha_internal_BytesBlob.fromBytes(bytes7));
		kha_Shaders.armdefaultskin_shadowmap_frag = new kha_graphics4_FragmentShader(blobs7,["armdefaultskin_shadowmap.frag.d3d11"]);
		let blobs8 = [];
		let data8 = Reflect.field(kha_Shaders,"armdefaultskin_shadowmap_vertData" + 0);
		let bytes8 = haxe_Unserializer.run(data8);
		blobs8.push(kha_internal_BytesBlob.fromBytes(bytes8));
		kha_Shaders.armdefaultskin_shadowmap_vert = new kha_graphics4_VertexShader(blobs8,["armdefaultskin_shadowmap.vert.d3d11"]);
		let blobs9 = [];
		let data9 = Reflect.field(kha_Shaders,"blur_edge_pass_fragData" + 0);
		let bytes9 = haxe_Unserializer.run(data9);
		blobs9.push(kha_internal_BytesBlob.fromBytes(bytes9));
		kha_Shaders.blur_edge_pass_frag = new kha_graphics4_FragmentShader(blobs9,["blur_edge_pass.frag.d3d11"]);
		let blobs10 = [];
		let data10 = Reflect.field(kha_Shaders,"compositor_pass_fragData" + 0);
		let bytes10 = haxe_Unserializer.run(data10);
		blobs10.push(kha_internal_BytesBlob.fromBytes(bytes10));
		kha_Shaders.compositor_pass_frag = new kha_graphics4_FragmentShader(blobs10,["compositor_pass.frag.d3d11"]);
		let blobs11 = [];
		let data11 = Reflect.field(kha_Shaders,"compositor_pass_vertData" + 0);
		let bytes11 = haxe_Unserializer.run(data11);
		blobs11.push(kha_internal_BytesBlob.fromBytes(bytes11));
		kha_Shaders.compositor_pass_vert = new kha_graphics4_VertexShader(blobs11,["compositor_pass.vert.d3d11"]);
		let blobs12 = [];
		let data12 = Reflect.field(kha_Shaders,"deferred_light_fragData" + 0);
		let bytes12 = haxe_Unserializer.run(data12);
		blobs12.push(kha_internal_BytesBlob.fromBytes(bytes12));
		kha_Shaders.deferred_light_frag = new kha_graphics4_FragmentShader(blobs12,["deferred_light.frag.d3d11"]);
		let blobs13 = [];
		let data13 = Reflect.field(kha_Shaders,"line_deferred_fragData" + 0);
		let bytes13 = haxe_Unserializer.run(data13);
		blobs13.push(kha_internal_BytesBlob.fromBytes(bytes13));
		kha_Shaders.line_deferred_frag = new kha_graphics4_FragmentShader(blobs13,["line_deferred.frag.d3d11"]);
		let blobs14 = [];
		let data14 = Reflect.field(kha_Shaders,"line_vertData" + 0);
		let bytes14 = haxe_Unserializer.run(data14);
		blobs14.push(kha_internal_BytesBlob.fromBytes(bytes14));
		kha_Shaders.line_vert = new kha_graphics4_VertexShader(blobs14,["line.vert.d3d11"]);
		let blobs15 = [];
		let data15 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 0);
		let bytes15 = haxe_Unserializer.run(data15);
		blobs15.push(kha_internal_BytesBlob.fromBytes(bytes15));
		kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs15,["painter-colored.frag.d3d11"]);
		let blobs16 = [];
		let data16 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 0);
		let bytes16 = haxe_Unserializer.run(data16);
		blobs16.push(kha_internal_BytesBlob.fromBytes(bytes16));
		kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs16,["painter-colored.vert.d3d11"]);
		let blobs17 = [];
		let data17 = Reflect.field(kha_Shaders,"painter_image_fragData" + 0);
		let bytes17 = haxe_Unserializer.run(data17);
		blobs17.push(kha_internal_BytesBlob.fromBytes(bytes17));
		kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs17,["painter-image.frag.d3d11"]);
		let blobs18 = [];
		let data18 = Reflect.field(kha_Shaders,"painter_image_vertData" + 0);
		let bytes18 = haxe_Unserializer.run(data18);
		blobs18.push(kha_internal_BytesBlob.fromBytes(bytes18));
		kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs18,["painter-image.vert.d3d11"]);
		let blobs19 = [];
		let data19 = Reflect.field(kha_Shaders,"painter_text_fragData" + 0);
		let bytes19 = haxe_Unserializer.run(data19);
		blobs19.push(kha_internal_BytesBlob.fromBytes(bytes19));
		kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs19,["painter-text.frag.d3d11"]);
		let blobs20 = [];
		let data20 = Reflect.field(kha_Shaders,"painter_text_vertData" + 0);
		let bytes20 = haxe_Unserializer.run(data20);
		blobs20.push(kha_internal_BytesBlob.fromBytes(bytes20));
		kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs20,["painter-text.vert.d3d11"]);
		let blobs21 = [];
		let data21 = Reflect.field(kha_Shaders,"painter_video_fragData" + 0);
		let bytes21 = haxe_Unserializer.run(data21);
		blobs21.push(kha_internal_BytesBlob.fromBytes(bytes21));
		kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs21,["painter-video.frag.d3d11"]);
		let blobs22 = [];
		let data22 = Reflect.field(kha_Shaders,"painter_video_vertData" + 0);
		let bytes22 = haxe_Unserializer.run(data22);
		blobs22.push(kha_internal_BytesBlob.fromBytes(bytes22));
		kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs22,["painter-video.vert.d3d11"]);
		let blobs23 = [];
		let data23 = Reflect.field(kha_Shaders,"pass_copy_fragData" + 0);
		let bytes23 = haxe_Unserializer.run(data23);
		blobs23.push(kha_internal_BytesBlob.fromBytes(bytes23));
		kha_Shaders.pass_copy_frag = new kha_graphics4_FragmentShader(blobs23,["pass_copy.frag.d3d11"]);
		let blobs24 = [];
		let data24 = Reflect.field(kha_Shaders,"pass_vertData" + 0);
		let bytes24 = haxe_Unserializer.run(data24);
		blobs24.push(kha_internal_BytesBlob.fromBytes(bytes24));
		kha_Shaders.pass_vert = new kha_graphics4_VertexShader(blobs24,["pass.vert.d3d11"]);
		let blobs25 = [];
		let data25 = Reflect.field(kha_Shaders,"pass_viewray_vertData" + 0);
		let bytes25 = haxe_Unserializer.run(data25);
		blobs25.push(kha_internal_BytesBlob.fromBytes(bytes25));
		kha_Shaders.pass_viewray_vert = new kha_graphics4_VertexShader(blobs25,["pass_viewray.vert.d3d11"]);
		let blobs26 = [];
		let data26 = Reflect.field(kha_Shaders,"smaa_blend_weight_fragData" + 0);
		let bytes26 = haxe_Unserializer.run(data26);
		blobs26.push(kha_internal_BytesBlob.fromBytes(bytes26));
		kha_Shaders.smaa_blend_weight_frag = new kha_graphics4_FragmentShader(blobs26,["smaa_blend_weight.frag.d3d11"]);
		let blobs27 = [];
		let data27 = Reflect.field(kha_Shaders,"smaa_blend_weight_vertData" + 0);
		let bytes27 = haxe_Unserializer.run(data27);
		blobs27.push(kha_internal_BytesBlob.fromBytes(bytes27));
		kha_Shaders.smaa_blend_weight_vert = new kha_graphics4_VertexShader(blobs27,["smaa_blend_weight.vert.d3d11"]);
		let blobs28 = [];
		let data28 = Reflect.field(kha_Shaders,"smaa_edge_detect_fragData" + 0);
		let bytes28 = haxe_Unserializer.run(data28);
		blobs28.push(kha_internal_BytesBlob.fromBytes(bytes28));
		kha_Shaders.smaa_edge_detect_frag = new kha_graphics4_FragmentShader(blobs28,["smaa_edge_detect.frag.d3d11"]);
		let blobs29 = [];
		let data29 = Reflect.field(kha_Shaders,"smaa_edge_detect_vertData" + 0);
		let bytes29 = haxe_Unserializer.run(data29);
		blobs29.push(kha_internal_BytesBlob.fromBytes(bytes29));
		kha_Shaders.smaa_edge_detect_vert = new kha_graphics4_VertexShader(blobs29,["smaa_edge_detect.vert.d3d11"]);
		let blobs30 = [];
		let data30 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_fragData" + 0);
		let bytes30 = haxe_Unserializer.run(data30);
		blobs30.push(kha_internal_BytesBlob.fromBytes(bytes30));
		kha_Shaders.smaa_neighborhood_blend_frag = new kha_graphics4_FragmentShader(blobs30,["smaa_neighborhood_blend.frag.d3d11"]);
		let blobs31 = [];
		let data31 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_vertData" + 0);
		let bytes31 = haxe_Unserializer.run(data31);
		blobs31.push(kha_internal_BytesBlob.fromBytes(bytes31));
		kha_Shaders.smaa_neighborhood_blend_vert = new kha_graphics4_VertexShader(blobs31,["smaa_neighborhood_blend.vert.d3d11"]);
		let blobs32 = [];
		let data32 = Reflect.field(kha_Shaders,"ssao_pass_fragData" + 0);
		let bytes32 = haxe_Unserializer.run(data32);
		blobs32.push(kha_internal_BytesBlob.fromBytes(bytes32));
		kha_Shaders.ssao_pass_frag = new kha_graphics4_FragmentShader(blobs32,["ssao_pass.frag.d3d11"]);
	}
}
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = "kha.Shaders";
class kha_Sound {
	constructor() {
		this.sampleRate = 0;
		this.channels = 0;
		this.length = 0;
	}
	uncompress(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		let output = new haxe_io_BytesOutput();
		let header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		let soundBytes = output.getBytes();
		let count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count * 2);
			let _g = 0;
			let _g1 = count;
			while(_g < _g1) {
				let i = _g++;
				let this1 = this.uncompressedData;
				let v = soundBytes.getFloat(i * 4);
				this1.setFloat32(i * 2 * 4,v,true);
				let this2 = this.uncompressedData;
				let v1 = soundBytes.getFloat(i * 4);
				this2.setFloat32((i * 2 + 1) * 4,v1,true);
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count);
			let _g = 0;
			let _g1 = count;
			while(_g < _g1) {
				let i = _g++;
				let this1 = this.uncompressedData;
				let v = soundBytes.getFloat(i * 4);
				this1.setFloat32(i * 4,v,true);
			}
		}
		this.channels = header.channel;
		this.sampleRate = header.sampleRate;
		this.compressedData = null;
		done();
	}
	unload() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
}
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = "kha.Sound";
kha_Sound.__interfaces__ = [kha_Resource];
Object.assign(kha_Sound.prototype, {
	__class__: kha_Sound
	,compressedData: null
	,uncompressedData: null
	,length: null
	,channels: null
	,sampleRate: null
});
class kha_SystemOptions {
	constructor(title,width,height,$window,framebuffer) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(title == null) {
			title = "Kha";
		}
		this.framebuffer = null;
		this.window = null;
		this.height = -1;
		this.width = -1;
		this.title = "Kha";
		this.title = title;
		this.window = $window == null ? new kha_WindowOptions(null,-1,-1,800,600,-1,true,null,0) : $window;
		if(width > 0) {
			this.window.width = width;
			this.width = width;
		} else {
			this.width = this.window.width;
		}
		if(height > 0) {
			this.window.height = height;
			this.height = height;
		} else {
			this.height = this.window.height;
		}
		if(this.window.title == null) {
			this.window.title = title;
		}
		this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(60,true,32,16,8,1) : framebuffer;
	}
}
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = "kha.SystemOptions";
Object.assign(kha_SystemOptions.prototype, {
	__class__: kha_SystemOptions
	,title: null
	,width: null
	,height: null
	,window: null
	,framebuffer: null
});
class kha_System {
	static init(options,callback) {
		let features = 0;
		if(options.resizable) {
			features |= 1;
		}
		if(options.maximizable) {
			features |= 4;
		}
		if(options.minimizable) {
			features |= 2;
		}
		let newOptions = new kha_SystemOptions(options.title,options.width,options.height,new kha_WindowOptions(null,-1,-1,800,600,-1,true,features,options.windowMode),new kha_FramebufferOptions(60,options.vSync,32,16,8,options.samplesPerPixel));
		kha_System.start(newOptions,function(_) {
			callback();
		});
	}
	static start(options,callback) {
		kha_System.theTitle = options.title;
		kha_SystemImpl.init(options,callback);
	}
	static get_title() {
		return kha_System.theTitle;
	}
	static notifyOnRender(listener,id) {
		if(id == null) {
			id = 0;
		}
		kha_System.renderListeners.push(function(framebuffers) {
			if(id < framebuffers.length) {
				listener(framebuffers[id]);
			}
		});
	}
	static notifyOnFrames(listener) {
		kha_System.renderListeners.push(listener);
	}
	static removeFramesListener(listener) {
		HxOverrides.remove(kha_System.renderListeners,listener);
	}
	static notifyOnApplicationState(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
		if(foregroundListener != null) {
			kha_System.foregroundListeners.push(foregroundListener);
		}
		if(resumeListener != null) {
			kha_System.resumeListeners.push(resumeListener);
		}
		if(pauseListener != null) {
			kha_System.pauseListeners.push(pauseListener);
		}
		if(backgroundListener != null) {
			kha_System.backgroundListeners.push(backgroundListener);
		}
		if(shutdownListener != null) {
			kha_System.shutdownListeners.push(shutdownListener);
		}
	}
	static removeApplicationStateListeners(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
		if(foregroundListener != null) {
			HxOverrides.remove(kha_System.foregroundListeners,foregroundListener);
		}
		if(resumeListener != null) {
			HxOverrides.remove(kha_System.resumeListeners,resumeListener);
		}
		if(pauseListener != null) {
			HxOverrides.remove(kha_System.pauseListeners,pauseListener);
		}
		if(backgroundListener != null) {
			HxOverrides.remove(kha_System.backgroundListeners,backgroundListener);
		}
		if(shutdownListener != null) {
			HxOverrides.remove(kha_System.shutdownListeners,shutdownListener);
		}
	}
	static notifyOnDropFiles(dropFilesListener) {
		kha_System.dropFilesListeners.push(dropFilesListener);
	}
	static removeDropListener(listener) {
		HxOverrides.remove(kha_System.dropFilesListeners,listener);
	}
	static notifyOnCutCopyPaste(cutListener,copyListener,pasteListener) {
		kha_System.cutListener = cutListener;
		kha_System.copyListener = copyListener;
		kha_System.pasteListener = pasteListener;
	}
	static notifyOnLoginLogout(loginListener,logoutListener) {
		kha_System.loginListener = loginListener;
		kha_System.logoutListener = logoutListener;
	}
	static login() {
		kha_SystemImpl.login();
	}
	static waitingForLogin() {
		return kha_SystemImpl.waitingForLogin();
	}
	static allowUserChange() {
		kha_SystemImpl.allowUserChange();
	}
	static disallowUserChange() {
		kha_SystemImpl.disallowUserChange();
	}
	static render(framebuffers) {
		let _g = 0;
		let _g1 = kha_System.renderListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(framebuffers);
		}
	}
	static foreground() {
		let _g = 0;
		let _g1 = kha_System.foregroundListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener();
		}
	}
	static resume() {
		let _g = 0;
		let _g1 = kha_System.resumeListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener();
		}
	}
	static pause() {
		let _g = 0;
		let _g1 = kha_System.pauseListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener();
		}
	}
	static background() {
		let _g = 0;
		let _g1 = kha_System.backgroundListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener();
		}
	}
	static shutdown() {
		let _g = 0;
		let _g1 = kha_System.shutdownListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener();
		}
	}
	static dropFiles(filePath) {
		let _g = 0;
		let _g1 = kha_System.dropFilesListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(filePath);
		}
	}
	static get_time() {
		return kha_SystemImpl.getTime();
	}
	static windowWidth($window) {
		if($window == null) {
			$window = 0;
		}
		return kha_Window.get($window).get_width();
	}
	static windowHeight($window) {
		if($window == null) {
			$window = 0;
		}
		return kha_Window.get_all()[$window].get_height();
	}
	static get_screenRotation() {
		return 0;
	}
	static get_systemId() {
		return kha_SystemImpl.getSystemId();
	}
	static vibrate(ms) {
		kha_SystemImpl.vibrate(ms);
	}
	static get_language() {
		return kha_SystemImpl.getLanguage();
	}
	static stop() {
		return kha_SystemImpl.requestShutdown();
	}
	static loadUrl(url) {
		kha_SystemImpl.loadUrl(url);
	}
	static canSwitchFullscreen() {
		return true;
	}
	static isFullscreen() {
		if(kha_Window.get(0).get_mode() != 1) {
			return kha_Window.get(0).get_mode() == 2;
		} else {
			return true;
		}
	}
	static requestFullscreen() {
		kha_Window.get(0).set_mode(1);
	}
	static exitFullscreen() {
		kha_Window.get(0).set_mode(0);
	}
	static notifyOnFullscreenChange(func,error) {
	}
	static removeFullscreenListener(func,error) {
	}
	static changeResolution(width,height) {
	}
	static requestShutdown() {
		kha_System.stop();
	}
	static get_vsync() {
		return kha_Window.get(0).get_vSynced();
	}
	static get_refreshRate() {
		return kha_Display.get_primary().get_frequency();
	}
	static screenDpi() {
		return kha_Display.get_primary().get_pixelsPerInch();
	}
	static safeZone() {
		return kha_SystemImpl.safeZone();
	}
	static automaticSafeZone() {
		return kha_SystemImpl.automaticSafeZone();
	}
	static setSafeZone(value) {
		kha_SystemImpl.setSafeZone(value);
	}
	static unlockAchievement(id) {
		kha_SystemImpl.unlockAchievement(id);
	}
}
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = "kha.System";
kha_System.__properties__ = {get_refreshRate: "get_refreshRate",get_vsync: "get_vsync",get_language: "get_language",get_systemId: "get_systemId",get_screenRotation: "get_screenRotation",get_time: "get_time",get_title: "get_title"};
class kha_SystemImpl {
	static renderCallback() {
		kha_Scheduler.executeFrame();
		kha_System.render([kha_SystemImpl.framebuffer]);
	}
	static dropFilesCallback(filePath) {
		kha_System.dropFiles(filePath);
	}
	static copyCallback() {
		if(kha_System.copyListener != null) {
			return kha_System.copyListener();
		} else {
			return null;
		}
	}
	static cutCallback() {
		if(kha_System.cutListener != null) {
			return kha_System.cutListener();
		} else {
			return null;
		}
	}
	static pasteCallback(data) {
		if(kha_System.pasteListener != null) {
			kha_System.pasteListener(data);
		}
	}
	static foregroundCallback() {
		kha_System.foreground();
	}
	static resumeCallback() {
		kha_System.resume();
	}
	static pauseCallback() {
		kha_System.pause();
	}
	static backgroundCallback() {
		kha_System.background();
	}
	static shutdownCallback() {
		kha_System.shutdown();
	}
	static keyboardDownCallback(code) {
		kha_SystemImpl.keyboard.sendDownEvent(code);
	}
	static keyboardUpCallback(code) {
		kha_SystemImpl.keyboard.sendUpEvent(code);
	}
	static keyboardPressCallback(charCode) {
		kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(charCode));
	}
	static mouseDownCallback(button,x,y) {
		kha_SystemImpl.mouse.sendDownEvent(0,button,x,y);
	}
	static mouseUpCallback(button,x,y) {
		kha_SystemImpl.mouse.sendUpEvent(0,button,x,y);
	}
	static mouseMoveCallback(x,y,mx,my) {
		kha_SystemImpl.mouse.sendMoveEvent(0,x,y,mx,my);
	}
	static mouseWheelCallback(delta) {
		kha_SystemImpl.mouse.sendWheelEvent(0,delta);
	}
	static penDownCallback(x,y,pressure) {
		kha_SystemImpl.pen.sendDownEvent(0,x,y,pressure);
	}
	static penUpCallback(x,y,pressure) {
		kha_SystemImpl.pen.sendUpEvent(0,x,y,pressure);
	}
	static penMoveCallback(x,y,pressure) {
		kha_SystemImpl.pen.sendMoveEvent(0,x,y,pressure);
	}
	static gamepadAxisCallback(gamepad,axis,value) {
		kha_SystemImpl.gamepads[gamepad].sendAxisEvent(axis,value);
	}
	static gamepadButtonCallback(gamepad,button,value) {
		kha_SystemImpl.gamepads[gamepad].sendButtonEvent(button,value);
	}
	static audioCallback(samples) {
		kha_audio2_Audio._callCallback(samples);
		let buffer = kha_audio2_Audio.buffer;
		Krom.writeAudioBuffer(buffer.data.buffer,samples);
	}
	static init(options,callback) {
		Krom.init(options.title,options.width,options.height,options.framebuffer.samplesPerPixel,options.framebuffer.verticalSync,options.window.mode,options.window.windowFeatures,6);
		kha_SystemImpl.start = Krom.getTime();
		haxe_Log.trace = function(v,infos) {
			let message = haxe_Log.formatOutput(v,infos);
			Krom.log(message);
		};
		new kha_Window(0);
		kha_Scheduler.init();
		kha_Shaders.init();
		let g4 = new kha_krom_Graphics();
		kha_SystemImpl.framebuffer = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.framebuffer.init(new kha_graphics2_Graphics1(kha_SystemImpl.framebuffer),new kha_graphics4_Graphics2(kha_SystemImpl.framebuffer),g4);
		Krom.setCallback(kha_SystemImpl.renderCallback);
		Krom.setDropFilesCallback(kha_SystemImpl.dropFilesCallback);
		Krom.setCutCopyPasteCallback(kha_SystemImpl.cutCallback,kha_SystemImpl.copyCallback,kha_SystemImpl.pasteCallback);
		Krom.setApplicationStateCallback(kha_SystemImpl.foregroundCallback,kha_SystemImpl.resumeCallback,kha_SystemImpl.pauseCallback,kha_SystemImpl.backgroundCallback,kha_SystemImpl.shutdownCallback);
		kha_SystemImpl.keyboard = new kha_input_Keyboard();
		kha_SystemImpl.mouse = new kha_input_MouseImpl();
		kha_SystemImpl.pen = new kha_input_Pen();
		kha_SystemImpl.gamepads = [];
		let _g = 0;
		let _g1 = kha_SystemImpl.maxGamepads;
		while(_g < _g1) {
			let i = _g++;
			kha_SystemImpl.gamepads[i] = new kha_input_Gamepad(i);
		}
		Krom.setKeyboardDownCallback(kha_SystemImpl.keyboardDownCallback);
		Krom.setKeyboardUpCallback(kha_SystemImpl.keyboardUpCallback);
		Krom.setKeyboardPressCallback(kha_SystemImpl.keyboardPressCallback);
		Krom.setMouseDownCallback(kha_SystemImpl.mouseDownCallback);
		Krom.setMouseUpCallback(kha_SystemImpl.mouseUpCallback);
		Krom.setMouseMoveCallback(kha_SystemImpl.mouseMoveCallback);
		Krom.setMouseWheelCallback(kha_SystemImpl.mouseWheelCallback);
		Krom.setPenDownCallback(kha_SystemImpl.penDownCallback);
		Krom.setPenUpCallback(kha_SystemImpl.penUpCallback);
		Krom.setPenMoveCallback(kha_SystemImpl.penMoveCallback);
		Krom.setGamepadAxisCallback(kha_SystemImpl.gamepadAxisCallback);
		Krom.setGamepadButtonCallback(kha_SystemImpl.gamepadButtonCallback);
		kha_audio2_Audio._init();
		kha_audio2_Audio1._init();
		Krom.setAudioCallback(kha_SystemImpl.audioCallback);
		kha_Scheduler.start();
		callback(kha_Window.get(0));
	}
	static initEx(title,options,windowCallback,callback) {
	}
	static translateWindowMode(value) {
		if(value == null) {
			return 0;
		}
		switch(value) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		}
	}
	static getScreenRotation() {
		return 0;
	}
	static getTime() {
		return Krom.getTime() - kha_SystemImpl.start;
	}
	static getVsync() {
		return true;
	}
	static getRefreshRate() {
		return 60;
	}
	static getSystemId() {
		return Krom.systemId();
	}
	static vibrate(ms) {
	}
	static getLanguage() {
		return "en";
	}
	static requestShutdown() {
		Krom.requestShutdown();
		return true;
	}
	static getMouse(num) {
		return kha_SystemImpl.mouse;
	}
	static getPen(num) {
		return kha_SystemImpl.pen;
	}
	static getKeyboard(num) {
		return kha_SystemImpl.keyboard;
	}
	static lockMouse() {
		if(!kha_SystemImpl.isMouseLocked()) {
			Krom.lockMouse();
			let _g = 0;
			let _g1 = kha_SystemImpl.mouseLockListeners;
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	static unlockMouse() {
		if(kha_SystemImpl.isMouseLocked()) {
			Krom.unlockMouse();
			let _g = 0;
			let _g1 = kha_SystemImpl.mouseLockListeners;
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	static canLockMouse() {
		return Krom.canLockMouse();
	}
	static isMouseLocked() {
		return Krom.isMouseLocked();
	}
	static notifyOfMouseLockChange(func,error) {
		if(kha_SystemImpl.canLockMouse() && func != null) {
			kha_SystemImpl.mouseLockListeners.push(func);
		}
	}
	static removeFromMouseLockChange(func,error) {
		if(kha_SystemImpl.canLockMouse() && func != null) {
			HxOverrides.remove(kha_SystemImpl.mouseLockListeners,func);
		}
	}
	static hideSystemCursor() {
		Krom.showMouse(false);
	}
	static showSystemCursor() {
		Krom.showMouse(true);
	}
	static unload() {
	}
	static canSwitchFullscreen() {
		return false;
	}
	static isFullscreen() {
		return false;
	}
	static requestFullscreen() {
	}
	static exitFullscreen() {
	}
	static notifyOfFullscreenChange(func,error) {
	}
	static removeFromFullscreenChange(func,error) {
	}
	static changeResolution(width,height) {
	}
	static setKeepScreenOn(on) {
	}
	static loadUrl(url) {
	}
	static getGamepadId(index) {
		return "unknown";
	}
	static getGamepadVendor(index) {
		return "unknown";
	}
	static setGamepadRumble(index,leftAmount,rightAmount) {
	}
	static safeZone() {
		return 1.0;
	}
	static login() {
	}
	static automaticSafeZone() {
		return true;
	}
	static setSafeZone(value) {
	}
	static unlockAchievement(id) {
	}
	static waitingForLogin() {
		return false;
	}
	static disallowUserChange() {
	}
	static allowUserChange() {
	}
}
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = "kha.SystemImpl";
class kha_Video {
	constructor() {
	}
	width() {
		return 100;
	}
	height() {
		return 100;
	}
	play(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	update(dt) {
	}
	pause() {
	}
	stop() {
	}
	getLength() {
		return 0;
	}
	getCurrentPos() {
		return 0;
	}
	get_position() {
		return 0;
	}
	set_position(value) {
		return 0;
	}
	getVolume() {
		return 1;
	}
	setVolume(volume) {
	}
	isFinished() {
		return this.getCurrentPos() >= this.getLength();
	}
	unload() {
	}
}
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = "kha.Video";
kha_Video.__interfaces__ = [kha_Resource];
Object.assign(kha_Video.prototype, {
	__class__: kha_Video
	,__properties__: {set_position: "set_position",get_position: "get_position"}
});
class kha_Window {
	constructor(num) {
		this.num = num;
		kha_Window.windows.push(this);
	}
	resize(width,height) {
	}
	move(x,y) {
	}
	changeWindowFeatures(features) {
	}
	changeFramebuffer(frame) {
	}
	get_x() {
		return 0;
	}
	set_x(value) {
		return 0;
	}
	get_y() {
		return 0;
	}
	set_y(value) {
		return 0;
	}
	get_width() {
		return Krom.windowWidth(this.num);
	}
	set_width(value) {
		return 800;
	}
	get_height() {
		return Krom.windowHeight(this.num);
	}
	set_height(value) {
		return 600;
	}
	get_mode() {
		return 0;
	}
	set_mode(mode) {
		return 0;
	}
	get_visible() {
		return true;
	}
	set_visible(value) {
		return true;
	}
	get_title() {
		return this.windowTitle;
	}
	set_title(value) {
		Krom.setWindowTitle(this.num,value);
		this.windowTitle = value;
		return this.windowTitle;
	}
	notifyOnResize(callback) {
	}
	get_vSynced() {
		return true;
	}
	static create(win,frame) {
		return null;
	}
	static destroy($window) {
	}
	static get(index) {
		return kha_Window.windows[index];
	}
	static get_all() {
		return kha_Window.windows;
	}
}
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = "kha.Window";
kha_Window.__properties__ = {get_all: "get_all"};
Object.assign(kha_Window.prototype, {
	__class__: kha_Window
	,num: null
	,windowTitle: null
	,__properties__: {get_vSynced: "get_vSynced",set_title: "set_title",get_title: "get_title",set_visible: "set_visible",get_visible: "get_visible",set_mode: "set_mode",get_mode: "get_mode",set_height: "set_height",get_height: "get_height",set_width: "set_width",get_width: "get_width",set_y: "set_y",get_y: "get_y",set_x: "set_x",get_x: "get_x"}
});
class kha_WindowFeatures {
	static _new(value) {
		let this1 = value;
		return this1;
	}
}
class kha_WindowOptions {
	constructor(title,x,y,width,height,display,visible,windowFeatures,mode) {
		if(mode == null) {
			mode = 0;
		}
		if(visible == null) {
			visible = true;
		}
		if(display == null) {
			display = -1;
		}
		if(height == null) {
			height = 600;
		}
		if(width == null) {
			width = 800;
		}
		if(y == null) {
			y = -1;
		}
		if(x == null) {
			x = -1;
		}
		this.mode = 0;
		this.windowFeatures = 1 | 4 | 2;
		this.visible = true;
		this.display = -1;
		this.height = 600;
		this.width = 800;
		this.y = -1;
		this.x = -1;
		this.title = null;
		this.title = title;
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
		this.display = display;
		this.visible = visible;
		this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
		this.mode = mode;
	}
}
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = "kha.WindowOptions";
Object.assign(kha_WindowOptions.prototype, {
	__class__: kha_WindowOptions
	,title: null
	,x: null
	,y: null
	,width: null
	,height: null
	,display: null
	,visible: null
	,windowFeatures: null
	,mode: null
});
class kha_arrays_ByteArray {
	static get_buffer(this1) {
		return this1.buffer;
	}
	static _new(buffer,byteOffset,byteLength) {
		let this1 = new DataView(buffer,byteOffset,byteLength);
		return this1;
	}
	static make(byteLength) {
		return kha_arrays_ByteArray._new(kha_arrays_ByteBuffer.create(byteLength));
	}
	static getInt8(this1,byteOffset) {
		return this1.getInt8(byteOffset);
	}
	static getUint8(this1,byteOffset) {
		return this1.getUint8(byteOffset);
	}
	static getInt16(this1,byteOffset) {
		return this1.getInt16(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getUint16(this1,byteOffset) {
		return this1.getUint16(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getInt32(this1,byteOffset) {
		return this1.getInt32(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getUint32(this1,byteOffset) {
		return this1.getUint32(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getFloat32(this1,byteOffset) {
		return this1.getFloat32(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getFloat64(this1,byteOffset) {
		return this1.getFloat64(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static setInt8(this1,byteOffset,value) {
		this1.setInt8(byteOffset,value);
	}
	static setUint8(this1,byteOffset,value) {
		this1.setUint8(byteOffset,value);
	}
	static setInt16(this1,byteOffset,value) {
		this1.setInt16(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static setUint16(this1,byteOffset,value) {
		this1.setUint16(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static setInt32(this1,byteOffset,value) {
		this1.setInt32(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static setUint32(this1,byteOffset,value) {
		this1.setUint32(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static setFloat32(this1,byteOffset,value) {
		this1.setFloat32(byteOffset,value,true);
	}
	static setFloat64(this1,byteOffset,value) {
		this1.setFloat64(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static getInt16LE(this1,byteOffset) {
		return this1.getInt16(byteOffset,true);
	}
	static getUint16LE(this1,byteOffset) {
		return this1.getUint16(byteOffset,true);
	}
	static getInt32LE(this1,byteOffset) {
		return this1.getInt32(byteOffset,true);
	}
	static getUint32LE(this1,byteOffset) {
		return this1.getUint32(byteOffset,true);
	}
	static getFloat32LE(this1,byteOffset) {
		return this1.getFloat32(byteOffset,true);
	}
	static getFloat64LE(this1,byteOffset) {
		return this1.getFloat64(byteOffset,true);
	}
	static setInt16LE(this1,byteOffset,value) {
		this1.setInt16(byteOffset,value,true);
	}
	static setUint16LE(this1,byteOffset,value) {
		this1.setUint16(byteOffset,value,true);
	}
	static setInt32LE(this1,byteOffset,value) {
		this1.setInt32(byteOffset,value,true);
	}
	static setUint32LE(this1,byteOffset,value) {
		this1.setUint32(byteOffset,value,true);
	}
	static setFloat32LE(this1,byteOffset,value) {
		this1.setFloat32(byteOffset,value,true);
	}
	static setFloat64LE(this1,byteOffset,value) {
		this1.setFloat64(byteOffset,value,true);
	}
	static getInt16BE(this1,byteOffset) {
		return this1.getInt16(byteOffset);
	}
	static getUint16BE(this1,byteOffset) {
		return this1.getUint16(byteOffset);
	}
	static getInt32BE(this1,byteOffset) {
		return this1.getInt32(byteOffset);
	}
	static getUint32BE(this1,byteOffset) {
		return this1.getUint32(byteOffset);
	}
	static getFloat32BE(this1,byteOffset) {
		return this1.getFloat32(byteOffset);
	}
	static getFloat64BE(this1,byteOffset) {
		return this1.getFloat64(byteOffset);
	}
	static setInt16BE(this1,byteOffset,value) {
		this1.setInt16(byteOffset,value);
	}
	static setUint16BE(this1,byteOffset,value) {
		this1.setUint16(byteOffset,value);
	}
	static setInt32BE(this1,byteOffset,value) {
		this1.setInt32(byteOffset,value);
	}
	static setUint32BE(this1,byteOffset,value) {
		this1.setUint32(byteOffset,value);
	}
	static setFloat32BE(this1,byteOffset,value) {
		this1.setFloat32(byteOffset,value);
	}
	static setFloat64BE(this1,byteOffset,value) {
		this1.setFloat64(byteOffset,value);
	}
	static subarray(this1,start,end) {
		return kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null);
	}
}
kha_arrays_ByteArray.__properties__ = {get_buffer: "get_buffer"};
class kha_arrays_ByteBuffer {
	static create(length) {
		return kha_arrays_ByteBuffer._new(length);
	}
	static _new(length) {
		let this1 = new ArrayBuffer(length);
		return this1;
	}
}
class kha_arrays_Float32Array {
	static get_length(this1) {
		return this1.byteLength >> 2;
	}
	static _new(elements) {
		let this1 = kha_arrays_ByteArray.make(elements * 4);
		return this1;
	}
	static get(this1,k) {
		return this1.getFloat32(k * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static set(this1,k,v) {
		this1.setFloat32(k * 4,v,true);
		return v;
	}
	static subarray(this1,start,end) {
		let start1 = start * 4;
		let end1 = end != null ? end * 4 : end;
		return kha_arrays_ByteArray._new(this1.buffer,start1,end1 != null ? end1 - start1 : null);
	}
}
kha_arrays_Float32Array.__properties__ = {get_length: "get_length"};
class kha_arrays_Int16Array {
	static get_length(this1) {
		return this1.byteLength >> 1;
	}
	static _new(elements) {
		let this1 = kha_arrays_ByteArray.make(elements * 2);
		return this1;
	}
	static get(this1,k) {
		return this1.getInt16(k * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static set(this1,k,v) {
		this1.setInt16(k * 2,v,kha_arrays_ByteArray.LITTLE_ENDIAN);
		return this1.getInt16(k * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static subarray(this1,start,end) {
		let start1 = start * 2;
		let end1 = end != null ? end * 2 : null;
		return kha_arrays_ByteArray._new(this1.buffer,start1,end1 != null ? end1 - start1 : null);
	}
}
kha_arrays_Int16Array.__properties__ = {get_length: "get_length"};
class kha_arrays_Int32Array {
	static get_length(this1) {
		return this1.byteLength >> 2;
	}
	static _new(elements) {
		let this1 = kha_arrays_ByteArray.make(elements * 4);
		return this1;
	}
	static get(this1,k) {
		return this1.getInt32(k * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static set(this1,k,v) {
		this1.setInt32(k * 4,v,kha_arrays_ByteArray.LITTLE_ENDIAN);
		return this1.getInt32(k * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static subarray(this1,start,end) {
		let start1 = start * 4;
		let end1 = end != null ? end * 4 : null;
		return kha_arrays_ByteArray._new(this1.buffer,start1,end1 != null ? end1 - start1 : null);
	}
}
kha_arrays_Int32Array.__properties__ = {get_length: "get_length"};
class kha_arrays_Uint32Array {
	static get_length(this1) {
		return this1.byteLength >> 2;
	}
	static _new(elements) {
		let this1 = kha_arrays_ByteArray.make(elements * 4);
		return this1;
	}
	static get(this1,k) {
		return this1.getUint32(k * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static set(this1,k,v) {
		this1.setUint32(k * 4,v,kha_arrays_ByteArray.LITTLE_ENDIAN);
		return this1.getUint32(k * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
	}
	static subarray(this1,start,end) {
		let start1 = start * 4;
		let end1 = end != null ? end * 4 : null;
		return kha_arrays_ByteArray._new(this1.buffer,start1,end1 != null ? end1 - start1 : null);
	}
}
kha_arrays_Uint32Array.__properties__ = {get_length: "get_length"};
class kha_arrays_Uint8Array {
	static get_length(this1) {
		return this1.byteLength;
	}
	static _new(elements) {
		let this1 = kha_arrays_ByteArray.make(elements);
		return this1;
	}
	static get(this1,k) {
		return this1.getUint8(k);
	}
	static set(this1,k,v) {
		this1.setUint8(k,v);
		return this1.getUint8(k);
	}
	static subarray(this1,start,end) {
		return kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null);
	}
}
kha_arrays_Uint8Array.__properties__ = {get_length: "get_length"};
class kha_audio1_AudioChannel {
}
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = "kha.audio1.AudioChannel";
kha_audio1_AudioChannel.__isInterface__ = true;
Object.assign(kha_audio1_AudioChannel.prototype, {
	__class__: kha_audio1_AudioChannel
	,play: null
	,pause: null
	,stop: null
	,length: null
	,get_length: null
	,get_position: null
	,set_position: null
	,get_volume: null
	,set_volume: null
	,finished: null
	,get_finished: null
	,__properties__: {get_finished: "get_finished",set_volume: "set_volume",get_volume: "get_volume",set_position: "set_position",get_position: "get_position",get_length: "get_length"}
});
class kha_internal_IntBox {
	constructor(value) {
		this.value = value;
	}
}
$hxClasses["kha.internal.IntBox"] = kha_internal_IntBox;
kha_internal_IntBox.__name__ = "kha.internal.IntBox";
Object.assign(kha_internal_IntBox.prototype, {
	__class__: kha_internal_IntBox
	,value: null
});
class kha_audio2_Audio {
	static _init() {
		let bufferSize = 2048;
		kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,44100);
		kha_audio2_Audio.samplesPerSecond = 44100;
	}
	static _callCallback(samples) {
		if(kha_audio2_Audio.buffer == null) {
			return;
		}
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.intBox.value = samples;
			kha_audio2_Audio.audioCallback(kha_audio2_Audio.intBox,kha_audio2_Audio.buffer);
		} else {
			let _g = 0;
			let _g1 = samples;
			while(_g < _g1) {
				let i = _g++;
				kha_audio2_Audio.buffer.data.setFloat32(kha_audio2_Audio.buffer.writeLocation * 4,0,true);
				kha_audio2_Audio.buffer.writeLocation += 1;
				if(kha_audio2_Audio.buffer.writeLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.writeLocation = 0;
				}
			}
		}
	}
	static _readSample() {
		if(kha_audio2_Audio.buffer == null) {
			return 0;
		}
		let value = kha_audio2_Audio.buffer.data.getFloat32(kha_audio2_Audio.buffer.readLocation * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		kha_audio2_Audio.buffer.readLocation += 1;
		if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
			kha_audio2_Audio.buffer.readLocation = 0;
		}
		return value;
	}
	static play(sound,loop) {
		if(loop == null) {
			loop = false;
		}
		return null;
	}
	static stream(sound,loop) {
		if(loop == null) {
			loop = false;
		}
		return null;
	}
}
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = "kha.audio2.Audio";
class kha_audio2_Audio1 {
	static _init() {
		let this1 = new Array(32);
		kha_audio2_Audio1.soundChannels = this1;
		let this2 = new Array(32);
		kha_audio2_Audio1.streamChannels = this2;
		let this3 = new Array(32);
		kha_audio2_Audio1.internalSoundChannels = this3;
		let this4 = new Array(32);
		kha_audio2_Audio1.internalStreamChannels = this4;
		kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(512);
		kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(512);
		kha_audio2_Audio1.lastAllocationCount = 0;
		kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
	}
	static max(a,b) {
		if(a > b) {
			return a;
		} else {
			return b;
		}
	}
	static min(a,b) {
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
	static mix(samplesBox,buffer) {
		let samples = samplesBox.value;
		if(kha_audio2_Audio1.sampleCache1.byteLength >> 2 < samples) {
			if(kha_audio2_Audio.disableGcInteractions) {
				haxe_Log.trace("Unexpected allocation request in audio thread.",{ fileName : "kha/audio2/Audio1.hx", lineNumber : 50, className : "kha.audio2.Audio1", methodName : "mix"});
				let _g = 0;
				let _g1 = samples;
				while(_g < _g1) {
					let i = _g++;
					buffer.data.setFloat32(buffer.writeLocation * 4,0,true);
					buffer.writeLocation += 1;
					if(buffer.writeLocation >= buffer.size) {
						buffer.writeLocation = 0;
					}
				}
				kha_audio2_Audio1.lastAllocationCount = 0;
				kha_audio2_Audio.disableGcInteractions = false;
				return;
			}
			kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(samples * 2);
			kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(samples * 2);
			kha_audio2_Audio1.lastAllocationCount = 0;
		} else if(kha_audio2_Audio1.lastAllocationCount > 100) {
			kha_audio2_Audio.disableGcInteractions = true;
		} else {
			kha_audio2_Audio1.lastAllocationCount += 1;
		}
		let _g = 0;
		let _g1 = samples;
		while(_g < _g1) {
			let i = _g++;
			kha_audio2_Audio1.sampleCache2.setFloat32(i * 4,0,true);
		}
		let _g2 = 0;
		while(_g2 < 32) {
			let i = _g2++;
			kha_audio2_Audio1.internalSoundChannels[i] = kha_audio2_Audio1.soundChannels[i];
		}
		let _g3 = 0;
		while(_g3 < 32) {
			let i = _g3++;
			kha_audio2_Audio1.internalStreamChannels[i] = kha_audio2_Audio1.streamChannels[i];
		}
		let _g4 = 0;
		let _g5 = kha_audio2_Audio1.internalSoundChannels;
		while(_g4 < _g5.length) {
			let channel = _g5[_g4];
			++_g4;
			if(channel == null || channel.get_finished()) {
				continue;
			}
			channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
			let _g = 0;
			let _g1 = samples;
			while(_g < _g1) {
				let i = _g++;
				let _g1 = i;
				let _g2 = kha_audio2_Audio1.sampleCache2;
				let v = _g2.getFloat32(_g1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) + kha_audio2_Audio1.sampleCache1.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * channel.get_volume();
				_g2.setFloat32(_g1 * 4,v,true);
			}
		}
		let _g6 = 0;
		let _g7 = kha_audio2_Audio1.internalStreamChannels;
		while(_g6 < _g7.length) {
			let channel = _g7[_g6];
			++_g6;
			if(channel == null || channel.get_finished()) {
				continue;
			}
			channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
			let _g = 0;
			let _g1 = samples;
			while(_g < _g1) {
				let i = _g++;
				let _g1 = i;
				let _g2 = kha_audio2_Audio1.sampleCache2;
				let v = _g2.getFloat32(_g1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) + kha_audio2_Audio1.sampleCache1.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * channel.get_volume();
				_g2.setFloat32(_g1 * 4,v,true);
			}
		}
		let _g8 = 0;
		let _g9 = samples;
		while(_g8 < _g9) {
			let i = _g8++;
			let a = kha_audio2_Audio1.sampleCache2.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let a1 = a < 1.0 ? a : 1.0;
			let v = a1 > -1.0 ? a1 : -1.0;
			buffer.data.setFloat32(buffer.writeLocation * 4,v,true);
			buffer.writeLocation += 1;
			if(buffer.writeLocation >= buffer.size) {
				buffer.writeLocation = 0;
			}
		}
	}
	static play(sound,loop) {
		if(loop == null) {
			loop = false;
		}
		let channel = null;
		if(kha_audio2_Audio.samplesPerSecond != sound.sampleRate) {
			channel = new kha_audio2_ResamplingAudioChannel(loop,sound.sampleRate);
		} else {
			channel = new kha_audio2_AudioChannel(loop);
		}
		channel.data = sound.uncompressedData;
		let foundChannel = false;
		let _g = 0;
		while(_g < 32) {
			let i = _g++;
			if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
				kha_audio2_Audio1.soundChannels[i] = channel;
				foundChannel = true;
				break;
			}
		}
		if(foundChannel) {
			return channel;
		} else {
			return null;
		}
	}
	static _playAgain(channel) {
		let _g = 0;
		while(_g < 32) {
			let i = _g++;
			if(kha_audio2_Audio1.soundChannels[i] == channel) {
				kha_audio2_Audio1.soundChannels[i] = null;
			}
		}
		let _g1 = 0;
		while(_g1 < 32) {
			let i = _g1++;
			if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished() || kha_audio2_Audio1.soundChannels[i] == channel) {
				kha_audio2_Audio1.soundChannels[i] = channel;
				break;
			}
		}
	}
	static stream(sound,loop) {
		if(loop == null) {
			loop = false;
		}
		let hardwareChannel = kha_audio2_Audio.stream(sound,loop);
		if(hardwareChannel != null) {
			return hardwareChannel;
		}
		let channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
		let foundChannel = false;
		let _g = 0;
		while(_g < 32) {
			let i = _g++;
			if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
				kha_audio2_Audio1.streamChannels[i] = channel;
				foundChannel = true;
				break;
			}
		}
		if(foundChannel) {
			return channel;
		} else {
			return null;
		}
	}
}
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = "kha.audio2.Audio1";
class kha_audio2_AudioChannel {
	constructor(looping) {
		this.data = null;
		this.looping = looping;
		this.stopped = false;
		this.paused = false;
		this.myPosition = 0;
		this.myVolume = 1;
	}
	nextSamples(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			let _g = 0;
			let _g1 = requestedLength;
			while(_g < _g1) {
				let i = _g++;
				requestedSamples.setFloat32(i * 4,0,true);
			}
			return;
		}
		let requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			let _g = 0;
			let a = (this.data.byteLength >> 2) - this.myPosition;
			let b = requestedLength - requestedSamplesIndex;
			let _g1 = a < b ? a : b;
			while(_g < _g1) {
				let i = _g++;
				let v = this.data.getFloat32(this.myPosition++ * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				requestedSamples.setFloat32(requestedSamplesIndex++ * 4,v,true);
			}
			if(this.myPosition >= this.data.byteLength >> 2) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples.setFloat32(requestedSamplesIndex++ * 4,0,true);
	}
	play() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	pause() {
		this.paused = true;
	}
	stop() {
		this.myPosition = 0;
		this.stopped = true;
	}
	get_length() {
		return (this.data.byteLength >> 2) / kha_audio2_Audio.samplesPerSecond / 2;
	}
	get_position() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	set_position(value) {
		this.myPosition = Math.round(value * kha_audio2_Audio.samplesPerSecond * 2);
		let a = this.myPosition;
		let b = this.data.byteLength >> 2;
		let a1 = a < b ? a : b;
		this.myPosition = a1 > 0 ? a1 : 0;
		return value;
	}
	get_volume() {
		return this.myVolume;
	}
	set_volume(value) {
		return this.myVolume = value;
	}
	get_finished() {
		return this.stopped;
	}
	static max(a,b) {
		if(a > b) {
			return a;
		} else {
			return b;
		}
	}
	static min(a,b) {
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
}
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = "kha.audio2.AudioChannel";
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
Object.assign(kha_audio2_AudioChannel.prototype, {
	__class__: kha_audio2_AudioChannel
	,data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,stopped: null
	,looping: null
	,length: null
	,finished: null
	,__properties__: {get_finished: "get_finished",set_volume: "set_volume",get_volume: "get_volume",set_position: "set_position",get_position: "get_position",get_length: "get_length"}
});
class kha_audio2_Buffer {
	constructor(size,channels,samplesPerSecond) {
		this.size = size;
		this.data = kha_arrays_Float32Array._new(size);
		this.channels = channels;
		this.samplesPerSecond = samplesPerSecond;
		this.readLocation = 0;
		this.writeLocation = 0;
	}
}
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = "kha.audio2.Buffer";
Object.assign(kha_audio2_Buffer.prototype, {
	__class__: kha_audio2_Buffer
	,channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
});
class kha_audio2_ResamplingAudioChannel extends kha_audio2_AudioChannel {
	constructor(looping,sampleRate) {
		super(looping);
		this.sampleRate = sampleRate;
	}
	nextSamples(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			let _g = 0;
			let _g1 = requestedLength;
			while(_g < _g1) {
				let i = _g++;
				requestedSamples.setFloat32(i * 4,0,true);
			}
			return;
		}
		let requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			let _g = 0;
			let value = Math.ceil((this.data.byteLength >> 2) * (sampleRate / this.sampleRate));
			let a = (value % 2 == 0 ? value : value + 1) - this.myPosition;
			let b = requestedLength - requestedSamplesIndex;
			let _g1 = a < b ? a : b;
			while(_g < _g1) {
				let i = _g++;
				let k = requestedSamplesIndex++;
				let position = this.myPosition++;
				let even = position % 2 == 0;
				let factor = this.sampleRate / sampleRate;
				let v;
				if(even) {
					position = position / 2 | 0;
					let pos = factor * position;
					let pos1 = Math.floor(pos);
					let pos2 = Math.floor(pos + 1);
					pos1 *= 2;
					pos2 *= 2;
					let minimum = 0;
					let maximum = (this.data.byteLength >> 2) - 1;
					if(maximum % 2 != 0) {
						--maximum;
					}
					let a = pos1 < minimum || pos1 > maximum ? 0 : this.data.getFloat32(pos1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let b = pos2 < minimum || pos2 > maximum ? 0 : this.data.getFloat32(pos2 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let t = pos - Math.floor(pos);
					v = (1 - t) * a + t * b;
				} else {
					position = position / 2 | 0;
					let pos = factor * position;
					let pos1 = Math.floor(pos);
					let pos2 = Math.floor(pos + 1);
					pos1 = pos1 * 2 + 1;
					pos2 = pos2 * 2 + 1;
					let minimum = 1;
					let maximum = (this.data.byteLength >> 2) - 1;
					if(maximum % 2 == 0) {
						--maximum;
					}
					let a = pos1 < minimum || pos1 > maximum ? 0 : this.data.getFloat32(pos1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let b = pos2 < minimum || pos2 > maximum ? 0 : this.data.getFloat32(pos2 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					let t = pos - Math.floor(pos);
					v = (1 - t) * a + t * b;
				}
				requestedSamples.setFloat32(k * 4,v,true);
			}
			let value1 = Math.ceil((this.data.byteLength >> 2) * (sampleRate / this.sampleRate));
			if(this.myPosition >= (value1 % 2 == 0 ? value1 : value1 + 1)) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples.setFloat32(requestedSamplesIndex++ * 4,0,true);
	}
	sample(position,sampleRate) {
		let even = position % 2 == 0;
		let factor = this.sampleRate / sampleRate;
		if(even) {
			position = position / 2 | 0;
			let pos = factor * position;
			let pos1 = Math.floor(pos);
			let pos2 = Math.floor(pos + 1);
			pos1 *= 2;
			pos2 *= 2;
			let minimum = 0;
			let maximum = (this.data.byteLength >> 2) - 1;
			if(maximum % 2 != 0) {
				--maximum;
			}
			let a = pos1 < minimum || pos1 > maximum ? 0 : this.data.getFloat32(pos1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let b = pos2 < minimum || pos2 > maximum ? 0 : this.data.getFloat32(pos2 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let t = pos - Math.floor(pos);
			return (1 - t) * a + t * b;
		} else {
			position = position / 2 | 0;
			let pos = factor * position;
			let pos1 = Math.floor(pos);
			let pos2 = Math.floor(pos + 1);
			pos1 = pos1 * 2 + 1;
			pos2 = pos2 * 2 + 1;
			let minimum = 1;
			let maximum = (this.data.byteLength >> 2) - 1;
			if(maximum % 2 == 0) {
				--maximum;
			}
			let a = pos1 < minimum || pos1 > maximum ? 0 : this.data.getFloat32(pos1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let b = pos2 < minimum || pos2 > maximum ? 0 : this.data.getFloat32(pos2 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			let t = pos - Math.floor(pos);
			return (1 - t) * a + t * b;
		}
	}
	lerp(v0,v1,t) {
		return (1 - t) * v0 + t * v1;
	}
	sampleLength(sampleRate) {
		let value = Math.ceil((this.data.byteLength >> 2) * (sampleRate / this.sampleRate));
		if(value % 2 == 0) {
			return value;
		} else {
			return value + 1;
		}
	}
	play() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	pause() {
		this.paused = true;
	}
	stop() {
		this.myPosition = 0;
		this.stopped = true;
	}
	get_length() {
		return (this.data.byteLength >> 2) / this.sampleRate / 2;
	}
	get_position() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	set_position(value) {
		let pos = Math.round(value * kha_audio2_Audio.samplesPerSecond * 2.0);
		if(pos % 2 != 0) {
			++pos;
		}
		let value1 = Math.ceil((this.data.byteLength >> 2) * (kha_audio2_Audio.samplesPerSecond / this.sampleRate));
		let b = value1 % 2 == 0 ? value1 : value1 + 1;
		let a = pos < b ? pos : b;
		this.myPosition = a > 0 ? a : 0;
		return value;
	}
	get_volume() {
		return this.myVolume;
	}
	set_volume(value) {
		return this.myVolume = value;
	}
	get_finished() {
		return this.stopped;
	}
	static max(a,b) {
		if(a > b) {
			return a;
		} else {
			return b;
		}
	}
	static min(a,b) {
		if(a < b) {
			return a;
		} else {
			return b;
		}
	}
}
$hxClasses["kha.audio2.ResamplingAudioChannel"] = kha_audio2_ResamplingAudioChannel;
kha_audio2_ResamplingAudioChannel.__name__ = "kha.audio2.ResamplingAudioChannel";
kha_audio2_ResamplingAudioChannel.__super__ = kha_audio2_AudioChannel;
Object.assign(kha_audio2_ResamplingAudioChannel.prototype, {
	__class__: kha_audio2_ResamplingAudioChannel
	,sampleRate: null
});
class kha_audio2_StreamChannel {
	constructor(data,loop) {
		this.paused = false;
		this.atend = false;
		this.myVolume = 1;
		this.loop = loop;
		this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
	}
	nextSamples(samples,length,sampleRate) {
		if(this.paused) {
			let _g = 0;
			let _g1 = length;
			while(_g < _g1) {
				let i = _g++;
				samples.setFloat32(i * 4,0,true);
			}
			return;
		}
		let count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			let _g = count;
			let _g1 = length;
			while(_g < _g1) {
				let i = _g++;
				samples.setFloat32(i * 4,0,true);
			}
		}
	}
	play() {
		this.paused = false;
	}
	pause() {
		this.paused = true;
	}
	stop() {
		this.atend = true;
	}
	get_length() {
		return this.reader.get_totalMillisecond() / 1000.0;
	}
	get_position() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	set_position(value) {
		return value;
	}
	get_volume() {
		return this.myVolume;
	}
	set_volume(value) {
		return this.myVolume = value;
	}
	get_finished() {
		return this.atend;
	}
}
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = "kha.audio2.StreamChannel";
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
Object.assign(kha_audio2_StreamChannel.prototype, {
	__class__: kha_audio2_StreamChannel
	,reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,length: null
	,finished: null
	,__properties__: {get_finished: "get_finished",set_volume: "set_volume",get_volume: "get_volume",set_position: "set_position",get_position: "get_position",get_length: "get_length"}
});
class kha_audio2_ogg_tools_Crc32 {
	static init() {
		if(kha_audio2_ogg_tools_Crc32.table != null) {
			return;
		}
		let this1 = new Array(256);
		kha_audio2_ogg_tools_Crc32.table = this1;
		let _g = 0;
		while(_g < 256) {
			let i = _g++;
			let s = i << 24;
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
			kha_audio2_ogg_tools_Crc32.table[i] = s;
		}
	}
	static update(crc,byte) {
		return crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
	}
}
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = "kha.audio2.ogg.tools.Crc32";
class kha_audio2_ogg_tools_MathTools {
	static ilog(n) {
		let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		if(n < 16384) {
			if(n < 16) {
				return log2_4[n];
			} else if(n < 512) {
				return 5 + log2_4[n >> 5];
			} else {
				return 10 + log2_4[n >> 10];
			}
		} else if(n < 16777216) {
			if(n < 524288) {
				return 15 + log2_4[n >> 15];
			} else {
				return 20 + log2_4[n >> 20];
			}
		} else if(n < 536870912) {
			return 25 + log2_4[n >> 25];
		} else if(n < -2147483648) {
			return 30 + log2_4[n >> 30];
		} else {
			return 0;
		}
	}
}
$hxClasses["kha.audio2.ogg.tools.MathTools"] = kha_audio2_ogg_tools_MathTools;
kha_audio2_ogg_tools_MathTools.__name__ = "kha.audio2.ogg.tools.MathTools";
class kha_audio2_ogg_tools_Mdct {
	static inverseTransform(buffer,n,a,b,c,bitReverse) {
		let n2 = n >> 1;
		let n4 = n >> 2;
		let n8 = n >> 3;
		let this1 = new Array(n2);
		let buf2 = this1;
		let dOffset = n2 - 2;
		let aaOffset = 0;
		let eOffset = 0;
		let eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		let u = buffer;
		let v = buf2;
		let aaOffset1 = n2 - 8;
		let eOffset0 = n4;
		let eOffset1 = 0;
		let dOffset0 = n4;
		let dOffset1 = 0;
		while(aaOffset1 >= 0) {
			let v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			let v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		let ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		let i_off = n2 - 1 - n4 * 0;
		let eeOffset0 = i_off;
		let eeOffset2 = i_off + -(n >> 3);
		let aOffset = 0;
		let i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			let k00_20 = u[eeOffset0] - u[eeOffset2];
			let k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
			u[eeOffset0] += u[eeOffset2];
			u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
			k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
			u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
			u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
			u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
			k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
			u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
			u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
			u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
			k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
			u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
			u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
			u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		let i_off1 = n2 - 1 - n4;
		let eeOffset01 = i_off1;
		let eeOffset21 = i_off1 + -(n >> 3);
		let aOffset1 = 0;
		let i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			let k00_20 = u[eeOffset01] - u[eeOffset21];
			let k01_21 = u[eeOffset01 + (-1)] - u[eeOffset21 + (-1)];
			u[eeOffset01] += u[eeOffset21];
			u[eeOffset01 + (-1)] += u[eeOffset21 + (-1)];
			u[eeOffset21] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-1)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-2)] - u[eeOffset21 + (-2)];
			k01_21 = u[eeOffset01 + (-3)] - u[eeOffset21 + (-3)];
			u[eeOffset01 + (-2)] += u[eeOffset21 + (-2)];
			u[eeOffset01 + (-3)] += u[eeOffset21 + (-3)];
			u[eeOffset21 + (-2)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-3)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-4)] - u[eeOffset21 + (-4)];
			k01_21 = u[eeOffset01 + (-5)] - u[eeOffset21 + (-5)];
			u[eeOffset01 + (-4)] += u[eeOffset21 + (-4)];
			u[eeOffset01 + (-5)] += u[eeOffset21 + (-5)];
			u[eeOffset21 + (-4)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-5)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-6)] - u[eeOffset21 + (-6)];
			k01_21 = u[eeOffset01 + (-7)] - u[eeOffset21 + (-7)];
			u[eeOffset01 + (-6)] += u[eeOffset21 + (-6)];
			u[eeOffset01 + (-7)] += u[eeOffset21 + (-7)];
			u[eeOffset21 + (-6)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-7)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		let d0 = n2 - 1 - n8 * 0;
		let aOffset2 = 0;
		let eOffset01 = d0;
		let eOffset2 = d0 + -(n >> 4);
		let i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			let k00_20 = u[eOffset01] - u[eOffset2];
			let k01_21 = u[eOffset01 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset01] += u[eOffset2];
			u[eOffset01 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset01 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset01 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset01 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset01 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset01 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset01 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset01 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset01 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset01 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		let d01 = n2 - 1 - n8;
		let aOffset3 = 0;
		let eOffset02 = d01;
		let eOffset21 = d01 + -(n >> 4);
		let i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			let k00_20 = u[eOffset02] - u[eOffset21];
			let k01_21 = u[eOffset02 + (-1)] - u[eOffset21 + (-1)];
			u[eOffset02] += u[eOffset21];
			u[eOffset02 + (-1)] += u[eOffset21 + (-1)];
			u[eOffset21] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-1)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-2)] - u[eOffset21 + (-2)];
			k01_21 = u[eOffset02 + (-3)] - u[eOffset21 + (-3)];
			u[eOffset02 + (-2)] += u[eOffset21 + (-2)];
			u[eOffset02 + (-3)] += u[eOffset21 + (-3)];
			u[eOffset21 + (-2)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-3)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-4)] - u[eOffset21 + (-4)];
			k01_21 = u[eOffset02 + (-5)] - u[eOffset21 + (-5)];
			u[eOffset02 + (-4)] += u[eOffset21 + (-4)];
			u[eOffset02 + (-5)] += u[eOffset21 + (-5)];
			u[eOffset21 + (-4)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-5)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-6)] - u[eOffset21 + (-6)];
			k01_21 = u[eOffset02 + (-7)] - u[eOffset21 + (-7)];
			u[eOffset02 + (-6)] += u[eOffset21 + (-6)];
			u[eOffset02 + (-7)] += u[eOffset21 + (-7)];
			u[eOffset21 + (-6)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-7)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		let d02 = n2 - 1 - n8 * 2;
		let aOffset4 = 0;
		let eOffset03 = d02;
		let eOffset22 = d02 + -(n >> 4);
		let i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			let k00_20 = u[eOffset03] - u[eOffset22];
			let k01_21 = u[eOffset03 + (-1)] - u[eOffset22 + (-1)];
			u[eOffset03] += u[eOffset22];
			u[eOffset03 + (-1)] += u[eOffset22 + (-1)];
			u[eOffset22] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-1)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-2)] - u[eOffset22 + (-2)];
			k01_21 = u[eOffset03 + (-3)] - u[eOffset22 + (-3)];
			u[eOffset03 + (-2)] += u[eOffset22 + (-2)];
			u[eOffset03 + (-3)] += u[eOffset22 + (-3)];
			u[eOffset22 + (-2)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-3)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-4)] - u[eOffset22 + (-4)];
			k01_21 = u[eOffset03 + (-5)] - u[eOffset22 + (-5)];
			u[eOffset03 + (-4)] += u[eOffset22 + (-4)];
			u[eOffset03 + (-5)] += u[eOffset22 + (-5)];
			u[eOffset22 + (-4)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-5)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-6)] - u[eOffset22 + (-6)];
			k01_21 = u[eOffset03 + (-7)] - u[eOffset22 + (-7)];
			u[eOffset03 + (-6)] += u[eOffset22 + (-6)];
			u[eOffset03 + (-7)] += u[eOffset22 + (-7)];
			u[eOffset22 + (-6)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-7)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		let d03 = n2 - 1 - n8 * 3;
		let aOffset5 = 0;
		let eOffset04 = d03;
		let eOffset23 = d03 + -(n >> 4);
		let i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			let k00_20 = u[eOffset04] - u[eOffset23];
			let k01_21 = u[eOffset04 + (-1)] - u[eOffset23 + (-1)];
			u[eOffset04] += u[eOffset23];
			u[eOffset04 + (-1)] += u[eOffset23 + (-1)];
			u[eOffset23] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-1)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-2)] - u[eOffset23 + (-2)];
			k01_21 = u[eOffset04 + (-3)] - u[eOffset23 + (-3)];
			u[eOffset04 + (-2)] += u[eOffset23 + (-2)];
			u[eOffset04 + (-3)] += u[eOffset23 + (-3)];
			u[eOffset23 + (-2)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-3)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-4)] - u[eOffset23 + (-4)];
			k01_21 = u[eOffset04 + (-5)] - u[eOffset23 + (-5)];
			u[eOffset04 + (-4)] += u[eOffset23 + (-4)];
			u[eOffset04 + (-5)] += u[eOffset23 + (-5)];
			u[eOffset23 + (-4)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-5)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-6)] - u[eOffset23 + (-6)];
			k01_21 = u[eOffset04 + (-7)] - u[eOffset23 + (-7)];
			u[eOffset04 + (-6)] += u[eOffset23 + (-6)];
			u[eOffset04 + (-7)] += u[eOffset23 + (-7)];
			u[eOffset23 + (-6)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-7)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		let _g = 2;
		let _g1 = ld - 3 >> 1;
		while(_g < _g1) {
			let l = _g++;
			let k0 = n >> l + 2;
			let k0_2 = k0 >> 1;
			let lim = 1 << l + 1;
			let _g1 = 0;
			let _g2 = lim;
			while(_g1 < _g2) {
				let i = _g1++;
				let d0 = n2 - 1 - k0 * i;
				let k1 = 1 << l + 3;
				let aOffset = 0;
				let eOffset0 = d0;
				let eOffset2 = d0 + -k0_2;
				let i1 = (n >> l + 4 >> 2) + 1;
				while(--i1 > 0) {
					let k00_20 = u[eOffset0] - u[eOffset2];
					let k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
					u[eOffset0] += u[eOffset2];
					u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
					u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
					k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
					u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
					u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
					u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
					k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
					u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
					u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
					u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
					k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
					u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
					u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
					u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					eOffset0 -= 8;
					eOffset2 -= 8;
					aOffset += k1;
				}
			}
		}
		let _g2 = ld - 3 >> 1;
		let _g3 = ld - 6;
		while(_g2 < _g3) {
			let l = _g2++;
			let k0 = n >> l + 2;
			let k1 = 1 << l + 3;
			let k0_2 = k0 >> 1;
			let rlim = n >> l + 6;
			let lim = 1 << l + 1;
			let aOffset = 0;
			let i_off = n2 - 1;
			let r = rlim + 1;
			while(--r > 0) {
				let A0 = a[aOffset];
				let A1 = a[aOffset + 1];
				let A2 = a[aOffset + k1];
				let A3 = a[aOffset + k1 + 1];
				let A4 = a[aOffset + k1 * 2];
				let A5 = a[aOffset + k1 * 2 + 1];
				let A6 = a[aOffset + k1 * 3];
				let A7 = a[aOffset + k1 * 3 + 1];
				let eeOffset0 = i_off;
				let eeOffset2 = i_off + -k0_2;
				let i = lim + 1;
				while(--i > 0) {
					let k00 = u[eeOffset0] - u[eeOffset2];
					let k11 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
					u[eeOffset0] += u[eeOffset2];
					u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
					u[eeOffset2] = k00 * A0 - k11 * A1;
					u[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
					k00 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
					k11 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
					u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
					u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
					u[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
					u[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
					k00 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
					k11 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
					u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
					u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
					u[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
					u[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
					k00 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
					k11 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
					u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
					u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
					u[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
					u[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
					eeOffset0 -= k0;
					eeOffset2 -= k0;
				}
				aOffset += k1 * 4;
				i_off -= 8;
			}
		}
		let i_off2 = n2 - 1;
		let A2 = a[n >> 3];
		let zOffset = i_off2;
		let baseOffset = i_off2 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			let t0 = u[zOffset];
			let t1 = u[zOffset + (-8)];
			u[zOffset + (-8)] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + (-1)];
			t1 = u[zOffset + (-9)];
			u[zOffset + (-9)] = t0 - t1;
			u[zOffset + (-1)] = t0 + t1;
			t0 = u[zOffset + (-2)];
			t1 = u[zOffset + (-10)];
			let k00 = t0 - t1;
			u[zOffset + (-2)] = t0 + t1;
			t0 = u[zOffset + (-3)];
			t1 = u[zOffset + (-11)];
			let k11 = t0 - t1;
			u[zOffset + (-3)] = t0 + t1;
			u[zOffset + (-10)] = (k00 + k11) * A2;
			u[zOffset + (-11)] = (k11 - k00) * A2;
			t0 = u[zOffset + (-4)];
			t1 = u[zOffset + (-12)];
			k00 = t1 - t0;
			u[zOffset + (-4)] = t0 + t1;
			t0 = u[zOffset + (-5)];
			t1 = u[zOffset + (-13)];
			k11 = t0 - t1;
			u[zOffset + (-5)] = t0 + t1;
			u[zOffset + (-12)] = k11;
			u[zOffset + (-13)] = k00;
			t0 = u[zOffset + (-6)];
			t1 = u[zOffset + (-14)];
			k00 = t1 - t0;
			u[zOffset + (-6)] = t0 + t1;
			t0 = u[zOffset + (-7)];
			t1 = u[zOffset + (-15)];
			k11 = t0 - t1;
			u[zOffset + (-7)] = t0 + t1;
			u[zOffset + (-14)] = (k00 + k11) * A2;
			u[zOffset + (-15)] = (k00 - k11) * A2;
			let t01 = u[zOffset];
			let t11 = u[zOffset + (-4)];
			let k001 = t01 - t11;
			let y0 = t01 + t11;
			t01 = u[zOffset + (-2)];
			t11 = u[zOffset + (-6)];
			let y2 = t01 + t11;
			let k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + (-2)] = y0 - y2;
			let k33 = u[zOffset + (-3)] - u[zOffset + (-7)];
			u[zOffset + (-4)] = k001 + k33;
			u[zOffset + (-6)] = k001 - k33;
			t01 = u[zOffset + (-1)];
			t11 = u[zOffset + (-5)];
			let k111 = t01 - t11;
			let y1 = t01 + t11;
			let y3 = u[zOffset + (-3)] + u[zOffset + (-7)];
			u[zOffset + (-1)] = y1 + y3;
			u[zOffset + (-3)] = y1 - y3;
			u[zOffset + (-5)] = k111 - k22;
			u[zOffset + (-7)] = k111 + k22;
			let zOffset1 = zOffset - 8;
			let t02 = u[zOffset1];
			let t12 = u[zOffset1 + (-4)];
			let k002 = t02 - t12;
			let y01 = t02 + t12;
			t02 = u[zOffset1 + (-2)];
			t12 = u[zOffset1 + (-6)];
			let y21 = t02 + t12;
			let k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + (-2)] = y01 - y21;
			let k331 = u[zOffset1 + (-3)] - u[zOffset1 + (-7)];
			u[zOffset1 + (-4)] = k002 + k331;
			u[zOffset1 + (-6)] = k002 - k331;
			t02 = u[zOffset1 + (-1)];
			t12 = u[zOffset1 + (-5)];
			let k112 = t02 - t12;
			let y11 = t02 + t12;
			let y31 = u[zOffset1 + (-3)] + u[zOffset1 + (-7)];
			u[zOffset1 + (-1)] = y11 + y31;
			u[zOffset1 + (-3)] = y11 - y31;
			u[zOffset1 + (-5)] = k112 - k221;
			u[zOffset1 + (-7)] = k112 + k221;
			zOffset -= 16;
		}
		let brOffset = 0;
		let dOffset01 = n4 - 4;
		let dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			let k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		let cOffset = 0;
		let dOffset2 = 0;
		let eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			let a02 = v[dOffset2] - v[eOffset3 + 2];
			let a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			let b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			let b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			let b2 = v[dOffset2] + v[eOffset3 + 2];
			let b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		let bOffset = n2 - 8;
		let eOffset4 = n2 - 8;
		let dOffset02 = 0;
		let dOffset12 = n2 - 4;
		let dOffset21 = n2;
		let dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			let p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			let p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			let p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			let p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	static step3Iter0Loop(n,e,i_off,k_off,a) {
		let eeOffset0 = i_off;
		let eeOffset2 = i_off + k_off;
		let aOffset = 0;
		let i = (n >> 2) + 1;
		while(--i > 0) {
			let k00_20 = e[eeOffset0] - e[eeOffset2];
			let k01_21 = e[eeOffset0 + (-1)] - e[eeOffset2 + (-1)];
			e[eeOffset0] += e[eeOffset2];
			e[eeOffset0 + (-1)] += e[eeOffset2 + (-1)];
			e[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = e[eeOffset0 + (-2)] - e[eeOffset2 + (-2)];
			k01_21 = e[eeOffset0 + (-3)] - e[eeOffset2 + (-3)];
			e[eeOffset0 + (-2)] += e[eeOffset2 + (-2)];
			e[eeOffset0 + (-3)] += e[eeOffset2 + (-3)];
			e[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = e[eeOffset0 + (-4)] - e[eeOffset2 + (-4)];
			k01_21 = e[eeOffset0 + (-5)] - e[eeOffset2 + (-5)];
			e[eeOffset0 + (-4)] += e[eeOffset2 + (-4)];
			e[eeOffset0 + (-5)] += e[eeOffset2 + (-5)];
			e[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = e[eeOffset0 + (-6)] - e[eeOffset2 + (-6)];
			k01_21 = e[eeOffset0 + (-7)] - e[eeOffset2 + (-7)];
			e[eeOffset0 + (-6)] += e[eeOffset2 + (-6)];
			e[eeOffset0 + (-7)] += e[eeOffset2 + (-7)];
			e[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
	}
	static step3InnerRLoop(lim,e,d0,k_off,a,k1) {
		let aOffset = 0;
		let eOffset0 = d0;
		let eOffset2 = d0 + k_off;
		let i = (lim >> 2) + 1;
		while(--i > 0) {
			let k00_20 = e[eOffset0] - e[eOffset2];
			let k01_21 = e[eOffset0 + (-1)] - e[eOffset2 + (-1)];
			e[eOffset0] += e[eOffset2];
			e[eOffset0 + (-1)] += e[eOffset2 + (-1)];
			e[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += k1;
			k00_20 = e[eOffset0 + (-2)] - e[eOffset2 + (-2)];
			k01_21 = e[eOffset0 + (-3)] - e[eOffset2 + (-3)];
			e[eOffset0 + (-2)] += e[eOffset2 + (-2)];
			e[eOffset0 + (-3)] += e[eOffset2 + (-3)];
			e[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += k1;
			k00_20 = e[eOffset0 + (-4)] - e[eOffset2 + (-4)];
			k01_21 = e[eOffset0 + (-5)] - e[eOffset2 + (-5)];
			e[eOffset0 + (-4)] += e[eOffset2 + (-4)];
			e[eOffset0 + (-5)] += e[eOffset2 + (-5)];
			e[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += k1;
			k00_20 = e[eOffset0 + (-6)] - e[eOffset2 + (-6)];
			k01_21 = e[eOffset0 + (-7)] - e[eOffset2 + (-7)];
			e[eOffset0 + (-6)] += e[eOffset2 + (-6)];
			e[eOffset0 + (-7)] += e[eOffset2 + (-7)];
			e[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			e[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += k1;
		}
	}
	static step3InnerSLoop(n,e,i_off,k_off,a,aOffset0,aOffset1,k0) {
		let A0 = a[aOffset0];
		let A1 = a[aOffset0 + 1];
		let A2 = a[aOffset0 + aOffset1];
		let A3 = a[aOffset0 + aOffset1 + 1];
		let A4 = a[aOffset0 + aOffset1 * 2];
		let A5 = a[aOffset0 + aOffset1 * 2 + 1];
		let A6 = a[aOffset0 + aOffset1 * 3];
		let A7 = a[aOffset0 + aOffset1 * 3 + 1];
		let eeOffset0 = i_off;
		let eeOffset2 = i_off + k_off;
		let i = n + 1;
		while(--i > 0) {
			let k00 = e[eeOffset0] - e[eeOffset2];
			let k11 = e[eeOffset0 + (-1)] - e[eeOffset2 + (-1)];
			e[eeOffset0] += e[eeOffset2];
			e[eeOffset0 + (-1)] += e[eeOffset2 + (-1)];
			e[eeOffset2] = k00 * A0 - k11 * A1;
			e[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
			k00 = e[eeOffset0 + (-2)] - e[eeOffset2 + (-2)];
			k11 = e[eeOffset0 + (-3)] - e[eeOffset2 + (-3)];
			e[eeOffset0 + (-2)] += e[eeOffset2 + (-2)];
			e[eeOffset0 + (-3)] += e[eeOffset2 + (-3)];
			e[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
			e[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
			k00 = e[eeOffset0 + (-4)] - e[eeOffset2 + (-4)];
			k11 = e[eeOffset0 + (-5)] - e[eeOffset2 + (-5)];
			e[eeOffset0 + (-4)] += e[eeOffset2 + (-4)];
			e[eeOffset0 + (-5)] += e[eeOffset2 + (-5)];
			e[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
			e[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
			k00 = e[eeOffset0 + (-6)] - e[eeOffset2 + (-6)];
			k11 = e[eeOffset0 + (-7)] - e[eeOffset2 + (-7)];
			e[eeOffset0 + (-6)] += e[eeOffset2 + (-6)];
			e[eeOffset0 + (-7)] += e[eeOffset2 + (-7)];
			e[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
			e[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
			eeOffset0 -= k0;
			eeOffset2 -= k0;
		}
	}
	static iter54(e,zOffset) {
		let t0 = e[zOffset];
		let t1 = e[zOffset + (-4)];
		let k00 = t0 - t1;
		let y0 = t0 + t1;
		t0 = e[zOffset + (-2)];
		t1 = e[zOffset + (-6)];
		let y2 = t0 + t1;
		let k22 = t0 - t1;
		e[zOffset] = y0 + y2;
		e[zOffset + (-2)] = y0 - y2;
		let k33 = e[zOffset + (-3)] - e[zOffset + (-7)];
		e[zOffset + (-4)] = k00 + k33;
		e[zOffset + (-6)] = k00 - k33;
		t0 = e[zOffset + (-1)];
		t1 = e[zOffset + (-5)];
		let k11 = t0 - t1;
		let y1 = t0 + t1;
		let y3 = e[zOffset + (-3)] + e[zOffset + (-7)];
		e[zOffset + (-1)] = y1 + y3;
		e[zOffset + (-3)] = y1 - y3;
		e[zOffset + (-5)] = k11 - k22;
		e[zOffset + (-7)] = k11 + k22;
	}
	static step3InnerSLoopLd654(n,e,i_off,a,baseN) {
		let A2 = a[baseN >> 3];
		let zOffset = i_off;
		let baseOffset = i_off - 16 * n;
		while(zOffset > baseOffset) {
			let t0 = e[zOffset];
			let t1 = e[zOffset + (-8)];
			e[zOffset + (-8)] = t0 - t1;
			e[zOffset] = t0 + t1;
			t0 = e[zOffset + (-1)];
			t1 = e[zOffset + (-9)];
			e[zOffset + (-9)] = t0 - t1;
			e[zOffset + (-1)] = t0 + t1;
			t0 = e[zOffset + (-2)];
			t1 = e[zOffset + (-10)];
			let k00 = t0 - t1;
			e[zOffset + (-2)] = t0 + t1;
			t0 = e[zOffset + (-3)];
			t1 = e[zOffset + (-11)];
			let k11 = t0 - t1;
			e[zOffset + (-3)] = t0 + t1;
			e[zOffset + (-10)] = (k00 + k11) * A2;
			e[zOffset + (-11)] = (k11 - k00) * A2;
			t0 = e[zOffset + (-4)];
			t1 = e[zOffset + (-12)];
			k00 = t1 - t0;
			e[zOffset + (-4)] = t0 + t1;
			t0 = e[zOffset + (-5)];
			t1 = e[zOffset + (-13)];
			k11 = t0 - t1;
			e[zOffset + (-5)] = t0 + t1;
			e[zOffset + (-12)] = k11;
			e[zOffset + (-13)] = k00;
			t0 = e[zOffset + (-6)];
			t1 = e[zOffset + (-14)];
			k00 = t1 - t0;
			e[zOffset + (-6)] = t0 + t1;
			t0 = e[zOffset + (-7)];
			t1 = e[zOffset + (-15)];
			k11 = t0 - t1;
			e[zOffset + (-7)] = t0 + t1;
			e[zOffset + (-14)] = (k00 + k11) * A2;
			e[zOffset + (-15)] = (k00 - k11) * A2;
			let t01 = e[zOffset];
			let t11 = e[zOffset + (-4)];
			let k001 = t01 - t11;
			let y0 = t01 + t11;
			t01 = e[zOffset + (-2)];
			t11 = e[zOffset + (-6)];
			let y2 = t01 + t11;
			let k22 = t01 - t11;
			e[zOffset] = y0 + y2;
			e[zOffset + (-2)] = y0 - y2;
			let k33 = e[zOffset + (-3)] - e[zOffset + (-7)];
			e[zOffset + (-4)] = k001 + k33;
			e[zOffset + (-6)] = k001 - k33;
			t01 = e[zOffset + (-1)];
			t11 = e[zOffset + (-5)];
			let k111 = t01 - t11;
			let y1 = t01 + t11;
			let y3 = e[zOffset + (-3)] + e[zOffset + (-7)];
			e[zOffset + (-1)] = y1 + y3;
			e[zOffset + (-3)] = y1 - y3;
			e[zOffset + (-5)] = k111 - k22;
			e[zOffset + (-7)] = k111 + k22;
			let zOffset1 = zOffset - 8;
			let t02 = e[zOffset1];
			let t12 = e[zOffset1 + (-4)];
			let k002 = t02 - t12;
			let y01 = t02 + t12;
			t02 = e[zOffset1 + (-2)];
			t12 = e[zOffset1 + (-6)];
			let y21 = t02 + t12;
			let k221 = t02 - t12;
			e[zOffset1] = y01 + y21;
			e[zOffset1 + (-2)] = y01 - y21;
			let k331 = e[zOffset1 + (-3)] - e[zOffset1 + (-7)];
			e[zOffset1 + (-4)] = k002 + k331;
			e[zOffset1 + (-6)] = k002 - k331;
			t02 = e[zOffset1 + (-1)];
			t12 = e[zOffset1 + (-5)];
			let k112 = t02 - t12;
			let y11 = t02 + t12;
			let y31 = e[zOffset1 + (-3)] + e[zOffset1 + (-7)];
			e[zOffset1 + (-1)] = y11 + y31;
			e[zOffset1 + (-3)] = y11 - y31;
			e[zOffset1 + (-5)] = k112 - k221;
			e[zOffset1 + (-7)] = k112 + k221;
			zOffset -= 16;
		}
	}
}
$hxClasses["kha.audio2.ogg.tools.Mdct"] = kha_audio2_ogg_tools_Mdct;
kha_audio2_ogg_tools_Mdct.__name__ = "kha.audio2.ogg.tools.Mdct";
class kha_audio2_ogg_vorbis_Reader {
	constructor(input,seekFunc,inputLength) {
		this.seekFunc = seekFunc;
		this.inputLength = inputLength;
		this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
		this.decoder.setupSampleNumber(seekFunc,inputLength);
		this.loopStart = this.get_header().comment.get_loopStart();
		this.loopLength = this.get_header().comment.get_loopLength();
	}
	get_header() {
		return this.decoder.header;
	}
	get_totalSample() {
		return this.decoder.totalSample;
	}
	get_totalMillisecond() {
		let samples = this.decoder.totalSample;
		let b = this.get_header().sampleRate;
		return UInt.toFloat(samples) / UInt.toFloat(b) * 1000;
	}
	get_currentSample() {
		return this.decoder.currentSample;
	}
	set_currentSample(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	get_currentMillisecond() {
		let samples = this.get_currentSample();
		let b = this.get_header().sampleRate;
		return UInt.toFloat(samples) / UInt.toFloat(b) * 1000;
	}
	set_currentMillisecond(value) {
		this.set_currentSample(Math.floor(UInt.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	read(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	clone() {
		let reader = Object.create(kha_audio2_ogg_vorbis_Reader.prototype);
		reader.seekFunc = this.seekFunc;
		reader.inputLength = this.inputLength;
		reader.decoder = this.decoder.clone(this.seekFunc);
		reader.loopStart = this.loopStart;
		reader.loopLength = this.loopLength;
		return reader;
	}
	sampleToMillisecond(samples) {
		let b = this.get_header().sampleRate;
		return UInt.toFloat(samples) / UInt.toFloat(b) * 1000;
	}
	millisecondToSample(millseconds) {
		return Math.floor(UInt.toFloat(this.get_header().sampleRate) * (millseconds / 1000));
	}
	static openFromBytes(bytes) {
		let input = new haxe_io_BytesInput(bytes);
		let bytes1 = input;
		return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
			kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
		},bytes.length);
	}
	static seekBytes(bytes,pos) {
		bytes.set_position(pos);
	}
	static readAll(bytes,output,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		let input = new haxe_io_BytesInput(bytes);
		let decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
		let bytes1 = input;
		decoder.setupSampleNumber(function(pos) {
			kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
		},bytes.length);
		let header = decoder.header;
		let count = 0;
		let bufferSize = 4096;
		let buffer = kha_arrays_Float32Array._new(bufferSize * header.channel);
		while(true) {
			let n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
			let _g = 0;
			let _g1 = n * header.channel;
			while(_g < _g1) {
				let i = _g++;
				output.writeFloat(buffer.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN));
			}
			if(n == 0) {
				break;
			}
			count += n;
		}
		return decoder.header;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = "kha.audio2.ogg.vorbis.Reader";
Object.assign(kha_audio2_ogg_vorbis_Reader.prototype, {
	__class__: kha_audio2_ogg_vorbis_Reader
	,decoder: null
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,__properties__: {set_currentMillisecond: "set_currentMillisecond",get_currentMillisecond: "get_currentMillisecond",set_currentSample: "set_currentSample",get_currentSample: "get_currentSample",get_totalMillisecond: "get_totalMillisecond",get_totalSample: "get_totalSample",get_header: "get_header"}
});
class kha_audio2_ogg_vorbis_VorbisDecodeState {
	constructor(input) {
		this.nextSeg = 0;
		this.firstDecode = false;
		this.bytesInSeg = 0;
		this.validBits = 0;
		this.input = input;
		this.inputPosition = 0;
		this.page = new kha_audio2_ogg_vorbis_data_Page();
		kha_audio2_ogg_tools_Crc32.init();
	}
	setup(loc0,loc1) {
		this.inputPosition += 1;
		let segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		let this1 = new Array(segmentCount);
		let vec = this1;
		let _g = 0;
		let _g1 = segmentCount;
		while(_g < _g1) {
			let i = _g++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			let i = segmentCount - 1;
			while(i >= 0) {
				if(this.segments[i] < 255) {
					break;
				}
				if(i >= 0) {
					this.endSegWithKnownLoc = i;
					this.knownLocForPacket = loc0;
				}
				--i;
			}
		}
		if(this.firstDecode) {
			let i = 0;
			let len = 0;
			let p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			let _g = 0;
			let _g1 = segmentCount;
			while(_g < _g1) {
				let i = _g++;
				len += this.segments[i];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	clone(seekFunc) {
		let state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	next() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( _g ) {
				let _g1 = haxe_Exception.caught(_g).unwrap();
				if(((_g1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					let e = _g1;
					this.lastSeg = true;
					this.error = e;
					return 0;
				} else {
					throw _g;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		let len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		if(this.bytesInSeg != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 184, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
		}
		this.bytesInSeg = len;
		return len;
	}
	startPacket() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	maybeStartPacket() {
		if(this.nextSeg == -1) {
			let eof = false;
			let x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					eof = true;
					x = 0;
				} else {
					throw _g;
				}
			}
			if(eof) {
				return false;
			}
			let tmp;
			let tmp1;
			let tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	readBits(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					let z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			let z = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z;
		}
	}
	readPacketRaw() {
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			return -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			return this.input.readByte();
		}
	}
	readPacket() {
		let x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		return x;
	}
	flushPacket() {
		while(this.bytesInSeg != 0 || !this.lastSeg && this.next() != 0) {
			this.bytesInSeg--;
			this.inputPosition += 1;
			this.input.readByte();
		}
	}
	vorbisValidate() {
		let header = new haxe_io_Bytes(new ArrayBuffer(6));
		let x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		header.b[0] = x;
		let x1;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x1 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x1 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[1] = x1;
		let x2;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x2 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x2 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[2] = x2;
		let x3;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x3 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x3 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[3] = x3;
		let x4;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x4 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x4 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[4] = x4;
		let x5;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x5 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x5 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[5] = x5;
		if(header.toString() != "vorbis") {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
	}
	firstPageValidate() {
		if(this.segments.length != 1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	startFirstDecode() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	capturePattern() {
		let tmp;
		let tmp1;
		let tmp2;
		this.inputPosition += 1;
		if(this.input.readByte() == 79) {
			this.inputPosition += 1;
			tmp2 = this.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			this.inputPosition += 1;
			tmp1 = this.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			this.inputPosition += 1;
			tmp = this.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
	}
	skip(len) {
		this.inputPosition += len;
		let this1 = new Array(len);
		let vec = this1;
		let _g = 0;
		let _g1 = len;
		while(_g < _g1) {
			let i = _g++;
			vec[i] = this.input.readByte();
		}
	}
	prepHuffman() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	decode(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		let i = c.fastHuffman[this.acc & 1023];
		let val;
		if(i >= 0) {
			let l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = this.decodeScalarRaw(c);
		}
		if(c.sparse) {
			val = c.sortedValues[val];
		}
		return val;
	}
	decodeRaw(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		let i = c.fastHuffman[this.acc & 1023];
		if(i >= 0) {
			let l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				return -1;
			} else {
				return i;
			}
		} else {
			return this.decodeScalarRaw(c);
		}
	}
	isLastByte() {
		if(this.bytesInSeg == 0) {
			return this.lastSeg;
		} else {
			return false;
		}
	}
	finishDecodePacket(previousLength,n,r) {
		let left = r.left.start;
		let currentLocValid = false;
		let n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			let tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				let currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					let len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	readInt32() {
		this.inputPosition += 4;
		return this.input.readInt32();
	}
	readByte() {
		this.inputPosition += 1;
		return this.input.readByte();
	}
	read(n) {
		this.inputPosition += n;
		let this1 = new Array(n);
		let vec = this1;
		let _g = 0;
		let _g1 = n;
		while(_g < _g1) {
			let i = _g++;
			vec[i] = this.input.readByte();
		}
		return vec;
	}
	readBytes(n) {
		this.inputPosition += n;
		return this.input.read(n);
	}
	readString(n) {
		this.inputPosition += n;
		return this.input.readString(n);
	}
	getSampleNumber(seekFunc,inputLength) {
		let restoreOffset = this.inputPosition;
		let previousSafe = UInt.gte(inputLength,65536) && UInt.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		let end = 0;
		let last = false;
		let _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			let e = _g.end;
			let l = _g.last;
			end = e;
			last = l;
			break;
		case 1:
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		let lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			let _g = this.findPage(seekFunc,inputLength);
			switch(_g._hx_index) {
			case 0:
				let e = _g.end;
				let l = _g.last;
				end = e;
				last = l;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		let this1 = new Array(6);
		let vec = this1;
		let _g1 = 0;
		let _g2 = 6;
		while(_g1 < _g2) {
			let i = _g1++;
			vec[i] = this.input.readByte();
		}
		let vorbisHeader = vec;
		this.inputPosition += 4;
		let lo = this.input.readInt32();
		this.inputPosition += 4;
		let hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	forcePageResync() {
		this.nextSeg = -1;
	}
	setInputOffset(seekFunc,n) {
		seekFunc(this.inputPosition = n);
	}
	findPage(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				let n = this.input.readByte();
				if(n == 79) {
					let retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					let tmp;
					let tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					let this1 = new Array(27);
					let header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					let goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					let crc = 0;
					let _g = 0;
					while(_g < 27) {
						let i = _g++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i] ^ crc >>> 24];
					}
					let len = 0;
					try {
						let _g = 0;
						let _g1 = header[26];
						while(_g < _g1) {
							let i = _g++;
							this.inputPosition += 1;
							let s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						let _g2 = 0;
						let _g3 = len;
						while(_g2 < _g3) {
							let i = _g2++;
							this.inputPosition += 1;
							let byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( _g ) {
						if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw _g;
						}
					}
					if(crc == goal) {
						let end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( _g ) {
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw _g;
			}
		}
	}
	analyzePage(seekFunc,h) {
		let z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		let this1 = new Array(255);
		let packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		let this2 = new Array(27);
		let vec = this2;
		let _g = 0;
		let _g1 = 27;
		while(_g < _g1) {
			let i = _g++;
			vec[i] = this.input.readByte();
		}
		let pageHeader = vec;
		if(!(pageHeader[0] == 79 && pageHeader[1] == 103 && pageHeader[2] == 103 && pageHeader[3] == 83)) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 661, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "analyzePage"}));
		}
		let n = pageHeader[26];
		this.inputPosition += n;
		let this3 = new Array(n);
		let vec1 = this3;
		let _g2 = 0;
		let _g3 = n;
		while(_g2 < _g3) {
			let i = _g2++;
			vec1[i] = this.input.readByte();
		}
		let lacing = vec1;
		let len = 0;
		let _g4 = 0;
		let _g5 = pageHeader[26];
		while(_g4 < _g5) {
			let i = _g4++;
			len += lacing[i];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		let numPacket = 0;
		let packetStart = (pageHeader[5] & 1) == 0;
		let modeCount = h.modes.length;
		let _g6 = 0;
		let _g7 = pageHeader[26];
		while(_g6 < _g7) {
			let i = _g6++;
			if(packetStart) {
				if(lacing[i] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				let n = this.input.readByte();
				if((n & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n >>= 1;
				let n1 = modeCount - 1;
				let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				let b = n1 < 16384 ? n1 < 16 ? log2_4[n1] : n1 < 512 ? 5 + log2_4[n1 >> 5] : 10 + log2_4[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_4[n1 >> 15] : 20 + log2_4[n1 >> 20] : n1 < 536870912 ? 25 + log2_4[n1 >> 25] : n1 < -2147483648 ? 30 + log2_4[n1 >> 30] : 0;
				n &= (1 << b) - 1;
				if(n >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n].blockflag;
				let len = lacing[i] - 1;
				this.inputPosition += len;
				let this1 = new Array(len);
				let vec = this1;
				let _g = 0;
				let _g1 = len;
				while(_g < _g1) {
					let i = _g++;
					vec[i] = this.input.readByte();
				}
			} else {
				let len = lacing[i];
				this.inputPosition += len;
				let this1 = new Array(len);
				let vec = this1;
				let _g = 0;
				let _g1 = len;
				while(_g < _g1) {
					let i = _g++;
					vec[i] = this.input.readByte();
				}
			}
			packetStart = lacing[i] < 255;
		}
		let samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		let i = numPacket - 2;
		while(i >= 1) {
			--i;
			if(packetType[i]) {
				if(packetType[i + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	decodeScalarRaw(c) {
		this.prepHuffman();
		if(!(c.sortedCodewords != null || c.codewords != null)) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 788, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"}));
		}
		let codewordLengths = c.codewordLengths;
		let codewords = c.codewords;
		let sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			let n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			let code = n >>> 16 | n << 16;
			let x = 0;
			let n1 = c.sortedEntries;
			while(n1 > 1) {
				let m = x + (n1 >> 1);
				if(UInt.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			let len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		if(c.sparse) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 830, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"}));
		}
		let _g = 0;
		let _g1 = c.entries;
		while(_g < _g1) {
			let i = _g++;
			let cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = "kha.audio2.ogg.vorbis.VorbisDecodeState";
Object.assign(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype, {
	__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
	,page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,currentSample: null
	,previousWindow: null
	,previousLength: null
	,finalY: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
});
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__:true,__constructs__:null
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_._hx_name="Found",$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_name:"NotFound",_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.__constructs__ = [kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found,kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound];
class kha_audio2_ogg_vorbis_VorbisDecoder {
	constructor(header,decodeState) {
		this.header = header;
		this.decodeState = decodeState;
		this.totalSample = null;
		this.currentSample = 0;
		this.previousLength = 0;
		let this1 = new Array(header.channel);
		this.channelBuffers = this1;
		let this2 = new Array(header.channel);
		this.previousWindow = this2;
		let this3 = new Array(header.channel);
		this.finalY = this3;
		let _g = 0;
		let _g1 = header.channel;
		while(_g < _g1) {
			let i = _g++;
			let this1 = this.channelBuffers;
			let this2 = new Array(header.blocksize1);
			let vec = this2;
			this1[i] = vec;
			let this3 = this.previousWindow;
			let this4 = new Array(header.blocksize1 / 2 | 0);
			let vec1 = this4;
			this3[i] = vec1;
			this.finalY[i] = [];
		}
		let this4 = new Array(2);
		this.a = this4;
		let this5 = new Array(2);
		this.b = this5;
		let this6 = new Array(2);
		this.c = this6;
		let this7 = new Array(2);
		this.window = this7;
		let this8 = new Array(2);
		this.bitReverseData = this8;
		this.initBlocksize(0,header.blocksize0);
		this.initBlocksize(1,header.blocksize1);
	}
	read(output,samples,channels,sampleRate,useFloat) {
		let b = this.header.sampleRate;
		if((UInt.toFloat(sampleRate) % UInt.toFloat(b) | 0) != 0) {
			throw haxe_Exception.thrown("Unsupported sampleRate : can't convert " + (this.header.sampleRate == null ? "null" : Std.string(UInt.toFloat(this.header.sampleRate))) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw haxe_Exception.thrown("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		let b1 = this.header.sampleRate;
		let sampleRepeat = UInt.toFloat(sampleRate) / UInt.toFloat(b1) | 0;
		let channelRepeat = channels / this.header.channel | 0;
		let n = 0;
		let len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		let index = 0;
		while(n < len) {
			let k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			let _g = this.channelBufferStart;
			let _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				let j = _g++;
				let _g1 = 0;
				let _g2 = sampleRepeat;
				while(_g1 < _g2) {
					let sr = _g1++;
					let _g = 0;
					let _g2 = this.header.channel;
					while(_g < _g2) {
						let i = _g++;
						let _g1 = 0;
						let _g2 = channelRepeat;
						while(_g1 < _g2) {
							let cr = _g1++;
							let value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output.setFloat32(index * 4,value,true);
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		let _g = n;
		let _g1 = len;
		while(_g < _g1) {
			let j = _g++;
			let _g1 = 0;
			let _g2 = sampleRepeat;
			while(_g1 < _g2) {
				let sr = _g1++;
				let _g = 0;
				let _g2 = this.header.channel;
				while(_g < _g2) {
					let i = _g++;
					let _g1 = 0;
					let _g2 = channelRepeat;
					while(_g1 < _g2) {
						let cr = _g1++;
						if(useFloat) {
							output.setFloat32(index * 4,0,true);
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	skipSamples(len) {
		let n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			let k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	setupSampleNumber(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	seek(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		let p0 = this.decodeState.pFirst;
		let p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			let attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				let startOffset = p0.pageEnd;
				let endOffset = p1.afterPreviousPageStart;
				let startSample = p0.lastDecodedSample;
				let endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(UInt.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				let probe = startOffset + Math.floor(UInt.toFloat(endOffset - startOffset) / UInt.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					let probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : UInt.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				let _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g._hx_index) {
				case 0:
					let _g1 = _g.end;
					let _g2 = _g.last;
					break;
				case 1:
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				let q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	seekFrameFromPage(seekFunc,pageStart,firstSample,targetSample) {
		let frame = 0;
		let frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		let leftEnd = 0;
		let leftStart = 0;
		let prevState = null;
		let lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			let initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			let start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			let _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	clone(seekFunc) {
		let decoder = Object.create(kha_audio2_ogg_vorbis_VorbisDecoder.prototype);
		decoder.currentSample = this.currentSample;
		decoder.totalSample = this.totalSample;
		decoder.previousLength = this.previousLength;
		decoder.channelBufferStart = this.channelBufferStart;
		decoder.channelBufferEnd = this.channelBufferEnd;
		decoder.a = this.a;
		decoder.b = this.b;
		decoder.c = this.c;
		decoder.window = this.window;
		decoder.bitReverseData = this.bitReverseData;
		decoder.header = this.header;
		decoder.decodeState = this.decodeState.clone(seekFunc);
		let this1 = new Array(this.header.channel);
		decoder.channelBuffers = this1;
		let this2 = new Array(this.header.channel);
		decoder.previousWindow = this2;
		let this3 = new Array(this.header.channel);
		decoder.finalY = this3;
		let _g = 0;
		let _g1 = this.header.channel;
		while(_g < _g1) {
			let i = _g++;
			decoder.channelBuffers[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.channelBuffers[i]);
			decoder.previousWindow[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.previousWindow[i]);
			decoder.finalY[i] = Lambda.array(this.finalY[i]);
		}
		return decoder;
	}
	ensurePosition(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	getFrameFloat() {
		let result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		let len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	pumpFirstFrame() {
		this.finishFrame(this.decodePacket());
	}
	finishFrame(r) {
		let len = r.len;
		let right = r.right;
		let left = r.left;
		if(this.previousLength != 0) {
			let n = this.previousLength;
			let w = this.getWindow(n);
			let _g = 0;
			let _g1 = this.header.channel;
			while(_g < _g1) {
				let i = _g++;
				let cb = this.channelBuffers[i];
				let pw = this.previousWindow[i];
				let _g1 = 0;
				let _g2 = n;
				while(_g1 < _g2) {
					let j = _g1++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		let prev = this.previousLength;
		this.previousLength = len - right;
		let _g = 0;
		let _g1 = this.header.channel;
		while(_g < _g1) {
			let i = _g++;
			let pw = this.previousWindow[i];
			let cb = this.channelBuffers[i];
			let _g1 = 0;
			let _g2 = len - right;
			while(_g1 < _g2) {
				let j = _g1++;
				pw[j] = cb[right + j];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	getWindow(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 466, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "getWindow"}));
		}
	}
	initBlocksize(bs,n) {
		let n2 = n >> 1;
		let n4 = n >> 2;
		let n8 = n >> 3;
		let this1 = this.a;
		let this2 = new Array(n2);
		this1[bs] = this2;
		let this3 = this.b;
		let this4 = new Array(n2);
		this3[bs] = this4;
		let this5 = this.c;
		let this6 = new Array(n4);
		this5[bs] = this6;
		let this7 = this.window;
		let this8 = new Array(n2);
		this7[bs] = this8;
		let this9 = this.bitReverseData;
		let this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	inverseMdct(buffer,n,blocktype) {
		let bt = blocktype ? 1 : 0;
		let a = this.a[bt];
		let b = this.b[bt];
		let c = this.c[bt];
		let bitReverse = this.bitReverseData[bt];
		let n2 = n >> 1;
		let n4 = n >> 2;
		let n8 = n >> 3;
		let this1 = new Array(n2);
		let buf2 = this1;
		let dOffset = n2 - 2;
		let aaOffset = 0;
		let eOffset = 0;
		let eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		let u = buffer;
		let v = buf2;
		let aaOffset1 = n2 - 8;
		let eOffset0 = n4;
		let eOffset1 = 0;
		let dOffset0 = n4;
		let dOffset1 = 0;
		while(aaOffset1 >= 0) {
			let v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			let v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		let ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		let i_off = n2 - 1 - n4 * 0;
		let eeOffset0 = i_off;
		let eeOffset2 = i_off + -(n >> 3);
		let aOffset = 0;
		let i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			let k00_20 = u[eeOffset0] - u[eeOffset2];
			let k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
			u[eeOffset0] += u[eeOffset2];
			u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
			k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
			u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
			u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
			u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
			k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
			u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
			u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
			u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
			k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
			u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
			u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
			u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		let i_off1 = n2 - 1 - n4;
		let eeOffset01 = i_off1;
		let eeOffset21 = i_off1 + -(n >> 3);
		let aOffset1 = 0;
		let i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			let k00_20 = u[eeOffset01] - u[eeOffset21];
			let k01_21 = u[eeOffset01 + (-1)] - u[eeOffset21 + (-1)];
			u[eeOffset01] += u[eeOffset21];
			u[eeOffset01 + (-1)] += u[eeOffset21 + (-1)];
			u[eeOffset21] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-1)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-2)] - u[eeOffset21 + (-2)];
			k01_21 = u[eeOffset01 + (-3)] - u[eeOffset21 + (-3)];
			u[eeOffset01 + (-2)] += u[eeOffset21 + (-2)];
			u[eeOffset01 + (-3)] += u[eeOffset21 + (-3)];
			u[eeOffset21 + (-2)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-3)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-4)] - u[eeOffset21 + (-4)];
			k01_21 = u[eeOffset01 + (-5)] - u[eeOffset21 + (-5)];
			u[eeOffset01 + (-4)] += u[eeOffset21 + (-4)];
			u[eeOffset01 + (-5)] += u[eeOffset21 + (-5)];
			u[eeOffset21 + (-4)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-5)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_20 = u[eeOffset01 + (-6)] - u[eeOffset21 + (-6)];
			k01_21 = u[eeOffset01 + (-7)] - u[eeOffset21 + (-7)];
			u[eeOffset01 + (-6)] += u[eeOffset21 + (-6)];
			u[eeOffset01 + (-7)] += u[eeOffset21 + (-7)];
			u[eeOffset21 + (-6)] = k00_20 * a[aOffset1] - k01_21 * a[aOffset1 + 1];
			u[eeOffset21 + (-7)] = k01_21 * a[aOffset1] + k00_20 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		let d0 = n2 - 1 - n8 * 0;
		let aOffset2 = 0;
		let eOffset01 = d0;
		let eOffset2 = d0 + -(n >> 4);
		let i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			let k00_20 = u[eOffset01] - u[eOffset2];
			let k01_21 = u[eOffset01 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset01] += u[eOffset2];
			u[eOffset01 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset01 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset01 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset01 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset01 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset01 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset01 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_20 = u[eOffset01 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset01 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset01 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset01 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset2] - k01_21 * a[aOffset2 + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset2] + k00_20 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		let d01 = n2 - 1 - n8;
		let aOffset3 = 0;
		let eOffset02 = d01;
		let eOffset21 = d01 + -(n >> 4);
		let i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			let k00_20 = u[eOffset02] - u[eOffset21];
			let k01_21 = u[eOffset02 + (-1)] - u[eOffset21 + (-1)];
			u[eOffset02] += u[eOffset21];
			u[eOffset02 + (-1)] += u[eOffset21 + (-1)];
			u[eOffset21] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-1)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-2)] - u[eOffset21 + (-2)];
			k01_21 = u[eOffset02 + (-3)] - u[eOffset21 + (-3)];
			u[eOffset02 + (-2)] += u[eOffset21 + (-2)];
			u[eOffset02 + (-3)] += u[eOffset21 + (-3)];
			u[eOffset21 + (-2)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-3)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-4)] - u[eOffset21 + (-4)];
			k01_21 = u[eOffset02 + (-5)] - u[eOffset21 + (-5)];
			u[eOffset02 + (-4)] += u[eOffset21 + (-4)];
			u[eOffset02 + (-5)] += u[eOffset21 + (-5)];
			u[eOffset21 + (-4)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-5)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_20 = u[eOffset02 + (-6)] - u[eOffset21 + (-6)];
			k01_21 = u[eOffset02 + (-7)] - u[eOffset21 + (-7)];
			u[eOffset02 + (-6)] += u[eOffset21 + (-6)];
			u[eOffset02 + (-7)] += u[eOffset21 + (-7)];
			u[eOffset21 + (-6)] = k00_20 * a[aOffset3] - k01_21 * a[aOffset3 + 1];
			u[eOffset21 + (-7)] = k01_21 * a[aOffset3] + k00_20 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		let d02 = n2 - 1 - n8 * 2;
		let aOffset4 = 0;
		let eOffset03 = d02;
		let eOffset22 = d02 + -(n >> 4);
		let i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			let k00_20 = u[eOffset03] - u[eOffset22];
			let k01_21 = u[eOffset03 + (-1)] - u[eOffset22 + (-1)];
			u[eOffset03] += u[eOffset22];
			u[eOffset03 + (-1)] += u[eOffset22 + (-1)];
			u[eOffset22] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-1)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-2)] - u[eOffset22 + (-2)];
			k01_21 = u[eOffset03 + (-3)] - u[eOffset22 + (-3)];
			u[eOffset03 + (-2)] += u[eOffset22 + (-2)];
			u[eOffset03 + (-3)] += u[eOffset22 + (-3)];
			u[eOffset22 + (-2)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-3)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-4)] - u[eOffset22 + (-4)];
			k01_21 = u[eOffset03 + (-5)] - u[eOffset22 + (-5)];
			u[eOffset03 + (-4)] += u[eOffset22 + (-4)];
			u[eOffset03 + (-5)] += u[eOffset22 + (-5)];
			u[eOffset22 + (-4)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-5)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_20 = u[eOffset03 + (-6)] - u[eOffset22 + (-6)];
			k01_21 = u[eOffset03 + (-7)] - u[eOffset22 + (-7)];
			u[eOffset03 + (-6)] += u[eOffset22 + (-6)];
			u[eOffset03 + (-7)] += u[eOffset22 + (-7)];
			u[eOffset22 + (-6)] = k00_20 * a[aOffset4] - k01_21 * a[aOffset4 + 1];
			u[eOffset22 + (-7)] = k01_21 * a[aOffset4] + k00_20 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		let d03 = n2 - 1 - n8 * 3;
		let aOffset5 = 0;
		let eOffset04 = d03;
		let eOffset23 = d03 + -(n >> 4);
		let i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			let k00_20 = u[eOffset04] - u[eOffset23];
			let k01_21 = u[eOffset04 + (-1)] - u[eOffset23 + (-1)];
			u[eOffset04] += u[eOffset23];
			u[eOffset04 + (-1)] += u[eOffset23 + (-1)];
			u[eOffset23] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-1)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-2)] - u[eOffset23 + (-2)];
			k01_21 = u[eOffset04 + (-3)] - u[eOffset23 + (-3)];
			u[eOffset04 + (-2)] += u[eOffset23 + (-2)];
			u[eOffset04 + (-3)] += u[eOffset23 + (-3)];
			u[eOffset23 + (-2)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-3)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-4)] - u[eOffset23 + (-4)];
			k01_21 = u[eOffset04 + (-5)] - u[eOffset23 + (-5)];
			u[eOffset04 + (-4)] += u[eOffset23 + (-4)];
			u[eOffset04 + (-5)] += u[eOffset23 + (-5)];
			u[eOffset23 + (-4)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-5)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_20 = u[eOffset04 + (-6)] - u[eOffset23 + (-6)];
			k01_21 = u[eOffset04 + (-7)] - u[eOffset23 + (-7)];
			u[eOffset04 + (-6)] += u[eOffset23 + (-6)];
			u[eOffset04 + (-7)] += u[eOffset23 + (-7)];
			u[eOffset23 + (-6)] = k00_20 * a[aOffset5] - k01_21 * a[aOffset5 + 1];
			u[eOffset23 + (-7)] = k01_21 * a[aOffset5] + k00_20 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		let _g = 2;
		let _g1 = ld - 3 >> 1;
		while(_g < _g1) {
			let l = _g++;
			let k0 = n >> l + 2;
			let k0_2 = k0 >> 1;
			let lim = 1 << l + 1;
			let _g1 = 0;
			let _g2 = lim;
			while(_g1 < _g2) {
				let i = _g1++;
				let d0 = n2 - 1 - k0 * i;
				let k1 = 1 << l + 3;
				let aOffset = 0;
				let eOffset0 = d0;
				let eOffset2 = d0 + -k0_2;
				let i1 = (n >> l + 4 >> 2) + 1;
				while(--i1 > 0) {
					let k00_20 = u[eOffset0] - u[eOffset2];
					let k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
					u[eOffset0] += u[eOffset2];
					u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
					u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
					k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
					u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
					u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
					u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
					k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
					u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
					u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
					u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
					k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
					u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
					u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
					u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					eOffset0 -= 8;
					eOffset2 -= 8;
					aOffset += k1;
				}
			}
		}
		let _g2 = ld - 3 >> 1;
		let _g3 = ld - 6;
		while(_g2 < _g3) {
			let l = _g2++;
			let k0 = n >> l + 2;
			let k1 = 1 << l + 3;
			let k0_2 = k0 >> 1;
			let rlim = n >> l + 6;
			let lim = 1 << l + 1;
			let aOffset = 0;
			let i_off = n2 - 1;
			let r = rlim + 1;
			while(--r > 0) {
				let A0 = a[aOffset];
				let A1 = a[aOffset + 1];
				let A2 = a[aOffset + k1];
				let A3 = a[aOffset + k1 + 1];
				let A4 = a[aOffset + k1 * 2];
				let A5 = a[aOffset + k1 * 2 + 1];
				let A6 = a[aOffset + k1 * 3];
				let A7 = a[aOffset + k1 * 3 + 1];
				let eeOffset0 = i_off;
				let eeOffset2 = i_off + -k0_2;
				let i = lim + 1;
				while(--i > 0) {
					let k00 = u[eeOffset0] - u[eeOffset2];
					let k11 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
					u[eeOffset0] += u[eeOffset2];
					u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
					u[eeOffset2] = k00 * A0 - k11 * A1;
					u[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
					k00 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
					k11 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
					u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
					u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
					u[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
					u[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
					k00 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
					k11 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
					u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
					u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
					u[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
					u[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
					k00 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
					k11 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
					u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
					u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
					u[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
					u[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
					eeOffset0 -= k0;
					eeOffset2 -= k0;
				}
				aOffset += k1 * 4;
				i_off -= 8;
			}
		}
		let i_off2 = n2 - 1;
		let A2 = a[n >> 3];
		let zOffset = i_off2;
		let baseOffset = i_off2 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			let t0 = u[zOffset];
			let t1 = u[zOffset + (-8)];
			u[zOffset + (-8)] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + (-1)];
			t1 = u[zOffset + (-9)];
			u[zOffset + (-9)] = t0 - t1;
			u[zOffset + (-1)] = t0 + t1;
			t0 = u[zOffset + (-2)];
			t1 = u[zOffset + (-10)];
			let k00 = t0 - t1;
			u[zOffset + (-2)] = t0 + t1;
			t0 = u[zOffset + (-3)];
			t1 = u[zOffset + (-11)];
			let k11 = t0 - t1;
			u[zOffset + (-3)] = t0 + t1;
			u[zOffset + (-10)] = (k00 + k11) * A2;
			u[zOffset + (-11)] = (k11 - k00) * A2;
			t0 = u[zOffset + (-4)];
			t1 = u[zOffset + (-12)];
			k00 = t1 - t0;
			u[zOffset + (-4)] = t0 + t1;
			t0 = u[zOffset + (-5)];
			t1 = u[zOffset + (-13)];
			k11 = t0 - t1;
			u[zOffset + (-5)] = t0 + t1;
			u[zOffset + (-12)] = k11;
			u[zOffset + (-13)] = k00;
			t0 = u[zOffset + (-6)];
			t1 = u[zOffset + (-14)];
			k00 = t1 - t0;
			u[zOffset + (-6)] = t0 + t1;
			t0 = u[zOffset + (-7)];
			t1 = u[zOffset + (-15)];
			k11 = t0 - t1;
			u[zOffset + (-7)] = t0 + t1;
			u[zOffset + (-14)] = (k00 + k11) * A2;
			u[zOffset + (-15)] = (k00 - k11) * A2;
			let t01 = u[zOffset];
			let t11 = u[zOffset + (-4)];
			let k001 = t01 - t11;
			let y0 = t01 + t11;
			t01 = u[zOffset + (-2)];
			t11 = u[zOffset + (-6)];
			let y2 = t01 + t11;
			let k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + (-2)] = y0 - y2;
			let k33 = u[zOffset + (-3)] - u[zOffset + (-7)];
			u[zOffset + (-4)] = k001 + k33;
			u[zOffset + (-6)] = k001 - k33;
			t01 = u[zOffset + (-1)];
			t11 = u[zOffset + (-5)];
			let k111 = t01 - t11;
			let y1 = t01 + t11;
			let y3 = u[zOffset + (-3)] + u[zOffset + (-7)];
			u[zOffset + (-1)] = y1 + y3;
			u[zOffset + (-3)] = y1 - y3;
			u[zOffset + (-5)] = k111 - k22;
			u[zOffset + (-7)] = k111 + k22;
			let zOffset1 = zOffset - 8;
			let t02 = u[zOffset1];
			let t12 = u[zOffset1 + (-4)];
			let k002 = t02 - t12;
			let y01 = t02 + t12;
			t02 = u[zOffset1 + (-2)];
			t12 = u[zOffset1 + (-6)];
			let y21 = t02 + t12;
			let k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + (-2)] = y01 - y21;
			let k331 = u[zOffset1 + (-3)] - u[zOffset1 + (-7)];
			u[zOffset1 + (-4)] = k002 + k331;
			u[zOffset1 + (-6)] = k002 - k331;
			t02 = u[zOffset1 + (-1)];
			t12 = u[zOffset1 + (-5)];
			let k112 = t02 - t12;
			let y11 = t02 + t12;
			let y31 = u[zOffset1 + (-3)] + u[zOffset1 + (-7)];
			u[zOffset1 + (-1)] = y11 + y31;
			u[zOffset1 + (-3)] = y11 - y31;
			u[zOffset1 + (-5)] = k112 - k221;
			u[zOffset1 + (-7)] = k112 + k221;
			zOffset -= 16;
		}
		let brOffset = 0;
		let dOffset01 = n4 - 4;
		let dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			let k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		let cOffset = 0;
		let dOffset2 = 0;
		let eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			let a02 = v[dOffset2] - v[eOffset3 + 2];
			let a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			let b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			let b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			let b2 = v[dOffset2] + v[eOffset3 + 2];
			let b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		let bOffset = n2 - 8;
		let eOffset4 = n2 - 8;
		let dOffset02 = 0;
		let dOffset12 = n2 - 4;
		let dOffset21 = n2;
		let dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			let p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			let p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			let p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			let p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	decodePacket() {
		let result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		let rest = this.decodePacketRest(result);
		return rest;
	}
	decodeInitial() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					let _this = this.decodeState;
					let x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		let n = this.header.modes.length - 1;
		let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		let i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		let m = this.header.modes[i];
		let n1;
		let prev;
		let next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n1 = this.header.blocksize0;
		}
		let windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	decodePacketRest(r) {
		let len = 0;
		let m = this.header.modes[r.mode];
		let this1 = new Array(256);
		let zeroChannel = this1;
		let this2 = new Array(256);
		let reallyZeroChannel = this2;
		let n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		let map = this.header.mapping[m.mapping];
		let n2 = n >> 1;
		let rangeList = [256,128,86,64];
		let codebooks = this.header.codebooks;
		let _g = 0;
		let _g1 = this.header.channel;
		while(_g < _g1) {
			let i = _g++;
			let s = map.chan[i].mux;
			zeroChannel[i] = false;
			let floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				let g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					let fy = [];
					let this1 = new Array(256);
					let step2Flag = this1;
					let range = rangeList[g.floor1Multiplier - 1];
					let offset = 2;
					fy = this.finalY[i];
					let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					let log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					let _g = 0;
					let _g1 = g.partitions;
					while(_g < _g1) {
						let j = _g++;
						let pclass = g.partitionClassList[j];
						let cdim = g.classDimensions[pclass];
						let cbits = g.classSubclasses[pclass];
						let csub = (1 << cbits) - 1;
						let cval = 0;
						if(cbits != 0) {
							let c = codebooks[g.classMasterbooks[pclass]];
							let _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							let i = c.fastHuffman[_this.acc & 1023];
							let val;
							if(i >= 0) {
								let l = c.codewordLengths[i];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						let books = g.subclassBooks[pclass];
						let _g1 = 0;
						let _g2 = cdim;
						while(_g1 < _g2) {
							let k = _g1++;
							let book = books[cval & csub];
							cval >>= cbits;
							let tmp = offset++;
							let tmp1;
							if(book >= 0) {
								let _this = this.decodeState;
								let c = codebooks[book];
								if(_this.validBits < 10) {
									_this.prepHuffman();
								}
								let i = c.fastHuffman[_this.acc & 1023];
								let val;
								if(i >= 0) {
									let l = c.codewordLengths[i];
									_this.acc = _this.acc >>> l;
									_this.validBits -= l;
									if(_this.validBits < 0) {
										_this.validBits = 0;
										val = -1;
									} else {
										val = i;
									}
								} else {
									val = _this.decodeScalarRaw(c);
								}
								if(c.sparse) {
									val = c.sortedValues[val];
								}
								tmp1 = val;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					let naighbors = g.neighbors;
					let xlist = g.xlist;
					let _g2 = 2;
					let _g3 = g.values;
					while(_g2 < _g3) {
						let j = _g2++;
						let low = naighbors[j][0];
						let high = naighbors[j][1];
						let x0 = xlist[low];
						let y0 = fy[low];
						let dy = fy[high] - y0;
						let adx = xlist[high] - x0;
						let err = Math.abs(dy) * (xlist[j] - x0);
						let off = err / adx | 0;
						let lowroom = dy < 0 ? y0 - off : y0 + off;
						let val = fy[j];
						let highroom = range - lowroom;
						let room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j] = true;
							if(val >= room) {
								if(highroom > lowroom) {
									fy[j] = val - lowroom + lowroom;
								} else {
									fy[j] = lowroom - val + highroom - 1;
								}
							} else if((val & 1) != 0) {
								fy[j] = lowroom - (val + 1 >> 1);
							} else {
								fy[j] = lowroom + (val >> 1);
							}
						} else {
							step2Flag[j] = false;
							fy[j] = lowroom;
						}
					}
					let _g4 = 0;
					let _g5 = g.values;
					while(_g4 < _g5) {
						let j = _g4++;
						if(!step2Flag[j]) {
							fy[j] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		let _g2 = 0;
		let _g3 = this.header.channel;
		while(_g2 < _g3) {
			let i = _g2++;
			reallyZeroChannel[i] = zeroChannel[i];
		}
		let _g4 = 0;
		let _g5 = map.couplingSteps;
		while(_g4 < _g5) {
			let i = _g4++;
			if(!zeroChannel[map.chan[i].magnitude] || !zeroChannel[map.chan[i].angle]) {
				zeroChannel[map.chan[i].magnitude] = zeroChannel[map.chan[i].angle] = false;
			}
		}
		let _g6 = 0;
		let _g7 = map.submaps;
		while(_g6 < _g7) {
			let i = _g6++;
			let this1 = new Array(this.header.channel);
			let residueBuffers = this1;
			let this2 = new Array(256);
			let doNotDecode = this2;
			let ch = 0;
			let _g = 0;
			let _g1 = this.header.channel;
			while(_g < _g1) {
				let j = _g++;
				if(map.chan[j].mux == i) {
					if(zeroChannel[j]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j];
					}
					++ch;
				}
			}
			let r = map.submapResidue[i];
			let residue = this.header.residueConfig[r];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		let i = map.couplingSteps;
		let n21 = n >> 1;
		while(--i >= 0) {
			let m = this.channelBuffers[map.chan[i].magnitude];
			let a = this.channelBuffers[map.chan[i].angle];
			let _g = 0;
			let _g1 = n21;
			while(_g < _g1) {
				let j = _g++;
				let a2;
				let m2;
				if(m[j] > 0) {
					if(a[j] > 0) {
						m2 = m[j];
						a2 = m[j] - a[j];
					} else {
						a2 = m[j];
						m2 = m[j] + a[j];
					}
				} else if(a[j] > 0) {
					m2 = m[j];
					a2 = m[j] + a[j];
				} else {
					a2 = m[j];
					m2 = m[j] - a[j];
				}
				m[j] = m2;
				a[j] = a2;
			}
		}
		let _g8 = 0;
		let _g9 = this.header.channel;
		while(_g8 < _g9) {
			let i = _g8++;
			if(reallyZeroChannel[i]) {
				let _g = 0;
				let _g1 = n21;
				while(_g < _g1) {
					let j = _g++;
					this.channelBuffers[i][j] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i,n,this.channelBuffers[i],this.finalY[i],null);
			}
		}
		let _g10 = 0;
		let _g11 = this.header.channel;
		while(_g10 < _g11) {
			let i = _g10++;
			this.inverseMdct(this.channelBuffers[i],n,m.blockflag);
		}
		let _this = this.decodeState;
		while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
			_this.bytesInSeg--;
			_this.inputPosition += 1;
			_this.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	static start(input) {
		let decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
		let header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
		let decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
		decodeState.startFirstDecode();
		decoder.pumpFirstFrame();
		return decoder;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = "kha.audio2.ogg.vorbis.VorbisDecoder";
Object.assign(kha_audio2_ogg_vorbis_VorbisDecoder.prototype, {
	__class__: kha_audio2_ogg_vorbis_VorbisDecoder
	,previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
});
class kha_audio2_ogg_vorbis_VorbisTools {
	static assert(b,p) {
		if(!b) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",p));
		}
	}
	static neighbors(x,n) {
		let low = -1;
		let high = 65536;
		let plow = 0;
		let phigh = 0;
		let _g = 0;
		let _g1 = n;
		while(_g < _g1) {
			let i = _g++;
			if(x[i] > low && x[i] < x[n]) {
				plow = i;
				low = x[i];
			}
			if(x[i] < high && x[i] > x[n]) {
				phigh = i;
				high = x[i];
			}
		}
		return { low : plow, high : phigh};
	}
	static floatUnpack(x) {
		let mantissa = UInt.toFloat(x & 2097151);
		let sign = x & -2147483648;
		let exp = (x & 2145386496) >>> 21;
		let res = sign != 0 ? -mantissa : mantissa;
		return res * Math.pow(2,exp - 788);
	}
	static bitReverse(n) {
		n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
		n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
		n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
		n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
		return n >>> 16 | n << 16;
	}
	static pointCompare(a,b) {
		if(a.x < b.x) {
			return -1;
		} else if(a.x > b.x) {
			return 1;
		} else {
			return 0;
		}
	}
	static uintAsc(a,b) {
		if(UInt.gt(b,a)) {
			return -1;
		} else if(a == b) {
			return 0;
		} else {
			return 1;
		}
	}
	static lookup1Values(entries,dim) {
		let r = Math.exp(Math.log(entries) / dim) | 0;
		if((Math.pow(r + 1,dim) | 0) <= entries) {
			++r;
		}
		if(!(Math.pow(r + 1,dim) > entries)) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisTools.hx", lineNumber : 155, className : "kha.audio2.ogg.vorbis.VorbisTools", methodName : "lookup1Values"}));
		}
		if((Math.pow(r,dim) | 0) > entries) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/VorbisTools.hx", lineNumber : 156, className : "kha.audio2.ogg.vorbis.VorbisTools", methodName : "lookup1Values"}));
		}
		return r;
	}
	static computeWindow(n,$window) {
		let n2 = n >> 1;
		let _g = 0;
		let _g1 = n2;
		while(_g < _g1) {
			let i = _g++;
			$window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
		}
	}
	static square(f) {
		return f * f;
	}
	static computeBitReverse(n,rev) {
		let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		let ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		let n8 = n >> 3;
		let _g = 0;
		let _g1 = n8;
		while(_g < _g1) {
			let i = _g++;
			let n = i;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			rev[i] = (n >>> 16 | n << 16) >>> 32 - ld + 3 << 2;
		}
	}
	static computeTwiddleFactors(n,af,bf,cf) {
		let n4 = n >> 2;
		let n8 = n >> 3;
		let k2 = 0;
		let _g = 0;
		let _g1 = n4;
		while(_g < _g1) {
			let k = _g++;
			af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
			af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
			bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
			bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
			k2 += 2;
		}
		let k21 = 0;
		let _g2 = 0;
		let _g3 = n8;
		while(_g2 < _g3) {
			let k = _g2++;
			cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
			cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
			k21 += 2;
		}
	}
	static drawLine(output,x0,y0,x1,y1,n) {
		if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
			let this1 = new Array(32);
			kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
			let _g = 0;
			while(_g < 32) {
				let i = _g++;
				let this1 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
				let this2 = new Array(64);
				this1[i] = this2;
				let _g1 = 1;
				while(_g1 < 64) {
					let j = _g1++;
					kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
				}
			}
		}
		let dy = y1 - y0;
		let adx = x1 - x0;
		let ady = dy < 0 ? -dy : dy;
		let base;
		let x = x0;
		let y = y0;
		let err = 0;
		let sy;
		if(adx < 64 && ady < 32) {
			if(dy < 0) {
				base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
				sy = base - 1;
			} else {
				base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
				sy = base + 1;
			}
		} else {
			base = dy / adx | 0;
			sy = dy < 0 ? base - 1 : base + 1;
		}
		ady -= (base < 0 ? -base : base) * adx;
		if(x1 > n) {
			x1 = n;
		}
		output[x] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
		let _g = x + 1;
		let _g1 = x1;
		while(_g < _g1) {
			let i = _g++;
			err += ady;
			if(err >= adx) {
				err -= adx;
				y += sy;
			} else {
				y += base;
			}
			output[i] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
		}
	}
	static predictPoint(x,x0,x1,y0,y1) {
		let dy = y1 - y0;
		let adx = x1 - x0;
		let err = Math.abs(dy) * (x - x0);
		let off = err / adx | 0;
		if(dy < 0) {
			return y0 - off;
		} else {
			return y0 + off;
		}
	}
	static emptyFloatVector(len) {
		let this1 = new Array(len);
		let vec = this1;
		return vec;
	}
	static copyVector(source) {
		let this1 = new Array(source.length);
		let dest = this1;
		let _g = 0;
		let _g1 = source.length;
		while(_g < _g1) {
			let i = _g++;
			dest[i] = source[i];
		}
		return dest;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = "kha.audio2.ogg.vorbis.VorbisTools";
class kha_audio2_ogg_vorbis_data_Codebook {
	constructor() {
	}
	addEntry(huffCode,symbol,count,len,values) {
		if(!this.sparse) {
			this.codewords[symbol] = huffCode;
		} else {
			this.codewords[count] = huffCode;
			this.codewordLengths[count] = len;
			values[count] = symbol;
		}
	}
	includeInSort(len) {
		if(this.sparse) {
			if(len == 255) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 201, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "includeInSort"}));
			}
			return true;
		} else if(len == 255) {
			return false;
		} else if(len > 10) {
			return true;
		} else {
			return false;
		}
	}
	computeCodewords(len,n,values) {
		let this1 = new Array(32);
		let available = this1;
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		let k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			if(this.sortedEntries != 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 228, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "computeCodewords"}));
			}
			return true;
		}
		let m = 0;
		let count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		let i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			let z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			let res = available[z];
			available[z] = 0;
			let n = res;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			let huffCode = n >>> 16 | n << 16;
			let count = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count] = huffCode;
				this.codewordLengths[count] = len[i];
				values[count] = i;
			}
			if(z != len[i]) {
				let y = len[i];
				while(y > z) {
					if(available[y] != 0) {
						throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 272, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "computeCodewords"}));
					}
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	computeSortedHuffman(lengths,values) {
		if(!this.sparse) {
			let k = 0;
			let _g = 0;
			let _g1 = this.entries;
			while(_g < _g1) {
				let i = _g++;
				let len = lengths[i];
				let tmp;
				if(this.sparse) {
					if(len == 255) {
						throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 201, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "includeInSort"}));
					}
					tmp = true;
				} else {
					tmp = len == 255 ? false : len > 10;
				}
				if(tmp) {
					let n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
			if(k != this.sortedEntries) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 296, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "computeSortedHuffman"}));
			}
		} else {
			let _g = 0;
			let _g1 = this.sortedEntries;
			while(_g < _g1) {
				let i = _g++;
				let n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				this.sortedCodewords[i] = n >>> 16 | n << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		let len = this.sparse ? this.sortedEntries : this.entries;
		let _g = 0;
		let _g1 = len;
		while(_g < _g1) {
			let i = _g++;
			let huffLen = this.sparse ? lengths[values[i]] : lengths[i];
			let tmp;
			if(this.sparse) {
				if(huffLen == 255) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER,"",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 201, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "includeInSort"}));
				}
				tmp = true;
			} else {
				tmp = huffLen == 255 ? false : huffLen > 10;
			}
			if(tmp) {
				let n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				let code = n >>> 16 | n << 16;
				let x = 0;
				let n1 = this.sortedEntries;
				while(n1 > 1) {
					let m = x + (n1 >> 1);
					if(UInt.gte(code,this.sortedCodewords[m])) {
						x = m;
						n1 -= n1 >> 1;
					} else {
						n1 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i;
				}
			}
		}
	}
	computeAcceleratedHuffman() {
		let this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		let _g = 0;
		let _g1 = 1024;
		while(_g < _g1) {
			let i = _g++;
			this.fastHuffman[i] = -1;
		}
		let len = this.sparse ? this.sortedEntries : this.entries;
		let _g2 = 0;
		let _g3 = len;
		while(_g2 < _g3) {
			let i = _g2++;
			if(this.codewordLengths[i] <= 10) {
				let z;
				if(this.sparse) {
					let n = this.sortedCodewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i;
					z += 1 << this.codewordLengths[i];
				}
			}
		}
	}
	codebookDecode(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		let i = this.fastHuffman[decodeState.acc & 1023];
		let val;
		if(i >= 0) {
			let l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		let z = val;
		let lookupValues = this.lookupValues;
		let sequenceP = this.sequenceP;
		let multiplicands = this.multiplicands;
		let minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			let div = 1;
			let last = 0.0;
			let _g = 0;
			let _g1 = len;
			while(_g < _g1) {
				let i = _g++;
				let off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
				let val = multiplicands[off] + last;
				output[offset + i] += val;
				if(sequenceP) {
					last = val + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			let last = 0.0;
			let _g = 0;
			let _g1 = len;
			while(_g < _g1) {
				let i = _g++;
				let val = multiplicands[z + i] + last;
				output[offset + i] += val;
				last = val + minimumValue;
			}
		} else {
			let last = 0.0;
			let _g = 0;
			let _g1 = len;
			while(_g < _g1) {
				let i = _g++;
				output[offset + i] += multiplicands[z + i] + last;
			}
		}
		return true;
	}
	codebookDecodeStep(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		let i = this.fastHuffman[decodeState.acc & 1023];
		let val;
		if(i >= 0) {
			let l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		let z = val;
		let last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		let lookupValues = this.lookupValues;
		let sequenceP = this.sequenceP;
		let multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			let div = 1;
			let _g = 0;
			let _g1 = len;
			while(_g < _g1) {
				let i = _g++;
				let off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
				let val = multiplicands[off] + last;
				output[offset + i * step] += val;
				if(sequenceP) {
					last = val;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		let _g = 0;
		let _g1 = len;
		while(_g < _g1) {
			let i = _g++;
			let val = multiplicands[z + i] + last;
			output[offset + i * step] += val;
			if(sequenceP) {
				last = val;
			}
		}
		return true;
	}
	decodeStart(decodeState) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		let i = this.fastHuffman[decodeState.acc & 1023];
		let val;
		if(i >= 0) {
			let l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		return val;
	}
	decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		let effective = this.dimensions;
		if(this.lookupType == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		let multiplicands = this.multiplicands;
		let sequenceP = this.sequenceP;
		let lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			let last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			let i = this.fastHuffman[decodeState.acc & 1023];
			let val;
			if(i >= 0) {
				let l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			let z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				let div = 1;
				if(sequenceP) {
					let _g = 0;
					let _g1 = effective;
					while(_g < _g1) {
						let i = _g++;
						let off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
						let val = multiplicands[off] + last;
						residueBuffers[cInter][pInter] += val;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val;
						div = div * lookupValues;
					}
				} else {
					let _g = 0;
					let _g1 = effective;
					while(_g < _g1) {
						let i = _g++;
						let off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
						let val = multiplicands[off] + last;
						residueBuffers[cInter][pInter] += val;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					let _g = 0;
					let _g1 = effective;
					while(_g < _g1) {
						let i = _g++;
						let val = multiplicands[z + i] + last;
						residueBuffers[cInter][pInter] += val;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val;
					}
				} else {
					let _g = 0;
					let _g1 = effective;
					while(_g < _g1) {
						let i = _g++;
						let val = multiplicands[z + i] + last;
						residueBuffers[cInter][pInter] += val;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	residueDecode(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			let step = n / this.dimensions | 0;
			let _g = 0;
			let _g1 = step;
			while(_g < _g1) {
				let k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			let k = 0;
			while(k < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k)) {
					return false;
				}
				k += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	static read(decodeState) {
		let c = new kha_audio2_ogg_vorbis_data_Codebook();
		if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
		}
		let x = decodeState.readBits(8);
		c.dimensions = (decodeState.readBits(8) << 8) + x;
		let x1 = decodeState.readBits(8);
		let y = decodeState.readBits(8);
		c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
		let ordered = decodeState.readBits(1);
		c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
		let this1 = new Array(c.entries);
		let lengths = this1;
		if(!c.sparse) {
			c.codewordLengths = lengths;
		}
		let total = 0;
		if(ordered != 0) {
			let currentEntry = 0;
			let currentLength = decodeState.readBits(5) + 1;
			while(currentEntry < c.entries) {
				let limit = c.entries - currentEntry;
				let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				let n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
				if(currentEntry + n > c.entries) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
				}
				let _g = 0;
				let _g1 = n;
				while(_g < _g1) {
					let i = _g++;
					lengths[currentEntry + i] = currentLength;
				}
				currentEntry += n;
				++currentLength;
			}
		} else {
			let _g = 0;
			let _g1 = c.entries;
			while(_g < _g1) {
				let j = _g++;
				let present = c.sparse ? decodeState.readBits(1) : 1;
				if(present != 0) {
					lengths[j] = decodeState.readBits(5) + 1;
					++total;
				} else {
					lengths[j] = 255;
				}
			}
		}
		if(c.sparse && total >= c.entries >> 2) {
			c.codewordLengths = lengths;
			c.sparse = false;
		}
		let tmp;
		if(c.sparse) {
			tmp = total;
		} else {
			let sortedCount = 0;
			let _g = 0;
			let _g1 = c.entries;
			while(_g < _g1) {
				let j = _g++;
				let l = lengths[j];
				if(l > 10 && l != 255) {
					++sortedCount;
				}
			}
			tmp = sortedCount;
		}
		c.sortedEntries = tmp;
		let values = null;
		if(!c.sparse) {
			let this1 = new Array(c.entries);
			c.codewords = this1;
		} else {
			if(c.sortedEntries != 0) {
				let this1 = new Array(c.sortedEntries);
				c.codewordLengths = this1;
				let this2 = new Array(c.entries);
				c.codewords = this2;
				let this3 = new Array(c.entries);
				values = this3;
			}
			let size = c.entries + 64 * c.sortedEntries;
		}
		if(!c.computeCodewords(lengths,c.entries,values)) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
		}
		if(c.sortedEntries != 0) {
			c.sortedCodewords = [];
			let this1 = new Array(c.sortedEntries);
			c.sortedValues = this1;
			c.computeSortedHuffman(lengths,values);
		}
		if(c.sparse) {
			values = null;
			c.codewords = null;
			lengths = null;
		}
		c.computeAcceleratedHuffman();
		c.lookupType = decodeState.readBits(4);
		if(c.lookupType > 2) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
		}
		if(c.lookupType > 0) {
			let x = decodeState.readBits(32);
			let mantissa = UInt.toFloat(x & 2097151);
			let sign = x & -2147483648;
			let exp = (x & 2145386496) >>> 21;
			let res = sign != 0 ? -mantissa : mantissa;
			c.minimumValue = res * Math.pow(2,exp - 788);
			let x1 = decodeState.readBits(32);
			let mantissa1 = UInt.toFloat(x1 & 2097151);
			let sign1 = x1 & -2147483648;
			let exp1 = (x1 & 2145386496) >>> 21;
			let res1 = sign1 != 0 ? -mantissa1 : mantissa1;
			c.deltaValue = res1 * Math.pow(2,exp1 - 788);
			c.valueBits = decodeState.readBits(4) + 1;
			c.sequenceP = decodeState.readBits(1) != 0;
			if(c.lookupType == 1) {
				c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
			} else {
				c.lookupValues = c.entries * c.dimensions;
			}
			let this1 = new Array(c.lookupValues);
			let mults = this1;
			let _g = 0;
			let _g1 = c.lookupValues;
			while(_g < _g1) {
				let j = _g++;
				let q = decodeState.readBits(c.valueBits);
				if(q == -1) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
				}
				mults[j] = q;
			}
			let this2 = new Array(c.lookupValues);
			c.multiplicands = this2;
			let _g2 = 0;
			let _g3 = c.lookupValues;
			while(_g2 < _g3) {
				let j = _g2++;
				c.multiplicands[j] = mults[j] * c.deltaValue + c.minimumValue;
			}
			if(c.lookupType == 2 && c.sequenceP) {
				let _g = 1;
				let _g1 = c.lookupValues;
				while(_g < _g1) {
					let j = _g++;
					c.multiplicands[j] = c.multiplicands[j - 1];
				}
				c.sequenceP = false;
			}
		}
		return c;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = "kha.audio2.ogg.vorbis.data.Codebook";
Object.assign(kha_audio2_ogg_vorbis_data_Codebook.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Codebook
	,dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
});
class kha_audio2_ogg_vorbis_data_Comment {
	constructor() {
		this.data = new haxe_ds_StringMap();
	}
	get_title() {
		return this.getString("title");
	}
	get_loopStart() {
		return Std.parseInt(this.getString("loopstart"));
	}
	get_loopLength() {
		return Std.parseInt(this.getString("looplength"));
	}
	get_version() {
		return this.getString("version");
	}
	get_album() {
		return this.getString("album");
	}
	get_organization() {
		return this.getString("organization");
	}
	get_tracknumber() {
		return this.getString("tracknumber");
	}
	get_performer() {
		return this.getString("performer");
	}
	get_copyright() {
		return this.getString("copyright");
	}
	get_license() {
		return this.getString("license");
	}
	get_artist() {
		return this.getString("artist");
	}
	get_description() {
		return this.getString("description");
	}
	get_genre() {
		return this.getString("genre");
	}
	get_date() {
		return this.getString("date");
	}
	get_location() {
		return this.getString("location");
	}
	get_contact() {
		return this.getString("contact");
	}
	get_isrc() {
		return this.getString("isrc");
	}
	get_artists() {
		return this.getArray("artist");
	}
	add(key,value) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			this.data.h[key].push(value);
		} else {
			let v = [value];
			this.data.h[key] = v;
		}
	}
	getString(key) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			return this.data.h[key][0];
		} else {
			return null;
		}
	}
	getArray(key) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			return this.data.h[key];
		} else {
			return null;
		}
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = "kha.audio2.ogg.vorbis.data.Comment";
Object.assign(kha_audio2_ogg_vorbis_data_Comment.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Comment
	,data: null
	,__properties__: {get_artists: "get_artists",get_isrc: "get_isrc",get_contact: "get_contact",get_location: "get_location",get_date: "get_date",get_genre: "get_genre",get_description: "get_description",get_artist: "get_artist",get_license: "get_license",get_copyright: "get_copyright",get_performer: "get_performer",get_tracknumber: "get_tracknumber",get_organization: "get_organization",get_album: "get_album",get_version: "get_version",get_loopLength: "get_loopLength",get_loopStart: "get_loopStart",get_title: "get_title"}
});
class kha_audio2_ogg_vorbis_data_Floor {
	constructor() {
	}
	static read(decodeState,codebooks) {
		let floor = new kha_audio2_ogg_vorbis_data_Floor();
		floor.type = decodeState.readBits(16);
		if(floor.type > 1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
		}
		if(floor.type == 0) {
			let g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
			g.order = decodeState.readBits(8);
			g.rate = decodeState.readBits(16);
			g.barkMapSize = decodeState.readBits(16);
			g.amplitudeBits = decodeState.readBits(6);
			g.amplitudeOffset = decodeState.readBits(8);
			g.numberOfBooks = decodeState.readBits(4) + 1;
			let _g = 0;
			let _g1 = g.numberOfBooks;
			while(_g < _g1) {
				let j = _g++;
				g.bookList[j] = decodeState.readBits(8);
			}
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
		} else {
			let p = [];
			let g = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
			let maxClass = -1;
			g.partitions = decodeState.readBits(5);
			let this1 = new Array(g.partitions);
			g.partitionClassList = this1;
			let _g = 0;
			let _g1 = g.partitions;
			while(_g < _g1) {
				let j = _g++;
				g.partitionClassList[j] = decodeState.readBits(4);
				if(g.partitionClassList[j] > maxClass) {
					maxClass = g.partitionClassList[j];
				}
			}
			let this2 = new Array(maxClass + 1);
			g.classDimensions = this2;
			let this3 = new Array(maxClass + 1);
			g.classMasterbooks = this3;
			let this4 = new Array(maxClass + 1);
			g.classSubclasses = this4;
			let this5 = new Array(maxClass + 1);
			g.subclassBooks = this5;
			let _g2 = 0;
			let _g3 = maxClass + 1;
			while(_g2 < _g3) {
				let j = _g2++;
				g.classDimensions[j] = decodeState.readBits(3) + 1;
				g.classSubclasses[j] = decodeState.readBits(2);
				if(g.classSubclasses[j] != 0) {
					g.classMasterbooks[j] = decodeState.readBits(8);
					if(g.classMasterbooks[j] >= codebooks.length) {
						throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
					}
				}
				let kl = 1 << g.classSubclasses[j];
				let this1 = g.subclassBooks;
				let this2 = new Array(kl);
				this1[j] = this2;
				let _g = 0;
				let _g1 = kl;
				while(_g < _g1) {
					let k = _g++;
					g.subclassBooks[j][k] = decodeState.readBits(8) - 1;
					if(g.subclassBooks[j][k] >= codebooks.length) {
						throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
					}
				}
			}
			g.floor1Multiplier = decodeState.readBits(2) + 1;
			g.rangebits = decodeState.readBits(4);
			let this6 = new Array(250);
			g.xlist = this6;
			g.xlist[0] = 0;
			g.xlist[1] = 1 << g.rangebits;
			g.values = 2;
			let _g4 = 0;
			let _g5 = g.partitions;
			while(_g4 < _g5) {
				let j = _g4++;
				let c = g.partitionClassList[j];
				let _g = 0;
				let _g1 = g.classDimensions[c];
				while(_g < _g1) {
					let k = _g++;
					g.xlist[g.values] = decodeState.readBits(g.rangebits);
					g.values++;
				}
			}
			let _g6 = 0;
			let _g7 = g.values;
			while(_g6 < _g7) {
				let j = _g6++;
				p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
				p[j].x = g.xlist[j];
				p[j].y = j;
			}
			p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
			let this7 = new Array(g.values);
			g.sortedOrder = this7;
			let _g8 = 0;
			let _g9 = g.values;
			while(_g8 < _g9) {
				let j = _g8++;
				g.sortedOrder[j] = p[j].y;
			}
			let this8 = new Array(g.values);
			g.neighbors = this8;
			let _g10 = 2;
			let _g11 = g.values;
			while(_g10 < _g11) {
				let j = _g10++;
				let x = g.xlist;
				let low = -1;
				let high = 65536;
				let plow = 0;
				let phigh = 0;
				let _g = 0;
				let _g1 = j;
				while(_g < _g1) {
					let i = _g++;
					if(x[i] > low && x[i] < x[j]) {
						plow = i;
						low = x[i];
					}
					if(x[i] < high && x[i] > x[j]) {
						phigh = i;
						high = x[i];
					}
				}
				let ne_low = plow;
				let ne_high = phigh;
				let this1 = g.neighbors;
				let this2 = new Array(g.values);
				this1[j] = this2;
				g.neighbors[j][0] = ne_low;
				g.neighbors[j][1] = ne_high;
			}
		}
		return floor;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = "kha.audio2.ogg.vorbis.data.Floor";
Object.assign(kha_audio2_ogg_vorbis_data_Floor.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Floor
	,floor0: null
	,floor1: null
	,type: null
});
class kha_audio2_ogg_vorbis_data_Floor0 {
	constructor() {
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = "kha.audio2.ogg.vorbis.data.Floor0";
Object.assign(kha_audio2_ogg_vorbis_data_Floor0.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
	,order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
});
class kha_audio2_ogg_vorbis_data_Floor1 {
	constructor() {
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = "kha.audio2.ogg.vorbis.data.Floor1";
Object.assign(kha_audio2_ogg_vorbis_data_Floor1.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
	,partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
});
class kha_audio2_ogg_vorbis_data_Header {
	constructor() {
	}
	static read(decodeState) {
		let page = decodeState.page;
		page.start(decodeState);
		if((page.flag & 2) == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		if((page.flag & 4) != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		if((page.flag & 1) != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.firstPageValidate();
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() != 1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		let header = new haxe_io_Bytes(new ArrayBuffer(6));
		let x;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[0] = x;
		let x1;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x1 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x1 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[1] = x1;
		let x2;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x2 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x2 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[2] = x2;
		let x3;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x3 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x3 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[3] = x3;
		let x4;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x4 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x4 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[4] = x4;
		let x5;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x5 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x5 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[5] = x5;
		if(header.toString() != "vorbis") {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
		decodeState.inputPosition += 4;
		let version = decodeState.input.readInt32();
		if(version != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		let header1 = new kha_audio2_ogg_vorbis_data_Header();
		decodeState.inputPosition += 1;
		header1.channel = decodeState.input.readByte();
		if(header1.channel == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		} else if(header1.channel > 16) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.inputPosition += 4;
		header1.sampleRate = decodeState.input.readInt32();
		if(header1.sampleRate == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.inputPosition += 4;
		header1.maximumBitRate = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		header1.nominalBitRate = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		header1.minimumBitRate = decodeState.input.readInt32();
		decodeState.inputPosition += 1;
		let x6 = decodeState.input.readByte();
		let log0 = x6 & 15;
		let log1 = x6 >> 4;
		header1.blocksize0 = 1 << log0;
		header1.blocksize1 = 1 << log1;
		if(log0 < 6 || log0 > 13) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		if(log1 < 6 || log1 > 13) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		if(log0 > log1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.inputPosition += 1;
		let x7 = decodeState.input.readByte();
		if((x7 & 1) == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.page.start(decodeState);
		decodeState.startPacket();
		let len = 0;
		let output = new haxe_io_BytesOutput();
		while(true) {
			len = decodeState.next();
			if(!(len != 0)) {
				break;
			}
			decodeState.inputPosition += len;
			output.write(decodeState.input.read(len));
			decodeState.bytesInSeg = 0;
		}
		let packetInput = new haxe_io_BytesInput(output.getBytes());
		packetInput.readByte();
		packetInput.read(6);
		let vendorLength = packetInput.readInt32();
		header1.vendor = packetInput.readString(vendorLength);
		header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
		let commentCount = packetInput.readInt32();
		let _g = 0;
		let _g1 = commentCount;
		while(_g < _g1) {
			let i = _g++;
			let n = packetInput.readInt32();
			let str = packetInput.readString(n);
			let splitter = str.indexOf("=");
			if(splitter != -1) {
				header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
			}
		}
		let x8 = packetInput.readByte();
		if((x8 & 1) == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		decodeState.startPacket();
		let x9;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x9 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x9 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		if(x9 != 5) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
		let header2 = new haxe_io_Bytes(new ArrayBuffer(6));
		let x10;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x10 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x10 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[0] = x10;
		let x11;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x11 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x11 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[1] = x11;
		let x12;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x12 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x12 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[2] = x12;
		let x13;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x13 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x13 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[3] = x13;
		let x14;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x14 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x14 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[4] = x14;
		let x15;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x15 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x15 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[5] = x15;
		if(header2.toString() != "vorbis") {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
		let codebookCount = decodeState.readBits(8) + 1;
		let this1 = new Array(codebookCount);
		header1.codebooks = this1;
		let _g2 = 0;
		let _g3 = codebookCount;
		while(_g2 < _g3) {
			let i = _g2++;
			header1.codebooks[i] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
		}
		x7 = decodeState.readBits(6) + 1;
		let _g4 = 0;
		let _g5 = x7;
		while(_g4 < _g5) {
			let i = _g4++;
			if(decodeState.readBits(16) != 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
		let floorCount = decodeState.readBits(6) + 1;
		let this2 = new Array(floorCount);
		header1.floorConfig = this2;
		let _g6 = 0;
		let _g7 = floorCount;
		while(_g6 < _g7) {
			let i = _g6++;
			header1.floorConfig[i] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
		}
		let residueCount = decodeState.readBits(6) + 1;
		let this3 = new Array(residueCount);
		header1.residueConfig = this3;
		let _g8 = 0;
		let _g9 = residueCount;
		while(_g8 < _g9) {
			let i = _g8++;
			header1.residueConfig[i] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
		}
		let mappingCount = decodeState.readBits(6) + 1;
		let this4 = new Array(mappingCount);
		header1.mapping = this4;
		let _g10 = 0;
		let _g11 = mappingCount;
		while(_g10 < _g11) {
			let i = _g10++;
			let map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
			header1.mapping[i] = map;
			let _g = 0;
			let _g1 = map.submaps;
			while(_g < _g1) {
				let j = _g++;
				if(map.submapFloor[j] >= header1.floorConfig.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
				}
				if(map.submapResidue[j] >= header1.residueConfig.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
				}
			}
		}
		let modeCount = decodeState.readBits(6) + 1;
		let this5 = new Array(modeCount);
		header1.modes = this5;
		let _g12 = 0;
		let _g13 = modeCount;
		while(_g12 < _g13) {
			let i = _g12++;
			let mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
			header1.modes[i] = mode;
			if(mode.mapping >= header1.mapping.length) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
		while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			decodeState.input.readByte();
		}
		return header1;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = "kha.audio2.ogg.vorbis.data.Header";
Object.assign(kha_audio2_ogg_vorbis_data_Header.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Header
	,maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
});
class kha_audio2_ogg_vorbis_data_IntPoint {
	constructor() {
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = "kha.audio2.ogg.vorbis.data.IntPoint";
Object.assign(kha_audio2_ogg_vorbis_data_IntPoint.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
	,x: null
	,y: null
});
class kha_audio2_ogg_vorbis_data_Mapping {
	constructor() {
	}
	doFloor(floors,i,n,target,finalY,step2Flag) {
		let n2 = n >> 1;
		let s = this.chan[i].mux;
		let floor;
		let floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			let g = floor1.floor1;
			let lx = 0;
			let ly = finalY[0] * g.floor1Multiplier;
			let _g = 1;
			let _g1 = g.values;
			while(_g < _g1) {
				let q = _g++;
				let j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					let hy = finalY[j] * g.floor1Multiplier;
					let hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				let _g = lx;
				let _g1 = n2;
				while(_g < _g1) {
					let j = _g++;
					target[j] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	static read(decodeState,channels) {
		let m = new kha_audio2_ogg_vorbis_data_Mapping();
		let mappingType = decodeState.readBits(16);
		if(mappingType != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
		}
		let this1 = new Array(channels);
		m.chan = this1;
		let _g = 0;
		let _g1 = channels;
		while(_g < _g1) {
			let j = _g++;
			m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
		}
		if(decodeState.readBits(1) != 0) {
			m.submaps = decodeState.readBits(4) + 1;
		} else {
			m.submaps = 1;
		}
		if(decodeState.readBits(1) != 0) {
			m.couplingSteps = decodeState.readBits(8) + 1;
			let _g = 0;
			let _g1 = m.couplingSteps;
			while(_g < _g1) {
				let k = _g++;
				let n = channels - 1;
				let log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
				let n1 = channels - 1;
				let log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
				if(m.chan[k].magnitude >= channels) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
				}
				if(m.chan[k].angle >= channels) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
				}
				if(m.chan[k].magnitude == m.chan[k].angle) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
				}
			}
		} else {
			m.couplingSteps = 0;
		}
		if(decodeState.readBits(2) != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
		}
		if(m.submaps > 1) {
			let _g = 0;
			let _g1 = channels;
			while(_g < _g1) {
				let j = _g++;
				m.chan[j].mux = decodeState.readBits(4);
				if(m.chan[j].mux >= m.submaps) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
				}
			}
		} else {
			let _g = 0;
			let _g1 = channels;
			while(_g < _g1) {
				let j = _g++;
				m.chan[j].mux = 0;
			}
		}
		let this2 = new Array(m.submaps);
		m.submapFloor = this2;
		let this3 = new Array(m.submaps);
		m.submapResidue = this3;
		let _g2 = 0;
		let _g3 = m.submaps;
		while(_g2 < _g3) {
			let j = _g2++;
			decodeState.readBits(8);
			m.submapFloor[j] = decodeState.readBits(8);
			m.submapResidue[j] = decodeState.readBits(8);
		}
		return m;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = "kha.audio2.ogg.vorbis.data.Mapping";
Object.assign(kha_audio2_ogg_vorbis_data_Mapping.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Mapping
	,couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
});
class kha_audio2_ogg_vorbis_data_MappingChannel {
	constructor() {
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = "kha.audio2.ogg.vorbis.data.MappingChannel";
Object.assign(kha_audio2_ogg_vorbis_data_MappingChannel.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
	,magnitude: null
	,angle: null
	,mux: null
});
class kha_audio2_ogg_vorbis_data_Mode {
	constructor() {
	}
	static read(decodeState) {
		let m = new kha_audio2_ogg_vorbis_data_Mode();
		m.blockflag = decodeState.readBits(1) != 0;
		m.windowtype = decodeState.readBits(16);
		m.transformtype = decodeState.readBits(16);
		m.mapping = decodeState.readBits(8);
		if(m.windowtype != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
		}
		if(m.transformtype != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
		}
		return m;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = "kha.audio2.ogg.vorbis.data.Mode";
Object.assign(kha_audio2_ogg_vorbis_data_Mode.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Mode
	,blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
});
class kha_audio2_ogg_vorbis_data_Page {
	constructor() {
	}
	clone() {
		let page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	start(decodeState) {
		let tmp;
		let tmp1;
		let tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	startWithoutCapturePattern(decodeState) {
		decodeState.inputPosition += 1;
		let version = decodeState.input.readByte();
		if(version != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		let loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		let loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = "kha.audio2.ogg.vorbis.data.Page";
Object.assign(kha_audio2_ogg_vorbis_data_Page.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Page
	,flag: null
});
class kha_audio2_ogg_vorbis_data_PageFlag {
}
$hxClasses["kha.audio2.ogg.vorbis.data.PageFlag"] = kha_audio2_ogg_vorbis_data_PageFlag;
kha_audio2_ogg_vorbis_data_PageFlag.__name__ = "kha.audio2.ogg.vorbis.data.PageFlag";
class kha_audio2_ogg_vorbis_data_ProbedPage {
	constructor() {
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = "kha.audio2.ogg.vorbis.data.ProbedPage";
Object.assign(kha_audio2_ogg_vorbis_data_ProbedPage.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
	,pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
});
class kha_audio2_ogg_vorbis_data_ReaderError {
	constructor(type,message,posInfos) {
		if(message == null) {
			message = "";
		}
		this.type = type;
		this.message = message;
		this.posInfos = posInfos;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = "kha.audio2.ogg.vorbis.data.ReaderError";
Object.assign(kha_audio2_ogg_vorbis_data_ReaderError.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
	,type: null
	,message: null
	,posInfos: null
});
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__:true,__constructs__:null
	,NEED_MORE_DATA: {_hx_name:"NEED_MORE_DATA",_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_name:"INVALID_API_MIXING",_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_name:"OUTOFMEM",_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_name:"FEATURE_NOT_SUPPORTED",_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_name:"TOO_MANY_CHANNELS",_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_name:"FILE_OPEN_FAILURE",_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_name:"SEEK_WITHOUT_LENGTH",_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_name:"UNEXPECTED_EOF",_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_name:"SEEK_INVALID",_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_name:"INVALID_SETUP",_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_name:"INVALID_STREAM",_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_name:"MISSING_CAPTURE_PATTERN",_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_name:"INVALID_STREAM_STRUCTURE_VERSION",_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_name:"CONTINUED_PACKET_FLAG_INVALID",_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_name:"INCORRECT_STREAM_SERIAL_NUMBER",_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_name:"INVALID_FIRST_PAGE",_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_name:"BAD_PACKET_TYPE",_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_name:"CANT_FIND_LAST_PAGE",_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_name:"SEEK_FAILED",_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_name:"OTHER",_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
kha_audio2_ogg_vorbis_data_ReaderErrorType.__constructs__ = [kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING,kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM,kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH,kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE,kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER];
class kha_audio2_ogg_vorbis_data_Residue {
	constructor() {
	}
	decode(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		let codebooks = header.codebooks;
		let classwords = codebooks[this.classbook].dimensions;
		let nRead = this.end - this.begin;
		let partSize = this.partSize;
		let partRead = UInt.toFloat(nRead) / UInt.toFloat(partSize) | 0;
		let this1 = new Array(header.channel * partRead + 1);
		let classifications = this1;
		let _g = 0;
		let _g1 = ch;
		while(_g < _g1) {
			let i = _g++;
			if(!doNotDecode[i]) {
				let buffer = residueBuffers[i];
				let _g = 0;
				let _g1 = buffer.length;
				while(_g < _g1) {
					let j = _g++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			let _g = 0;
			let _g1 = ch;
			while(_g < _g1) {
				let j = _g++;
				if(!doNotDecode[j]) {
					break;
				} else if(j == ch - 1) {
					return;
				}
			}
			let _g2 = 0;
			while(_g2 < 8) {
				let pass = _g2++;
				let pcount = 0;
				let classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						let z = this.begin + pcount * partSize;
						let cInter = z & 1;
						let pInter = z >>> 1;
						if(pass == 0) {
							let c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							let i = c.fastHuffman[decodeState.acc & 1023];
							let val;
							if(i >= 0) {
								let l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							let q = val;
							if(q == -1) {
								return;
							}
							let i1 = classwords;
							while(--i1 >= 0) {
								classifications[i1 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						let _g = 0;
						let _g1 = classwords;
						while(_g < _g1) {
							let i = _g++;
							if(pcount >= partRead) {
								break;
							}
							let z = this.begin + pcount * partSize;
							let c = classifications[pcount];
							let b = this.residueBooks[c][pass];
							if(b >= 0) {
								let book = codebooks[b];
								let result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z = z + partSize;
								cInter = z & 1;
								pInter = z >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						let z = this.begin + pcount * partSize;
						let cInter = 0;
						let pInter = z;
						if(pass == 0) {
							let c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							let i = c.fastHuffman[decodeState.acc & 1023];
							let val;
							if(i >= 0) {
								let l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							let q = val;
							if(q == -1) {
								return;
							}
							let i1 = classwords;
							while(--i1 >= 0) {
								classifications[i1 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						let _g = 0;
						let _g1 = classwords;
						while(_g < _g1) {
							let i = _g++;
							if(pcount >= partRead) {
								break;
							}
							let z = this.begin + pcount * partSize;
							let b = this.residueBooks[classifications[pcount]][pass];
							if(b >= 0) {
								let book = codebooks[b];
								let result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z = z + partSize;
								cInter = 0;
								pInter = z;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						let z = this.begin + pcount * partSize;
						let cInter = UInt.toFloat(z) % UInt.toFloat(ch) | 0;
						let pInter = UInt.toFloat(z) / UInt.toFloat(ch) | 0;
						if(pass == 0) {
							let c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							let i = c.fastHuffman[decodeState.acc & 1023];
							let val;
							if(i >= 0) {
								let l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							let q = val;
							if(q == -1) {
								return;
							}
							let i1 = classwords;
							while(--i1 >= 0) {
								classifications[i1 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						let _g = 0;
						let _g1 = classwords;
						while(_g < _g1) {
							let i = _g++;
							if(pcount >= partRead) {
								break;
							}
							let z = this.begin + pcount * partSize;
							let b = this.residueBooks[classifications[pcount]][pass];
							if(b >= 0) {
								let book = codebooks[b];
								let result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z = z + partSize;
								cInter = UInt.toFloat(z) % UInt.toFloat(ch) | 0;
								pInter = UInt.toFloat(z) / UInt.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		let _g2 = 0;
		while(_g2 < 8) {
			let pass = _g2++;
			let pcount = 0;
			let classSet = 0;
			while(pcount < partRead) {
				if(pass == 0) {
					let _g = 0;
					let _g1 = ch;
					while(_g < _g1) {
						let j = _g++;
						if(!doNotDecode[j]) {
							let c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							let i = c.fastHuffman[decodeState.acc & 1023];
							let val;
							if(i >= 0) {
								let l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							let temp = val;
							if(temp == -1) {
								return;
							}
							let i1 = classwords;
							while(--i1 >= 0) {
								classifications[j * partRead + i1 + pcount] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				let _g = 0;
				let _g1 = classwords;
				while(_g < _g1) {
					let i = _g++;
					if(pcount >= partRead) {
						break;
					}
					let _g1 = 0;
					let _g2 = ch;
					while(_g1 < _g2) {
						let j = _g1++;
						if(!doNotDecode[j]) {
							let c = classifications[j * partRead + pcount];
							let b = this.residueBooks[c][pass];
							if(b >= 0) {
								let target = residueBuffers[j];
								let offset = this.begin + pcount * partSize;
								let n = partSize;
								let book = codebooks[b];
								if(!book.residueDecode(decodeState,target,offset,n,this.type)) {
									return;
								}
							}
						}
					}
					++pcount;
				}
			}
		}
	}
	static read(decodeState,codebooks) {
		let r = new kha_audio2_ogg_vorbis_data_Residue();
		r.type = decodeState.readBits(16);
		if(r.type > 2) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
		}
		let this1 = new Array(64);
		let residueCascade = this1;
		r.begin = decodeState.readBits(24);
		r.end = decodeState.readBits(24);
		r.partSize = decodeState.readBits(24) + 1;
		let classifications = r.classifications = decodeState.readBits(6) + 1;
		r.classbook = decodeState.readBits(8);
		let _g = 0;
		let _g1 = r.classifications;
		while(_g < _g1) {
			let j = _g++;
			let highBits = 0;
			let lowBits = decodeState.readBits(3);
			if(decodeState.readBits(1) != 0) {
				highBits = decodeState.readBits(5);
			}
			residueCascade[j] = highBits * 8 + lowBits;
		}
		let this2 = new Array(r.classifications);
		r.residueBooks = this2;
		let _g2 = 0;
		let _g3 = r.classifications;
		while(_g2 < _g3) {
			let j = _g2++;
			let this1 = r.residueBooks;
			let this2 = new Array(8);
			this1[j] = this2;
			let _g = 0;
			while(_g < 8) {
				let k = _g++;
				if((residueCascade[j] & 1 << k) != 0) {
					r.residueBooks[j][k] = decodeState.readBits(8);
					if(r.residueBooks[j][k] >= codebooks.length) {
						throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
					}
				} else {
					r.residueBooks[j][k] = -1;
				}
			}
		}
		let el = codebooks[r.classbook].entries;
		let classwords = codebooks[r.classbook].dimensions;
		let this3 = new Array(el);
		r.classdata = this3;
		let _g4 = 0;
		let _g5 = el;
		while(_g4 < _g5) {
			let j = _g4++;
			let temp = j;
			let k = classwords;
			let this1 = r.classdata;
			let this2 = new Array(classwords);
			let cd = this1[j] = this2;
			while(--k >= 0) {
				cd[k] = temp % classifications;
				temp = temp / classifications | 0;
			}
		}
		return r;
	}
}
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = "kha.audio2.ogg.vorbis.data.Residue";
Object.assign(kha_audio2_ogg_vorbis_data_Residue.prototype, {
	__class__: kha_audio2_ogg_vorbis_data_Residue
	,begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
});
class kha_audio2_ogg_vorbis_data_Setting {
}
$hxClasses["kha.audio2.ogg.vorbis.data.Setting"] = kha_audio2_ogg_vorbis_data_Setting;
kha_audio2_ogg_vorbis_data_Setting.__name__ = "kha.audio2.ogg.vorbis.data.Setting";
class kha_compute_ConstantLocation {
	constructor() {
	}
}
$hxClasses["kha.compute.ConstantLocation"] = kha_compute_ConstantLocation;
kha_compute_ConstantLocation.__name__ = "kha.compute.ConstantLocation";
Object.assign(kha_compute_ConstantLocation.prototype, {
	__class__: kha_compute_ConstantLocation
});
class kha_compute_Shader {
	constructor(sources,files) {
		this.shader_ = Krom.createShaderCompute(sources[0].toBytes().b.bufferValue);
	}
	delete() {
		Krom.deleteShaderCompute(this.shader_);
		this.shader_ = null;
	}
	getConstantLocation(name) {
		return Krom.getConstantLocationCompute(this.shader_,name);
	}
	getTextureUnit(name) {
		return Krom.getTextureUnitCompute(this.shader_,name);
	}
}
$hxClasses["kha.compute.Shader"] = kha_compute_Shader;
kha_compute_Shader.__name__ = "kha.compute.Shader";
Object.assign(kha_compute_Shader.prototype, {
	__class__: kha_compute_Shader
	,shader_: null
});
class kha_compute_TextureUnit {
	constructor() {
	}
}
$hxClasses["kha.compute.TextureUnit"] = kha_compute_TextureUnit;
kha_compute_TextureUnit.__name__ = "kha.compute.TextureUnit";
Object.assign(kha_compute_TextureUnit.prototype, {
	__class__: kha_compute_TextureUnit
});
class kha_graphics1_Graphics {
}
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = "kha.graphics1.Graphics";
kha_graphics1_Graphics.__isInterface__ = true;
Object.assign(kha_graphics1_Graphics.prototype, {
	__class__: kha_graphics1_Graphics
	,begin: null
	,end: null
	,setPixel: null
});
class kha_graphics2_Graphics {
	constructor() {
		if(kha_graphics2_Graphics._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
		this.transformationIndex = 0;
		this.opacities = [1];
		this.myFontSize = 12;
		this.pipe = null;
	}
	begin(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	end() {
	}
	flush() {
	}
	clear(color) {
	}
	drawImage(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	drawSubImage(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	drawScaledImage(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	drawScaledSubImage(img,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	drawRect(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	fillRect(x,y,width,height) {
	}
	drawString(text,x,y) {
	}
	drawCharacters(text,start,length,x,y) {
	}
	drawLine(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	drawVideo(video,x,y,width,height) {
	}
	fillTriangle(x1,y1,x2,y2,x3,y3) {
	}
	get_imageScaleQuality() {
		return 0;
	}
	set_imageScaleQuality(value) {
		return 1;
	}
	get_mipmapScaleQuality() {
		return 0;
	}
	set_mipmapScaleQuality(value) {
		return 1;
	}
	get_color() {
		return -16777216;
	}
	set_color(color) {
		return -16777216;
	}
	get_font() {
		return null;
	}
	set_font(font) {
		return null;
	}
	get_fontSize() {
		return this.myFontSize;
	}
	set_fontSize(value) {
		return this.myFontSize = value;
	}
	get_transformation() {
		return this.transformations[this.transformationIndex];
	}
	set_transformation(transformation) {
		this.setTransformation(transformation);
		let _this = this.transformations[this.transformationIndex];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		return transformation;
	}
	pushTransformation(trans) {
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		let _this = this.transformations[this.transformationIndex];
		_this._00 = trans._00;
		_this._10 = trans._10;
		_this._20 = trans._20;
		_this._01 = trans._01;
		_this._11 = trans._11;
		_this._21 = trans._21;
		_this._02 = trans._02;
		_this._12 = trans._12;
		_this._22 = trans._22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	popTransformation() {
		this.transformationIndex--;
		if(this.transformationIndex == -1) {
			throw haxe_Exception.thrown("There is no transformation matrix to remove, check your push/popTransformation code");
		}
		this.setTransformation(this.transformations[this.transformationIndex]);
		return this.transformations[this.transformationIndex + 1];
	}
	scale(x,y) {
		let _this = this.transformations[this.transformationIndex];
		let _this__00 = x;
		let _this__10 = 0;
		let _this__20 = 0;
		let _this__01 = 0;
		let _this__11 = y;
		let _this__21 = 0;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m = this.transformations[this.transformationIndex];
		let m__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		let m__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		let m__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		let m__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		let m__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		let m__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		let m__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		let m__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		let m__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = m__00;
		_this._10 = m__10;
		_this._20 = m__20;
		_this._01 = m__01;
		_this._11 = m__11;
		_this._21 = m__21;
		_this._02 = m__02;
		_this._12 = m__12;
		_this._22 = m__22;
	}
	pushScale(x,y) {
		let _this__00 = x;
		let _this__10 = 0;
		let _this__20 = 0;
		let _this__01 = 0;
		let _this__11 = y;
		let _this__21 = 0;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m = this.transformations[this.transformationIndex];
		let mat__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		let mat__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		let mat__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		let mat__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		let mat__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		let mat__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		let mat__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		let mat__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		let mat__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		let _this = this.transformations[this.transformationIndex];
		_this._00 = mat__00;
		_this._10 = mat__10;
		_this._20 = mat__20;
		_this._01 = mat__01;
		_this._11 = mat__11;
		_this._21 = mat__21;
		_this._02 = mat__02;
		_this._12 = mat__12;
		_this._22 = mat__22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	translation(tx,ty) {
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = tx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = ty;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m = this.transformations[this.transformationIndex];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	translate(tx,ty) {
		let _this = this.transformations[this.transformationIndex];
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = tx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = ty;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m = this.transformations[this.transformationIndex];
		let m__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		let m__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		let m__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		let m__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		let m__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		let m__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		let m__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		let m__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		let m__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = m__00;
		_this._10 = m__10;
		_this._20 = m__20;
		_this._01 = m__01;
		_this._11 = m__11;
		_this._21 = m__21;
		_this._02 = m__02;
		_this._12 = m__12;
		_this._22 = m__22;
	}
	pushTranslation(tx,ty) {
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = tx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = ty;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m = this.transformations[this.transformationIndex];
		let trans__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		let trans__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		let trans__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		let trans__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		let trans__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		let trans__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		let trans__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		let trans__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		let trans__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		let _this = this.transformations[this.transformationIndex];
		_this._00 = trans__00;
		_this._10 = trans__10;
		_this._20 = trans__20;
		_this._01 = trans__01;
		_this._11 = trans__11;
		_this._21 = trans__21;
		_this._02 = trans__02;
		_this._12 = trans__12;
		_this._22 = trans__22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	rotation(angle,centerx,centery) {
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = centerx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = centery;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m__00 = Math.cos(angle);
		let m__10 = -Math.sin(angle);
		let m__20 = 0;
		let m__01 = Math.sin(angle);
		let m__11 = Math.cos(angle);
		let m__21 = 0;
		let m__02 = 0;
		let m__12 = 0;
		let m__22 = 1;
		let _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		let _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		let _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		let _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		let _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		let _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		let _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		let _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		let _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		let m__001 = 1;
		let m__101 = 0;
		let m__201 = -centerx;
		let m__011 = 0;
		let m__111 = 1;
		let m__211 = -centery;
		let m__021 = 0;
		let m__121 = 0;
		let m__221 = 1;
		let _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		let _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		let _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		let _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		let _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		let _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		let _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		let _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		let _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		let m = this.transformations[this.transformationIndex];
		return new kha_math_FastMatrix3(_this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02,_this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12,_this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22,_this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02,_this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12,_this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22,_this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02,_this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12,_this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22);
	}
	rotate(angle,centerx,centery) {
		let _this = this.transformations[this.transformationIndex];
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = centerx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = centery;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m__00 = Math.cos(angle);
		let m__10 = -Math.sin(angle);
		let m__20 = 0;
		let m__01 = Math.sin(angle);
		let m__11 = Math.cos(angle);
		let m__21 = 0;
		let m__02 = 0;
		let m__12 = 0;
		let m__22 = 1;
		let _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		let _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		let _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		let _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		let _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		let _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		let _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		let _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		let _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		let m__001 = 1;
		let m__101 = 0;
		let m__201 = -centerx;
		let m__011 = 0;
		let m__111 = 1;
		let m__211 = -centery;
		let m__021 = 0;
		let m__121 = 0;
		let m__221 = 1;
		let _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		let _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		let _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		let _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		let _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		let _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		let _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		let _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		let _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		let m = this.transformations[this.transformationIndex];
		let m__002 = _this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02;
		let m__102 = _this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12;
		let m__202 = _this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22;
		let m__012 = _this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02;
		let m__112 = _this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12;
		let m__212 = _this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22;
		let m__022 = _this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02;
		let m__122 = _this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12;
		let m__222 = _this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22;
		_this._00 = m__002;
		_this._10 = m__102;
		_this._20 = m__202;
		_this._01 = m__012;
		_this._11 = m__112;
		_this._21 = m__212;
		_this._02 = m__022;
		_this._12 = m__122;
		_this._22 = m__222;
	}
	pushRotation(angle,centerx,centery) {
		let _this__00 = 1;
		let _this__10 = 0;
		let _this__20 = centerx;
		let _this__01 = 0;
		let _this__11 = 1;
		let _this__21 = centery;
		let _this__02 = 0;
		let _this__12 = 0;
		let _this__22 = 1;
		let m__00 = Math.cos(angle);
		let m__10 = -Math.sin(angle);
		let m__20 = 0;
		let m__01 = Math.sin(angle);
		let m__11 = Math.cos(angle);
		let m__21 = 0;
		let m__02 = 0;
		let m__12 = 0;
		let m__22 = 1;
		let _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		let _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		let _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		let _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		let _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		let _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		let _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		let _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		let _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		let m__001 = 1;
		let m__101 = 0;
		let m__201 = -centerx;
		let m__011 = 0;
		let m__111 = 1;
		let m__211 = -centery;
		let m__021 = 0;
		let m__121 = 0;
		let m__221 = 1;
		let _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		let _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		let _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		let _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		let _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		let _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		let _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		let _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		let _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		let m = this.transformations[this.transformationIndex];
		let trans__00 = _this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02;
		let trans__10 = _this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12;
		let trans__20 = _this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22;
		let trans__01 = _this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02;
		let trans__11 = _this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12;
		let trans__21 = _this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22;
		let trans__02 = _this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02;
		let trans__12 = _this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12;
		let trans__22 = _this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		let _this = this.transformations[this.transformationIndex];
		_this._00 = trans__00;
		_this._10 = trans__10;
		_this._20 = trans__20;
		_this._01 = trans__01;
		_this._11 = trans__11;
		_this._21 = trans__21;
		_this._02 = trans__02;
		_this._12 = trans__12;
		_this._22 = trans__22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	pushOpacity(opacity) {
		this.setOpacity(opacity);
		this.opacities.push(opacity);
	}
	popOpacity() {
		let ret = this.opacities.pop();
		this.setOpacity(this.get_opacity());
		return ret;
	}
	get_opacity() {
		return this.opacities[this.opacities.length - 1];
	}
	set_opacity(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	scissor(x,y,width,height) {
	}
	disableScissor() {
	}
	get_pipeline() {
		return this.pipe;
	}
	set_pipeline(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	setTransformation(transformation) {
	}
	setOpacity(opacity) {
	}
	setPipeline(pipeline) {
	}
}
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = "kha.graphics2.Graphics";
Object.assign(kha_graphics2_Graphics.prototype, {
	__class__: kha_graphics2_Graphics
	,pipe: null
	,transformations: null
	,transformationIndex: null
	,opacities: null
	,myFontSize: null
	,__properties__: {set_pipeline: "set_pipeline",get_pipeline: "get_pipeline",set_opacity: "set_opacity",get_opacity: "get_opacity",set_transformation: "set_transformation",get_transformation: "get_transformation",set_fontSize: "set_fontSize",get_fontSize: "get_fontSize",set_font: "set_font",get_font: "get_font",set_color: "set_color",get_color: "get_color",set_mipmapScaleQuality: "set_mipmapScaleQuality",get_mipmapScaleQuality: "get_mipmapScaleQuality",set_imageScaleQuality: "set_imageScaleQuality",get_imageScaleQuality: "get_imageScaleQuality"}
});
class kha_graphics2_Graphics1 {
	constructor(canvas) {
		this.canvas = canvas;
	}
	begin() {
		if(this.texture == null || (this.texture.get_realWidth() != this.canvas.get_width() || this.texture.get_realHeight() != this.canvas.get_height())) {
			this.texture = kha_Image.create(this.canvas.get_width(),this.canvas.get_height(),0,2);
		}
		this.pixels = this.texture.lock();
	}
	end() {
		this.texture.unlock();
		this.canvas.get_g2().begin(false);
		this.canvas.get_g2().drawImage(this.texture,0,0);
		this.canvas.get_g2().end();
	}
	setPixel(x,y,color) {
		this.pixels.setInt32(y * this.texture.get_stride() + x * 4,kha_Color.fromBytes(color & 255,(color & 65280) >>> 8,(color & 16711680) >>> 16,color >>> 24));
	}
}
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = "kha.graphics2.Graphics1";
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
Object.assign(kha_graphics2_Graphics1.prototype, {
	__class__: kha_graphics2_Graphics1
	,canvas: null
	,texture: null
	,pixels: null
});
class kha_graphics2_GraphicsExtension {
	static drawArc(g2,cx,cy,radius,sAngle,eAngle,strength,ccw,segments) {
		if(segments == null) {
			segments = 0;
		}
		if(ccw == null) {
			ccw = false;
		}
		if(strength == null) {
			strength = 1;
		}
		sAngle %= Math.PI * 2;
		eAngle %= Math.PI * 2;
		if(ccw) {
			if(eAngle > sAngle) {
				eAngle -= Math.PI * 2;
			}
		} else if(eAngle < sAngle) {
			eAngle += Math.PI * 2;
		}
		radius += strength / 2;
		if(segments <= 0) {
			segments = Math.floor(10 * Math.sqrt(radius));
		}
		let theta = (eAngle - sAngle) / segments;
		let c = Math.cos(theta);
		let s = Math.sin(theta);
		let x = Math.cos(sAngle) * radius;
		let y = Math.sin(sAngle) * radius;
		let _g = 0;
		let _g1 = segments;
		while(_g < _g1) {
			let n = _g++;
			let px = x + cx;
			let py = y + cy;
			let t = x;
			x = c * x - s * y;
			y = c * y + s * t;
			kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
		}
	}
	static fillArc(g2,cx,cy,radius,sAngle,eAngle,ccw,segments) {
		if(segments == null) {
			segments = 0;
		}
		if(ccw == null) {
			ccw = false;
		}
		sAngle %= Math.PI * 2;
		eAngle %= Math.PI * 2;
		if(ccw) {
			if(eAngle > sAngle) {
				eAngle -= Math.PI * 2;
			}
		} else if(eAngle < sAngle) {
			eAngle += Math.PI * 2;
		}
		if(segments <= 0) {
			segments = Math.floor(10 * Math.sqrt(radius));
		}
		let theta = (eAngle - sAngle) / segments;
		let c = Math.cos(theta);
		let s = Math.sin(theta);
		let x = Math.cos(sAngle) * radius;
		let y = Math.sin(sAngle) * radius;
		let sx = x + cx;
		let sy = y + cy;
		let _g = 0;
		let _g1 = segments;
		while(_g < _g1) {
			let n = _g++;
			let px = x + cx;
			let py = y + cy;
			let t = x;
			x = c * x - s * y;
			y = c * y + s * t;
			g2.fillTriangle(px,py,x + cx,y + cy,sx,sy);
		}
	}
	static drawCircle(g2,cx,cy,radius,strength,segments) {
		if(segments == null) {
			segments = 0;
		}
		if(strength == null) {
			strength = 1;
		}
		radius += strength / 2;
		if(segments <= 0) {
			segments = Math.floor(10 * Math.sqrt(radius));
		}
		let theta = 2 * Math.PI / segments;
		let c = Math.cos(theta);
		let s = Math.sin(theta);
		let x = radius;
		let y = 0.0;
		let _g = 0;
		let _g1 = segments;
		while(_g < _g1) {
			let n = _g++;
			let px = x + cx;
			let py = y + cy;
			let t = x;
			x = c * x - s * y;
			y = c * y + s * t;
			kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
		}
	}
	static drawInnerLine(g2,x1,y1,x2,y2,strength) {
		let side = y2 > y1 ? 1 : 0;
		if(y2 == y1) {
			side = x2 - x1 > 0 ? 1 : 0;
		}
		let vec_x = 0;
		let vec_y = 0;
		if(y2 == y1) {
			let x = 0;
			let y = -1;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			let v_x = x;
			let v_y = y;
			vec_x = v_x;
			vec_y = v_y;
		} else {
			let x = 1;
			let y = -(x2 - x1) / (y2 - y1);
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			let v_x = x;
			let v_y = y;
			vec_x = v_x;
			vec_y = v_y;
		}
		let currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
		if(currentLength != 0) {
			let mul = strength / currentLength;
			vec_x *= mul;
			vec_y *= mul;
		}
		let x = x1 + side * vec_x;
		let y = y1 + side * vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let p1_x = x;
		let p1_y = y;
		let x3 = x2 + side * vec_x;
		let y3 = y2 + side * vec_y;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let p2_x = x3;
		let p2_y = y3;
		let x4 = p1_x - vec_x;
		let y4 = p1_y - vec_y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let p3_x = x4;
		let p3_y = y4;
		let x5 = p2_x - vec_x;
		let y5 = p2_y - vec_y;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		let p4_x = x5;
		let p4_y = y5;
		g2.fillTriangle(p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
		g2.fillTriangle(p3_x,p3_y,p2_x,p2_y,p4_x,p4_y);
	}
	static fillCircle(g2,cx,cy,radius,segments) {
		if(segments == null) {
			segments = 0;
		}
		if(segments <= 0) {
			segments = Math.floor(10 * Math.sqrt(radius));
		}
		let theta = 2 * Math.PI / segments;
		let c = Math.cos(theta);
		let s = Math.sin(theta);
		let x = radius;
		let y = 0.0;
		let _g = 0;
		let _g1 = segments;
		while(_g < _g1) {
			let n = _g++;
			let px = x + cx;
			let py = y + cy;
			let t = x;
			x = c * x - s * y;
			y = c * y + s * t;
			g2.fillTriangle(px,py,x + cx,y + cy,cx,cy);
		}
	}
	static drawPolygon(g2,x,y,vertices,strength) {
		if(strength == null) {
			strength = 1;
		}
		let iterator_current = 0;
		let iterator_array = vertices;
		let v0 = iterator_array[iterator_current++];
		let v1 = v0;
		while(iterator_current < iterator_array.length) {
			let v2 = iterator_array[iterator_current++];
			g2.drawLine(v1.x + x,v1.y + y,v2.x + x,v2.y + y,strength);
			v1 = v2;
		}
		g2.drawLine(v1.x + x,v1.y + y,v0.x + x,v0.y + y,strength);
	}
	static fillPolygon(g2,x,y,vertices) {
		let iterator_current = 0;
		let iterator_array = vertices;
		if(iterator_current >= iterator_array.length) {
			return;
		}
		let v0 = iterator_array[iterator_current++];
		if(iterator_current >= iterator_array.length) {
			return;
		}
		let v1 = iterator_array[iterator_current++];
		while(iterator_current < iterator_array.length) {
			let v2 = iterator_array[iterator_current++];
			g2.fillTriangle(v0.x + x,v0.y + y,v1.x + x,v1.y + y,v2.x + x,v2.y + y);
			v1 = v2;
		}
	}
	static drawCubicBezier(g2,x,y,segments,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		if(segments == null) {
			segments = 20;
		}
		let t;
		let q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,x,y);
		let q1;
		let _g = 1;
		let _g1 = segments + 1;
		while(_g < _g1) {
			let i = _g++;
			t = i / segments;
			q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,x,y);
			g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
			q0 = q1;
		}
	}
	static drawCubicBezierPath(g2,x,y,segments,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		if(segments == null) {
			segments = 20;
		}
		let i = 0;
		let t;
		let q0 = null;
		let q1 = null;
		while(i < x.length - 3) {
			if(i == 0) {
				q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
			}
			let _g = 1;
			let _g1 = segments + 1;
			while(_g < _g1) {
				let j = _g++;
				t = j / segments;
				q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
				g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
				q0 = q1;
			}
			i += 3;
		}
	}
	static calculateCubicBezierPoint(t,x,y) {
		let u = 1 - t;
		let tt = t * t;
		let uu = u * u;
		let uuu = uu * u;
		let ttt = tt * t;
		let p = [uuu * x[0],uuu * y[0]];
		p[0] += 3 * uu * t * x[1];
		p[1] += 3 * uu * t * y[1];
		p[0] += 3 * u * tt * x[2];
		p[1] += 3 * u * tt * y[2];
		p[0] += ttt * x[3];
		p[1] += ttt * y[3];
		return p;
	}
	static drawAlignedString(g2,text,x,y,horAlign,verAlign) {
		let xoffset = 0.0;
		if(horAlign == 1 || horAlign == 2) {
			let width = g2.get_font().width(g2.get_fontSize(),text);
			if(horAlign == 1) {
				xoffset = -width * 0.5;
			} else {
				xoffset = -width;
			}
		}
		let yoffset = 0.0;
		if(verAlign == 1 || verAlign == 2) {
			let height = g2.get_font().height(g2.get_fontSize());
			if(verAlign == 1) {
				yoffset = -height * 0.5;
			} else {
				yoffset = -height;
			}
		}
		g2.drawString(text,x + xoffset,y + yoffset);
	}
	static drawAlignedCharacters(g2,text,start,length,x,y,horAlign,verAlign) {
		let xoffset = 0.0;
		if(horAlign == 1 || horAlign == 2) {
			let width = g2.get_font().widthOfCharacters(g2.get_fontSize(),text,start,length);
			if(horAlign == 1) {
				xoffset = -width * 0.5;
			} else {
				xoffset = -width;
			}
		}
		let yoffset = 0.0;
		if(verAlign == 1 || verAlign == 2) {
			let height = g2.get_font().height(g2.get_fontSize());
			if(verAlign == 1) {
				yoffset = -height * 0.5;
			} else {
				yoffset = -height;
			}
		}
		g2.drawCharacters(text,start,length,x + xoffset,y + yoffset);
	}
}
$hxClasses["kha.graphics2.GraphicsExtension"] = kha_graphics2_GraphicsExtension;
kha_graphics2_GraphicsExtension.__name__ = "kha.graphics2.GraphicsExtension";
class kha_graphics2_truetype_VectorOfIntPointer {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = "kha.graphics2.truetype.VectorOfIntPointer";
Object.assign(kha_graphics2_truetype_VectorOfIntPointer.prototype, {
	__class__: kha_graphics2_truetype_VectorOfIntPointer
	,value: null
});
class kha_graphics2_truetype_Stbtt_$temp_$rect {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = "kha.graphics2.truetype.Stbtt_temp_rect";
Object.assign(kha_graphics2_truetype_Stbtt_$temp_$rect.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
	,x0: null
	,y0: null
	,x1: null
	,y1: null
});
class kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics";
Object.assign(kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
	,advanceWidth: null
	,leftSideBearing: null
});
class kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_font_v_metrics";
Object.assign(kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
	,ascent: null
	,descent: null
	,lineGap: null
});
class kha_graphics2_truetype_Stbtt_$temp_$region {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_temp_region"] = kha_graphics2_truetype_Stbtt_$temp_$region;
kha_graphics2_truetype_Stbtt_$temp_$region.__name__ = "kha.graphics2.truetype.Stbtt_temp_region";
Object.assign(kha_graphics2_truetype_Stbtt_$temp_$region.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$region
	,width: null
	,height: null
	,xoff: null
	,yoff: null
});
class kha_graphics2_truetype_Stbtt_$_$buf {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__buf"] = kha_graphics2_truetype_Stbtt_$_$buf;
kha_graphics2_truetype_Stbtt_$_$buf.__name__ = "kha.graphics2.truetype.Stbtt__buf";
Object.assign(kha_graphics2_truetype_Stbtt_$_$buf.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$buf
	,data: null
	,cursor: null
});
class kha_graphics2_truetype_Stbtt_$bakedchar {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = "kha.graphics2.truetype.Stbtt_bakedchar";
Object.assign(kha_graphics2_truetype_Stbtt_$bakedchar.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$bakedchar
	,x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
});
class kha_graphics2_truetype_Stbtt_$aligned_$quad {
}
$hxClasses["kha.graphics2.truetype.Stbtt_aligned_quad"] = kha_graphics2_truetype_Stbtt_$aligned_$quad;
kha_graphics2_truetype_Stbtt_$aligned_$quad.__name__ = "kha.graphics2.truetype.Stbtt_aligned_quad";
Object.assign(kha_graphics2_truetype_Stbtt_$aligned_$quad.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$aligned_$quad
	,x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
});
class kha_graphics2_truetype_Stbtt_$packedchar {
}
$hxClasses["kha.graphics2.truetype.Stbtt_packedchar"] = kha_graphics2_truetype_Stbtt_$packedchar;
kha_graphics2_truetype_Stbtt_$packedchar.__name__ = "kha.graphics2.truetype.Stbtt_packedchar";
Object.assign(kha_graphics2_truetype_Stbtt_$packedchar.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$packedchar
	,x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,xoff2: null
	,yoff2: null
});
class kha_graphics2_truetype_Stbtt_$pack_$range {
}
$hxClasses["kha.graphics2.truetype.Stbtt_pack_range"] = kha_graphics2_truetype_Stbtt_$pack_$range;
kha_graphics2_truetype_Stbtt_$pack_$range.__name__ = "kha.graphics2.truetype.Stbtt_pack_range";
Object.assign(kha_graphics2_truetype_Stbtt_$pack_$range.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$pack_$range
	,font_size: null
	,first_unicode_codepoint_in_range: null
	,array_of_unicode_codepoints: null
	,num_chars: null
	,chardata_for_range: null
	,h_oversample: null
	,v_oversample: null
});
class kha_graphics2_truetype_Stbtt_$pack_$context {
}
$hxClasses["kha.graphics2.truetype.Stbtt_pack_context"] = kha_graphics2_truetype_Stbtt_$pack_$context;
kha_graphics2_truetype_Stbtt_$pack_$context.__name__ = "kha.graphics2.truetype.Stbtt_pack_context";
Object.assign(kha_graphics2_truetype_Stbtt_$pack_$context.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$pack_$context
	,width: null
	,height: null
	,stride_in_bytes: null
	,padding: null
	,h_oversample: null
	,v_oversample: null
	,pixels: null
});
class kha_graphics2_truetype_Stbtt_$fontinfo {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = "kha.graphics2.truetype.Stbtt_fontinfo";
Object.assign(kha_graphics2_truetype_Stbtt_$fontinfo.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$fontinfo
	,data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,gpos: null
	,index_map: null
	,indexToLocFormat: null
	,cff: null
	,charstrings: null
	,gsubrs: null
	,subrs: null
	,fontdicts: null
	,fdselect: null
});
class kha_graphics2_truetype_Stbtt_$vertex {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = "kha.graphics2.truetype.Stbtt_vertex";
Object.assign(kha_graphics2_truetype_Stbtt_$vertex.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$vertex
	,x: null
	,y: null
	,cx: null
	,cy: null
	,cx1: null
	,cy1: null
	,type: null
	,padding: null
});
class kha_graphics2_truetype_Stbtt_$_$bitmap {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = "kha.graphics2.truetype.Stbtt__bitmap";
Object.assign(kha_graphics2_truetype_Stbtt_$_$bitmap.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
	,w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
});
class kha_graphics2_truetype_Stbtt_$_$edge {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = "kha.graphics2.truetype.Stbtt__edge";
Object.assign(kha_graphics2_truetype_Stbtt_$_$edge.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$edge
	,x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
});
class kha_graphics2_truetype_Stbtt_$_$active_$edge {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = "kha.graphics2.truetype.Stbtt__active_edge";
Object.assign(kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
	,next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
});
class kha_graphics2_truetype_Stbtt_$_$point {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = "kha.graphics2.truetype.Stbtt__point";
Object.assign(kha_graphics2_truetype_Stbtt_$_$point.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$point
	,x: null
	,y: null
});
class kha_graphics2_truetype_Stbtt_$_$csctx {
	constructor() {
	}
}
$hxClasses["kha.graphics2.truetype.Stbtt__csctx"] = kha_graphics2_truetype_Stbtt_$_$csctx;
kha_graphics2_truetype_Stbtt_$_$csctx.__name__ = "kha.graphics2.truetype.Stbtt__csctx";
Object.assign(kha_graphics2_truetype_Stbtt_$_$csctx.prototype, {
	__class__: kha_graphics2_truetype_Stbtt_$_$csctx
	,bounds: null
	,started: null
	,first_x: null
	,first_y: null
	,x: null
	,y: null
	,min_x: null
	,min_y: null
	,max_x: null
	,max_y: null
	,pvertices: null
	,num_vertices: null
});
class kha_graphics2_truetype_StbTruetype {
	static STBTT_assert(value) {
		if(!value) {
			throw haxe_Exception.thrown("Error");
		}
	}
	static STBTT_POINT_SIZE(x) {
		return -x;
	}
	static stbtt__buf_get8(b) {
		if(b.cursor >= b.data.get_length()) {
			return 0;
		}
		let pos = b.cursor++;
		if(pos == null) {
			pos = 0;
		}
		return b.data.readU8(pos);
	}
	static stbtt__buf_peek8(b) {
		if(b.cursor >= b.data.get_length()) {
			return 0;
		}
		let pos = b.cursor;
		if(pos == null) {
			pos = 0;
		}
		return b.data.readU8(pos);
	}
	static stbtt__buf_seek(b,o) {
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
	}
	static stbtt__buf_skip(b,o) {
		let o1 = b.cursor + o;
		if(o1 > b.data.get_length() || o1 < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
	}
	static stbtt__buf_get(b,n) {
		let v = 0;
		if(!(n >= 1 && n <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g = 0;
		let _g1 = n;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		return v;
	}
	static stbtt__new_buf(p,size) {
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		if(size >= 1073741824) {
			throw haxe_Exception.thrown("Error");
		}
		r.data = p;
		r.cursor = 0;
		return r;
	}
	static stbtt__buf_get16(b) {
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		return v;
	}
	static stbtt__buf_get32(b) {
		let v = 0;
		let _g = 0;
		let _g1 = 4;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		return v;
	}
	static stbtt__buf_range(b,o,s) {
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		if(o < 0 || s < 0 || o > b.data.get_length() || s > b.data.get_length() - o) {
			return r1;
		}
		r1.data = b.data.sub(o,s);
		return r1;
	}
	static stbtt__cff_get_index(b) {
		let start = b.cursor;
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		let count = v;
		if(count > 0) {
			let offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			let v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let _g = 0;
			let _g1 = offsize;
			while(_g < _g1) {
				let i = _g++;
				let v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			let o1 = b.cursor + (v - 1);
			if(o1 > b.data.get_length() || o1 < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
			let s = b.cursor - start;
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
				return r1;
			} else {
				r1.data = b.data.sub(start,s);
				return r1;
			}
		}
		return b;
	}
	static stbtt__cff_int(b) {
		let b0;
		if(b.cursor >= b.data.get_length()) {
			b0 = 0;
		} else {
			let pos = b.cursor++;
			if(pos == null) {
				pos = 0;
			}
			b0 = b.data.readU8(pos);
		}
		if(b0 >= 32 && b0 <= 246) {
			return b0 - 139;
		} else if(b0 >= 247 && b0 <= 250) {
			let tmp;
			if(b.cursor >= b.data.get_length()) {
				tmp = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				tmp = b.data.readU8(pos);
			}
			return (b0 - 247) * 256 + tmp + 108;
		} else if(b0 >= 251 && b0 <= 254) {
			let tmp;
			if(b.cursor >= b.data.get_length()) {
				tmp = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				tmp = b.data.readU8(pos);
			}
			return -(b0 - 251) * 256 - tmp - 108;
		} else if(b0 == 28) {
			let v = 0;
			let _g = 0;
			let _g1 = 2;
			while(_g < _g1) {
				let i = _g++;
				let v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			return v;
		} else if(b0 == 29) {
			let v = 0;
			let _g = 0;
			let _g1 = 4;
			while(_g < _g1) {
				let i = _g++;
				let v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			return v;
		} else {
			throw haxe_Exception.thrown("Error");
		}
	}
	static stbtt__cff_skip_operand(b) {
		let v;
		let b0;
		if(b.cursor >= b.data.get_length()) {
			b0 = 0;
		} else {
			let pos = b.cursor;
			if(pos == null) {
				pos = 0;
			}
			b0 = b.data.readU8(pos);
		}
		if(b0 < 28) {
			throw haxe_Exception.thrown("Error");
		}
		if(b0 == 30) {
			let o = b.cursor + 1;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			while(b.cursor < b.data.get_length()) {
				if(b.cursor >= b.data.get_length()) {
					v = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = b.data.readU8(pos);
				}
				if((v & 15) == 15 || v >> 4 == 15) {
					break;
				}
			}
		} else {
			let b0;
			if(b.cursor >= b.data.get_length()) {
				b0 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = b.data.readU8(pos);
			}
			if(!(b0 >= 32 && b0 <= 246)) {
				if(b0 >= 247 && b0 <= 250) {
					if(b.cursor < b.data.get_length()) {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b.data.readU8(pos);
					}
				} else if(b0 >= 251 && b0 <= 254) {
					if(b.cursor < b.data.get_length()) {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b.data.readU8(pos);
					}
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
				} else {
					throw haxe_Exception.thrown("Error");
				}
			}
		}
	}
	static stbtt__dict_get(b,key) {
		if(0 > b.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
		let ret = null;
		while(b.cursor < b.data.get_length()) {
			let start = b.cursor;
			let op;
			while(true) {
				let tmp;
				if(b.cursor >= b.data.get_length()) {
					tmp = 0;
				} else {
					let pos = b.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = b.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				let v;
				let b0;
				if(b.cursor >= b.data.get_length()) {
					b0 = 0;
				} else {
					let pos = b.cursor;
					if(pos == null) {
						pos = 0;
					}
					b0 = b.data.readU8(pos);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					let o = b.cursor + 1;
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					while(b.cursor < b.data.get_length()) {
						if(b.cursor >= b.data.get_length()) {
							v = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = b.data.readU8(pos);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					let b0;
					if(b.cursor >= b.data.get_length()) {
						b0 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = b.data.readU8(pos);
					}
					if(!(b0 >= 32 && b0 <= 246)) {
						if(b0 >= 247 && b0 <= 250) {
							if(b.cursor < b.data.get_length()) {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								b.data.readU8(pos);
							}
						} else if(b0 >= 251 && b0 <= 254) {
							if(b.cursor < b.data.get_length()) {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								b.data.readU8(pos);
							}
						} else if(b0 == 28) {
							let v = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(b.cursor >= b.data.get_length()) {
									v1 = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = b.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else if(b0 == 29) {
							let v = 0;
							let _g = 0;
							let _g1 = 4;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(b.cursor >= b.data.get_length()) {
									v1 = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = b.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			let end = b.cursor;
			if(b.cursor >= b.data.get_length()) {
				op = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				op = b.data.readU8(pos);
			}
			if(op == 12) {
				let op1;
				if(b.cursor >= b.data.get_length()) {
					op1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op1 = b.data.readU8(pos);
				}
				op = op1 | 256;
			}
			if(op == key) {
				let s = end - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
					ret = r1;
				} else {
					r1.data = b.data.sub(start,s);
					ret = r1;
				}
				break;
			}
		}
		if(ret != null) {
			return ret;
		} else {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(0 > b.data.get_length() || 0 > b.data.get_length()) {
				return r1;
			} else {
				r1.data = b.data.sub(0,0);
				return r1;
			}
		}
	}
	static stbtt__dict_get_ints(b,key,outcount,out) {
		let i = 0;
		if(0 > b.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
		let ret = null;
		while(b.cursor < b.data.get_length()) {
			let start = b.cursor;
			let op;
			while(true) {
				let tmp;
				if(b.cursor >= b.data.get_length()) {
					tmp = 0;
				} else {
					let pos = b.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = b.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				let v;
				let b0;
				if(b.cursor >= b.data.get_length()) {
					b0 = 0;
				} else {
					let pos = b.cursor;
					if(pos == null) {
						pos = 0;
					}
					b0 = b.data.readU8(pos);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					let o = b.cursor + 1;
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					while(b.cursor < b.data.get_length()) {
						if(b.cursor >= b.data.get_length()) {
							v = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = b.data.readU8(pos);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					let b0;
					if(b.cursor >= b.data.get_length()) {
						b0 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = b.data.readU8(pos);
					}
					if(!(b0 >= 32 && b0 <= 246)) {
						if(b0 >= 247 && b0 <= 250) {
							if(b.cursor < b.data.get_length()) {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								b.data.readU8(pos);
							}
						} else if(b0 >= 251 && b0 <= 254) {
							if(b.cursor < b.data.get_length()) {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								b.data.readU8(pos);
							}
						} else if(b0 == 28) {
							let v = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(b.cursor >= b.data.get_length()) {
									v1 = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = b.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else if(b0 == 29) {
							let v = 0;
							let _g = 0;
							let _g1 = 4;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(b.cursor >= b.data.get_length()) {
									v1 = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = b.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			let end = b.cursor;
			if(b.cursor >= b.data.get_length()) {
				op = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				op = b.data.readU8(pos);
			}
			if(op == 12) {
				let op1;
				if(b.cursor >= b.data.get_length()) {
					op1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op1 = b.data.readU8(pos);
				}
				op = op1 | 256;
			}
			if(op == key) {
				let s = end - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
					ret = r1;
				} else {
					r1.data = b.data.sub(start,s);
					ret = r1;
				}
				break;
			}
		}
		let operands;
		if(ret != null) {
			operands = ret;
		} else {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(0 > b.data.get_length() || 0 > b.data.get_length()) {
				operands = r1;
			} else {
				r1.data = b.data.sub(0,0);
				operands = r1;
			}
		}
		while(i < outcount && operands.cursor < operands.data.get_length()) {
			let b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				let pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			let tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = -(b0 - 251) * 256 - tmp1 - 108;
			} else if(b0 == 28) {
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				let v = 0;
				let _g = 0;
				let _g1 = 4;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			out[i] = tmp;
			++i;
		}
	}
	static stbtt__cff_index_count(b) {
		if(0 > b.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		return v;
	}
	static stbtt__cff_index_get(b,i) {
		if(0 > b.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		let count = v;
		let offsize;
		if(b.cursor >= b.data.get_length()) {
			offsize = 0;
		} else {
			let pos = b.cursor++;
			if(pos == null) {
				pos = 0;
			}
			offsize = b.data.readU8(pos);
		}
		if(!(i >= 0 && i < count)) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let o = b.cursor + i * offsize;
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
		let v1 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g2 = 0;
		let _g3 = offsize;
		while(_g2 < _g3) {
			let i = _g2++;
			let v;
			if(b.cursor >= b.data.get_length()) {
				v = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b.data.readU8(pos);
			}
			v1 = v1 << 8 | v;
		}
		let start = v1;
		let v2 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g4 = 0;
		let _g5 = offsize;
		while(_g4 < _g5) {
			let i = _g4++;
			let v;
			if(b.cursor >= b.data.get_length()) {
				v = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b.data.readU8(pos);
			}
			v2 = v2 << 8 | v;
		}
		let end = v2;
		let o1 = 2 + (count + 1) * offsize + start;
		let s = end - start;
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		if(o1 < 0 || s < 0 || o1 > b.data.get_length() || s > b.data.get_length() - o1) {
			return r1;
		} else {
			r1.data = b.data.sub(o1,s);
			return r1;
		}
	}
	static ttBYTE(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		return p.readU8(pos);
	}
	static ttCHAR(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let n = p.readU8(pos);
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	static ttUSHORT(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		return ch2 | ch1 << 8;
	}
	static ttSHORT(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	static ttULONG(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch1 = p.readU8(pos1);
		let ch2 = p.readU8(pos1 + 1);
		let ch3 = p.readU8(pos1 + 2);
		let ch4 = p.readU8(pos1 + 3);
		return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
	}
	static ttLONG(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let ch3 = p.readU8(pos + 2);
		let ch4 = p.readU8(pos + 3);
		return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
	}
	static to_stbtt_uint16(value) {
		return value & 65535;
	}
	static ttFixed(p,pos) {
		if(pos == null) {
			pos = 0;
		}
		let pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch1 = p.readU8(pos1);
		let ch2 = p.readU8(pos1 + 1);
		let ch3 = p.readU8(pos1 + 2);
		let ch4 = p.readU8(pos1 + 3);
		return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
	}
	static stbtt_tag4(p,pos,c0,c1,c2,c3) {
		if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
			return p.readU8(pos + 3) == c3;
		} else {
			return false;
		}
	}
	static stbtt_tag(p,pos,str) {
		let c0 = HxOverrides.cca(str,0);
		let c1 = HxOverrides.cca(str,1);
		let c2 = HxOverrides.cca(str,2);
		let c3 = HxOverrides.cca(str,3);
		if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
			return p.readU8(pos + 3) == c3;
		} else {
			return false;
		}
	}
	static stbtt__isfont(font) {
		let c0 = HxOverrides.cca("1",0);
		if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
			return true;
		}
		let c01 = HxOverrides.cca("typ1",0);
		let c1 = HxOverrides.cca("typ1",1);
		let c2 = HxOverrides.cca("typ1",2);
		let c3 = HxOverrides.cca("typ1",3);
		if(font.readU8(0) == c01 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
			return true;
		}
		let c02 = HxOverrides.cca("OTTO",0);
		let c11 = HxOverrides.cca("OTTO",1);
		let c21 = HxOverrides.cca("OTTO",2);
		let c31 = HxOverrides.cca("OTTO",3);
		if(font.readU8(0) == c02 && font.readU8(1) == c11 && font.readU8(2) == c21 && font.readU8(3) == c31) {
			return true;
		}
		if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
			return true;
		}
		let c03 = HxOverrides.cca("true",0);
		let c12 = HxOverrides.cca("true",1);
		let c22 = HxOverrides.cca("true",2);
		let c32 = HxOverrides.cca("true",3);
		if(font.readU8(0) == c03 && font.readU8(1) == c12 && font.readU8(2) == c22 && font.readU8(3) == c32) {
			return true;
		}
		return false;
	}
	static stbtt__find_table(data,fontstart,tag) {
		let pos = fontstart + 4;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = data.readU8(pos);
		let ch2 = data.readU8(pos + 1);
		let num_tables = ch2 | ch1 << 8;
		let tabledir = fontstart + 12;
		let _g = 0;
		let _g1 = num_tables;
		while(_g < _g1) {
			let i = _g++;
			let loc = tabledir + 16 * i;
			let c0 = HxOverrides.cca(tag,0);
			let c1 = HxOverrides.cca(tag,1);
			let c2 = HxOverrides.cca(tag,2);
			let c3 = HxOverrides.cca(tag,3);
			if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
				let pos = loc + 8;
				if(pos == null) {
					pos = 0;
				}
				let pos1 = pos;
				if(pos1 == null) {
					pos1 = 0;
				}
				let ch1 = data.readU8(pos1);
				let ch2 = data.readU8(pos1 + 1);
				let ch3 = data.readU8(pos1 + 2);
				let ch4 = data.readU8(pos1 + 3);
				return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
			}
		}
		return 0;
	}
	static stbtt_GetFontOffsetForIndex(font_collection,index) {
		if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
			if(index == 0) {
				return 0;
			} else {
				return -1;
			}
		}
		let c0 = HxOverrides.cca("ttcf",0);
		let c1 = HxOverrides.cca("ttcf",1);
		let c2 = HxOverrides.cca("ttcf",2);
		let c3 = HxOverrides.cca("ttcf",3);
		if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
			let tmp;
			let pos = 4;
			if(pos == null) {
				pos = 0;
			}
			let pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch1 = font_collection.readU8(pos1);
			let ch2 = font_collection.readU8(pos1 + 1);
			let ch3 = font_collection.readU8(pos1 + 2);
			let ch4 = font_collection.readU8(pos1 + 3);
			if((ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
				let pos = 4;
				if(pos == null) {
					pos = 0;
				}
				let pos1 = pos;
				if(pos1 == null) {
					pos1 = 0;
				}
				let ch1 = font_collection.readU8(pos1);
				let ch2 = font_collection.readU8(pos1 + 1);
				let ch3 = font_collection.readU8(pos1 + 2);
				let ch4 = font_collection.readU8(pos1 + 3);
				tmp = (ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) == 131072;
			} else {
				tmp = true;
			}
			if(tmp) {
				let pos = 8;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = font_collection.readU8(pos);
				let ch2 = font_collection.readU8(pos + 1);
				let ch3 = font_collection.readU8(pos + 2);
				let ch4 = font_collection.readU8(pos + 3);
				let n = ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
				if(index >= n) {
					return -1;
				}
				let pos1 = 12 + index * 4;
				if(pos1 == null) {
					pos1 = 0;
				}
				let pos2 = pos1;
				if(pos2 == null) {
					pos2 = 0;
				}
				let ch11 = font_collection.readU8(pos2);
				let ch21 = font_collection.readU8(pos2 + 1);
				let ch31 = font_collection.readU8(pos2 + 2);
				let ch41 = font_collection.readU8(pos2 + 3);
				return ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24;
			}
		}
		return -1;
	}
	static stbtt_GetNumberOfFonts(font_collection) {
		if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
			return 1;
		}
		let c0 = HxOverrides.cca("ttcf",0);
		let c1 = HxOverrides.cca("ttcf",1);
		let c2 = HxOverrides.cca("ttcf",2);
		let c3 = HxOverrides.cca("ttcf",3);
		if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
			let tmp;
			let pos = 4;
			if(pos == null) {
				pos = 0;
			}
			let pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch1 = font_collection.readU8(pos1);
			let ch2 = font_collection.readU8(pos1 + 1);
			let ch3 = font_collection.readU8(pos1 + 2);
			let ch4 = font_collection.readU8(pos1 + 3);
			if((ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
				let pos = 4;
				if(pos == null) {
					pos = 0;
				}
				let pos1 = pos;
				if(pos1 == null) {
					pos1 = 0;
				}
				let ch1 = font_collection.readU8(pos1);
				let ch2 = font_collection.readU8(pos1 + 1);
				let ch3 = font_collection.readU8(pos1 + 2);
				let ch4 = font_collection.readU8(pos1 + 3);
				tmp = (ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) == 131072;
			} else {
				tmp = true;
			}
			if(tmp) {
				let pos = 8;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = font_collection.readU8(pos);
				let ch2 = font_collection.readU8(pos + 1);
				let ch3 = font_collection.readU8(pos + 2);
				let ch4 = font_collection.readU8(pos + 3);
				return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
			}
		}
		return 0;
	}
	static stbtt__get_subrs(cff,fontdict) {
		let subrsoff = [0];
		let private_loc = [0,0];
		let i = 0;
		if(0 > fontdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		fontdict.cursor = 0 > fontdict.data.get_length() ? fontdict.data.get_length() : 0;
		let ret = null;
		while(fontdict.cursor < fontdict.data.get_length()) {
			let start = fontdict.cursor;
			let op;
			while(true) {
				let tmp;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					tmp = 0;
				} else {
					let pos = fontdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = fontdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				let v;
				let b0;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					b0 = 0;
				} else {
					let pos = fontdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					b0 = fontdict.data.readU8(pos);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					let o = fontdict.cursor + 1;
					if(o > fontdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					fontdict.cursor = o > fontdict.data.get_length() || o < 0 ? fontdict.data.get_length() : o;
					while(fontdict.cursor < fontdict.data.get_length()) {
						if(fontdict.cursor >= fontdict.data.get_length()) {
							v = 0;
						} else {
							let pos = fontdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = fontdict.data.readU8(pos);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					let b0;
					if(fontdict.cursor >= fontdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = fontdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = fontdict.data.readU8(pos);
					}
					if(!(b0 >= 32 && b0 <= 246)) {
						if(b0 >= 247 && b0 <= 250) {
							if(fontdict.cursor < fontdict.data.get_length()) {
								let pos = fontdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								fontdict.data.readU8(pos);
							}
						} else if(b0 >= 251 && b0 <= 254) {
							if(fontdict.cursor < fontdict.data.get_length()) {
								let pos = fontdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								fontdict.data.readU8(pos);
							}
						} else if(b0 == 28) {
							let v = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = fontdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = fontdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else if(b0 == 29) {
							let v = 0;
							let _g = 0;
							let _g1 = 4;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = fontdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = fontdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			let end = fontdict.cursor;
			if(fontdict.cursor >= fontdict.data.get_length()) {
				op = 0;
			} else {
				let pos = fontdict.cursor++;
				if(pos == null) {
					pos = 0;
				}
				op = fontdict.data.readU8(pos);
			}
			if(op == 12) {
				let op1;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					op1 = 0;
				} else {
					let pos = fontdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op1 = fontdict.data.readU8(pos);
				}
				op = op1 | 256;
			}
			if(op == 18) {
				let s = end - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start < 0 || s < 0 || start > fontdict.data.get_length() || s > fontdict.data.get_length() - start) {
					ret = r1;
				} else {
					r1.data = fontdict.data.sub(start,s);
					ret = r1;
				}
				break;
			}
		}
		let operands;
		if(ret != null) {
			operands = ret;
		} else {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(0 > fontdict.data.get_length() || 0 > fontdict.data.get_length()) {
				operands = r1;
			} else {
				r1.data = fontdict.data.sub(0,0);
				operands = r1;
			}
		}
		while(i < 2 && operands.cursor < operands.data.get_length()) {
			let b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				let pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			let tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = -(b0 - 251) * 256 - tmp1 - 108;
			} else if(b0 == 28) {
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				let v = 0;
				let _g = 0;
				let _g1 = 4;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			private_loc[i] = tmp;
			++i;
		}
		if(private_loc[1] == 0 || private_loc[0] == 0) {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			return r;
		}
		let o = private_loc[1];
		let s = private_loc[0];
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		let pdict;
		if(o < 0 || s < 0 || o > cff.data.get_length() || s > cff.data.get_length() - o) {
			pdict = r1;
		} else {
			r1.data = cff.data.sub(o,s);
			pdict = r1;
		}
		let i1 = 0;
		if(0 > pdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
		let ret1 = null;
		while(pdict.cursor < pdict.data.get_length()) {
			let start = pdict.cursor;
			let op;
			while(true) {
				let tmp;
				if(pdict.cursor >= pdict.data.get_length()) {
					tmp = 0;
				} else {
					let pos = pdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = pdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				let v;
				let b0;
				if(pdict.cursor >= pdict.data.get_length()) {
					b0 = 0;
				} else {
					let pos = pdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					b0 = pdict.data.readU8(pos);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					let o = pdict.cursor + 1;
					if(o > pdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					pdict.cursor = o > pdict.data.get_length() || o < 0 ? pdict.data.get_length() : o;
					while(pdict.cursor < pdict.data.get_length()) {
						if(pdict.cursor >= pdict.data.get_length()) {
							v = 0;
						} else {
							let pos = pdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = pdict.data.readU8(pos);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					let b0;
					if(pdict.cursor >= pdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = pdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = pdict.data.readU8(pos);
					}
					if(!(b0 >= 32 && b0 <= 246)) {
						if(b0 >= 247 && b0 <= 250) {
							if(pdict.cursor < pdict.data.get_length()) {
								let pos = pdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								pdict.data.readU8(pos);
							}
						} else if(b0 >= 251 && b0 <= 254) {
							if(pdict.cursor < pdict.data.get_length()) {
								let pos = pdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								pdict.data.readU8(pos);
							}
						} else if(b0 == 28) {
							let v = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(pdict.cursor >= pdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = pdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = pdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else if(b0 == 29) {
							let v = 0;
							let _g = 0;
							let _g1 = 4;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(pdict.cursor >= pdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = pdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = pdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			let end = pdict.cursor;
			if(pdict.cursor >= pdict.data.get_length()) {
				op = 0;
			} else {
				let pos = pdict.cursor++;
				if(pos == null) {
					pos = 0;
				}
				op = pdict.data.readU8(pos);
			}
			if(op == 12) {
				let op1;
				if(pdict.cursor >= pdict.data.get_length()) {
					op1 = 0;
				} else {
					let pos = pdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op1 = pdict.data.readU8(pos);
				}
				op = op1 | 256;
			}
			if(op == 19) {
				let s = end - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start < 0 || s < 0 || start > pdict.data.get_length() || s > pdict.data.get_length() - start) {
					ret1 = r1;
				} else {
					r1.data = pdict.data.sub(start,s);
					ret1 = r1;
				}
				break;
			}
		}
		let operands1;
		if(ret1 != null) {
			operands1 = ret1;
		} else {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
				operands1 = r1;
			} else {
				r1.data = pdict.data.sub(0,0);
				operands1 = r1;
			}
		}
		while(i1 < 1 && operands1.cursor < operands1.data.get_length()) {
			let b0;
			if(operands1.cursor >= operands1.data.get_length()) {
				b0 = 0;
			} else {
				let pos = operands1.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands1.data.readU8(pos);
			}
			let tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				let tmp1;
				if(operands1.cursor >= operands1.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands1.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands1.data.readU8(pos);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				let tmp1;
				if(operands1.cursor >= operands1.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands1.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands1.data.readU8(pos);
				}
				tmp = -(b0 - 251) * 256 - tmp1 - 108;
			} else if(b0 == 28) {
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands1.cursor >= operands1.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands1.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands1.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				let v = 0;
				let _g = 0;
				let _g1 = 4;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands1.cursor >= operands1.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands1.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands1.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			subrsoff[i1] = tmp;
			++i1;
		}
		if(subrsoff[0] == 0) {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			return r;
		}
		let o1 = private_loc[1] + subrsoff[0];
		if(o1 > cff.data.get_length() || o1 < 0) {
			throw haxe_Exception.thrown("Error");
		}
		cff.cursor = o1 > cff.data.get_length() || o1 < 0 ? cff.data.get_length() : o1;
		let start = cff.cursor;
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(cff.cursor >= cff.data.get_length()) {
				v1 = 0;
			} else {
				let pos = cff.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = cff.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		let count = v;
		if(count > 0) {
			let offsize;
			if(cff.cursor >= cff.data.get_length()) {
				offsize = 0;
			} else {
				let pos = cff.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = cff.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let o = cff.cursor + offsize * count;
			if(o > cff.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			cff.cursor = o > cff.data.get_length() || o < 0 ? cff.data.get_length() : o;
			let v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let _g = 0;
			let _g1 = offsize;
			while(_g < _g1) {
				let i = _g++;
				let v1;
				if(cff.cursor >= cff.data.get_length()) {
					v1 = 0;
				} else {
					let pos = cff.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = cff.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			let o1 = cff.cursor + (v - 1);
			if(o1 > cff.data.get_length() || o1 < 0) {
				throw haxe_Exception.thrown("Error");
			}
			cff.cursor = o1 > cff.data.get_length() || o1 < 0 ? cff.data.get_length() : o1;
			let s = cff.cursor - start;
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(start < 0 || s < 0 || start > cff.data.get_length() || s > cff.data.get_length() - start) {
				return r1;
			} else {
				r1.data = cff.data.sub(start,s);
				return r1;
			}
		} else {
			return cff;
		}
	}
	static stbtt_InitFont(info,data,fontstart) {
		info.data = data;
		info.fontstart = fontstart;
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		info.cff = r;
		let cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
		info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
		info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
		info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
		info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
		info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
		info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
		info.gpos = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"GPOS");
		if(cmap == 0 || info.head == 0 || info.hhea == 0 || info.hmtx == 0) {
			return false;
		}
		if(info.glyf != 0) {
			if(info.loca == 0) {
				return false;
			}
		} else {
			let topdict;
			let topdictidx;
			let cstype = [2];
			let charstrings = [0];
			let fdarrayoff = [0];
			let fdselectoff = [0];
			let cff = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"CFF ");
			if(cff == 0) {
				return false;
			}
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			info.fontdicts = r;
			let r1 = new kha_graphics2_truetype_Stbtt_$_$buf();
			r1.data = null;
			r1.cursor = 0;
			info.fdselect = r1;
			let cff_data = data.sub(cff,data.get_length() - cff);
			let size = cff_data.get_length();
			let r2 = new kha_graphics2_truetype_Stbtt_$_$buf();
			if(size >= 1073741824) {
				throw haxe_Exception.thrown("Error");
			}
			r2.data = cff_data;
			r2.cursor = 0;
			info.cff = r2;
			let b = info.cff;
			let o = b.cursor + 2;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			let o1;
			if(b.cursor >= b.data.get_length()) {
				o1 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				o1 = b.data.readU8(pos);
			}
			if(o1 > b.data.get_length() || o1 < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
			let start = b.cursor;
			let v = 0;
			let _g = 0;
			let _g1 = 2;
			while(_g < _g1) {
				let i = _g++;
				let v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			let count = v;
			if(count > 0) {
				let offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let o = b.cursor + offsize * count;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let _g = 0;
				let _g1 = offsize;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let o1 = b.cursor + (v - 1);
				if(o1 > b.data.get_length() || o1 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
				let s = b.cursor - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(!(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start)) {
					r1.data = b.data.sub(start,s);
				}
			}
			let start1 = b.cursor;
			let v1 = 0;
			let _g2 = 0;
			let _g3 = 2;
			while(_g2 < _g3) {
				let i = _g2++;
				let v;
				if(b.cursor >= b.data.get_length()) {
					v = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = b.data.readU8(pos);
				}
				v1 = v1 << 8 | v;
			}
			let count1 = v1;
			if(count1 > 0) {
				let offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let o = b.cursor + offsize * count1;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let _g = 0;
				let _g1 = offsize;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let o1 = b.cursor + (v - 1);
				if(o1 > b.data.get_length() || o1 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
				let s = b.cursor - start1;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start1 < 0 || s < 0 || start1 > b.data.get_length() || s > b.data.get_length() - start1) {
					topdictidx = r1;
				} else {
					r1.data = b.data.sub(start1,s);
					topdictidx = r1;
				}
			} else {
				topdictidx = b;
			}
			if(0 > topdictidx.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdictidx.cursor = 0 > topdictidx.data.get_length() ? topdictidx.data.get_length() : 0;
			let v2 = 0;
			let _g4 = 0;
			let _g5 = 2;
			while(_g4 < _g5) {
				let i = _g4++;
				let v;
				if(topdictidx.cursor >= topdictidx.data.get_length()) {
					v = 0;
				} else {
					let pos = topdictidx.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = topdictidx.data.readU8(pos);
				}
				v2 = v2 << 8 | v;
			}
			let count2 = v2;
			let offsize;
			if(topdictidx.cursor >= topdictidx.data.get_length()) {
				offsize = 0;
			} else {
				let pos = topdictidx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = topdictidx.data.readU8(pos);
			}
			if(0 >= count2) {
				throw haxe_Exception.thrown("Error");
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let o2 = topdictidx.cursor + 0 * offsize;
			if(o2 > topdictidx.data.get_length() || o2 < 0) {
				throw haxe_Exception.thrown("Error");
			}
			topdictidx.cursor = o2 > topdictidx.data.get_length() || o2 < 0 ? topdictidx.data.get_length() : o2;
			let v3 = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let _g6 = 0;
			let _g7 = offsize;
			while(_g6 < _g7) {
				let i = _g6++;
				let v;
				if(topdictidx.cursor >= topdictidx.data.get_length()) {
					v = 0;
				} else {
					let pos = topdictidx.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = topdictidx.data.readU8(pos);
				}
				v3 = v3 << 8 | v;
			}
			let start2 = v3;
			let v4 = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			let _g8 = 0;
			let _g9 = offsize;
			while(_g8 < _g9) {
				let i = _g8++;
				let v;
				if(topdictidx.cursor >= topdictidx.data.get_length()) {
					v = 0;
				} else {
					let pos = topdictidx.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = topdictidx.data.readU8(pos);
				}
				v4 = v4 << 8 | v;
			}
			let end = v4;
			let o3 = 2 + (count2 + 1) * offsize + start2;
			let s = end - start2;
			let r3 = new kha_graphics2_truetype_Stbtt_$_$buf();
			r3.data = null;
			r3.cursor = 0;
			let r4 = r3;
			if(o3 < 0 || s < 0 || o3 > topdictidx.data.get_length() || s > topdictidx.data.get_length() - o3) {
				topdict = r4;
			} else {
				r4.data = topdictidx.data.sub(o3,s);
				topdict = r4;
			}
			let start3 = b.cursor;
			let v5 = 0;
			let _g10 = 0;
			let _g11 = 2;
			while(_g10 < _g11) {
				let i = _g10++;
				let v;
				if(b.cursor >= b.data.get_length()) {
					v = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = b.data.readU8(pos);
				}
				v5 = v5 << 8 | v;
			}
			let count3 = v5;
			if(count3 > 0) {
				let offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let o = b.cursor + offsize * count3;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let _g = 0;
				let _g1 = offsize;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let o1 = b.cursor + (v - 1);
				if(o1 > b.data.get_length() || o1 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
				let s = b.cursor - start3;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(!(start3 < 0 || s < 0 || start3 > b.data.get_length() || s > b.data.get_length() - start3)) {
					r1.data = b.data.sub(start3,s);
				}
			}
			let start4 = b.cursor;
			let v6 = 0;
			let _g12 = 0;
			let _g13 = 2;
			while(_g12 < _g13) {
				let i = _g12++;
				let v;
				if(b.cursor >= b.data.get_length()) {
					v = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = b.data.readU8(pos);
				}
				v6 = v6 << 8 | v;
			}
			let count4 = v6;
			let tmp;
			if(count4 > 0) {
				let offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let o = b.cursor + offsize * count4;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let _g = 0;
				let _g1 = offsize;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let o1 = b.cursor + (v - 1);
				if(o1 > b.data.get_length() || o1 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
				let s = b.cursor - start4;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start4 < 0 || s < 0 || start4 > b.data.get_length() || s > b.data.get_length() - start4) {
					tmp = r1;
				} else {
					r1.data = b.data.sub(start4,s);
					tmp = r1;
				}
			} else {
				tmp = b;
			}
			info.gsubrs = tmp;
			let i = 0;
			if(0 > topdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
			let ret = null;
			while(topdict.cursor < topdict.data.get_length()) {
				let start = topdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(topdict.cursor >= topdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = topdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(topdict.cursor >= topdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = topdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = topdict.cursor + 1;
						if(o > topdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
						while(topdict.cursor < topdict.data.get_length()) {
							if(topdict.cursor >= topdict.data.get_length()) {
								v = 0;
							} else {
								let pos = topdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = topdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(topdict.cursor >= topdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = topdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = topdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = topdict.cursor;
				if(topdict.cursor >= topdict.data.get_length()) {
					op = 0;
				} else {
					let pos = topdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = topdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(topdict.cursor >= topdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = topdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = topdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 17) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
						ret = r1;
					} else {
						r1.data = topdict.data.sub(start,s);
						ret = r1;
					}
					break;
				}
			}
			let operands;
			if(ret != null) {
				operands = ret;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
					operands = r1;
				} else {
					r1.data = topdict.data.sub(0,0);
					operands = r1;
				}
			}
			while(i < 1 && operands.cursor < operands.data.get_length()) {
				let b0;
				if(operands.cursor >= operands.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands.cursor >= operands.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands.cursor >= operands.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands.cursor >= operands.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands.cursor >= operands.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				charstrings[i] = tmp;
				++i;
			}
			let i1 = 0;
			if(0 > topdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
			let ret1 = null;
			while(topdict.cursor < topdict.data.get_length()) {
				let start = topdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(topdict.cursor >= topdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = topdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(topdict.cursor >= topdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = topdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = topdict.cursor + 1;
						if(o > topdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
						while(topdict.cursor < topdict.data.get_length()) {
							if(topdict.cursor >= topdict.data.get_length()) {
								v = 0;
							} else {
								let pos = topdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = topdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(topdict.cursor >= topdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = topdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = topdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = topdict.cursor;
				if(topdict.cursor >= topdict.data.get_length()) {
					op = 0;
				} else {
					let pos = topdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = topdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(topdict.cursor >= topdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = topdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = topdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 262) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
						ret1 = r1;
					} else {
						r1.data = topdict.data.sub(start,s);
						ret1 = r1;
					}
					break;
				}
			}
			let operands1;
			if(ret1 != null) {
				operands1 = ret1;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
					operands1 = r1;
				} else {
					r1.data = topdict.data.sub(0,0);
					operands1 = r1;
				}
			}
			while(i1 < 1 && operands1.cursor < operands1.data.get_length()) {
				let b0;
				if(operands1.cursor >= operands1.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands1.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands1.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands1.cursor >= operands1.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands1.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands1.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands1.cursor >= operands1.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands1.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands1.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands1.cursor >= operands1.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands1.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands1.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands1.cursor >= operands1.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands1.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands1.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				cstype[i1] = tmp;
				++i1;
			}
			let i2 = 0;
			if(0 > topdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
			let ret2 = null;
			while(topdict.cursor < topdict.data.get_length()) {
				let start = topdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(topdict.cursor >= topdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = topdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(topdict.cursor >= topdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = topdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = topdict.cursor + 1;
						if(o > topdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
						while(topdict.cursor < topdict.data.get_length()) {
							if(topdict.cursor >= topdict.data.get_length()) {
								v = 0;
							} else {
								let pos = topdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = topdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(topdict.cursor >= topdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = topdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = topdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = topdict.cursor;
				if(topdict.cursor >= topdict.data.get_length()) {
					op = 0;
				} else {
					let pos = topdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = topdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(topdict.cursor >= topdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = topdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = topdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 292) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
						ret2 = r1;
					} else {
						r1.data = topdict.data.sub(start,s);
						ret2 = r1;
					}
					break;
				}
			}
			let operands2;
			if(ret2 != null) {
				operands2 = ret2;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
					operands2 = r1;
				} else {
					r1.data = topdict.data.sub(0,0);
					operands2 = r1;
				}
			}
			while(i2 < 1 && operands2.cursor < operands2.data.get_length()) {
				let b0;
				if(operands2.cursor >= operands2.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands2.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands2.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands2.cursor >= operands2.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands2.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands2.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands2.cursor >= operands2.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands2.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands2.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands2.cursor >= operands2.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands2.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands2.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands2.cursor >= operands2.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands2.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands2.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				fdarrayoff[i2] = tmp;
				++i2;
			}
			let i3 = 0;
			if(0 > topdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
			let ret3 = null;
			while(topdict.cursor < topdict.data.get_length()) {
				let start = topdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(topdict.cursor >= topdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = topdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(topdict.cursor >= topdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = topdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = topdict.cursor + 1;
						if(o > topdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
						while(topdict.cursor < topdict.data.get_length()) {
							if(topdict.cursor >= topdict.data.get_length()) {
								v = 0;
							} else {
								let pos = topdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = topdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(topdict.cursor >= topdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = topdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = topdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = topdict.cursor;
				if(topdict.cursor >= topdict.data.get_length()) {
					op = 0;
				} else {
					let pos = topdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = topdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(topdict.cursor >= topdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = topdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = topdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 293) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
						ret3 = r1;
					} else {
						r1.data = topdict.data.sub(start,s);
						ret3 = r1;
					}
					break;
				}
			}
			let operands3;
			if(ret3 != null) {
				operands3 = ret3;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
					operands3 = r1;
				} else {
					r1.data = topdict.data.sub(0,0);
					operands3 = r1;
				}
			}
			while(i3 < 1 && operands3.cursor < operands3.data.get_length()) {
				let b0;
				if(operands3.cursor >= operands3.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands3.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands3.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands3.cursor >= operands3.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands3.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands3.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands3.cursor >= operands3.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands3.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands3.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands3.cursor >= operands3.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands3.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands3.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands3.cursor >= operands3.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands3.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands3.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				fdselectoff[i3] = tmp;
				++i3;
			}
			let subrsoff = [0];
			let private_loc = [0,0];
			let i4 = 0;
			if(0 > topdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
			let ret4 = null;
			while(topdict.cursor < topdict.data.get_length()) {
				let start = topdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(topdict.cursor >= topdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = topdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(topdict.cursor >= topdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = topdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = topdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = topdict.cursor + 1;
						if(o > topdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
						while(topdict.cursor < topdict.data.get_length()) {
							if(topdict.cursor >= topdict.data.get_length()) {
								v = 0;
							} else {
								let pos = topdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = topdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(topdict.cursor >= topdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = topdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = topdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(topdict.cursor < topdict.data.get_length()) {
									let pos = topdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									topdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(topdict.cursor >= topdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = topdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = topdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = topdict.cursor;
				if(topdict.cursor >= topdict.data.get_length()) {
					op = 0;
				} else {
					let pos = topdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = topdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(topdict.cursor >= topdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = topdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = topdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 18) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
						ret4 = r1;
					} else {
						r1.data = topdict.data.sub(start,s);
						ret4 = r1;
					}
					break;
				}
			}
			let operands4;
			if(ret4 != null) {
				operands4 = ret4;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
					operands4 = r1;
				} else {
					r1.data = topdict.data.sub(0,0);
					operands4 = r1;
				}
			}
			while(i4 < 2 && operands4.cursor < operands4.data.get_length()) {
				let b0;
				if(operands4.cursor >= operands4.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands4.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands4.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands4.cursor >= operands4.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands4.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands4.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands4.cursor >= operands4.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands4.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands4.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands4.cursor >= operands4.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands4.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands4.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands4.cursor >= operands4.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands4.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands4.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				private_loc[i4] = tmp;
				++i4;
			}
			let tmp1;
			if(private_loc[1] == 0 || private_loc[0] == 0) {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				tmp1 = r;
			} else {
				let o = private_loc[1];
				let s = private_loc[0];
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				let pdict;
				if(o < 0 || s < 0 || o > b.data.get_length() || s > b.data.get_length() - o) {
					pdict = r1;
				} else {
					r1.data = b.data.sub(o,s);
					pdict = r1;
				}
				let i = 0;
				if(0 > pdict.data.get_length()) {
					throw haxe_Exception.thrown("Error");
				}
				pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
				let ret = null;
				while(pdict.cursor < pdict.data.get_length()) {
					let start = pdict.cursor;
					let op;
					while(true) {
						let tmp;
						if(pdict.cursor >= pdict.data.get_length()) {
							tmp = 0;
						} else {
							let pos = pdict.cursor;
							if(pos == null) {
								pos = 0;
							}
							tmp = pdict.data.readU8(pos);
						}
						if(!(tmp >= 28)) {
							break;
						}
						let v;
						let b0;
						if(pdict.cursor >= pdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = pdict.cursor;
							if(pos == null) {
								pos = 0;
							}
							b0 = pdict.data.readU8(pos);
						}
						if(b0 < 28) {
							throw haxe_Exception.thrown("Error");
						}
						if(b0 == 30) {
							let o = pdict.cursor + 1;
							if(o > pdict.data.get_length() || o < 0) {
								throw haxe_Exception.thrown("Error");
							}
							pdict.cursor = o > pdict.data.get_length() || o < 0 ? pdict.data.get_length() : o;
							while(pdict.cursor < pdict.data.get_length()) {
								if(pdict.cursor >= pdict.data.get_length()) {
									v = 0;
								} else {
									let pos = pdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v = pdict.data.readU8(pos);
								}
								if((v & 15) == 15 || v >> 4 == 15) {
									break;
								}
							}
						} else {
							let b0;
							if(pdict.cursor >= pdict.data.get_length()) {
								b0 = 0;
							} else {
								let pos = pdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								b0 = pdict.data.readU8(pos);
							}
							if(!(b0 >= 32 && b0 <= 246)) {
								if(b0 >= 247 && b0 <= 250) {
									if(pdict.cursor < pdict.data.get_length()) {
										let pos = pdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										pdict.data.readU8(pos);
									}
								} else if(b0 >= 251 && b0 <= 254) {
									if(pdict.cursor < pdict.data.get_length()) {
										let pos = pdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										pdict.data.readU8(pos);
									}
								} else if(b0 == 28) {
									let v = 0;
									let _g = 0;
									let _g1 = 2;
									while(_g < _g1) {
										let i = _g++;
										let v1;
										if(pdict.cursor >= pdict.data.get_length()) {
											v1 = 0;
										} else {
											let pos = pdict.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v1 = pdict.data.readU8(pos);
										}
										v = v << 8 | v1;
									}
								} else if(b0 == 29) {
									let v = 0;
									let _g = 0;
									let _g1 = 4;
									while(_g < _g1) {
										let i = _g++;
										let v1;
										if(pdict.cursor >= pdict.data.get_length()) {
											v1 = 0;
										} else {
											let pos = pdict.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v1 = pdict.data.readU8(pos);
										}
										v = v << 8 | v1;
									}
								} else {
									throw haxe_Exception.thrown("Error");
								}
							}
						}
					}
					let end = pdict.cursor;
					if(pdict.cursor >= pdict.data.get_length()) {
						op = 0;
					} else {
						let pos = pdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op = pdict.data.readU8(pos);
					}
					if(op == 12) {
						let op1;
						if(pdict.cursor >= pdict.data.get_length()) {
							op1 = 0;
						} else {
							let pos = pdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							op1 = pdict.data.readU8(pos);
						}
						op = op1 | 256;
					}
					if(op == 19) {
						let s = end - start;
						let r = new kha_graphics2_truetype_Stbtt_$_$buf();
						r.data = null;
						r.cursor = 0;
						let r1 = r;
						if(start < 0 || s < 0 || start > pdict.data.get_length() || s > pdict.data.get_length() - start) {
							ret = r1;
						} else {
							r1.data = pdict.data.sub(start,s);
							ret = r1;
						}
						break;
					}
				}
				let operands;
				if(ret != null) {
					operands = ret;
				} else {
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
						operands = r1;
					} else {
						r1.data = pdict.data.sub(0,0);
						operands = r1;
					}
				}
				while(i < 1 && operands.cursor < operands.data.get_length()) {
					let b0;
					if(operands.cursor >= operands.data.get_length()) {
						b0 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = operands.data.readU8(pos);
					}
					let tmp;
					if(b0 >= 32 && b0 <= 246) {
						tmp = b0 - 139;
					} else if(b0 >= 247 && b0 <= 250) {
						let tmp1;
						if(operands.cursor >= operands.data.get_length()) {
							tmp1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							tmp1 = operands.data.readU8(pos);
						}
						tmp = (b0 - 247) * 256 + tmp1 + 108;
					} else if(b0 >= 251 && b0 <= 254) {
						let tmp1;
						if(operands.cursor >= operands.data.get_length()) {
							tmp1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							tmp1 = operands.data.readU8(pos);
						}
						tmp = -(b0 - 251) * 256 - tmp1 - 108;
					} else if(b0 == 28) {
						let v = 0;
						let _g = 0;
						let _g1 = 2;
						while(_g < _g1) {
							let i = _g++;
							let v1;
							if(operands.cursor >= operands.data.get_length()) {
								v1 = 0;
							} else {
								let pos = operands.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v1 = operands.data.readU8(pos);
							}
							v = v << 8 | v1;
						}
						tmp = v;
					} else if(b0 == 29) {
						let v = 0;
						let _g = 0;
						let _g1 = 4;
						while(_g < _g1) {
							let i = _g++;
							let v1;
							if(operands.cursor >= operands.data.get_length()) {
								v1 = 0;
							} else {
								let pos = operands.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v1 = operands.data.readU8(pos);
							}
							v = v << 8 | v1;
						}
						tmp = v;
					} else {
						throw haxe_Exception.thrown("Error");
					}
					subrsoff[i] = tmp;
					++i;
				}
				if(subrsoff[0] == 0) {
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					tmp1 = r;
				} else {
					let o = private_loc[1] + subrsoff[0];
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					let start = b.cursor;
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					let count = v;
					if(count > 0) {
						let offsize;
						if(b.cursor >= b.data.get_length()) {
							offsize = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							offsize = b.data.readU8(pos);
						}
						if(!(offsize >= 1 && offsize <= 4)) {
							throw haxe_Exception.thrown("Error");
						}
						let o = b.cursor + offsize * count;
						if(o > b.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
						let v = 0;
						if(!(offsize >= 1 && offsize <= 4)) {
							throw haxe_Exception.thrown("Error");
						}
						let _g = 0;
						let _g1 = offsize;
						while(_g < _g1) {
							let i = _g++;
							let v1;
							if(b.cursor >= b.data.get_length()) {
								v1 = 0;
							} else {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v1 = b.data.readU8(pos);
							}
							v = v << 8 | v1;
						}
						let o1 = b.cursor + (v - 1);
						if(o1 > b.data.get_length() || o1 < 0) {
							throw haxe_Exception.thrown("Error");
						}
						b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
						let s = b.cursor - start;
						let r = new kha_graphics2_truetype_Stbtt_$_$buf();
						r.data = null;
						r.cursor = 0;
						let r1 = r;
						if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
							tmp1 = r1;
						} else {
							r1.data = b.data.sub(start,s);
							tmp1 = r1;
						}
					} else {
						tmp1 = b;
					}
				}
			}
			info.subrs = tmp1;
			if(cstype[0] != 2) {
				return false;
			}
			if(charstrings[0] == 0) {
				return false;
			}
			if(fdarrayoff[0] != 0) {
				if(fdselectoff[0] == 0) {
					return false;
				}
				let o = fdarrayoff[0];
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let start = b.cursor;
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let count = v;
				let tmp;
				if(count > 0) {
					let offsize;
					if(b.cursor >= b.data.get_length()) {
						offsize = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						offsize = b.data.readU8(pos);
					}
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let o = b.cursor + offsize * count;
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					let v = 0;
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let _g = 0;
					let _g1 = offsize;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					let o1 = b.cursor + (v - 1);
					if(o1 > b.data.get_length() || o1 < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
					let s = b.cursor - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
						tmp = r1;
					} else {
						r1.data = b.data.sub(start,s);
						tmp = r1;
					}
				} else {
					tmp = b;
				}
				info.fontdicts = tmp;
				let o1 = fdselectoff[0];
				let s = b.data.get_length() - fdselectoff[0];
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				let tmp1;
				if(o1 < 0 || s < 0 || o1 > b.data.get_length() || s > b.data.get_length() - o1) {
					tmp1 = r1;
				} else {
					r1.data = b.data.sub(o1,s);
					tmp1 = r1;
				}
				info.fdselect = tmp1;
			}
			let o4 = charstrings[0];
			if(o4 > b.data.get_length() || o4 < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o4 > b.data.get_length() || o4 < 0 ? b.data.get_length() : o4;
			let start5 = b.cursor;
			let v7 = 0;
			let _g14 = 0;
			let _g15 = 2;
			while(_g14 < _g15) {
				let i = _g14++;
				let v;
				if(b.cursor >= b.data.get_length()) {
					v = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = b.data.readU8(pos);
				}
				v7 = v7 << 8 | v;
			}
			let count5 = v7;
			let tmp2;
			if(count5 > 0) {
				let offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let o = b.cursor + offsize * count5;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				let v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				let _g = 0;
				let _g1 = offsize;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let o1 = b.cursor + (v - 1);
				if(o1 > b.data.get_length() || o1 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o1 > b.data.get_length() || o1 < 0 ? b.data.get_length() : o1;
				let s = b.cursor - start5;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start5 < 0 || s < 0 || start5 > b.data.get_length() || s > b.data.get_length() - start5) {
					tmp2 = r1;
				} else {
					r1.data = b.data.sub(start5,s);
					tmp2 = r1;
				}
			} else {
				tmp2 = b;
			}
			info.charstrings = tmp2;
		}
		let t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
		if(t != 0) {
			let pos = t + 4;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			info.numGlyphs = ch2 | ch1 << 8;
		} else {
			info.numGlyphs = 65535;
		}
		let pos = cmap + 2;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = data.readU8(pos);
		let ch2 = data.readU8(pos + 1);
		let numTables = ch2 | ch1 << 8;
		info.index_map = 0;
		let _g = 0;
		let _g1 = numTables;
		while(_g < _g1) {
			let i = _g++;
			let encoding_record = cmap + 4 + 8 * i;
			let pos = encoding_record;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			switch(ch2 | ch1 << 8) {
			case 0:
				let pos1 = encoding_record + 4;
				if(pos1 == null) {
					pos1 = 0;
				}
				let pos2 = pos1;
				if(pos2 == null) {
					pos2 = 0;
				}
				let ch11 = data.readU8(pos2);
				let ch21 = data.readU8(pos2 + 1);
				let ch3 = data.readU8(pos2 + 2);
				let ch4 = data.readU8(pos2 + 3);
				info.index_map = cmap + (ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24);
				break;
			case 3:
				let pos3 = encoding_record + 2;
				if(pos3 == null) {
					pos3 = 0;
				}
				let ch12 = data.readU8(pos3);
				let ch22 = data.readU8(pos3 + 1);
				switch(ch22 | ch12 << 8) {
				case 1:case 10:
					let pos4 = encoding_record + 4;
					if(pos4 == null) {
						pos4 = 0;
					}
					let pos5 = pos4;
					if(pos5 == null) {
						pos5 = 0;
					}
					let ch13 = data.readU8(pos5);
					let ch23 = data.readU8(pos5 + 1);
					let ch31 = data.readU8(pos5 + 2);
					let ch41 = data.readU8(pos5 + 3);
					info.index_map = cmap + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
					break;
				}
				break;
			}
		}
		if(info.index_map == 0) {
			return false;
		}
		let pos1 = info.head + 50;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch11 = data.readU8(pos1);
		let ch21 = data.readU8(pos1 + 1);
		info.indexToLocFormat = ch21 | ch11 << 8;
		return true;
	}
	static stbtt_FindGlyphIndex(info,unicode_codepoint) {
		let data = info.data;
		let index_map = info.index_map;
		let pos = index_map;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = data.readU8(pos);
		let ch2 = data.readU8(pos + 1);
		let format = ch2 | ch1 << 8;
		if(format == 0) {
			let pos = index_map + 2;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			let bytes = ch2 | ch1 << 8;
			if(unicode_codepoint < bytes - 6) {
				let pos = index_map + 6 + unicode_codepoint;
				if(pos == null) {
					pos = 0;
				}
				return data.readU8(pos);
			}
			return 0;
		} else if(format == 6) {
			let pos = index_map + 6;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			let first = ch2 | ch1 << 8;
			let pos1 = index_map + 8;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = data.readU8(pos1);
			let ch21 = data.readU8(pos1 + 1);
			let count = ch21 | ch11 << 8;
			if(unicode_codepoint >= first && unicode_codepoint < first + count) {
				let pos = index_map + 10 + (unicode_codepoint - first) * 2;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = data.readU8(pos);
				let ch2 = data.readU8(pos + 1);
				return ch2 | ch1 << 8;
			}
			return 0;
		} else if(format == 2) {
			throw haxe_Exception.thrown("Error");
		} else if(format == 4) {
			let pos = index_map + 6;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			let segcount = (ch2 | ch1 << 8) >> 1;
			let pos1 = index_map + 8;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = data.readU8(pos1);
			let ch21 = data.readU8(pos1 + 1);
			let searchRange = (ch21 | ch11 << 8) >> 1;
			let pos2 = index_map + 10;
			if(pos2 == null) {
				pos2 = 0;
			}
			let ch12 = data.readU8(pos2);
			let ch22 = data.readU8(pos2 + 1);
			let entrySelector = ch22 | ch12 << 8;
			let pos3 = index_map + 12;
			if(pos3 == null) {
				pos3 = 0;
			}
			let ch13 = data.readU8(pos3);
			let ch23 = data.readU8(pos3 + 1);
			let rangeShift = (ch23 | ch13 << 8) >> 1;
			let endCount = index_map + 14;
			let search = endCount;
			if(unicode_codepoint > 65535) {
				return 0;
			}
			let pos4 = search + rangeShift * 2;
			if(pos4 == null) {
				pos4 = 0;
			}
			let ch14 = data.readU8(pos4);
			let ch24 = data.readU8(pos4 + 1);
			if(unicode_codepoint >= (ch24 | ch14 << 8)) {
				search += rangeShift * 2;
			}
			search -= 2;
			while(entrySelector != 0) {
				searchRange >>= 1;
				let pos = search + searchRange * 2;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = data.readU8(pos);
				let ch2 = data.readU8(pos + 1);
				let end = ch2 | ch1 << 8;
				if(unicode_codepoint > end) {
					search += searchRange * 2;
				}
				--entrySelector;
			}
			search += 2;
			let item = search - endCount >> 1 & 65535;
			let pos5 = endCount + 2 * item;
			if(pos5 == null) {
				pos5 = 0;
			}
			let ch15 = data.readU8(pos5);
			let ch25 = data.readU8(pos5 + 1);
			if(unicode_codepoint > (ch25 | ch15 << 8)) {
				throw haxe_Exception.thrown("Error");
			}
			let pos6 = index_map + 14 + segcount * 2 + 2 + 2 * item;
			if(pos6 == null) {
				pos6 = 0;
			}
			let ch16 = data.readU8(pos6);
			let ch26 = data.readU8(pos6 + 1);
			let start = ch26 | ch16 << 8;
			if(unicode_codepoint < start) {
				return 0;
			}
			let pos7 = index_map + 14 + segcount * 6 + 2 + 2 * item;
			if(pos7 == null) {
				pos7 = 0;
			}
			let ch17 = data.readU8(pos7);
			let ch27 = data.readU8(pos7 + 1);
			let offset = ch27 | ch17 << 8;
			if(offset == 0) {
				let pos = index_map + 14 + segcount * 4 + 2 + 2 * item;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = data.readU8(pos);
				let ch2 = data.readU8(pos + 1);
				let n = ch2 | ch1 << 8;
				return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n) & 65535;
			}
			let pos8 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
			if(pos8 == null) {
				pos8 = 0;
			}
			let ch18 = data.readU8(pos8);
			let ch28 = data.readU8(pos8 + 1);
			return ch28 | ch18 << 8;
		} else if(format == 12 || format == 13) {
			let pos = index_map + 12;
			if(pos == null) {
				pos = 0;
			}
			let pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch1 = data.readU8(pos1);
			let ch2 = data.readU8(pos1 + 1);
			let ch3 = data.readU8(pos1 + 2);
			let ch4 = data.readU8(pos1 + 3);
			let ngroups = ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
			let low = 0;
			let high = ngroups;
			while(low < high) {
				let mid = low + (high - low >> 1);
				let pos = index_map + 16 + mid * 12;
				if(pos == null) {
					pos = 0;
				}
				let pos1 = pos;
				if(pos1 == null) {
					pos1 = 0;
				}
				let ch1 = data.readU8(pos1);
				let ch2 = data.readU8(pos1 + 1);
				let ch3 = data.readU8(pos1 + 2);
				let ch4 = data.readU8(pos1 + 3);
				let start_char = ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
				let pos2 = index_map + 16 + mid * 12 + 4;
				if(pos2 == null) {
					pos2 = 0;
				}
				let pos3 = pos2;
				if(pos3 == null) {
					pos3 = 0;
				}
				let ch11 = data.readU8(pos3);
				let ch21 = data.readU8(pos3 + 1);
				let ch31 = data.readU8(pos3 + 2);
				let ch41 = data.readU8(pos3 + 3);
				let end_char = ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24;
				if(unicode_codepoint < start_char) {
					high = mid;
				} else if(unicode_codepoint > end_char) {
					low = mid + 1;
				} else {
					let pos = index_map + 16 + mid * 12 + 8;
					if(pos == null) {
						pos = 0;
					}
					let pos1 = pos;
					if(pos1 == null) {
						pos1 = 0;
					}
					let ch1 = data.readU8(pos1);
					let ch2 = data.readU8(pos1 + 1);
					let ch3 = data.readU8(pos1 + 2);
					let ch4 = data.readU8(pos1 + 3);
					let start_glyph = ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
					if(format == 12) {
						return start_glyph + unicode_codepoint - start_char;
					} else {
						return start_glyph;
					}
				}
			}
			return 0;
		}
		throw haxe_Exception.thrown("Error");
	}
	static stbtt_GetCodepointShape(info,unicode_codepoint) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,unicode_codepoint));
	}
	static stbtt_setvertex(v,type,x,y,cx,cy) {
		v.type = type;
		v.x = x;
		v.y = y;
		v.cx = cx;
		v.cy = cy;
	}
	static stbtt__GetGlyfOffset(info,glyph_index) {
		let g1;
		let g2;
		if(!(info.cff.data == null || info.cff.data.get_length() == 0)) {
			throw haxe_Exception.thrown("Error");
		}
		if(glyph_index >= info.numGlyphs) {
			return -1;
		}
		if(info.indexToLocFormat >= 2) {
			return -1;
		}
		if(info.indexToLocFormat == 0) {
			let info1 = info.glyf;
			let p = info.data;
			let pos = info.loca + glyph_index * 2;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = p.readU8(pos);
			let ch2 = p.readU8(pos + 1);
			g1 = info1 + (ch2 | ch1 << 8) * 2;
			let info2 = info.glyf;
			let p1 = info.data;
			let pos1 = info.loca + glyph_index * 2 + 2;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = p1.readU8(pos1);
			let ch21 = p1.readU8(pos1 + 1);
			g2 = info2 + (ch21 | ch11 << 8) * 2;
		} else {
			let info1 = info.glyf;
			let p = info.data;
			let pos = info.loca + glyph_index * 4;
			if(pos == null) {
				pos = 0;
			}
			let pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch1 = p.readU8(pos1);
			let ch2 = p.readU8(pos1 + 1);
			let ch3 = p.readU8(pos1 + 2);
			let ch4 = p.readU8(pos1 + 3);
			g1 = info1 + (ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24);
			let info2 = info.glyf;
			let p1 = info.data;
			let pos2 = info.loca + glyph_index * 4 + 4;
			if(pos2 == null) {
				pos2 = 0;
			}
			let pos3 = pos2;
			if(pos3 == null) {
				pos3 = 0;
			}
			let ch11 = p1.readU8(pos3);
			let ch21 = p1.readU8(pos3 + 1);
			let ch31 = p1.readU8(pos3 + 2);
			let ch41 = p1.readU8(pos3 + 3);
			g2 = info2 + (ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24);
		}
		if(g1 == g2) {
			return -1;
		} else {
			return g1;
		}
	}
	static stbtt_GetGlyphBox(info,glyph_index,rect) {
		if(info.cff.data != null && info.cff.data.get_length() > 0) {
			kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphInfoT2(info,glyph_index,rect);
		} else {
			let g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
			if(g < 0) {
				return false;
			}
			let p = info.data;
			let pos = g + 2;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = p.readU8(pos);
			let ch2 = p.readU8(pos + 1);
			let n = ch2 | ch1 << 8;
			rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
			let p1 = info.data;
			let pos1 = g + 4;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = p1.readU8(pos1);
			let ch21 = p1.readU8(pos1 + 1);
			let n1 = ch21 | ch11 << 8;
			rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
			let p2 = info.data;
			let pos2 = g + 6;
			if(pos2 == null) {
				pos2 = 0;
			}
			let ch12 = p2.readU8(pos2);
			let ch22 = p2.readU8(pos2 + 1);
			let n2 = ch22 | ch12 << 8;
			rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
			let p3 = info.data;
			let pos3 = g + 8;
			if(pos3 == null) {
				pos3 = 0;
			}
			let ch13 = p3.readU8(pos3);
			let ch23 = p3.readU8(pos3 + 1);
			let n3 = ch23 | ch13 << 8;
			rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
		}
		return true;
	}
	static stbtt_GetCodepointBox(info,codepoint,rect) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),rect);
	}
	static stbtt_IsGlyphEmpty(info,glyph_index) {
		if(info.cff.data != null && info.cff.data.get_length() > 0) {
			return kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphInfoT2(info,glyph_index,null) == 0;
		}
		let g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
		if(g < 0) {
			return true;
		}
		let p = info.data;
		let pos = g;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		let numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
		return numberOfContours == 0;
	}
	static stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
		if(start_off) {
			if(was_off) {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
			}
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
		} else if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
		}
		return num_vertices;
	}
	static copyVertices(from,to,offset,count) {
		let _g = 0;
		let _g1 = count;
		while(_g < _g1) {
			let i = _g++;
			to[offset + i] = from[i];
		}
	}
	static stbtt__GetGlyphShapeTT(info,glyph_index) {
		let data = info.data;
		let vertices = null;
		let num_vertices = 0;
		let g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
		if(g < 0) {
			return null;
		}
		let pos = g;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = data.readU8(pos);
		let ch2 = data.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		let numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
		if(numberOfContours > 0) {
			let flags = 0;
			let j = 0;
			let next_move = 0;
			let off = 0;
			let was_off = false;
			let start_off = false;
			let endPtsOfContoursOffset = g + 10;
			let pos = endPtsOfContoursOffset + numberOfContours * 2;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = data.readU8(pos);
			let ch2 = data.readU8(pos + 1);
			let ins = ch2 | ch1 << 8;
			let pointsIndex = endPtsOfContoursOffset + numberOfContours * 2 + 2 + ins;
			let pos1 = endPtsOfContoursOffset + numberOfContours * 2 - 2;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = data.readU8(pos1);
			let ch21 = data.readU8(pos1 + 1);
			let n = 1 + (ch21 | ch11 << 8);
			let m = n + 2 * numberOfContours;
			let this1 = new Array(m);
			vertices = this1;
			if(vertices == null) {
				return null;
			} else {
				let _g = 0;
				let _g1 = vertices.length;
				while(_g < _g1) {
					let i = _g++;
					vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
				}
			}
			next_move = 0;
			let flagcount = 0;
			off = m - n;
			let _g = 0;
			let _g1 = n;
			while(_g < _g1) {
				let i = _g++;
				if(flagcount == 0) {
					flags = data.readU8(pointsIndex++);
					if((flags & 8) != 0) {
						flagcount = data.readU8(pointsIndex++);
					}
				} else {
					--flagcount;
				}
				vertices[off + i].type = flags;
			}
			let x = 0;
			let _g2 = 0;
			let _g3 = n;
			while(_g2 < _g3) {
				let i = _g2++;
				flags = vertices[off + i].type;
				if((flags & 2) != 0) {
					let dx = data.readU8(pointsIndex++);
					x += (flags & 16) != 0 ? dx : -dx;
				} else if((flags & 16) == 0) {
					let value;
					let ch1 = data.readU8(pointsIndex);
					let ch2 = data.readU8(pointsIndex + 1);
					let n = ch2 | ch1 << 8;
					if((n & 32768) != 0) {
						value = n - 65536;
					} else {
						value = n;
					}
					x += value;
					pointsIndex += 2;
				}
				vertices[off + i].x = x;
			}
			let y = 0;
			let _g4 = 0;
			let _g5 = n;
			while(_g4 < _g5) {
				let i = _g4++;
				flags = vertices[off + i].type;
				if((flags & 4) != 0) {
					let dy = data.readU8(pointsIndex++);
					y += (flags & 32) != 0 ? dy : -dy;
				} else if((flags & 32) == 0) {
					let value;
					let ch1 = data.readU8(pointsIndex);
					let ch2 = data.readU8(pointsIndex + 1);
					let n = ch2 | ch1 << 8;
					if((n & 32768) != 0) {
						value = n - 65536;
					} else {
						value = n;
					}
					y += value;
					pointsIndex += 2;
				}
				vertices[off + i].y = y;
			}
			num_vertices = 0;
			let scy = 0;
			let scx = scy;
			let cy = scx;
			let cx = cy;
			let sy = cx;
			let sx = sy;
			let i = 0;
			while(i < n) {
				flags = vertices[off + i].type;
				x = vertices[off + i].x;
				y = vertices[off + i].y;
				if(next_move == i) {
					if(i != 0) {
						num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
					}
					start_off = (flags & 1) == 0;
					if(start_off) {
						scx = x;
						scy = y;
						if((vertices[off + i + 1].type & 1) == 0) {
							sx = x + vertices[off + i + 1].x >> 1;
							sy = y + vertices[off + i + 1].y >> 1;
						} else {
							sx = vertices[off + i + 1].x;
							sy = vertices[off + i + 1].y;
							++i;
						}
					} else {
						sx = x;
						sy = y;
					}
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
					was_off = false;
					let pos = endPtsOfContoursOffset + j * 2;
					if(pos == null) {
						pos = 0;
					}
					let ch1 = data.readU8(pos);
					let ch2 = data.readU8(pos + 1);
					next_move = 1 + (ch2 | ch1 << 8);
					++j;
				} else if((flags & 1) == 0) {
					if(was_off) {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
					}
					cx = x;
					cy = y;
					was_off = true;
				} else {
					if(was_off) {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
					}
					was_off = false;
				}
				++i;
			}
			num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
		} else if(numberOfContours < 0) {
			let more = 1;
			let compIndex = g + 10;
			num_vertices = 0;
			vertices = null;
			while(more != 0) {
				let comp_num_verts = 0;
				let i;
				let comp_verts = null;
				let tmp = null;
				let mtx0 = 1;
				let mtx1 = 0;
				let mtx2 = 0;
				let mtx3 = 1;
				let mtx4 = 0;
				let mtx5 = 0;
				let pos = compIndex;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = data.readU8(pos);
				let ch2 = data.readU8(pos + 1);
				let n = ch2 | ch1 << 8;
				let flags = (n & 32768) != 0 ? n - 65536 : n;
				let pos1 = compIndex += 2;
				if(pos1 == null) {
					pos1 = 0;
				}
				let ch11 = data.readU8(pos1);
				let ch21 = data.readU8(pos1 + 1);
				let n1 = ch21 | ch11 << 8;
				let gidx = (n1 & 32768) != 0 ? n1 - 65536 : n1;
				compIndex += 2;
				if((flags & 2) != 0) {
					if((flags & 1) != 0) {
						let pos = compIndex;
						if(pos == null) {
							pos = 0;
						}
						let ch1 = data.readU8(pos);
						let ch2 = data.readU8(pos + 1);
						let n = ch2 | ch1 << 8;
						mtx4 = (n & 32768) != 0 ? n - 65536 : n;
						let pos1 = compIndex += 2;
						if(pos1 == null) {
							pos1 = 0;
						}
						let ch11 = data.readU8(pos1);
						let ch21 = data.readU8(pos1 + 1);
						let n1 = ch21 | ch11 << 8;
						mtx5 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
						compIndex += 2;
					} else {
						let pos = compIndex;
						if(pos == null) {
							pos = 0;
						}
						let n = data.readU8(pos);
						mtx4 = n >= 128 ? n - 256 : n;
						let pos1 = ++compIndex;
						if(pos1 == null) {
							pos1 = 0;
						}
						let n1 = data.readU8(pos1);
						mtx5 = n1 >= 128 ? n1 - 256 : n1;
						++compIndex;
					}
				} else {
					throw haxe_Exception.thrown("Error");
				}
				if((flags & 8) != 0) {
					let pos = compIndex;
					if(pos == null) {
						pos = 0;
					}
					let ch1 = data.readU8(pos);
					let ch2 = data.readU8(pos + 1);
					let n = ch2 | ch1 << 8;
					mtx3 = ((n & 32768) != 0 ? n - 65536 : n) / 16384.0;
					mtx0 = mtx3;
					compIndex += 2;
					mtx2 = 0;
					mtx1 = mtx2;
				} else if((flags & 64) != 0) {
					let pos = compIndex;
					if(pos == null) {
						pos = 0;
					}
					let ch1 = data.readU8(pos);
					let ch2 = data.readU8(pos + 1);
					let n = ch2 | ch1 << 8;
					mtx0 = ((n & 32768) != 0 ? n - 65536 : n) / 16384.0;
					compIndex += 2;
					mtx2 = 0;
					mtx1 = mtx2;
					let pos1 = compIndex;
					if(pos1 == null) {
						pos1 = 0;
					}
					let ch11 = data.readU8(pos1);
					let ch21 = data.readU8(pos1 + 1);
					let n1 = ch21 | ch11 << 8;
					mtx3 = ((n1 & 32768) != 0 ? n1 - 65536 : n1) / 16384.0;
					compIndex += 2;
				} else if((flags & 128) != 0) {
					let pos = compIndex;
					if(pos == null) {
						pos = 0;
					}
					let ch1 = data.readU8(pos);
					let ch2 = data.readU8(pos + 1);
					let n = ch2 | ch1 << 8;
					mtx0 = ((n & 32768) != 0 ? n - 65536 : n) / 16384.0;
					let pos1 = compIndex += 2;
					if(pos1 == null) {
						pos1 = 0;
					}
					let ch11 = data.readU8(pos1);
					let ch21 = data.readU8(pos1 + 1);
					let n1 = ch21 | ch11 << 8;
					mtx1 = ((n1 & 32768) != 0 ? n1 - 65536 : n1) / 16384.0;
					let pos2 = compIndex += 2;
					if(pos2 == null) {
						pos2 = 0;
					}
					let ch12 = data.readU8(pos2);
					let ch22 = data.readU8(pos2 + 1);
					let n2 = ch22 | ch12 << 8;
					mtx2 = ((n2 & 32768) != 0 ? n2 - 65536 : n2) / 16384.0;
					let pos3 = compIndex += 2;
					if(pos3 == null) {
						pos3 = 0;
					}
					let ch13 = data.readU8(pos3);
					let ch23 = data.readU8(pos3 + 1);
					let n3 = ch23 | ch13 << 8;
					mtx3 = ((n3 & 32768) != 0 ? n3 - 65536 : n3) / 16384.0;
					compIndex += 2;
				}
				let m = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
				let n2 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
				comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
				comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
				if(comp_num_verts > 0) {
					let _g = 0;
					let _g1 = comp_num_verts;
					while(_g < _g1) {
						let i = _g++;
						let v = comp_verts[i];
						let x = v.x;
						let y = v.y;
						v.x = m * (mtx0 * x + mtx2 * y + mtx4) | 0;
						v.y = n2 * (mtx1 * x + mtx3 * y + mtx5) | 0;
						x = v.cx;
						y = v.cy;
						v.cx = m * (mtx0 * x + mtx2 * y + mtx4) | 0;
						v.cy = n2 * (mtx1 * x + mtx3 * y + mtx5) | 0;
					}
					let this1 = new Array(num_vertices + comp_num_verts);
					tmp = this1;
					if(tmp == null) {
						return null;
					}
					if(num_vertices > 0) {
						kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
					}
					kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
					vertices = tmp;
					num_vertices += comp_num_verts;
				}
				more = flags & 32;
			}
		}
		if(vertices == null) {
			return null;
		}
		if(vertices.length < num_vertices) {
			throw haxe_Exception.thrown("Error");
		}
		if(num_vertices < vertices.length) {
			let this1 = new Array(num_vertices);
			let tmp = this1;
			kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
			return tmp;
		} else {
			return vertices;
		}
	}
	static STBTT__CSCTX_INIT(bounds) {
		let tmp = new kha_graphics2_truetype_Stbtt_$_$csctx();
		tmp.bounds = bounds;
		tmp.started = false;
		tmp.first_x = 0;
		tmp.first_y = 0;
		tmp.x = 0;
		tmp.y = 0;
		tmp.min_x = 0;
		tmp.min_y = 0;
		tmp.max_x = 0;
		tmp.max_y = 0;
		tmp.pvertices = null;
		tmp.num_vertices = 0;
		return tmp;
	}
	static stbtt__track_vertex(c,x,y) {
		if(x > c.max_x || !c.started) {
			c.max_x = x;
		}
		if(y > c.max_y || !c.started) {
			c.max_y = y;
		}
		if(x < c.min_x || !c.started) {
			c.min_x = x;
		}
		if(y < c.min_y || !c.started) {
			c.min_y = y;
		}
		c.started = true;
	}
	static stbtt__csctx_v(c,type,x,y,cx,cy,cx1,cy1) {
		if(c.bounds) {
			if(x > c.max_x || !c.started) {
				c.max_x = x;
			}
			if(y > c.max_y || !c.started) {
				c.max_y = y;
			}
			if(x < c.min_x || !c.started) {
				c.min_x = x;
			}
			if(y < c.min_y || !c.started) {
				c.min_y = y;
			}
			c.started = true;
			if(type == 4) {
				if(cx > c.max_x || !c.started) {
					c.max_x = cx;
				}
				if(cy > c.max_y || !c.started) {
					c.max_y = cy;
				}
				if(cx < c.min_x || !c.started) {
					c.min_x = cx;
				}
				if(cy < c.min_y || !c.started) {
					c.min_y = cy;
				}
				c.started = true;
				if(cx1 > c.max_x || !c.started) {
					c.max_x = cx1;
				}
				if(cy1 > c.max_y || !c.started) {
					c.max_y = cy1;
				}
				if(cx1 < c.min_x || !c.started) {
					c.min_x = cx1;
				}
				if(cy1 < c.min_y || !c.started) {
					c.min_y = cy1;
				}
				c.started = true;
			}
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],type,x,y,cx,cy);
			c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx1 , Int);
			c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy1 , Int);
		}
		c.num_vertices++;
	}
	static stbtt__csctx_close_shape(ctx) {
		if(ctx.first_x != ctx.x || ctx.first_y != ctx.y) {
			let x = ctx.first_x | 0;
			let y = ctx.first_y | 0;
			if(ctx.bounds) {
				if(x > ctx.max_x || !ctx.started) {
					ctx.max_x = x;
				}
				if(y > ctx.max_y || !ctx.started) {
					ctx.max_y = y;
				}
				if(x < ctx.min_x || !ctx.started) {
					ctx.min_x = x;
				}
				if(y < ctx.min_y || !ctx.started) {
					ctx.min_y = y;
				}
				ctx.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(ctx.pvertices[ctx.num_vertices],2,x,y,0,0);
				ctx.pvertices[ctx.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				ctx.pvertices[ctx.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			ctx.num_vertices++;
		}
	}
	static stbtt__csctx_rmove_to(ctx,dx,dy) {
		if(ctx.first_x != ctx.x || ctx.first_y != ctx.y) {
			let x = ctx.first_x | 0;
			let y = ctx.first_y | 0;
			if(ctx.bounds) {
				if(x > ctx.max_x || !ctx.started) {
					ctx.max_x = x;
				}
				if(y > ctx.max_y || !ctx.started) {
					ctx.max_y = y;
				}
				if(x < ctx.min_x || !ctx.started) {
					ctx.min_x = x;
				}
				if(y < ctx.min_y || !ctx.started) {
					ctx.min_y = y;
				}
				ctx.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(ctx.pvertices[ctx.num_vertices],2,x,y,0,0);
				ctx.pvertices[ctx.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				ctx.pvertices[ctx.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			ctx.num_vertices++;
		}
		ctx.first_x = ctx.x = ctx.x + dx;
		ctx.first_y = ctx.y = ctx.y + dy;
		let x = ctx.x | 0;
		let y = ctx.y | 0;
		if(ctx.bounds) {
			if(x > ctx.max_x || !ctx.started) {
				ctx.max_x = x;
			}
			if(y > ctx.max_y || !ctx.started) {
				ctx.max_y = y;
			}
			if(x < ctx.min_x || !ctx.started) {
				ctx.min_x = x;
			}
			if(y < ctx.min_y || !ctx.started) {
				ctx.min_y = y;
			}
			ctx.started = true;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(ctx.pvertices[ctx.num_vertices],1,x,y,0,0);
			ctx.pvertices[ctx.num_vertices].cx1 = js_Boot.__cast(0 , Int);
			ctx.pvertices[ctx.num_vertices].cy1 = js_Boot.__cast(0 , Int);
		}
		ctx.num_vertices++;
	}
	static stbtt__csctx_rline_to(ctx,dx,dy) {
		ctx.x += dx;
		ctx.y += dy;
		let x = ctx.x | 0;
		let y = ctx.y | 0;
		if(ctx.bounds) {
			if(x > ctx.max_x || !ctx.started) {
				ctx.max_x = x;
			}
			if(y > ctx.max_y || !ctx.started) {
				ctx.max_y = y;
			}
			if(x < ctx.min_x || !ctx.started) {
				ctx.min_x = x;
			}
			if(y < ctx.min_y || !ctx.started) {
				ctx.min_y = y;
			}
			ctx.started = true;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(ctx.pvertices[ctx.num_vertices],2,x,y,0,0);
			ctx.pvertices[ctx.num_vertices].cx1 = js_Boot.__cast(0 , Int);
			ctx.pvertices[ctx.num_vertices].cy1 = js_Boot.__cast(0 , Int);
		}
		ctx.num_vertices++;
	}
	static stbtt__csctx_rccurve_to(ctx,dx1,dy1,dx2,dy2,dx3,dy3) {
		let cx1 = ctx.x + dx1;
		let cy1 = ctx.y + dy1;
		let cx2 = cx1 + dx2;
		let cy2 = cy1 + dy2;
		ctx.x = cx2 + dx3;
		ctx.y = cy2 + dy3;
		let x = ctx.x | 0;
		let y = ctx.y | 0;
		let cx = cx1 | 0;
		let cy = cy1 | 0;
		let cx11 = cx2 | 0;
		let cy11 = cy2 | 0;
		if(ctx.bounds) {
			if(x > ctx.max_x || !ctx.started) {
				ctx.max_x = x;
			}
			if(y > ctx.max_y || !ctx.started) {
				ctx.max_y = y;
			}
			if(x < ctx.min_x || !ctx.started) {
				ctx.min_x = x;
			}
			if(y < ctx.min_y || !ctx.started) {
				ctx.min_y = y;
			}
			ctx.started = true;
			if(cx > ctx.max_x || !ctx.started) {
				ctx.max_x = cx;
			}
			if(cy > ctx.max_y || !ctx.started) {
				ctx.max_y = cy;
			}
			if(cx < ctx.min_x || !ctx.started) {
				ctx.min_x = cx;
			}
			if(cy < ctx.min_y || !ctx.started) {
				ctx.min_y = cy;
			}
			ctx.started = true;
			if(cx11 > ctx.max_x || !ctx.started) {
				ctx.max_x = cx11;
			}
			if(cy11 > ctx.max_y || !ctx.started) {
				ctx.max_y = cy11;
			}
			if(cx11 < ctx.min_x || !ctx.started) {
				ctx.min_x = cx11;
			}
			if(cy11 < ctx.min_y || !ctx.started) {
				ctx.min_y = cy11;
			}
			ctx.started = true;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(ctx.pvertices[ctx.num_vertices],4,x,y,cx,cy);
			ctx.pvertices[ctx.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
			ctx.pvertices[ctx.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
		}
		ctx.num_vertices++;
	}
	static stbtt__get_subr(idx,n) {
		if(0 > idx.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
		let v = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v1;
			if(idx.cursor >= idx.data.get_length()) {
				v1 = 0;
			} else {
				let pos = idx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = idx.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		let count = v;
		let bias = 107;
		if(count >= 33900) {
			bias = 32768;
		} else if(count >= 1240) {
			bias = 1131;
		}
		n += bias;
		if(n < 0 || n >= count) {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			return r;
		}
		if(0 > idx.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
		let v1 = 0;
		let _g2 = 0;
		let _g3 = 2;
		while(_g2 < _g3) {
			let i = _g2++;
			let v;
			if(idx.cursor >= idx.data.get_length()) {
				v = 0;
			} else {
				let pos = idx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = idx.data.readU8(pos);
			}
			v1 = v1 << 8 | v;
		}
		let count1 = v1;
		let offsize;
		if(idx.cursor >= idx.data.get_length()) {
			offsize = 0;
		} else {
			let pos = idx.cursor++;
			if(pos == null) {
				pos = 0;
			}
			offsize = idx.data.readU8(pos);
		}
		if(!(n >= 0 && n < count1)) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let o = idx.cursor + n * offsize;
		if(o > idx.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		idx.cursor = o > idx.data.get_length() || o < 0 ? idx.data.get_length() : o;
		let v2 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g4 = 0;
		let _g5 = offsize;
		while(_g4 < _g5) {
			let i = _g4++;
			let v;
			if(idx.cursor >= idx.data.get_length()) {
				v = 0;
			} else {
				let pos = idx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = idx.data.readU8(pos);
			}
			v2 = v2 << 8 | v;
		}
		let start = v2;
		let v3 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g6 = 0;
		let _g7 = offsize;
		while(_g6 < _g7) {
			let i = _g6++;
			let v;
			if(idx.cursor >= idx.data.get_length()) {
				v = 0;
			} else {
				let pos = idx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = idx.data.readU8(pos);
			}
			v3 = v3 << 8 | v;
		}
		let end = v3;
		let o1 = 2 + (count1 + 1) * offsize + start;
		let s = end - start;
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		if(o1 < 0 || s < 0 || o1 > idx.data.get_length() || s > idx.data.get_length() - o1) {
			return r1;
		} else {
			r1.data = idx.data.sub(o1,s);
			return r1;
		}
	}
	static stbtt__cid_get_glyph_subrs(info,glyph_index) {
		let fdselect = info.fdselect;
		let nranges;
		let start;
		let end;
		let v;
		let fmt;
		let fdselector = -1;
		let i;
		if(0 > fdselect.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		fdselect.cursor = 0 > fdselect.data.get_length() ? fdselect.data.get_length() : 0;
		if(fdselect.cursor >= fdselect.data.get_length()) {
			fmt = 0;
		} else {
			let pos = fdselect.cursor++;
			if(pos == null) {
				pos = 0;
			}
			fmt = fdselect.data.readU8(pos);
		}
		if(fmt == 0) {
			let o = fdselect.cursor + glyph_index;
			if(o > fdselect.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			fdselect.cursor = o > fdselect.data.get_length() || o < 0 ? fdselect.data.get_length() : o;
			if(fdselect.cursor >= fdselect.data.get_length()) {
				fdselector = 0;
			} else {
				let pos = fdselect.cursor++;
				if(pos == null) {
					pos = 0;
				}
				fdselector = fdselect.data.readU8(pos);
			}
		} else if(fmt == 3) {
			let v1 = 0;
			let _g = 0;
			let _g1 = 2;
			while(_g < _g1) {
				let i = _g++;
				let v;
				if(fdselect.cursor >= fdselect.data.get_length()) {
					v = 0;
				} else {
					let pos = fdselect.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = fdselect.data.readU8(pos);
				}
				v1 = v1 << 8 | v;
			}
			nranges = v1;
			let v2 = 0;
			let _g2 = 0;
			let _g3 = 2;
			while(_g2 < _g3) {
				let i = _g2++;
				let v;
				if(fdselect.cursor >= fdselect.data.get_length()) {
					v = 0;
				} else {
					let pos = fdselect.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = fdselect.data.readU8(pos);
				}
				v2 = v2 << 8 | v;
			}
			start = v2;
			let _g4 = 0;
			let _g5 = nranges;
			while(_g4 < _g5) {
				let i = _g4++;
				if(fdselect.cursor >= fdselect.data.get_length()) {
					v = 0;
				} else {
					let pos = fdselect.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v = fdselect.data.readU8(pos);
				}
				let v1 = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v;
					if(fdselect.cursor >= fdselect.data.get_length()) {
						v = 0;
					} else {
						let pos = fdselect.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v = fdselect.data.readU8(pos);
					}
					v1 = v1 << 8 | v;
				}
				end = v1;
				if(glyph_index >= start && glyph_index < end) {
					fdselector = v;
					break;
				}
				start = end;
			}
		}
		if(fdselector == -1) {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
		}
		let cff = info.cff;
		let b = info.fontdicts;
		if(0 > b.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
		let v1 = 0;
		let _g = 0;
		let _g1 = 2;
		while(_g < _g1) {
			let i = _g++;
			let v;
			if(b.cursor >= b.data.get_length()) {
				v = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b.data.readU8(pos);
			}
			v1 = v1 << 8 | v;
		}
		let count = v1;
		let offsize;
		if(b.cursor >= b.data.get_length()) {
			offsize = 0;
		} else {
			let pos = b.cursor++;
			if(pos == null) {
				pos = 0;
			}
			offsize = b.data.readU8(pos);
		}
		if(!(fdselector >= 0 && fdselector < count)) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let o = b.cursor + fdselector * offsize;
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
		let v2 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g2 = 0;
		let _g3 = offsize;
		while(_g2 < _g3) {
			let i = _g2++;
			let v;
			if(b.cursor >= b.data.get_length()) {
				v = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b.data.readU8(pos);
			}
			v2 = v2 << 8 | v;
		}
		let start1 = v2;
		let v3 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g4 = 0;
		let _g5 = offsize;
		while(_g4 < _g5) {
			let i = _g4++;
			let v;
			if(b.cursor >= b.data.get_length()) {
				v = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b.data.readU8(pos);
			}
			v3 = v3 << 8 | v;
		}
		let end1 = v3;
		let o1 = 2 + (count + 1) * offsize + start1;
		let s = end1 - start1;
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		let fontdict;
		if(o1 < 0 || s < 0 || o1 > b.data.get_length() || s > b.data.get_length() - o1) {
			fontdict = r1;
		} else {
			r1.data = b.data.sub(o1,s);
			fontdict = r1;
		}
		let subrsoff = [0];
		let private_loc = [0,0];
		let i1 = 0;
		if(0 > fontdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		fontdict.cursor = 0 > fontdict.data.get_length() ? fontdict.data.get_length() : 0;
		let ret = null;
		while(fontdict.cursor < fontdict.data.get_length()) {
			let start = fontdict.cursor;
			let op;
			while(true) {
				let tmp;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					tmp = 0;
				} else {
					let pos = fontdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = fontdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				let v;
				let b0;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					b0 = 0;
				} else {
					let pos = fontdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					b0 = fontdict.data.readU8(pos);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					let o = fontdict.cursor + 1;
					if(o > fontdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					fontdict.cursor = o > fontdict.data.get_length() || o < 0 ? fontdict.data.get_length() : o;
					while(fontdict.cursor < fontdict.data.get_length()) {
						if(fontdict.cursor >= fontdict.data.get_length()) {
							v = 0;
						} else {
							let pos = fontdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = fontdict.data.readU8(pos);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					let b0;
					if(fontdict.cursor >= fontdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = fontdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = fontdict.data.readU8(pos);
					}
					if(!(b0 >= 32 && b0 <= 246)) {
						if(b0 >= 247 && b0 <= 250) {
							if(fontdict.cursor < fontdict.data.get_length()) {
								let pos = fontdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								fontdict.data.readU8(pos);
							}
						} else if(b0 >= 251 && b0 <= 254) {
							if(fontdict.cursor < fontdict.data.get_length()) {
								let pos = fontdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								fontdict.data.readU8(pos);
							}
						} else if(b0 == 28) {
							let v = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = fontdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = fontdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else if(b0 == 29) {
							let v = 0;
							let _g = 0;
							let _g1 = 4;
							while(_g < _g1) {
								let i = _g++;
								let v1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									v1 = 0;
								} else {
									let pos = fontdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v1 = fontdict.data.readU8(pos);
								}
								v = v << 8 | v1;
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			let end = fontdict.cursor;
			if(fontdict.cursor >= fontdict.data.get_length()) {
				op = 0;
			} else {
				let pos = fontdict.cursor++;
				if(pos == null) {
					pos = 0;
				}
				op = fontdict.data.readU8(pos);
			}
			if(op == 12) {
				let op1;
				if(fontdict.cursor >= fontdict.data.get_length()) {
					op1 = 0;
				} else {
					let pos = fontdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op1 = fontdict.data.readU8(pos);
				}
				op = op1 | 256;
			}
			if(op == 18) {
				let s = end - start;
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(start < 0 || s < 0 || start > fontdict.data.get_length() || s > fontdict.data.get_length() - start) {
					ret = r1;
				} else {
					r1.data = fontdict.data.sub(start,s);
					ret = r1;
				}
				break;
			}
		}
		let operands;
		if(ret != null) {
			operands = ret;
		} else {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			if(0 > fontdict.data.get_length() || 0 > fontdict.data.get_length()) {
				operands = r1;
			} else {
				r1.data = fontdict.data.sub(0,0);
				operands = r1;
			}
		}
		while(i1 < 2 && operands.cursor < operands.data.get_length()) {
			let b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				let pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			let tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				let tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					tmp1 = operands.data.readU8(pos);
				}
				tmp = -(b0 - 251) * 256 - tmp1 - 108;
			} else if(b0 == 28) {
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				let v = 0;
				let _g = 0;
				let _g1 = 4;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = operands.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			private_loc[i1] = tmp;
			++i1;
		}
		if(private_loc[1] == 0 || private_loc[0] == 0) {
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			return r;
		} else {
			let o = private_loc[1];
			let s = private_loc[0];
			let r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			let r1 = r;
			let pdict;
			if(o < 0 || s < 0 || o > cff.data.get_length() || s > cff.data.get_length() - o) {
				pdict = r1;
			} else {
				r1.data = cff.data.sub(o,s);
				pdict = r1;
			}
			let i = 0;
			if(0 > pdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
			let ret = null;
			while(pdict.cursor < pdict.data.get_length()) {
				let start = pdict.cursor;
				let op;
				while(true) {
					let tmp;
					if(pdict.cursor >= pdict.data.get_length()) {
						tmp = 0;
					} else {
						let pos = pdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp = pdict.data.readU8(pos);
					}
					if(!(tmp >= 28)) {
						break;
					}
					let v;
					let b0;
					if(pdict.cursor >= pdict.data.get_length()) {
						b0 = 0;
					} else {
						let pos = pdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						b0 = pdict.data.readU8(pos);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						let o = pdict.cursor + 1;
						if(o > pdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						pdict.cursor = o > pdict.data.get_length() || o < 0 ? pdict.data.get_length() : o;
						while(pdict.cursor < pdict.data.get_length()) {
							if(pdict.cursor >= pdict.data.get_length()) {
								v = 0;
							} else {
								let pos = pdict.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v = pdict.data.readU8(pos);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						let b0;
						if(pdict.cursor >= pdict.data.get_length()) {
							b0 = 0;
						} else {
							let pos = pdict.cursor++;
							if(pos == null) {
								pos = 0;
							}
							b0 = pdict.data.readU8(pos);
						}
						if(!(b0 >= 32 && b0 <= 246)) {
							if(b0 >= 247 && b0 <= 250) {
								if(pdict.cursor < pdict.data.get_length()) {
									let pos = pdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									pdict.data.readU8(pos);
								}
							} else if(b0 >= 251 && b0 <= 254) {
								if(pdict.cursor < pdict.data.get_length()) {
									let pos = pdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									pdict.data.readU8(pos);
								}
							} else if(b0 == 28) {
								let v = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(pdict.cursor >= pdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = pdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = pdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else if(b0 == 29) {
								let v = 0;
								let _g = 0;
								let _g1 = 4;
								while(_g < _g1) {
									let i = _g++;
									let v1;
									if(pdict.cursor >= pdict.data.get_length()) {
										v1 = 0;
									} else {
										let pos = pdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v1 = pdict.data.readU8(pos);
									}
									v = v << 8 | v1;
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				let end = pdict.cursor;
				if(pdict.cursor >= pdict.data.get_length()) {
					op = 0;
				} else {
					let pos = pdict.cursor++;
					if(pos == null) {
						pos = 0;
					}
					op = pdict.data.readU8(pos);
				}
				if(op == 12) {
					let op1;
					if(pdict.cursor >= pdict.data.get_length()) {
						op1 = 0;
					} else {
						let pos = pdict.cursor++;
						if(pos == null) {
							pos = 0;
						}
						op1 = pdict.data.readU8(pos);
					}
					op = op1 | 256;
				}
				if(op == 19) {
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > pdict.data.get_length() || s > pdict.data.get_length() - start) {
						ret = r1;
					} else {
						r1.data = pdict.data.sub(start,s);
						ret = r1;
					}
					break;
				}
			}
			let operands;
			if(ret != null) {
				operands = ret;
			} else {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				let r1 = r;
				if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
					operands = r1;
				} else {
					r1.data = pdict.data.sub(0,0);
					operands = r1;
				}
			}
			while(i < 1 && operands.cursor < operands.data.get_length()) {
				let b0;
				if(operands.cursor >= operands.data.get_length()) {
					b0 = 0;
				} else {
					let pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands.data.readU8(pos);
				}
				let tmp;
				if(b0 >= 32 && b0 <= 246) {
					tmp = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					let tmp1;
					if(operands.cursor >= operands.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands.data.readU8(pos);
					}
					tmp = (b0 - 247) * 256 + tmp1 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					let tmp1;
					if(operands.cursor >= operands.data.get_length()) {
						tmp1 = 0;
					} else {
						let pos = operands.cursor++;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = operands.data.readU8(pos);
					}
					tmp = -(b0 - 251) * 256 - tmp1 - 108;
				} else if(b0 == 28) {
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands.cursor >= operands.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else if(b0 == 29) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(operands.cursor >= operands.data.get_length()) {
							v1 = 0;
						} else {
							let pos = operands.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = operands.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					tmp = v;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				subrsoff[i] = tmp;
				++i;
			}
			if(subrsoff[0] == 0) {
				let r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				return r;
			} else {
				let o = private_loc[1] + subrsoff[0];
				if(o > cff.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				cff.cursor = o > cff.data.get_length() || o < 0 ? cff.data.get_length() : o;
				let start = cff.cursor;
				let v = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v1;
					if(cff.cursor >= cff.data.get_length()) {
						v1 = 0;
					} else {
						let pos = cff.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = cff.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				let count = v;
				if(count > 0) {
					let offsize;
					if(cff.cursor >= cff.data.get_length()) {
						offsize = 0;
					} else {
						let pos = cff.cursor++;
						if(pos == null) {
							pos = 0;
						}
						offsize = cff.data.readU8(pos);
					}
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let o = cff.cursor + offsize * count;
					if(o > cff.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					cff.cursor = o > cff.data.get_length() || o < 0 ? cff.data.get_length() : o;
					let v = 0;
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let _g = 0;
					let _g1 = offsize;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(cff.cursor >= cff.data.get_length()) {
							v1 = 0;
						} else {
							let pos = cff.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = cff.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					let o1 = cff.cursor + (v - 1);
					if(o1 > cff.data.get_length() || o1 < 0) {
						throw haxe_Exception.thrown("Error");
					}
					cff.cursor = o1 > cff.data.get_length() || o1 < 0 ? cff.data.get_length() : o1;
					let s = cff.cursor - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(start < 0 || s < 0 || start > cff.data.get_length() || s > cff.data.get_length() - start) {
						return r1;
					} else {
						r1.data = cff.data.sub(start,s);
						return r1;
					}
				} else {
					return cff;
				}
			}
		}
	}
	static STBTT__CSERR(s) {
		return false;
	}
	static stbtt__run_charstring(info,glyph_index,c) {
		let in_header = true;
		let maskbits = 0;
		let subr_stack_height = 0;
		let sp = 0;
		let v;
		let i;
		let b0;
		let has_subrs = false;
		let clear_stack;
		let _g = [];
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		_g.push(0);
		let s = _g;
		let _g1 = [];
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
		let subr_stack = _g1;
		let subrs = info.subrs;
		let b;
		let f;
		let b1 = info.charstrings;
		if(0 > b1.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		b1.cursor = 0 > b1.data.get_length() ? b1.data.get_length() : 0;
		let v1 = 0;
		let _g2 = 0;
		let _g3 = 2;
		while(_g2 < _g3) {
			let i = _g2++;
			let v;
			if(b1.cursor >= b1.data.get_length()) {
				v = 0;
			} else {
				let pos = b1.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b1.data.readU8(pos);
			}
			v1 = v1 << 8 | v;
		}
		let count = v1;
		let offsize;
		if(b1.cursor >= b1.data.get_length()) {
			offsize = 0;
		} else {
			let pos = b1.cursor++;
			if(pos == null) {
				pos = 0;
			}
			offsize = b1.data.readU8(pos);
		}
		if(!(glyph_index >= 0 && glyph_index < count)) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let o = b1.cursor + glyph_index * offsize;
		if(o > b1.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b1.cursor = o > b1.data.get_length() || o < 0 ? b1.data.get_length() : o;
		let v2 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g4 = 0;
		let _g5 = offsize;
		while(_g4 < _g5) {
			let i = _g4++;
			let v;
			if(b1.cursor >= b1.data.get_length()) {
				v = 0;
			} else {
				let pos = b1.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b1.data.readU8(pos);
			}
			v2 = v2 << 8 | v;
		}
		let start = v2;
		let v3 = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		let _g6 = 0;
		let _g7 = offsize;
		while(_g6 < _g7) {
			let i = _g6++;
			let v;
			if(b1.cursor >= b1.data.get_length()) {
				v = 0;
			} else {
				let pos = b1.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v = b1.data.readU8(pos);
			}
			v3 = v3 << 8 | v;
		}
		let end = v3;
		let o1 = 2 + (count + 1) * offsize + start;
		let s1 = end - start;
		let r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		let r1 = r;
		if(o1 < 0 || s1 < 0 || o1 > b1.data.get_length() || s1 > b1.data.get_length() - o1) {
			b = r1;
		} else {
			r1.data = b1.data.sub(o1,s1);
			b = r1;
		}
		while(b.cursor < b.data.get_length()) {
			i = 0;
			clear_stack = true;
			if(b.cursor >= b.data.get_length()) {
				b0 = 0;
			} else {
				let pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = b.data.readU8(pos);
			}
			switch(b0) {
			case 1:case 3:case 18:case 23:
				maskbits += sp / 2 | 0;
				break;
			case 4:
				in_header = false;
				if(sp < 1) {
					return false;
				}
				if(c.first_x != c.x || c.first_y != c.y) {
					let x = c.first_x | 0;
					let y = c.first_y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
				}
				c.first_x = c.x = c.x;
				c.first_y = c.y = c.y + s[sp - 1];
				let x = c.x | 0;
				let y = c.y | 0;
				if(c.bounds) {
					if(x > c.max_x || !c.started) {
						c.max_x = x;
					}
					if(y > c.max_y || !c.started) {
						c.max_y = y;
					}
					if(x < c.min_x || !c.started) {
						c.min_x = x;
					}
					if(y < c.min_y || !c.started) {
						c.min_y = y;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x,y,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				break;
			case 5:
				if(sp < 2) {
					return false;
				}
				while(i + 1 < sp) {
					c.x += s[i];
					c.y += s[i + 1];
					let x = c.x | 0;
					let y = c.y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					i += 2;
				}
				break;
			case 6:
				if(sp < 1) {
					return false;
				}
				while(i < sp) {
					c.x += s[i];
					c.y += 0;
					let x = c.x | 0;
					let y = c.y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					++i;
					if(i >= sp) {
						break;
					}
					c.x += 0;
					c.y += s[i];
					let x1 = c.x | 0;
					let y1 = c.y | 0;
					if(c.bounds) {
						if(x1 > c.max_x || !c.started) {
							c.max_x = x1;
						}
						if(y1 > c.max_y || !c.started) {
							c.max_y = y1;
						}
						if(x1 < c.min_x || !c.started) {
							c.min_x = x1;
						}
						if(y1 < c.min_y || !c.started) {
							c.min_y = y1;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x1,y1,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					++i;
				}
				break;
			case 7:
				if(sp < 1) {
					return false;
				}
				while(i < sp) {
					c.x += 0;
					c.y += s[i];
					let x = c.x | 0;
					let y = c.y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					++i;
					if(i >= sp) {
						break;
					}
					c.x += s[i];
					c.y += 0;
					let x1 = c.x | 0;
					let y1 = c.y | 0;
					if(c.bounds) {
						if(x1 > c.max_x || !c.started) {
							c.max_x = x1;
						}
						if(y1 > c.max_y || !c.started) {
							c.max_y = y1;
						}
						if(x1 < c.min_x || !c.started) {
							c.min_x = x1;
						}
						if(y1 < c.min_y || !c.started) {
							c.min_y = y1;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x1,y1,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					++i;
				}
				break;
			case 8:
				if(sp < 6) {
					return false;
				}
				while(i + 5 < sp) {
					let cx1 = c.x + s[i];
					let cy1 = c.y + s[i + 1];
					let cx2 = cx1 + s[i + 2];
					let cy2 = cy1 + s[i + 3];
					c.x = cx2 + s[i + 4];
					c.y = cy2 + s[i + 5];
					let x = c.x | 0;
					let y = c.y | 0;
					let cx = cx1 | 0;
					let cy = cy1 | 0;
					let cx11 = cx2 | 0;
					let cy11 = cy2 | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
						if(cx > c.max_x || !c.started) {
							c.max_x = cx;
						}
						if(cy > c.max_y || !c.started) {
							c.max_y = cy;
						}
						if(cx < c.min_x || !c.started) {
							c.min_x = cx;
						}
						if(cy < c.min_y || !c.started) {
							c.min_y = cy;
						}
						c.started = true;
						if(cx11 > c.max_x || !c.started) {
							c.max_x = cx11;
						}
						if(cy11 > c.max_y || !c.started) {
							c.max_y = cy11;
						}
						if(cx11 < c.min_x || !c.started) {
							c.min_x = cx11;
						}
						if(cy11 < c.min_y || !c.started) {
							c.min_y = cy11;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
					}
					c.num_vertices++;
					i += 6;
				}
				break;
			case 11:
				if(subr_stack_height <= 0) {
					return false;
				}
				b = subr_stack[--subr_stack_height];
				clear_stack = false;
				break;
			case 12:
				let dx1;
				let dx2;
				let dx3;
				let dx4;
				let dx5;
				let dx6;
				let dy1;
				let dy2;
				let dy3;
				let dy4;
				let dy5;
				let dy6;
				let dx;
				let dy;
				let b1;
				if(b.cursor >= b.data.get_length()) {
					b1 = 0;
				} else {
					let pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b1 = b.data.readU8(pos);
				}
				switch(b1) {
				case 34:
					if(sp < 7) {
						return false;
					}
					dx1 = s[0];
					dx2 = s[1];
					dy2 = s[2];
					dx3 = s[3];
					dx4 = s[4];
					dx5 = s[5];
					dx6 = s[6];
					let cx1 = c.x + dx1;
					let cy1 = c.y;
					let cx2 = cx1 + dx2;
					let cy2 = cy1 + dy2;
					c.x = cx2 + dx3;
					c.y = cy2;
					let x1 = c.x | 0;
					let y1 = c.y | 0;
					let cx = cx1 | 0;
					let cy = cy1 | 0;
					let cx11 = cx2 | 0;
					let cy11 = cy2 | 0;
					if(c.bounds) {
						if(x1 > c.max_x || !c.started) {
							c.max_x = x1;
						}
						if(y1 > c.max_y || !c.started) {
							c.max_y = y1;
						}
						if(x1 < c.min_x || !c.started) {
							c.min_x = x1;
						}
						if(y1 < c.min_y || !c.started) {
							c.min_y = y1;
						}
						c.started = true;
						if(cx > c.max_x || !c.started) {
							c.max_x = cx;
						}
						if(cy > c.max_y || !c.started) {
							c.max_y = cy;
						}
						if(cx < c.min_x || !c.started) {
							c.min_x = cx;
						}
						if(cy < c.min_y || !c.started) {
							c.min_y = cy;
						}
						c.started = true;
						if(cx11 > c.max_x || !c.started) {
							c.max_x = cx11;
						}
						if(cy11 > c.max_y || !c.started) {
							c.max_y = cy11;
						}
						if(cx11 < c.min_x || !c.started) {
							c.min_x = cx11;
						}
						if(cy11 < c.min_y || !c.started) {
							c.min_y = cy11;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x1,y1,cx,cy);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
					}
					c.num_vertices++;
					let cx12 = c.x + dx4;
					let cy12 = c.y;
					let cx21 = cx12 + dx5;
					let cy21 = cy12 + -dy2;
					c.x = cx21 + dx6;
					c.y = cy21;
					let x2 = c.x | 0;
					let y2 = c.y | 0;
					let cx3 = cx12 | 0;
					let cy3 = cy12 | 0;
					let cx13 = cx21 | 0;
					let cy13 = cy21 | 0;
					if(c.bounds) {
						if(x2 > c.max_x || !c.started) {
							c.max_x = x2;
						}
						if(y2 > c.max_y || !c.started) {
							c.max_y = y2;
						}
						if(x2 < c.min_x || !c.started) {
							c.min_x = x2;
						}
						if(y2 < c.min_y || !c.started) {
							c.min_y = y2;
						}
						c.started = true;
						if(cx3 > c.max_x || !c.started) {
							c.max_x = cx3;
						}
						if(cy3 > c.max_y || !c.started) {
							c.max_y = cy3;
						}
						if(cx3 < c.min_x || !c.started) {
							c.min_x = cx3;
						}
						if(cy3 < c.min_y || !c.started) {
							c.min_y = cy3;
						}
						c.started = true;
						if(cx13 > c.max_x || !c.started) {
							c.max_x = cx13;
						}
						if(cy13 > c.max_y || !c.started) {
							c.max_y = cy13;
						}
						if(cx13 < c.min_x || !c.started) {
							c.min_x = cx13;
						}
						if(cy13 < c.min_y || !c.started) {
							c.min_y = cy13;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x2,y2,cx3,cy3);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx13 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy13 , Int);
					}
					c.num_vertices++;
					break;
				case 35:
					if(sp < 13) {
						return false;
					}
					dx1 = s[0];
					dy1 = s[1];
					dx2 = s[2];
					dy2 = s[3];
					dx3 = s[4];
					dy3 = s[5];
					dx4 = s[6];
					dy4 = s[7];
					dx5 = s[8];
					dy5 = s[9];
					dx6 = s[10];
					dy6 = s[11];
					let cx14 = c.x + dx1;
					let cy14 = c.y + dy1;
					let cx22 = cx14 + dx2;
					let cy22 = cy14 + dy2;
					c.x = cx22 + dx3;
					c.y = cy22 + dy3;
					let x3 = c.x | 0;
					let y3 = c.y | 0;
					let cx4 = cx14 | 0;
					let cy4 = cy14 | 0;
					let cx15 = cx22 | 0;
					let cy15 = cy22 | 0;
					if(c.bounds) {
						if(x3 > c.max_x || !c.started) {
							c.max_x = x3;
						}
						if(y3 > c.max_y || !c.started) {
							c.max_y = y3;
						}
						if(x3 < c.min_x || !c.started) {
							c.min_x = x3;
						}
						if(y3 < c.min_y || !c.started) {
							c.min_y = y3;
						}
						c.started = true;
						if(cx4 > c.max_x || !c.started) {
							c.max_x = cx4;
						}
						if(cy4 > c.max_y || !c.started) {
							c.max_y = cy4;
						}
						if(cx4 < c.min_x || !c.started) {
							c.min_x = cx4;
						}
						if(cy4 < c.min_y || !c.started) {
							c.min_y = cy4;
						}
						c.started = true;
						if(cx15 > c.max_x || !c.started) {
							c.max_x = cx15;
						}
						if(cy15 > c.max_y || !c.started) {
							c.max_y = cy15;
						}
						if(cx15 < c.min_x || !c.started) {
							c.min_x = cx15;
						}
						if(cy15 < c.min_y || !c.started) {
							c.min_y = cy15;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x3,y3,cx4,cy4);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx15 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy15 , Int);
					}
					c.num_vertices++;
					let cx16 = c.x + dx4;
					let cy16 = c.y + dy4;
					let cx23 = cx16 + dx5;
					let cy23 = cy16 + dy5;
					c.x = cx23 + dx6;
					c.y = cy23 + dy6;
					let x4 = c.x | 0;
					let y4 = c.y | 0;
					let cx5 = cx16 | 0;
					let cy5 = cy16 | 0;
					let cx17 = cx23 | 0;
					let cy17 = cy23 | 0;
					if(c.bounds) {
						if(x4 > c.max_x || !c.started) {
							c.max_x = x4;
						}
						if(y4 > c.max_y || !c.started) {
							c.max_y = y4;
						}
						if(x4 < c.min_x || !c.started) {
							c.min_x = x4;
						}
						if(y4 < c.min_y || !c.started) {
							c.min_y = y4;
						}
						c.started = true;
						if(cx5 > c.max_x || !c.started) {
							c.max_x = cx5;
						}
						if(cy5 > c.max_y || !c.started) {
							c.max_y = cy5;
						}
						if(cx5 < c.min_x || !c.started) {
							c.min_x = cx5;
						}
						if(cy5 < c.min_y || !c.started) {
							c.min_y = cy5;
						}
						c.started = true;
						if(cx17 > c.max_x || !c.started) {
							c.max_x = cx17;
						}
						if(cy17 > c.max_y || !c.started) {
							c.max_y = cy17;
						}
						if(cx17 < c.min_x || !c.started) {
							c.min_x = cx17;
						}
						if(cy17 < c.min_y || !c.started) {
							c.min_y = cy17;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x4,y4,cx5,cy5);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx17 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy17 , Int);
					}
					c.num_vertices++;
					break;
				case 36:
					if(sp < 9) {
						return false;
					}
					dx1 = s[0];
					dy1 = s[1];
					dx2 = s[2];
					dy2 = s[3];
					dx3 = s[4];
					dx4 = s[5];
					dx5 = s[6];
					dy5 = s[7];
					dx6 = s[8];
					let cx18 = c.x + dx1;
					let cy18 = c.y + dy1;
					let cx24 = cx18 + dx2;
					let cy24 = cy18 + dy2;
					c.x = cx24 + dx3;
					c.y = cy24;
					let x5 = c.x | 0;
					let y5 = c.y | 0;
					let cx6 = cx18 | 0;
					let cy6 = cy18 | 0;
					let cx19 = cx24 | 0;
					let cy19 = cy24 | 0;
					if(c.bounds) {
						if(x5 > c.max_x || !c.started) {
							c.max_x = x5;
						}
						if(y5 > c.max_y || !c.started) {
							c.max_y = y5;
						}
						if(x5 < c.min_x || !c.started) {
							c.min_x = x5;
						}
						if(y5 < c.min_y || !c.started) {
							c.min_y = y5;
						}
						c.started = true;
						if(cx6 > c.max_x || !c.started) {
							c.max_x = cx6;
						}
						if(cy6 > c.max_y || !c.started) {
							c.max_y = cy6;
						}
						if(cx6 < c.min_x || !c.started) {
							c.min_x = cx6;
						}
						if(cy6 < c.min_y || !c.started) {
							c.min_y = cy6;
						}
						c.started = true;
						if(cx19 > c.max_x || !c.started) {
							c.max_x = cx19;
						}
						if(cy19 > c.max_y || !c.started) {
							c.max_y = cy19;
						}
						if(cx19 < c.min_x || !c.started) {
							c.min_x = cx19;
						}
						if(cy19 < c.min_y || !c.started) {
							c.min_y = cy19;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x5,y5,cx6,cy6);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx19 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy19 , Int);
					}
					c.num_vertices++;
					let cx110 = c.x + dx4;
					let cy110 = c.y;
					let cx25 = cx110 + dx5;
					let cy25 = cy110 + dy5;
					c.x = cx25 + dx6;
					c.y = cy25 + -(dy1 + dy2 + dy5);
					let x6 = c.x | 0;
					let y6 = c.y | 0;
					let cx7 = cx110 | 0;
					let cy7 = cy110 | 0;
					let cx111 = cx25 | 0;
					let cy111 = cy25 | 0;
					if(c.bounds) {
						if(x6 > c.max_x || !c.started) {
							c.max_x = x6;
						}
						if(y6 > c.max_y || !c.started) {
							c.max_y = y6;
						}
						if(x6 < c.min_x || !c.started) {
							c.min_x = x6;
						}
						if(y6 < c.min_y || !c.started) {
							c.min_y = y6;
						}
						c.started = true;
						if(cx7 > c.max_x || !c.started) {
							c.max_x = cx7;
						}
						if(cy7 > c.max_y || !c.started) {
							c.max_y = cy7;
						}
						if(cx7 < c.min_x || !c.started) {
							c.min_x = cx7;
						}
						if(cy7 < c.min_y || !c.started) {
							c.min_y = cy7;
						}
						c.started = true;
						if(cx111 > c.max_x || !c.started) {
							c.max_x = cx111;
						}
						if(cy111 > c.max_y || !c.started) {
							c.max_y = cy111;
						}
						if(cx111 < c.min_x || !c.started) {
							c.min_x = cx111;
						}
						if(cy111 < c.min_y || !c.started) {
							c.min_y = cy111;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x6,y6,cx7,cy7);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx111 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy111 , Int);
					}
					c.num_vertices++;
					break;
				case 37:
					if(sp < 11) {
						return false;
					}
					dx1 = s[0];
					dy1 = s[1];
					dx2 = s[2];
					dy2 = s[3];
					dx3 = s[4];
					dy3 = s[5];
					dx4 = s[6];
					dy4 = s[7];
					dx5 = s[8];
					dy5 = s[9];
					dy6 = s[10];
					dx6 = dy6;
					dx = dx1 + dx2 + dx3 + dx4 + dx5;
					dy = dy1 + dy2 + dy3 + dy4 + dy5;
					if(Math.abs(dx) > Math.abs(dy)) {
						dy6 = -dy;
					} else {
						dx6 = -dx;
					}
					let cx112 = c.x + dx1;
					let cy112 = c.y + dy1;
					let cx26 = cx112 + dx2;
					let cy26 = cy112 + dy2;
					c.x = cx26 + dx3;
					c.y = cy26 + dy3;
					let x7 = c.x | 0;
					let y7 = c.y | 0;
					let cx8 = cx112 | 0;
					let cy8 = cy112 | 0;
					let cx113 = cx26 | 0;
					let cy113 = cy26 | 0;
					if(c.bounds) {
						if(x7 > c.max_x || !c.started) {
							c.max_x = x7;
						}
						if(y7 > c.max_y || !c.started) {
							c.max_y = y7;
						}
						if(x7 < c.min_x || !c.started) {
							c.min_x = x7;
						}
						if(y7 < c.min_y || !c.started) {
							c.min_y = y7;
						}
						c.started = true;
						if(cx8 > c.max_x || !c.started) {
							c.max_x = cx8;
						}
						if(cy8 > c.max_y || !c.started) {
							c.max_y = cy8;
						}
						if(cx8 < c.min_x || !c.started) {
							c.min_x = cx8;
						}
						if(cy8 < c.min_y || !c.started) {
							c.min_y = cy8;
						}
						c.started = true;
						if(cx113 > c.max_x || !c.started) {
							c.max_x = cx113;
						}
						if(cy113 > c.max_y || !c.started) {
							c.max_y = cy113;
						}
						if(cx113 < c.min_x || !c.started) {
							c.min_x = cx113;
						}
						if(cy113 < c.min_y || !c.started) {
							c.min_y = cy113;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x7,y7,cx8,cy8);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx113 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy113 , Int);
					}
					c.num_vertices++;
					let cx114 = c.x + dx4;
					let cy114 = c.y + dy4;
					let cx27 = cx114 + dx5;
					let cy27 = cy114 + dy5;
					c.x = cx27 + dx6;
					c.y = cy27 + dy6;
					let x8 = c.x | 0;
					let y8 = c.y | 0;
					let cx9 = cx114 | 0;
					let cy9 = cy114 | 0;
					let cx115 = cx27 | 0;
					let cy115 = cy27 | 0;
					if(c.bounds) {
						if(x8 > c.max_x || !c.started) {
							c.max_x = x8;
						}
						if(y8 > c.max_y || !c.started) {
							c.max_y = y8;
						}
						if(x8 < c.min_x || !c.started) {
							c.min_x = x8;
						}
						if(y8 < c.min_y || !c.started) {
							c.min_y = y8;
						}
						c.started = true;
						if(cx9 > c.max_x || !c.started) {
							c.max_x = cx9;
						}
						if(cy9 > c.max_y || !c.started) {
							c.max_y = cy9;
						}
						if(cx9 < c.min_x || !c.started) {
							c.min_x = cx9;
						}
						if(cy9 < c.min_y || !c.started) {
							c.min_y = cy9;
						}
						c.started = true;
						if(cx115 > c.max_x || !c.started) {
							c.max_x = cx115;
						}
						if(cy115 > c.max_y || !c.started) {
							c.max_y = cy115;
						}
						if(cx115 < c.min_x || !c.started) {
							c.min_x = cx115;
						}
						if(cy115 < c.min_y || !c.started) {
							c.min_y = cy115;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x8,y8,cx9,cy9);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx115 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy115 , Int);
					}
					c.num_vertices++;
					break;
				default:
					return false;
				}
				break;
			case 14:
				if(c.first_x != c.x || c.first_y != c.y) {
					let x = c.first_x | 0;
					let y = c.first_y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
				}
				return true;
			case 19:case 20:
				if(in_header) {
					maskbits += sp / 2 | 0;
				}
				in_header = false;
				let o = b.cursor + ((maskbits + 7) / 8 | 0);
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				break;
			case 21:
				in_header = false;
				if(sp < 2) {
					return false;
				}
				if(c.first_x != c.x || c.first_y != c.y) {
					let x = c.first_x | 0;
					let y = c.first_y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
				}
				c.first_x = c.x = c.x + s[sp - 2];
				c.first_y = c.y = c.y + s[sp - 1];
				let x9 = c.x | 0;
				let y9 = c.y | 0;
				if(c.bounds) {
					if(x9 > c.max_x || !c.started) {
						c.max_x = x9;
					}
					if(y9 > c.max_y || !c.started) {
						c.max_y = y9;
					}
					if(x9 < c.min_x || !c.started) {
						c.min_x = x9;
					}
					if(y9 < c.min_y || !c.started) {
						c.min_y = y9;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x9,y9,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				break;
			case 22:
				in_header = false;
				if(sp < 1) {
					return false;
				}
				if(c.first_x != c.x || c.first_y != c.y) {
					let x = c.first_x | 0;
					let y = c.first_y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
				}
				c.first_x = c.x = c.x + s[sp - 1];
				c.first_y = c.y = c.y;
				let x10 = c.x | 0;
				let y10 = c.y | 0;
				if(c.bounds) {
					if(x10 > c.max_x || !c.started) {
						c.max_x = x10;
					}
					if(y10 > c.max_y || !c.started) {
						c.max_y = y10;
					}
					if(x10 < c.min_x || !c.started) {
						c.min_x = x10;
					}
					if(y10 < c.min_y || !c.started) {
						c.min_y = y10;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x10,y10,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				break;
			case 24:
				if(sp < 8) {
					return false;
				}
				while(i + 5 < sp - 2) {
					let cx1 = c.x + s[i];
					let cy1 = c.y + s[i + 1];
					let cx2 = cx1 + s[i + 2];
					let cy2 = cy1 + s[i + 3];
					c.x = cx2 + s[i + 4];
					c.y = cy2 + s[i + 5];
					let x = c.x | 0;
					let y = c.y | 0;
					let cx = cx1 | 0;
					let cy = cy1 | 0;
					let cx11 = cx2 | 0;
					let cy11 = cy2 | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
						if(cx > c.max_x || !c.started) {
							c.max_x = cx;
						}
						if(cy > c.max_y || !c.started) {
							c.max_y = cy;
						}
						if(cx < c.min_x || !c.started) {
							c.min_x = cx;
						}
						if(cy < c.min_y || !c.started) {
							c.min_y = cy;
						}
						c.started = true;
						if(cx11 > c.max_x || !c.started) {
							c.max_x = cx11;
						}
						if(cy11 > c.max_y || !c.started) {
							c.max_y = cy11;
						}
						if(cx11 < c.min_x || !c.started) {
							c.min_x = cx11;
						}
						if(cy11 < c.min_y || !c.started) {
							c.min_y = cy11;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
					}
					c.num_vertices++;
					i += 6;
				}
				if(i + 1 >= sp) {
					return false;
				}
				c.x += s[i];
				c.y += s[i + 1];
				let x11 = c.x | 0;
				let y11 = c.y | 0;
				if(c.bounds) {
					if(x11 > c.max_x || !c.started) {
						c.max_x = x11;
					}
					if(y11 > c.max_y || !c.started) {
						c.max_y = y11;
					}
					if(x11 < c.min_x || !c.started) {
						c.min_x = x11;
					}
					if(y11 < c.min_y || !c.started) {
						c.min_y = y11;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x11,y11,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				break;
			case 25:
				if(sp < 8) {
					return false;
				}
				while(i + 1 < sp - 6) {
					c.x += s[i];
					c.y += s[i + 1];
					let x = c.x | 0;
					let y = c.y | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
					}
					c.num_vertices++;
					i += 2;
				}
				if(i + 5 >= sp) {
					return false;
				}
				let cx116 = c.x + s[i];
				let cy116 = c.y + s[i + 1];
				let cx28 = cx116 + s[i + 2];
				let cy28 = cy116 + s[i + 3];
				c.x = cx28 + s[i + 4];
				c.y = cy28 + s[i + 5];
				let x12 = c.x | 0;
				let y12 = c.y | 0;
				let cx10 = cx116 | 0;
				let cy10 = cy116 | 0;
				let cx117 = cx28 | 0;
				let cy117 = cy28 | 0;
				if(c.bounds) {
					if(x12 > c.max_x || !c.started) {
						c.max_x = x12;
					}
					if(y12 > c.max_y || !c.started) {
						c.max_y = y12;
					}
					if(x12 < c.min_x || !c.started) {
						c.min_x = x12;
					}
					if(y12 < c.min_y || !c.started) {
						c.min_y = y12;
					}
					c.started = true;
					if(cx10 > c.max_x || !c.started) {
						c.max_x = cx10;
					}
					if(cy10 > c.max_y || !c.started) {
						c.max_y = cy10;
					}
					if(cx10 < c.min_x || !c.started) {
						c.min_x = cx10;
					}
					if(cy10 < c.min_y || !c.started) {
						c.min_y = cy10;
					}
					c.started = true;
					if(cx117 > c.max_x || !c.started) {
						c.max_x = cx117;
					}
					if(cy117 > c.max_y || !c.started) {
						c.max_y = cy117;
					}
					if(cx117 < c.min_x || !c.started) {
						c.min_x = cx117;
					}
					if(cy117 < c.min_y || !c.started) {
						c.min_y = cy117;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x12,y12,cx10,cy10);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx117 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy117 , Int);
				}
				c.num_vertices++;
				break;
			case 26:case 27:
				if(sp < 4) {
					return false;
				}
				f = 0.0;
				if((sp & 1) != 0) {
					f = s[i];
					++i;
				}
				while(i + 3 < sp) {
					if(b0 == 27) {
						let cx1 = c.x + s[i];
						let cy1 = c.y + f;
						let cx2 = cx1 + s[i + 1];
						let cy2 = cy1 + s[i + 2];
						c.x = cx2 + s[i + 3];
						c.y = cy2;
						let x = c.x | 0;
						let y = c.y | 0;
						let cx = cx1 | 0;
						let cy = cy1 | 0;
						let cx11 = cx2 | 0;
						let cy11 = cy2 | 0;
						if(c.bounds) {
							if(x > c.max_x || !c.started) {
								c.max_x = x;
							}
							if(y > c.max_y || !c.started) {
								c.max_y = y;
							}
							if(x < c.min_x || !c.started) {
								c.min_x = x;
							}
							if(y < c.min_y || !c.started) {
								c.min_y = y;
							}
							c.started = true;
							if(cx > c.max_x || !c.started) {
								c.max_x = cx;
							}
							if(cy > c.max_y || !c.started) {
								c.max_y = cy;
							}
							if(cx < c.min_x || !c.started) {
								c.min_x = cx;
							}
							if(cy < c.min_y || !c.started) {
								c.min_y = cy;
							}
							c.started = true;
							if(cx11 > c.max_x || !c.started) {
								c.max_x = cx11;
							}
							if(cy11 > c.max_y || !c.started) {
								c.max_y = cy11;
							}
							if(cx11 < c.min_x || !c.started) {
								c.min_x = cx11;
							}
							if(cy11 < c.min_y || !c.started) {
								c.min_y = cy11;
							}
							c.started = true;
						} else {
							kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
							c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
							c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
						}
						c.num_vertices++;
					} else {
						let cx1 = c.x + f;
						let cy1 = c.y + s[i];
						let cx2 = cx1 + s[i + 1];
						let cy2 = cy1 + s[i + 2];
						c.x = cx2;
						c.y = cy2 + s[i + 3];
						let x = c.x | 0;
						let y = c.y | 0;
						let cx = cx1 | 0;
						let cy = cy1 | 0;
						let cx11 = cx2 | 0;
						let cy11 = cy2 | 0;
						if(c.bounds) {
							if(x > c.max_x || !c.started) {
								c.max_x = x;
							}
							if(y > c.max_y || !c.started) {
								c.max_y = y;
							}
							if(x < c.min_x || !c.started) {
								c.min_x = x;
							}
							if(y < c.min_y || !c.started) {
								c.min_y = y;
							}
							c.started = true;
							if(cx > c.max_x || !c.started) {
								c.max_x = cx;
							}
							if(cy > c.max_y || !c.started) {
								c.max_y = cy;
							}
							if(cx < c.min_x || !c.started) {
								c.min_x = cx;
							}
							if(cy < c.min_y || !c.started) {
								c.min_y = cy;
							}
							c.started = true;
							if(cx11 > c.max_x || !c.started) {
								c.max_x = cx11;
							}
							if(cy11 > c.max_y || !c.started) {
								c.max_y = cy11;
							}
							if(cx11 < c.min_x || !c.started) {
								c.min_x = cx11;
							}
							if(cy11 < c.min_y || !c.started) {
								c.min_y = cy11;
							}
							c.started = true;
						} else {
							kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
							c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
							c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
						}
						c.num_vertices++;
					}
					f = 0.0;
					i += 4;
				}
				break;
			case 10:case 29:
				if(b0 == 10) {
					if(!has_subrs) {
						if(info.fdselect.data.get_length() != 0) {
							let fdselect = info.fdselect;
							let nranges;
							let start;
							let end;
							let v;
							let fmt;
							let fdselector = -1;
							let i;
							if(0 > fdselect.data.get_length()) {
								throw haxe_Exception.thrown("Error");
							}
							fdselect.cursor = 0 > fdselect.data.get_length() ? fdselect.data.get_length() : 0;
							if(fdselect.cursor >= fdselect.data.get_length()) {
								fmt = 0;
							} else {
								let pos = fdselect.cursor++;
								if(pos == null) {
									pos = 0;
								}
								fmt = fdselect.data.readU8(pos);
							}
							if(fmt == 0) {
								let o = fdselect.cursor + glyph_index;
								if(o > fdselect.data.get_length() || o < 0) {
									throw haxe_Exception.thrown("Error");
								}
								fdselect.cursor = o > fdselect.data.get_length() || o < 0 ? fdselect.data.get_length() : o;
								if(fdselect.cursor >= fdselect.data.get_length()) {
									fdselector = 0;
								} else {
									let pos = fdselect.cursor++;
									if(pos == null) {
										pos = 0;
									}
									fdselector = fdselect.data.readU8(pos);
								}
							} else if(fmt == 3) {
								let v1 = 0;
								let _g = 0;
								let _g1 = 2;
								while(_g < _g1) {
									let i = _g++;
									let v;
									if(fdselect.cursor >= fdselect.data.get_length()) {
										v = 0;
									} else {
										let pos = fdselect.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v = fdselect.data.readU8(pos);
									}
									v1 = v1 << 8 | v;
								}
								nranges = v1;
								let v2 = 0;
								let _g2 = 0;
								let _g3 = 2;
								while(_g2 < _g3) {
									let i = _g2++;
									let v;
									if(fdselect.cursor >= fdselect.data.get_length()) {
										v = 0;
									} else {
										let pos = fdselect.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v = fdselect.data.readU8(pos);
									}
									v2 = v2 << 8 | v;
								}
								start = v2;
								let _g4 = 0;
								let _g5 = nranges;
								while(_g4 < _g5) {
									let i = _g4++;
									if(fdselect.cursor >= fdselect.data.get_length()) {
										v = 0;
									} else {
										let pos = fdselect.cursor++;
										if(pos == null) {
											pos = 0;
										}
										v = fdselect.data.readU8(pos);
									}
									let v1 = 0;
									let _g = 0;
									let _g1 = 2;
									while(_g < _g1) {
										let i = _g++;
										let v;
										if(fdselect.cursor >= fdselect.data.get_length()) {
											v = 0;
										} else {
											let pos = fdselect.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v = fdselect.data.readU8(pos);
										}
										v1 = v1 << 8 | v;
									}
									end = v1;
									if(glyph_index >= start && glyph_index < end) {
										fdselector = v;
										break;
									}
									start = end;
								}
							}
							if(fdselector == -1) {
								let r = new kha_graphics2_truetype_Stbtt_$_$buf();
								r.data = null;
								r.cursor = 0;
							}
							let cff = info.cff;
							let b = info.fontdicts;
							if(0 > b.data.get_length()) {
								throw haxe_Exception.thrown("Error");
							}
							b.cursor = 0 > b.data.get_length() ? b.data.get_length() : 0;
							let v1 = 0;
							let _g = 0;
							let _g1 = 2;
							while(_g < _g1) {
								let i = _g++;
								let v;
								if(b.cursor >= b.data.get_length()) {
									v = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v = b.data.readU8(pos);
								}
								v1 = v1 << 8 | v;
							}
							let count = v1;
							let offsize;
							if(b.cursor >= b.data.get_length()) {
								offsize = 0;
							} else {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								offsize = b.data.readU8(pos);
							}
							if(!(fdselector >= 0 && fdselector < count)) {
								throw haxe_Exception.thrown("Error");
							}
							if(!(offsize >= 1 && offsize <= 4)) {
								throw haxe_Exception.thrown("Error");
							}
							let o = b.cursor + fdselector * offsize;
							if(o > b.data.get_length() || o < 0) {
								throw haxe_Exception.thrown("Error");
							}
							b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
							let v2 = 0;
							if(!(offsize >= 1 && offsize <= 4)) {
								throw haxe_Exception.thrown("Error");
							}
							let _g2 = 0;
							let _g3 = offsize;
							while(_g2 < _g3) {
								let i = _g2++;
								let v;
								if(b.cursor >= b.data.get_length()) {
									v = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v = b.data.readU8(pos);
								}
								v2 = v2 << 8 | v;
							}
							let start1 = v2;
							let v3 = 0;
							if(!(offsize >= 1 && offsize <= 4)) {
								throw haxe_Exception.thrown("Error");
							}
							let _g4 = 0;
							let _g5 = offsize;
							while(_g4 < _g5) {
								let i = _g4++;
								let v;
								if(b.cursor >= b.data.get_length()) {
									v = 0;
								} else {
									let pos = b.cursor++;
									if(pos == null) {
										pos = 0;
									}
									v = b.data.readU8(pos);
								}
								v3 = v3 << 8 | v;
							}
							let end1 = v3;
							let o1 = 2 + (count + 1) * offsize + start1;
							let s = end1 - start1;
							let r = new kha_graphics2_truetype_Stbtt_$_$buf();
							r.data = null;
							r.cursor = 0;
							let r1 = r;
							let fontdict;
							if(o1 < 0 || s < 0 || o1 > b.data.get_length() || s > b.data.get_length() - o1) {
								fontdict = r1;
							} else {
								r1.data = b.data.sub(o1,s);
								fontdict = r1;
							}
							let subrsoff = [0];
							let private_loc = [0,0];
							let i1 = 0;
							if(0 > fontdict.data.get_length()) {
								throw haxe_Exception.thrown("Error");
							}
							fontdict.cursor = 0 > fontdict.data.get_length() ? fontdict.data.get_length() : 0;
							let ret = null;
							while(fontdict.cursor < fontdict.data.get_length()) {
								let start = fontdict.cursor;
								let op;
								while(true) {
									let subrs;
									if(fontdict.cursor >= fontdict.data.get_length()) {
										subrs = 0;
									} else {
										let pos = fontdict.cursor;
										if(pos == null) {
											pos = 0;
										}
										subrs = fontdict.data.readU8(pos);
									}
									if(!(subrs >= 28)) {
										break;
									}
									let v;
									let b0;
									if(fontdict.cursor >= fontdict.data.get_length()) {
										b0 = 0;
									} else {
										let pos = fontdict.cursor;
										if(pos == null) {
											pos = 0;
										}
										b0 = fontdict.data.readU8(pos);
									}
									if(b0 < 28) {
										throw haxe_Exception.thrown("Error");
									}
									if(b0 == 30) {
										let o = fontdict.cursor + 1;
										if(o > fontdict.data.get_length() || o < 0) {
											throw haxe_Exception.thrown("Error");
										}
										fontdict.cursor = o > fontdict.data.get_length() || o < 0 ? fontdict.data.get_length() : o;
										while(fontdict.cursor < fontdict.data.get_length()) {
											if(fontdict.cursor >= fontdict.data.get_length()) {
												v = 0;
											} else {
												let pos = fontdict.cursor++;
												if(pos == null) {
													pos = 0;
												}
												v = fontdict.data.readU8(pos);
											}
											if((v & 15) == 15 || v >> 4 == 15) {
												break;
											}
										}
									} else {
										let b0;
										if(fontdict.cursor >= fontdict.data.get_length()) {
											b0 = 0;
										} else {
											let pos = fontdict.cursor++;
											if(pos == null) {
												pos = 0;
											}
											b0 = fontdict.data.readU8(pos);
										}
										if(!(b0 >= 32 && b0 <= 246)) {
											if(b0 >= 247 && b0 <= 250) {
												if(fontdict.cursor < fontdict.data.get_length()) {
													let pos = fontdict.cursor++;
													if(pos == null) {
														pos = 0;
													}
													fontdict.data.readU8(pos);
												}
											} else if(b0 >= 251 && b0 <= 254) {
												if(fontdict.cursor < fontdict.data.get_length()) {
													let pos = fontdict.cursor++;
													if(pos == null) {
														pos = 0;
													}
													fontdict.data.readU8(pos);
												}
											} else if(b0 == 28) {
												let v = 0;
												let _g = 0;
												let _g1 = 2;
												while(_g < _g1) {
													let i = _g++;
													let v1;
													if(fontdict.cursor >= fontdict.data.get_length()) {
														v1 = 0;
													} else {
														let pos = fontdict.cursor++;
														if(pos == null) {
															pos = 0;
														}
														v1 = fontdict.data.readU8(pos);
													}
													v = v << 8 | v1;
												}
											} else if(b0 == 29) {
												let v = 0;
												let _g = 0;
												let _g1 = 4;
												while(_g < _g1) {
													let i = _g++;
													let v1;
													if(fontdict.cursor >= fontdict.data.get_length()) {
														v1 = 0;
													} else {
														let pos = fontdict.cursor++;
														if(pos == null) {
															pos = 0;
														}
														v1 = fontdict.data.readU8(pos);
													}
													v = v << 8 | v1;
												}
											} else {
												throw haxe_Exception.thrown("Error");
											}
										}
									}
								}
								let end = fontdict.cursor;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									op = 0;
								} else {
									let pos = fontdict.cursor++;
									if(pos == null) {
										pos = 0;
									}
									op = fontdict.data.readU8(pos);
								}
								if(op == 12) {
									let op1;
									if(fontdict.cursor >= fontdict.data.get_length()) {
										op1 = 0;
									} else {
										let pos = fontdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										op1 = fontdict.data.readU8(pos);
									}
									op = op1 | 256;
								}
								if(op == 18) {
									let s = end - start;
									let r = new kha_graphics2_truetype_Stbtt_$_$buf();
									r.data = null;
									r.cursor = 0;
									let r1 = r;
									if(start < 0 || s < 0 || start > fontdict.data.get_length() || s > fontdict.data.get_length() - start) {
										ret = r1;
									} else {
										r1.data = fontdict.data.sub(start,s);
										ret = r1;
									}
									break;
								}
							}
							let operands;
							if(ret != null) {
								operands = ret;
							} else {
								let r = new kha_graphics2_truetype_Stbtt_$_$buf();
								r.data = null;
								r.cursor = 0;
								let r1 = r;
								if(0 > fontdict.data.get_length() || 0 > fontdict.data.get_length()) {
									operands = r1;
								} else {
									r1.data = fontdict.data.sub(0,0);
									operands = r1;
								}
							}
							while(i1 < 2 && operands.cursor < operands.data.get_length()) {
								let b0;
								if(operands.cursor >= operands.data.get_length()) {
									b0 = 0;
								} else {
									let pos = operands.cursor++;
									if(pos == null) {
										pos = 0;
									}
									b0 = operands.data.readU8(pos);
								}
								let subrs;
								if(b0 >= 32 && b0 <= 246) {
									subrs = b0 - 139;
								} else if(b0 >= 247 && b0 <= 250) {
									let subrs1;
									if(operands.cursor >= operands.data.get_length()) {
										subrs1 = 0;
									} else {
										let pos = operands.cursor++;
										if(pos == null) {
											pos = 0;
										}
										subrs1 = operands.data.readU8(pos);
									}
									subrs = (b0 - 247) * 256 + subrs1 + 108;
								} else if(b0 >= 251 && b0 <= 254) {
									let subrs1;
									if(operands.cursor >= operands.data.get_length()) {
										subrs1 = 0;
									} else {
										let pos = operands.cursor++;
										if(pos == null) {
											pos = 0;
										}
										subrs1 = operands.data.readU8(pos);
									}
									subrs = -(b0 - 251) * 256 - subrs1 - 108;
								} else if(b0 == 28) {
									let v = 0;
									let _g = 0;
									let _g1 = 2;
									while(_g < _g1) {
										let i = _g++;
										let v1;
										if(operands.cursor >= operands.data.get_length()) {
											v1 = 0;
										} else {
											let pos = operands.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v1 = operands.data.readU8(pos);
										}
										v = v << 8 | v1;
									}
									subrs = v;
								} else if(b0 == 29) {
									let v = 0;
									let _g = 0;
									let _g1 = 4;
									while(_g < _g1) {
										let i = _g++;
										let v1;
										if(operands.cursor >= operands.data.get_length()) {
											v1 = 0;
										} else {
											let pos = operands.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v1 = operands.data.readU8(pos);
										}
										v = v << 8 | v1;
									}
									subrs = v;
								} else {
									throw haxe_Exception.thrown("Error");
								}
								private_loc[i1] = subrs;
								++i1;
							}
							if(private_loc[1] == 0 || private_loc[0] == 0) {
								let r = new kha_graphics2_truetype_Stbtt_$_$buf();
								r.data = null;
								r.cursor = 0;
								subrs = r;
							} else {
								let o = private_loc[1];
								let s = private_loc[0];
								let r = new kha_graphics2_truetype_Stbtt_$_$buf();
								r.data = null;
								r.cursor = 0;
								let r1 = r;
								let pdict;
								if(o < 0 || s < 0 || o > cff.data.get_length() || s > cff.data.get_length() - o) {
									pdict = r1;
								} else {
									r1.data = cff.data.sub(o,s);
									pdict = r1;
								}
								let i = 0;
								if(0 > pdict.data.get_length()) {
									throw haxe_Exception.thrown("Error");
								}
								pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
								let ret = null;
								while(pdict.cursor < pdict.data.get_length()) {
									let start = pdict.cursor;
									let op;
									while(true) {
										let subrs;
										if(pdict.cursor >= pdict.data.get_length()) {
											subrs = 0;
										} else {
											let pos = pdict.cursor;
											if(pos == null) {
												pos = 0;
											}
											subrs = pdict.data.readU8(pos);
										}
										if(!(subrs >= 28)) {
											break;
										}
										let v;
										let b0;
										if(pdict.cursor >= pdict.data.get_length()) {
											b0 = 0;
										} else {
											let pos = pdict.cursor;
											if(pos == null) {
												pos = 0;
											}
											b0 = pdict.data.readU8(pos);
										}
										if(b0 < 28) {
											throw haxe_Exception.thrown("Error");
										}
										if(b0 == 30) {
											let o = pdict.cursor + 1;
											if(o > pdict.data.get_length() || o < 0) {
												throw haxe_Exception.thrown("Error");
											}
											pdict.cursor = o > pdict.data.get_length() || o < 0 ? pdict.data.get_length() : o;
											while(pdict.cursor < pdict.data.get_length()) {
												if(pdict.cursor >= pdict.data.get_length()) {
													v = 0;
												} else {
													let pos = pdict.cursor++;
													if(pos == null) {
														pos = 0;
													}
													v = pdict.data.readU8(pos);
												}
												if((v & 15) == 15 || v >> 4 == 15) {
													break;
												}
											}
										} else {
											let b0;
											if(pdict.cursor >= pdict.data.get_length()) {
												b0 = 0;
											} else {
												let pos = pdict.cursor++;
												if(pos == null) {
													pos = 0;
												}
												b0 = pdict.data.readU8(pos);
											}
											if(!(b0 >= 32 && b0 <= 246)) {
												if(b0 >= 247 && b0 <= 250) {
													if(pdict.cursor < pdict.data.get_length()) {
														let pos = pdict.cursor++;
														if(pos == null) {
															pos = 0;
														}
														pdict.data.readU8(pos);
													}
												} else if(b0 >= 251 && b0 <= 254) {
													if(pdict.cursor < pdict.data.get_length()) {
														let pos = pdict.cursor++;
														if(pos == null) {
															pos = 0;
														}
														pdict.data.readU8(pos);
													}
												} else if(b0 == 28) {
													let v = 0;
													let _g = 0;
													let _g1 = 2;
													while(_g < _g1) {
														let i = _g++;
														let v1;
														if(pdict.cursor >= pdict.data.get_length()) {
															v1 = 0;
														} else {
															let pos = pdict.cursor++;
															if(pos == null) {
																pos = 0;
															}
															v1 = pdict.data.readU8(pos);
														}
														v = v << 8 | v1;
													}
												} else if(b0 == 29) {
													let v = 0;
													let _g = 0;
													let _g1 = 4;
													while(_g < _g1) {
														let i = _g++;
														let v1;
														if(pdict.cursor >= pdict.data.get_length()) {
															v1 = 0;
														} else {
															let pos = pdict.cursor++;
															if(pos == null) {
																pos = 0;
															}
															v1 = pdict.data.readU8(pos);
														}
														v = v << 8 | v1;
													}
												} else {
													throw haxe_Exception.thrown("Error");
												}
											}
										}
									}
									let end = pdict.cursor;
									if(pdict.cursor >= pdict.data.get_length()) {
										op = 0;
									} else {
										let pos = pdict.cursor++;
										if(pos == null) {
											pos = 0;
										}
										op = pdict.data.readU8(pos);
									}
									if(op == 12) {
										let op1;
										if(pdict.cursor >= pdict.data.get_length()) {
											op1 = 0;
										} else {
											let pos = pdict.cursor++;
											if(pos == null) {
												pos = 0;
											}
											op1 = pdict.data.readU8(pos);
										}
										op = op1 | 256;
									}
									if(op == 19) {
										let s = end - start;
										let r = new kha_graphics2_truetype_Stbtt_$_$buf();
										r.data = null;
										r.cursor = 0;
										let r1 = r;
										if(start < 0 || s < 0 || start > pdict.data.get_length() || s > pdict.data.get_length() - start) {
											ret = r1;
										} else {
											r1.data = pdict.data.sub(start,s);
											ret = r1;
										}
										break;
									}
								}
								let operands;
								if(ret != null) {
									operands = ret;
								} else {
									let r = new kha_graphics2_truetype_Stbtt_$_$buf();
									r.data = null;
									r.cursor = 0;
									let r1 = r;
									if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
										operands = r1;
									} else {
										r1.data = pdict.data.sub(0,0);
										operands = r1;
									}
								}
								while(i < 1 && operands.cursor < operands.data.get_length()) {
									let b0;
									if(operands.cursor >= operands.data.get_length()) {
										b0 = 0;
									} else {
										let pos = operands.cursor++;
										if(pos == null) {
											pos = 0;
										}
										b0 = operands.data.readU8(pos);
									}
									let subrs;
									if(b0 >= 32 && b0 <= 246) {
										subrs = b0 - 139;
									} else if(b0 >= 247 && b0 <= 250) {
										let subrs1;
										if(operands.cursor >= operands.data.get_length()) {
											subrs1 = 0;
										} else {
											let pos = operands.cursor++;
											if(pos == null) {
												pos = 0;
											}
											subrs1 = operands.data.readU8(pos);
										}
										subrs = (b0 - 247) * 256 + subrs1 + 108;
									} else if(b0 >= 251 && b0 <= 254) {
										let subrs1;
										if(operands.cursor >= operands.data.get_length()) {
											subrs1 = 0;
										} else {
											let pos = operands.cursor++;
											if(pos == null) {
												pos = 0;
											}
											subrs1 = operands.data.readU8(pos);
										}
										subrs = -(b0 - 251) * 256 - subrs1 - 108;
									} else if(b0 == 28) {
										let v = 0;
										let _g = 0;
										let _g1 = 2;
										while(_g < _g1) {
											let i = _g++;
											let v1;
											if(operands.cursor >= operands.data.get_length()) {
												v1 = 0;
											} else {
												let pos = operands.cursor++;
												if(pos == null) {
													pos = 0;
												}
												v1 = operands.data.readU8(pos);
											}
											v = v << 8 | v1;
										}
										subrs = v;
									} else if(b0 == 29) {
										let v = 0;
										let _g = 0;
										let _g1 = 4;
										while(_g < _g1) {
											let i = _g++;
											let v1;
											if(operands.cursor >= operands.data.get_length()) {
												v1 = 0;
											} else {
												let pos = operands.cursor++;
												if(pos == null) {
													pos = 0;
												}
												v1 = operands.data.readU8(pos);
											}
											v = v << 8 | v1;
										}
										subrs = v;
									} else {
										throw haxe_Exception.thrown("Error");
									}
									subrsoff[i] = subrs;
									++i;
								}
								if(subrsoff[0] == 0) {
									let r = new kha_graphics2_truetype_Stbtt_$_$buf();
									r.data = null;
									r.cursor = 0;
									subrs = r;
								} else {
									let o = private_loc[1] + subrsoff[0];
									if(o > cff.data.get_length() || o < 0) {
										throw haxe_Exception.thrown("Error");
									}
									cff.cursor = o > cff.data.get_length() || o < 0 ? cff.data.get_length() : o;
									let start = cff.cursor;
									let v = 0;
									let _g = 0;
									let _g1 = 2;
									while(_g < _g1) {
										let i = _g++;
										let v1;
										if(cff.cursor >= cff.data.get_length()) {
											v1 = 0;
										} else {
											let pos = cff.cursor++;
											if(pos == null) {
												pos = 0;
											}
											v1 = cff.data.readU8(pos);
										}
										v = v << 8 | v1;
									}
									let count = v;
									if(count > 0) {
										let offsize;
										if(cff.cursor >= cff.data.get_length()) {
											offsize = 0;
										} else {
											let pos = cff.cursor++;
											if(pos == null) {
												pos = 0;
											}
											offsize = cff.data.readU8(pos);
										}
										if(!(offsize >= 1 && offsize <= 4)) {
											throw haxe_Exception.thrown("Error");
										}
										let o = cff.cursor + offsize * count;
										if(o > cff.data.get_length() || o < 0) {
											throw haxe_Exception.thrown("Error");
										}
										cff.cursor = o > cff.data.get_length() || o < 0 ? cff.data.get_length() : o;
										let v = 0;
										if(!(offsize >= 1 && offsize <= 4)) {
											throw haxe_Exception.thrown("Error");
										}
										let _g = 0;
										let _g1 = offsize;
										while(_g < _g1) {
											let i = _g++;
											let v1;
											if(cff.cursor >= cff.data.get_length()) {
												v1 = 0;
											} else {
												let pos = cff.cursor++;
												if(pos == null) {
													pos = 0;
												}
												v1 = cff.data.readU8(pos);
											}
											v = v << 8 | v1;
										}
										let o1 = cff.cursor + (v - 1);
										if(o1 > cff.data.get_length() || o1 < 0) {
											throw haxe_Exception.thrown("Error");
										}
										cff.cursor = o1 > cff.data.get_length() || o1 < 0 ? cff.data.get_length() : o1;
										let s = cff.cursor - start;
										let r = new kha_graphics2_truetype_Stbtt_$_$buf();
										r.data = null;
										r.cursor = 0;
										let r1 = r;
										if(start < 0 || s < 0 || start > cff.data.get_length() || s > cff.data.get_length() - start) {
											subrs = r1;
										} else {
											r1.data = cff.data.sub(start,s);
											subrs = r1;
										}
									} else {
										subrs = cff;
									}
								}
							}
						}
						has_subrs = true;
					}
				}
				if(sp < 1) {
					return false;
				}
				v = s[--sp] | 0;
				if(subr_stack_height >= 10) {
					return false;
				}
				subr_stack[subr_stack_height++] = b;
				let idx = b0 == 10 ? subrs : info.gsubrs;
				let n = v;
				if(0 > idx.data.get_length()) {
					throw haxe_Exception.thrown("Error");
				}
				idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
				let v1 = 0;
				let _g = 0;
				let _g1 = 2;
				while(_g < _g1) {
					let i = _g++;
					let v;
					if(idx.cursor >= idx.data.get_length()) {
						v = 0;
					} else {
						let pos = idx.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v = idx.data.readU8(pos);
					}
					v1 = v1 << 8 | v;
				}
				let count = v1;
				let bias = 107;
				if(count >= 33900) {
					bias = 32768;
				} else if(count >= 1240) {
					bias = 1131;
				}
				n += bias;
				if(n < 0 || n >= count) {
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					b = r;
				} else {
					if(0 > idx.data.get_length()) {
						throw haxe_Exception.thrown("Error");
					}
					idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
					let v = 0;
					let _g = 0;
					let _g1 = 2;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(idx.cursor >= idx.data.get_length()) {
							v1 = 0;
						} else {
							let pos = idx.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = idx.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					let count = v;
					let offsize;
					if(idx.cursor >= idx.data.get_length()) {
						offsize = 0;
					} else {
						let pos = idx.cursor++;
						if(pos == null) {
							pos = 0;
						}
						offsize = idx.data.readU8(pos);
					}
					if(!(n >= 0 && n < count)) {
						throw haxe_Exception.thrown("Error");
					}
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let o = idx.cursor + n * offsize;
					if(o > idx.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					idx.cursor = o > idx.data.get_length() || o < 0 ? idx.data.get_length() : o;
					let v1 = 0;
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let _g2 = 0;
					let _g3 = offsize;
					while(_g2 < _g3) {
						let i = _g2++;
						let v;
						if(idx.cursor >= idx.data.get_length()) {
							v = 0;
						} else {
							let pos = idx.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = idx.data.readU8(pos);
						}
						v1 = v1 << 8 | v;
					}
					let start = v1;
					let v2 = 0;
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					let _g4 = 0;
					let _g5 = offsize;
					while(_g4 < _g5) {
						let i = _g4++;
						let v;
						if(idx.cursor >= idx.data.get_length()) {
							v = 0;
						} else {
							let pos = idx.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v = idx.data.readU8(pos);
						}
						v2 = v2 << 8 | v;
					}
					let end = v2;
					let o1 = 2 + (count + 1) * offsize + start;
					let s = end - start;
					let r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					let r1 = r;
					if(o1 < 0 || s < 0 || o1 > idx.data.get_length() || s > idx.data.get_length() - o1) {
						b = r1;
					} else {
						r1.data = idx.data.sub(o1,s);
						b = r1;
					}
				}
				if(b.data.get_length() == 0) {
					return false;
				}
				b.cursor = 0;
				clear_stack = false;
				break;
			case 30:
				if(sp < 4) {
					return false;
				}
				while(i + 3 < sp) {
					let cx1 = c.x;
					let cy1 = c.y + s[i];
					let cx2 = cx1 + s[i + 1];
					let cy2 = cy1 + s[i + 2];
					c.x = cx2 + s[i + 3];
					c.y = cy2 + (sp - i == 5 ? s[i + 4] : 0);
					let x = c.x | 0;
					let y = c.y | 0;
					let cx = cx1 | 0;
					let cy = cy1 | 0;
					let cx11 = cx2 | 0;
					let cy11 = cy2 | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
						if(cx > c.max_x || !c.started) {
							c.max_x = cx;
						}
						if(cy > c.max_y || !c.started) {
							c.max_y = cy;
						}
						if(cx < c.min_x || !c.started) {
							c.min_x = cx;
						}
						if(cy < c.min_y || !c.started) {
							c.min_y = cy;
						}
						c.started = true;
						if(cx11 > c.max_x || !c.started) {
							c.max_x = cx11;
						}
						if(cy11 > c.max_y || !c.started) {
							c.max_y = cy11;
						}
						if(cx11 < c.min_x || !c.started) {
							c.min_x = cx11;
						}
						if(cy11 < c.min_y || !c.started) {
							c.min_y = cy11;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
					}
					c.num_vertices++;
					i += 4;
					if(i + 3 >= sp) {
						break;
					}
					let cx12 = c.x + s[i];
					let cy12 = c.y;
					let cx21 = cx12 + s[i + 1];
					let cy21 = cy12 + s[i + 2];
					c.x = cx21 + (sp - i == 5 ? s[i + 4] : 0);
					c.y = cy21 + s[i + 3];
					let x1 = c.x | 0;
					let y1 = c.y | 0;
					let cx3 = cx12 | 0;
					let cy3 = cy12 | 0;
					let cx13 = cx21 | 0;
					let cy13 = cy21 | 0;
					if(c.bounds) {
						if(x1 > c.max_x || !c.started) {
							c.max_x = x1;
						}
						if(y1 > c.max_y || !c.started) {
							c.max_y = y1;
						}
						if(x1 < c.min_x || !c.started) {
							c.min_x = x1;
						}
						if(y1 < c.min_y || !c.started) {
							c.min_y = y1;
						}
						c.started = true;
						if(cx3 > c.max_x || !c.started) {
							c.max_x = cx3;
						}
						if(cy3 > c.max_y || !c.started) {
							c.max_y = cy3;
						}
						if(cx3 < c.min_x || !c.started) {
							c.min_x = cx3;
						}
						if(cy3 < c.min_y || !c.started) {
							c.min_y = cy3;
						}
						c.started = true;
						if(cx13 > c.max_x || !c.started) {
							c.max_x = cx13;
						}
						if(cy13 > c.max_y || !c.started) {
							c.max_y = cy13;
						}
						if(cx13 < c.min_x || !c.started) {
							c.min_x = cx13;
						}
						if(cy13 < c.min_y || !c.started) {
							c.min_y = cy13;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x1,y1,cx3,cy3);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx13 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy13 , Int);
					}
					c.num_vertices++;
					i += 4;
				}
				break;
			case 31:
				if(sp < 4) {
					return false;
				}
				while(i + 3 < sp) {
					let cx1 = c.x + s[i];
					let cy1 = c.y;
					let cx2 = cx1 + s[i + 1];
					let cy2 = cy1 + s[i + 2];
					c.x = cx2 + (sp - i == 5 ? s[i + 4] : 0);
					c.y = cy2 + s[i + 3];
					let x = c.x | 0;
					let y = c.y | 0;
					let cx = cx1 | 0;
					let cy = cy1 | 0;
					let cx11 = cx2 | 0;
					let cy11 = cy2 | 0;
					if(c.bounds) {
						if(x > c.max_x || !c.started) {
							c.max_x = x;
						}
						if(y > c.max_y || !c.started) {
							c.max_y = y;
						}
						if(x < c.min_x || !c.started) {
							c.min_x = x;
						}
						if(y < c.min_y || !c.started) {
							c.min_y = y;
						}
						c.started = true;
						if(cx > c.max_x || !c.started) {
							c.max_x = cx;
						}
						if(cy > c.max_y || !c.started) {
							c.max_y = cy;
						}
						if(cx < c.min_x || !c.started) {
							c.min_x = cx;
						}
						if(cy < c.min_y || !c.started) {
							c.min_y = cy;
						}
						c.started = true;
						if(cx11 > c.max_x || !c.started) {
							c.max_x = cx11;
						}
						if(cy11 > c.max_y || !c.started) {
							c.max_y = cy11;
						}
						if(cx11 < c.min_x || !c.started) {
							c.min_x = cx11;
						}
						if(cy11 < c.min_y || !c.started) {
							c.min_y = cy11;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x,y,cx,cy);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
					}
					c.num_vertices++;
					i += 4;
					if(i + 3 >= sp) {
						break;
					}
					let cx12 = c.x;
					let cy12 = c.y + s[i];
					let cx21 = cx12 + s[i + 1];
					let cy21 = cy12 + s[i + 2];
					c.x = cx21 + s[i + 3];
					c.y = cy21 + (sp - i == 5 ? s[i + 4] : 0);
					let x1 = c.x | 0;
					let y1 = c.y | 0;
					let cx3 = cx12 | 0;
					let cy3 = cy12 | 0;
					let cx13 = cx21 | 0;
					let cy13 = cy21 | 0;
					if(c.bounds) {
						if(x1 > c.max_x || !c.started) {
							c.max_x = x1;
						}
						if(y1 > c.max_y || !c.started) {
							c.max_y = y1;
						}
						if(x1 < c.min_x || !c.started) {
							c.min_x = x1;
						}
						if(y1 < c.min_y || !c.started) {
							c.min_y = y1;
						}
						c.started = true;
						if(cx3 > c.max_x || !c.started) {
							c.max_x = cx3;
						}
						if(cy3 > c.max_y || !c.started) {
							c.max_y = cy3;
						}
						if(cx3 < c.min_x || !c.started) {
							c.min_x = cx3;
						}
						if(cy3 < c.min_y || !c.started) {
							c.min_y = cy3;
						}
						c.started = true;
						if(cx13 > c.max_x || !c.started) {
							c.max_x = cx13;
						}
						if(cy13 > c.max_y || !c.started) {
							c.max_y = cy13;
						}
						if(cx13 < c.min_x || !c.started) {
							c.min_x = cx13;
						}
						if(cy13 < c.min_y || !c.started) {
							c.min_y = cy13;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x1,y1,cx3,cy3);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx13 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy13 , Int);
					}
					c.num_vertices++;
					i += 4;
				}
				break;
			default:
				if(b0 != 255 && b0 != 28 && (b0 < 32 || b0 > 254)) {
					return false;
				}
				if(b0 == 255) {
					let v = 0;
					let _g = 0;
					let _g1 = 4;
					while(_g < _g1) {
						let i = _g++;
						let v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					f = v / 65536;
				} else {
					let o = b.cursor + (-1);
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					let b0;
					if(b.cursor >= b.data.get_length()) {
						b0 = 0;
					} else {
						let pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						b0 = b.data.readU8(pos);
					}
					if(b0 >= 32 && b0 <= 246) {
						f = b0 - 139;
					} else if(b0 >= 247 && b0 <= 250) {
						let f1;
						if(b.cursor >= b.data.get_length()) {
							f1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							f1 = b.data.readU8(pos);
						}
						f = (b0 - 247) * 256 + f1 + 108;
					} else if(b0 >= 251 && b0 <= 254) {
						let f1;
						if(b.cursor >= b.data.get_length()) {
							f1 = 0;
						} else {
							let pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							f1 = b.data.readU8(pos);
						}
						f = -(b0 - 251) * 256 - f1 - 108;
					} else if(b0 == 28) {
						let v = 0;
						let _g = 0;
						let _g1 = 2;
						while(_g < _g1) {
							let i = _g++;
							let v1;
							if(b.cursor >= b.data.get_length()) {
								v1 = 0;
							} else {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v1 = b.data.readU8(pos);
							}
							v = v << 8 | v1;
						}
						f = v;
					} else if(b0 == 29) {
						let v = 0;
						let _g = 0;
						let _g1 = 4;
						while(_g < _g1) {
							let i = _g++;
							let v1;
							if(b.cursor >= b.data.get_length()) {
								v1 = 0;
							} else {
								let pos = b.cursor++;
								if(pos == null) {
									pos = 0;
								}
								v1 = b.data.readU8(pos);
							}
							v = v << 8 | v1;
						}
						f = v;
					} else {
						throw haxe_Exception.thrown("Error");
					}
				}
				if(sp >= 48) {
					return false;
				}
				s[sp++] = f;
				clear_stack = false;
			}
			if(clear_stack) {
				sp = 0;
			}
		}
		return false;
	}
	static stbtt__GetGlyphShapeT2(info,glyph_index) {
		let tmp = new kha_graphics2_truetype_Stbtt_$_$csctx();
		tmp.bounds = true;
		tmp.started = false;
		tmp.first_x = 0;
		tmp.first_y = 0;
		tmp.x = 0;
		tmp.y = 0;
		tmp.min_x = 0;
		tmp.min_y = 0;
		tmp.max_x = 0;
		tmp.max_y = 0;
		tmp.pvertices = null;
		tmp.num_vertices = 0;
		let count_ctx = tmp;
		let tmp1 = new kha_graphics2_truetype_Stbtt_$_$csctx();
		tmp1.bounds = false;
		tmp1.started = false;
		tmp1.first_x = 0;
		tmp1.first_y = 0;
		tmp1.x = 0;
		tmp1.y = 0;
		tmp1.min_x = 0;
		tmp1.min_y = 0;
		tmp1.max_x = 0;
		tmp1.max_y = 0;
		tmp1.pvertices = null;
		tmp1.num_vertices = 0;
		let output_ctx = tmp1;
		if(kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,count_ctx)) {
			let this1 = new Array(count_ctx.num_vertices);
			output_ctx.pvertices = this1;
			let _g = 0;
			let _g1 = count_ctx.num_vertices;
			while(_g < _g1) {
				let i = _g++;
				output_ctx.pvertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
			if(kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,output_ctx)) {
				if(output_ctx.num_vertices != count_ctx.num_vertices) {
					throw haxe_Exception.thrown("Error");
				}
				return output_ctx.pvertices;
			}
		}
		return null;
	}
	static stbtt__GetGlyphInfoT2(info,glyph_index,rect) {
		let tmp = new kha_graphics2_truetype_Stbtt_$_$csctx();
		tmp.bounds = true;
		tmp.started = false;
		tmp.first_x = 0;
		tmp.first_y = 0;
		tmp.x = 0;
		tmp.y = 0;
		tmp.min_x = 0;
		tmp.min_y = 0;
		tmp.max_x = 0;
		tmp.max_y = 0;
		tmp.pvertices = null;
		tmp.num_vertices = 0;
		let c = tmp;
		let r = kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,c);
		if(rect != null) {
			rect.x0 = r ? c.min_x : 0;
			rect.y0 = r ? c.min_y : 0;
			rect.x1 = r ? c.max_x : 0;
			rect.y1 = r ? c.max_y : 0;
		}
		if(r) {
			return c.num_vertices;
		} else {
			return 0;
		}
	}
	static stbtt_GetGlyphShape(info,glyph_index) {
		if(info.cff.data == null || info.cff.data.get_length() == 0) {
			return kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeTT(info,glyph_index);
		} else {
			return kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeT2(info,glyph_index);
		}
	}
	static stbtt_GetGlyphHMetrics(info,glyph_index) {
		let p = info.data;
		let pos = info.hhea + 34;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let numOfLongHorMetrics = ch2 | ch1 << 8;
		let metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
		if(glyph_index < numOfLongHorMetrics) {
			let p = info.data;
			let pos = info.hmtx + 4 * glyph_index;
			if(pos == null) {
				pos = 0;
			}
			let ch1 = p.readU8(pos);
			let ch2 = p.readU8(pos + 1);
			let n = ch2 | ch1 << 8;
			metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
			let p1 = info.data;
			let pos1 = info.hmtx + 4 * glyph_index + 2;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = p1.readU8(pos1);
			let ch21 = p1.readU8(pos1 + 1);
			let n1 = ch21 | ch11 << 8;
			metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
		} else {
			let p = info.data;
			let pos = info.hmtx + 4 * (numOfLongHorMetrics - 1);
			if(pos == null) {
				pos = 0;
			}
			let ch1 = p.readU8(pos);
			let ch2 = p.readU8(pos + 1);
			let n = ch2 | ch1 << 8;
			metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
			let p1 = info.data;
			let pos1 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch11 = p1.readU8(pos1);
			let ch21 = p1.readU8(pos1 + 1);
			let n1 = ch21 | ch11 << 8;
			metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
		}
		return metrics;
	}
	static stbtt_GetGlyphKernAdvance(info,glyph1,glyph2) {
		let kern = info.kern;
		let data = info.data;
		let straw;
		let m;
		if(info.kern == 0) {
			return 0;
		}
		let pos = kern + 2;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = data.readU8(pos);
		let ch2 = data.readU8(pos + 1);
		if((ch2 | ch1 << 8) < 1) {
			return 0;
		}
		let pos1 = kern + 8;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch11 = data.readU8(pos1);
		let ch21 = data.readU8(pos1 + 1);
		if((ch21 | ch11 << 8) != 1) {
			return 0;
		}
		let l = 0;
		let pos2 = kern + 10;
		if(pos2 == null) {
			pos2 = 0;
		}
		let ch12 = data.readU8(pos2);
		let ch22 = data.readU8(pos2 + 1);
		let r = (ch22 | ch12 << 8) - 1;
		let needle = glyph1 << 16 | glyph2;
		while(l <= r) {
			m = l + r >> 1;
			let pos = kern + 18 + m * 6;
			if(pos == null) {
				pos = 0;
			}
			let pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			let ch1 = data.readU8(pos1);
			let ch2 = data.readU8(pos1 + 1);
			let ch3 = data.readU8(pos1 + 2);
			let ch4 = data.readU8(pos1 + 3);
			straw = ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
			if(needle < straw) {
				r = m - 1;
			} else if(needle > straw) {
				l = m + 1;
			} else {
				let pos = kern + 22 + m * 6;
				if(pos == null) {
					pos = 0;
				}
				let ch1 = data.readU8(pos);
				let ch2 = data.readU8(pos + 1);
				let n = ch2 | ch1 << 8;
				if((n & 32768) != 0) {
					return n - 65536;
				} else {
					return n;
				}
			}
		}
		return 0;
	}
	static stbtt_GetCodepointKernAdvance(info,ch1,ch2) {
		if(info.kern == 0) {
			return 0;
		}
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch1),kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch2));
	}
	static stbtt_GetCodepointHMetrics(info,codepoint) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
	}
	static stbtt_GetFontVMetrics(info) {
		let metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
		let p = info.data;
		let pos = info.hhea + 4;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
		let p1 = info.data;
		let pos1 = info.hhea + 6;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch11 = p1.readU8(pos1);
		let ch21 = p1.readU8(pos1 + 1);
		let n1 = ch21 | ch11 << 8;
		metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
		let p2 = info.data;
		let pos2 = info.hhea + 8;
		if(pos2 == null) {
			pos2 = 0;
		}
		let ch12 = p2.readU8(pos2);
		let ch22 = p2.readU8(pos2 + 1);
		let n2 = ch22 | ch12 << 8;
		metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		return metrics;
	}
	static stbtt_GetFontBoundingBox(info) {
		let rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
		let p = info.data;
		let pos = info.head + 36;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
		let p1 = info.data;
		let pos1 = info.head + 38;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch11 = p1.readU8(pos1);
		let ch21 = p1.readU8(pos1 + 1);
		let n1 = ch21 | ch11 << 8;
		rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
		let p2 = info.data;
		let pos2 = info.head + 40;
		if(pos2 == null) {
			pos2 = 0;
		}
		let ch12 = p2.readU8(pos2);
		let ch22 = p2.readU8(pos2 + 1);
		let n2 = ch22 | ch12 << 8;
		rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		let p3 = info.data;
		let pos3 = info.head + 42;
		if(pos3 == null) {
			pos3 = 0;
		}
		let ch13 = p3.readU8(pos3);
		let ch23 = p3.readU8(pos3 + 1);
		let n3 = ch23 | ch13 << 8;
		rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
		return rect;
	}
	static stbtt_ScaleForPixelHeight(info,height) {
		let p = info.data;
		let pos = info.hhea + 4;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let n = ch2 | ch1 << 8;
		let p1 = info.data;
		let pos1 = info.hhea + 6;
		if(pos1 == null) {
			pos1 = 0;
		}
		let ch11 = p1.readU8(pos1);
		let ch21 = p1.readU8(pos1 + 1);
		let n1 = ch21 | ch11 << 8;
		let fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
		return height / fheight;
	}
	static stbtt_ScaleForMappingEmToPixels(info,pixels) {
		let p = info.data;
		let pos = info.head + 18;
		if(pos == null) {
			pos = 0;
		}
		let ch1 = p.readU8(pos);
		let ch2 = p.readU8(pos + 1);
		let unitsPerEm = ch2 | ch1 << 8;
		return pixels / unitsPerEm;
	}
	static stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,shift_x,shift_y) {
		let rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
		if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
			rect.x0 = 0;
			rect.y0 = 0;
			rect.x1 = 0;
			rect.y1 = 0;
		} else {
			let x0 = rect.x0;
			let x1 = rect.x1;
			let y0 = rect.y0;
			let y1 = rect.y1;
			rect.x0 = Math.floor(x0 * scale_x + shift_x);
			rect.y0 = Math.floor(-y1 * scale_y + shift_y);
			rect.x1 = Math.ceil(x1 * scale_x + shift_x);
			rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
		}
		return rect;
	}
	static stbtt_GetGlyphBitmapBox(font,glyph,scale_x,scale_y) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
	}
	static stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,shift_x,shift_y) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
	}
	static stbtt_GetCodepointBitmapBox(font,codepoint,scale_x,scale_y) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,0.0,0.0);
	}
	static stbtt__new_active(e,eIndex,off_x,start_point) {
		let z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
		let dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
		if(z == null) {
			throw haxe_Exception.thrown("Error");
		}
		if(z == null) {
			return z;
		}
		z.fdx = dxdy;
		z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
		z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
		z.fx -= off_x;
		z.direction = e[eIndex].invert ? 1.0 : -1.0;
		z.sy = e[eIndex].y0;
		z.ey = e[eIndex].y1;
		z.next = null;
		return z;
	}
	static stbtt__handle_clipped_edge(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
		if(y0 == y1) {
			return;
		}
		if(!(y0 < y1)) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(e.sy <= e.ey)) {
			throw haxe_Exception.thrown("Error");
		}
		if(y0 > e.ey) {
			return;
		}
		if(y1 < e.sy) {
			return;
		}
		if(y0 < e.sy) {
			x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
			y0 = e.sy;
		}
		if(y1 > e.ey) {
			x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
			y1 = e.ey;
		}
		if(x0 == x) {
			if(!(x1 <= x + 1)) {
				throw haxe_Exception.thrown("Error");
			}
		} else if(x0 == x + 1) {
			if(!(x1 >= x)) {
				throw haxe_Exception.thrown("Error");
			}
		} else if(x0 <= x) {
			if(!(x1 <= x)) {
				throw haxe_Exception.thrown("Error");
			}
		} else if(x0 >= x + 1) {
			if(!(x1 >= x + 1)) {
				throw haxe_Exception.thrown("Error");
			}
		} else if(!(x1 >= x && x1 <= x + 1)) {
			throw haxe_Exception.thrown("Error");
		}
		if(x0 <= x && x1 <= x) {
			scanline[scanlineIndex + x] += e.direction * (y1 - y0);
		} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
			if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
				throw haxe_Exception.thrown("Error");
			}
			scanline[scanlineIndex + x] += e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
		}
	}
	static stbtt__fill_active_edges_new(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
		let y_bottom = y_top + 1;
		while(e != null) {
			if(!(e.ey >= y_top)) {
				throw haxe_Exception.thrown("Error");
			}
			if(e.fdx == 0) {
				let x0 = e.fx;
				if(x0 < len) {
					if(x0 >= 0) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
					}
				}
			} else {
				let x0 = e.fx;
				let dx = e.fdx;
				let xb = x0 + dx;
				let x_top;
				let x_bottom;
				let sy0;
				let sy1;
				let dy = e.fdy;
				if(!(e.sy <= y_bottom && e.ey >= y_top)) {
					throw haxe_Exception.thrown("Error");
				}
				if(e.sy > y_top) {
					x_top = x0 + dx * (e.sy - y_top);
					sy0 = e.sy;
				} else {
					x_top = x0;
					sy0 = y_top;
				}
				if(e.ey < y_bottom) {
					x_bottom = x0 + dx * (e.ey - y_top);
					sy1 = e.ey;
				} else {
					x_bottom = xb;
					sy1 = y_bottom;
				}
				if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
					if((x_top | 0) == (x_bottom | 0)) {
						let x = x_top | 0;
						let height = sy1 - sy0;
						if(!(x >= 0 && x < len)) {
							throw haxe_Exception.thrown("Error");
						}
						scanline[x] += e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
						scanline_fill[scanline_fillIndex + x] += e.direction * height;
					} else {
						let x;
						if(x_top > x_bottom) {
							sy0 = y_bottom - (sy0 - y_top);
							sy1 = y_bottom - (sy1 - y_top);
							let t = sy0;
							sy0 = sy1;
							sy1 = t;
							t = x_bottom;
							x_bottom = x_top;
							x_top = t;
							dx = -dx;
							dy = -dy;
							t = x0;
							x0 = xb;
							xb = t;
						}
						let x1 = x_top | 0;
						let x2 = x_bottom | 0;
						let y_crossing = (x1 + 1 - x0) * dy + y_top;
						let sign = e.direction;
						let area = sign * (y_crossing - sy0);
						scanline[x1] += area * (1 - (x_top - x1 + (x1 + 1 - x1)) / 2);
						let step = sign * dy;
						let _g = x1 + 1;
						let _g1 = x2;
						while(_g < _g1) {
							let x = _g++;
							scanline[x] += area + step / 2;
							area += step;
						}
						y_crossing += dy * (x2 - (x1 + 1));
						if(!(Math.abs(area) <= 1.01)) {
							throw haxe_Exception.thrown("Error");
						}
						scanline[x2] += area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing);
						scanline_fill[scanline_fillIndex + x2] += sign * (sy1 - sy0);
					}
				} else {
					let _g = 0;
					let _g1 = len;
					while(_g < _g1) {
						let x = _g++;
						let y0 = y_top;
						let x1 = x;
						let x2 = x + 1;
						let x3 = xb;
						let y3 = y_bottom;
						let y1 = (x - x0) / dx + y_top;
						let y2 = (x + 1 - x0) / dx + y_top;
						if(x0 < x1 && x3 > x2) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x1,y1);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x1,y1,x2,y2);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x2,y2,x3,y3);
						} else if(x3 < x1 && x0 > x2) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x2,y2);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x2,y2,x1,y1);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x1,y1,x3,y3);
						} else if(x0 < x1 && x3 > x1) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x1,y1);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x1,y1,x3,y3);
						} else if(x3 < x1 && x0 > x1) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x1,y1);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x1,y1,x3,y3);
						} else if(x0 < x2 && x3 > x2) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x2,y2);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x2,y2,x3,y3);
						} else if(x3 < x2 && x0 > x2) {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x2,y2);
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x2,y2,x3,y3);
						} else {
							kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x,e,x0,y0,x3,y3);
						}
					}
				}
			}
			e = e.next;
		}
	}
	static stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y) {
		let active = null;
		let j = 0;
		let scanline;
		let scanline2Index = 0;
		let eIndex = 0;
		if(result.w > 64) {
			let this1 = new Array(result.w * 2 + 1);
			scanline = this1;
		} else {
			let this1 = new Array(129);
			scanline = this1;
		}
		let scanline2 = scanline;
		scanline2Index = result.w;
		let y = off_y;
		e[eIndex + n].y0 = off_y + result.h + 1;
		while(j < result.h) {
			let scan_y_top = y + 0.0;
			let scan_y_bottom = y + 1.0;
			let step_value = active;
			let step_parent = null;
			let _g = 0;
			let _g1 = result.w;
			while(_g < _g1) {
				let i = _g++;
				scanline[i] = 0;
			}
			let _g2 = 0;
			let _g3 = result.w + 1;
			while(_g2 < _g3) {
				let i = _g2++;
				scanline2[scanline2Index + i] = 0;
			}
			while(step_value != null) {
				let z = step_value;
				if(z.ey <= scan_y_top) {
					if(step_parent == null) {
						active = z.next;
						step_value = z.next;
					} else {
						step_parent.next = z.next;
						step_value = z.next;
					}
					if(z.direction == 0) {
						throw haxe_Exception.thrown("Error");
					}
					z.direction = 0;
				} else {
					step_parent = step_value;
					step_value = step_value.next;
				}
			}
			while(e[eIndex].y0 <= scan_y_bottom) {
				if(e[eIndex].y0 != e[eIndex].y1) {
					let z = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
					if(!(z.ey >= scan_y_top)) {
						throw haxe_Exception.thrown("Error");
					}
					if(z != null) {
						if(j == 0 && off_y != 0) {
							if(z.ey < scan_y_top) {
								z.ey = scan_y_top;
							}
						}
						if(!(z.ey >= scan_y_top)) {
							throw haxe_Exception.thrown("Error");
						}
					}
					z.next = active;
					active = z;
				}
				++eIndex;
			}
			if(active != null) {
				kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
			}
			let sum = 0;
			let _g4 = 0;
			let _g5 = result.w;
			while(_g4 < _g5) {
				let i = _g4++;
				sum += scanline2[scanline2Index + i];
				let k = scanline[i] + sum;
				k = Math.abs(k) * 255.0 + 0.5;
				let m = k | 0;
				if(m > 255) {
					m = 255;
				}
				result.pixels.writeU8(result.pixels_offset + j * result.stride + i,m);
			}
			step_parent = null;
			step_value = active;
			while(step_value != null) {
				let z = step_value;
				z.fx += z.fdx;
				step_parent = step_value;
				step_value = step_value.next;
			}
			++y;
			++j;
		}
	}
	static STBTT__COMPARE(a,b) {
		return a.y0 < b.y0;
	}
	static stbtt__sort_edges_ins_sort(p,n) {
		let i;
		let j;
		let _g = 1;
		let _g1 = n;
		while(_g < _g1) {
			let i = _g++;
			let t = p[i];
			let a = t;
			j = i;
			while(j > 0) {
				let b = p[j - 1];
				let c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
				if(!c) {
					break;
				}
				p[j] = p[j - 1];
				--j;
			}
			if(i != j) {
				p[j] = t;
			}
		}
	}
	static stbtt__sort_edges_quicksort(p,pIndex,n) {
		while(n > 12) {
			let t;
			let c;
			let m = n >> 1;
			let c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
			let c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
			if(c01 != c12) {
				c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
				let z = c == c12 ? 0 : n - 1;
				t = p[pIndex + z];
				p[pIndex + z] = p[pIndex + m];
				p[pIndex + m] = t;
			}
			t = p[pIndex];
			p[pIndex] = p[pIndex + m];
			p[pIndex + m] = t;
			let i = 1;
			let j = n - 1;
			while(true) {
				while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
				while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
				if(i >= j) {
					break;
				}
				t = p[pIndex + i];
				p[pIndex + i] = p[pIndex + j];
				p[pIndex + j] = t;
				++i;
				--j;
			}
			if(j < n - i) {
				kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
				pIndex += i;
				n -= i;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
				n = j;
			}
		}
	}
	static stbtt__sort_edges(p,n) {
		kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
		kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
	}
	static stbtt__rasterize(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
		let y_scale_inv = invert ? -scale_y : scale_y;
		let i;
		let j;
		let k;
		let vsubsample = 1;
		let ptsIndex = 0;
		let n = 0;
		let _g = 0;
		let _g1 = windings;
		while(_g < _g1) {
			let i = _g++;
			n += wcount[i];
		}
		let this1 = new Array(n + 1);
		let e = this1;
		if(e == null) {
			return;
		} else {
			let _g = 0;
			let _g1 = e.length;
			while(_g < _g1) {
				let i = _g++;
				e[i] = new kha_graphics2_truetype_Stbtt_$_$edge();
			}
		}
		n = 0;
		let m = 0;
		let _g2 = 0;
		let _g3 = windings;
		while(_g2 < _g3) {
			let i = _g2++;
			let p = pts;
			let pIndex = ptsIndex + m;
			m += wcount[i];
			j = wcount[i] - 1;
			let _g = 0;
			let _g1 = wcount[i];
			while(_g < _g1) {
				let k = _g++;
				let a = k;
				let b = j;
				if(p[pIndex + j].y == p[pIndex + k].y) {
					j = k;
					continue;
				}
				e[n].invert = false;
				if(invert ? p[pIndex + j].y > p[pIndex + k].y : p[pIndex + j].y < p[pIndex + k].y) {
					e[n].invert = true;
					a = j;
					b = k;
				}
				e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
				e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
				e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
				e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
				++n;
				j = k;
			}
		}
		kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
	}
	static stbtt__add_point(points,n,x,y) {
		if(points == null) {
			return;
		}
		points[n].x = x;
		points[n].y = y;
	}
	static stbtt__tesselate_curve(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
		let mx = (x0 + 2 * x1 + x2) / 4;
		let my = (y0 + 2 * y1 + y2) / 4;
		let dx = (x0 + x2) / 2 - mx;
		let dy = (y0 + y2) / 2 - my;
		if(n > 16) {
			return 1;
		}
		if(dx * dx + dy * dy > objspace_flatness_squared) {
			kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
			kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
			num_points.value += 1;
		}
		return 1;
	}
	static stbtt__tesselate_cubic(points,num_points,x0,y0,x1,y1,x2,y2,x3,y3,objspace_flatness_squared,n) {
		let dx0 = x1 - x0;
		let dy0 = y1 - y0;
		let dx1 = x2 - x1;
		let dy1 = y2 - y1;
		let dx2 = x3 - x2;
		let dy2 = y3 - y2;
		let dx = x3 - x0;
		let dy = y3 - y0;
		let longlen = Math.sqrt(dx0 * dx0 + dy0 * dy0) + Math.sqrt(dx1 * dx1 + dy1 * dy1) + Math.sqrt(dx2 * dx2 + dy2 * dy2);
		let shortlen = Math.sqrt(dx * dx + dy * dy);
		let flatness_squared = longlen * longlen - shortlen * shortlen;
		if(n > 16) {
			return;
		}
		if(flatness_squared > objspace_flatness_squared) {
			let x01 = (x0 + x1) / 2;
			let y01 = (y0 + y1) / 2;
			let x12 = (x1 + x2) / 2;
			let y12 = (y1 + y2) / 2;
			let x23 = (x2 + x3) / 2;
			let y23 = (y2 + y3) / 2;
			let xa = (x01 + x12) / 2;
			let ya = (y01 + y12) / 2;
			let xb = (x12 + x23) / 2;
			let yb = (y12 + y23) / 2;
			let mx = (xa + xb) / 2;
			let my = (ya + yb) / 2;
			kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic(points,num_points,x0,y0,x01,y01,xa,ya,mx,my,objspace_flatness_squared,n + 1);
			kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic(points,num_points,mx,my,xb,yb,x23,y23,x3,y3,objspace_flatness_squared,n + 1);
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x3,y3);
			num_points.value += 1;
		}
	}
	static stbtt_FlattenCurves(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
		let points = null;
		let num_points = 0;
		let objspace_flatness_squared = objspace_flatness * objspace_flatness;
		let i;
		let n = 0;
		let start = 0;
		let pass;
		let _g = 0;
		let _g1 = num_verts;
		while(_g < _g1) {
			let i = _g++;
			if(vertices[i].type == 1) {
				++n;
			}
		}
		num_contours.value = n;
		if(n == 0) {
			return null;
		}
		let this1 = new Array(n);
		contour_lengths.value = this1;
		if(contour_lengths.value == null) {
			num_contours.value = 0;
			return null;
		}
		let _g2 = 0;
		while(_g2 < 2) {
			let pass = _g2++;
			let x = 0;
			let y = 0;
			if(pass == 1) {
				let this1 = new Array(num_points);
				points = this1;
				if(points == null) {
					contour_lengths.value = null;
					num_contours.value = 0;
					return null;
				} else {
					let _g = 0;
					let _g1 = points.length;
					while(_g < _g1) {
						let i = _g++;
						points[i] = new kha_graphics2_truetype_Stbtt_$_$point();
					}
				}
			}
			num_points = 0;
			n = -1;
			let _g = 0;
			let _g1 = num_verts;
			while(_g < _g1) {
				let i = _g++;
				switch(vertices[i].type) {
				case 1:
					if(n >= 0) {
						contour_lengths.value[n] = num_points - start;
					}
					++n;
					start = num_points;
					x = vertices[i].x;
					y = vertices[i].y;
					kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
					break;
				case 2:
					x = vertices[i].x;
					y = vertices[i].y;
					kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
					break;
				case 3:
					let num_points_reference = { value : num_points};
					kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i].cx,vertices[i].cy,vertices[i].x,vertices[i].y,objspace_flatness_squared,0);
					num_points = num_points_reference.value;
					x = vertices[i].x;
					y = vertices[i].y;
					break;
				case 4:
					let num_points_reference1 = { value : num_points};
					kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic(points,num_points_reference1,x,y,vertices[i].cx,vertices[i].cy,vertices[i].cx1,vertices[i].cy1,vertices[i].x,vertices[i].y,objspace_flatness_squared,0);
					num_points = num_points_reference1.value;
					x = vertices[i].x;
					y = vertices[i].y;
					break;
				}
			}
			contour_lengths.value[n] = num_points - start;
		}
		return points;
	}
	static stbtt_Rasterize(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
		let scale = scale_x > scale_y ? scale_y : scale_x;
		let winding_count = 0;
		let winding_lengths = null;
		let winding_count_reference = { value : winding_count};
		let winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
		let windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
		winding_count = winding_count_reference.value;
		winding_lengths = winding_lengths_reference.value;
		if(windings != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
		}
	}
	static stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,glyph,region) {
		let gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
		let vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
		let num_verts = vertices.length;
		if(scale_x == 0) {
			scale_x = scale_y;
		}
		if(scale_y == 0) {
			if(scale_x == 0) {
				return null;
			}
			scale_y = scale_x;
		}
		let rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
		let ix0 = rect.x0;
		let iy0 = rect.y0;
		let ix1 = rect.x1;
		let iy1 = rect.y1;
		gbm.w = ix1 - ix0;
		gbm.h = iy1 - iy0;
		gbm.pixels = null;
		region.width = gbm.w;
		region.height = gbm.h;
		region.xoff = ix0;
		region.yoff = iy0;
		if(gbm.w != 0 && gbm.h != 0) {
			gbm.pixels = kha_internal_BytesBlob.alloc(gbm.w * gbm.h);
			if(gbm.pixels != null) {
				gbm.stride = gbm.w;
				kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
			}
		}
		return gbm.pixels;
	}
	static stbtt_GetGlyphBitmap(info,scale_x,scale_y,glyph,region) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,glyph,region);
	}
	static stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
		let ix0 = 0;
		let iy0 = 0;
		let vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
		let num_verts = vertices == null ? 0 : vertices.length;
		let gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
		let rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
		ix0 = rect.x0;
		iy0 = rect.y0;
		gbm.pixels = output;
		gbm.pixels_offset = output_offset;
		gbm.w = out_w;
		gbm.h = out_h;
		gbm.stride = out_stride;
		if(gbm.w != 0 && gbm.h != 0) {
			kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
		}
	}
	static stbtt_MakeGlyphBitmap(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
	}
	static stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,codepoint,region) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),region);
	}
	static stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,codepoint) {
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
	}
	static stbtt_GetCodepointBitmap(info,scale_x,scale_y,codepoint,region) {
		return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,codepoint,region);
	}
	static stbtt_MakeCodepointBitmap(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,codepoint) {
		kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,codepoint);
	}
	static stbtt_BakeFontBitmap(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
		let f = new kha_graphics2_truetype_Stbtt_$fontinfo();
		if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
			return -1;
		}
		let y = 1;
		let x = y;
		let bottom_y = 1;
		let scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
		let i = 0;
		let _g = 0;
		while(_g < chars.length) {
			let index = chars[_g];
			++_g;
			let g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
			let metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
			let advance = metrics.advanceWidth;
			let lsb = metrics.leftSideBearing;
			let rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
			let x0 = rect.x0;
			let y0 = rect.y0;
			let x1 = rect.x1;
			let y1 = rect.y1;
			let gw = x1 - x0;
			let gh = y1 - y0;
			if(x + gw + 1 >= pw) {
				y = bottom_y;
				x = 1;
			}
			if(y + gh + 1 >= ph) {
				return -i;
			}
			if(x + gw >= pw) {
				throw haxe_Exception.thrown("Error");
			}
			if(y + gh >= ph) {
				throw haxe_Exception.thrown("Error");
			}
			chardata[i].x0 = x;
			chardata[i].y0 = y;
			chardata[i].x1 = x + gw;
			chardata[i].y1 = y + gh;
			chardata[i].xadvance = scale * advance;
			chardata[i].xoff = x0;
			chardata[i].yoff = y0;
			x = x + gw + 1;
			if(y + gh + 1 > bottom_y) {
				bottom_y = y + gh + 1;
			}
			++i;
		}
		let _g1 = 0;
		let _g2 = pw * ph;
		while(_g1 < _g2) {
			let i = _g1++;
			pixels.writeU8(i,0);
		}
		i = 0;
		let ch;
		let _g3 = 0;
		while(_g3 < chars.length) {
			let index = chars[_g3];
			++_g3;
			let g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
			ch = chardata[i];
			kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,ch.x0 + ch.y0 * pw,ch.x1 - ch.x0,ch.y1 - ch.y0,pw,scale,scale,g);
			++i;
		}
		return bottom_y;
	}
	static stbtt_GetBakedQuad(chardata,pw,ph,char_index,xpos,ypos,q,opengl_fillrule) {
		let d3d_bias = opengl_fillrule ? 0 : -0.5;
		let ipw = 1.0 / pw;
		let iph = 1.0 / ph;
		let b = chardata[char_index];
		let round_x = Math.floor(xpos.value + b.xoff + 0.5);
		let round_y = Math.floor(ypos.value + b.yoff + 0.5);
		q.x0 = round_x + d3d_bias;
		q.y0 = round_y + d3d_bias;
		q.x1 = round_x + b.x1 - b.x0 + d3d_bias;
		q.y1 = round_y + b.y1 - b.y0 + d3d_bias;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		xpos.value += b.xadvance;
	}
}
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = "kha.graphics2.truetype.StbTruetype";
class kha_graphics4_ConstantLocation {
}
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = "kha.graphics4.ConstantLocation";
kha_graphics4_ConstantLocation.__isInterface__ = true;
class kha_graphics4_CubeMap {
	constructor(texture) {
		this.texture_ = texture;
	}
	unload() {
	}
	lock(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	unlock() {
	}
	get_width() {
		if(this.texture_ == null) {
			return this.renderTarget_.width;
		} else {
			return this.texture_.width;
		}
	}
	get_height() {
		if(this.texture_ == null) {
			return this.renderTarget_.height;
		} else {
			return this.texture_.height;
		}
	}
	get_g1() {
		return null;
	}
	get_g2() {
		return null;
	}
	get_g4() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_krom_Graphics(this);
		}
		return this.graphics4;
	}
	static getRenderTargetFormat(format) {
		switch(format) {
		case 0:
			return 0;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 1;
		default:
			return 0;
		}
	}
	static getDepthBufferBits(depthAndStencil) {
		switch(depthAndStencil) {
		case 0:
			return -1;
		case 1:
			return 24;
		case 2:
			return 24;
		case 3:
			return 24;
		case 4:
			return 32;
		case 5:
			return 16;
		}
	}
	static getStencilBufferBits(depthAndStencil) {
		switch(depthAndStencil) {
		case 0:
			return -1;
		case 1:
			return -1;
		case 2:
			return 8;
		case 3:
			return 8;
		case 4:
			return 8;
		case 5:
			return 0;
		}
	}
	static getTextureFormat(format) {
		switch(format) {
		case 0:
			return 0;
		case 2:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		default:
			return 1;
		}
	}
	static createRenderTarget(size,format,depthStencil) {
		if(depthStencil == null) {
			depthStencil = 0;
		}
		if(format == null) {
			format = 0;
		}
		let cubeMap = new kha_graphics4_CubeMap(null);
		cubeMap.format = format;
		cubeMap.renderTarget_ = Krom.createRenderTargetCubeMap(size,kha_graphics4_CubeMap.getRenderTargetFormat(format),kha_graphics4_CubeMap.getDepthBufferBits(depthStencil),kha_graphics4_CubeMap.getStencilBufferBits(depthStencil));
		return cubeMap;
	}
}
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = "kha.graphics4.CubeMap";
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
Object.assign(kha_graphics4_CubeMap.prototype, {
	__class__: kha_graphics4_CubeMap
	,texture_: null
	,renderTarget_: null
	,format: null
	,graphics4: null
	,__properties__: {get_g4: "get_g4",get_g2: "get_g2",get_g1: "get_g1",get_height: "get_height",get_width: "get_width"}
});
class kha_graphics4_FragmentShader {
	constructor(sources,names) {
		if(sources != null) {
			this.shader = Krom.createFragmentShader(sources[0].bytes.b.bufferValue,names[0]);
		}
	}
	delete() {
		Krom.deleteShader(this.shader);
		this.shader = null;
	}
	static fromSource(source) {
		let shader = new kha_graphics4_FragmentShader(null,null);
		shader.shader = Krom.createFragmentShaderFromSource(source);
		return shader;
	}
}
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = "kha.graphics4.FragmentShader";
Object.assign(kha_graphics4_FragmentShader.prototype, {
	__class__: kha_graphics4_FragmentShader
	,shader: null
});
class kha_graphics4_GeometryShader {
	constructor(sources,names) {
		this.shader = Krom.createGeometryShader(sources[0].bytes.b.bufferValue,names[0]);
	}
	delete() {
		Krom.deleteShader(this.shader);
		this.shader = null;
	}
}
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = "kha.graphics4.GeometryShader";
Object.assign(kha_graphics4_GeometryShader.prototype, {
	__class__: kha_graphics4_GeometryShader
	,shader: null
});
class kha_graphics4_Graphics {
}
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = "kha.graphics4.Graphics";
kha_graphics4_Graphics.__isInterface__ = true;
Object.assign(kha_graphics4_Graphics.prototype, {
	__class__: kha_graphics4_Graphics
	,begin: null
	,beginFace: null
	,beginEye: null
	,end: null
	,vsynced: null
	,refreshRate: null
	,clear: null
	,viewport: null
	,scissor: null
	,disableScissor: null
	,setVertexBuffer: null
	,setVertexBuffers: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureDepth: null
	,setTextureArray: null
	,setVideoTexture: null
	,setImageTexture: null
	,setTextureParameters: null
	,setTexture3DParameters: null
	,setTextureCompareMode: null
	,setCubeMapCompareMode: null
	,setCubeMap: null
	,setCubeMapDepth: null
	,maxBoundTextures: null
	,setStencilReferenceValue: null
	,instancedRenderingAvailable: null
	,setPipeline: null
	,setBool: null
	,setInt: null
	,setInt2: null
	,setInt3: null
	,setInt4: null
	,setInts: null
	,setFloat: null
	,setFloat2: null
	,setFloat3: null
	,setFloat4: null
	,setFloats: null
	,setVector2: null
	,setVector3: null
	,setVector4: null
	,setMatrix: null
	,setMatrix3: null
	,drawIndexedVertices: null
	,drawIndexedVerticesInstanced: null
	,flush: null
});
class kha_graphics4_InternalPipeline {
	constructor(pipeline,projectionLocation,textureLocation) {
		this.pipeline = pipeline;
		this.projectionLocation = projectionLocation;
		this.textureLocation = textureLocation;
	}
}
$hxClasses["kha.graphics4.InternalPipeline"] = kha_graphics4_InternalPipeline;
kha_graphics4_InternalPipeline.__name__ = "kha.graphics4.InternalPipeline";
Object.assign(kha_graphics4_InternalPipeline.prototype, {
	__class__: kha_graphics4_InternalPipeline
	,pipeline: null
	,projectionLocation: null
	,textureLocation: null
});
class kha_graphics4_PipelineCache {
}
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = "kha.graphics4.PipelineCache";
kha_graphics4_PipelineCache.__isInterface__ = true;
Object.assign(kha_graphics4_PipelineCache.prototype, {
	__class__: kha_graphics4_PipelineCache
	,get: null
});
class kha_graphics4_SimplePipelineCache {
	constructor(pipeline,texture) {
		let projectionLocation = null;
		try {
			projectionLocation = pipeline.getConstantLocation("projectionMatrix");
		} catch( _g ) {
			let x = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 58, className : "kha.graphics4.SimplePipelineCache", methodName : "new"});
		}
		let textureLocation = null;
		if(texture) {
			try {
				textureLocation = pipeline.getTextureUnit("tex");
			} catch( _g ) {
				let x = haxe_Exception.caught(_g).unwrap();
				haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 67, className : "kha.graphics4.SimplePipelineCache", methodName : "new"});
			}
		}
		this.pipeline = new kha_graphics4_InternalPipeline(pipeline,projectionLocation,textureLocation);
	}
	get(colorFormats,depthStencilFormat) {
		return this.pipeline;
	}
}
$hxClasses["kha.graphics4.SimplePipelineCache"] = kha_graphics4_SimplePipelineCache;
kha_graphics4_SimplePipelineCache.__name__ = "kha.graphics4.SimplePipelineCache";
kha_graphics4_SimplePipelineCache.__interfaces__ = [kha_graphics4_PipelineCache];
Object.assign(kha_graphics4_SimplePipelineCache.prototype, {
	__class__: kha_graphics4_SimplePipelineCache
	,pipeline: null
});
class kha_graphics4_PerFramebufferPipelineCache {
	constructor(pipeline,texture) {
		this.pipelines = [];
		pipeline.compile();
		let projectionLocation = null;
		try {
			projectionLocation = pipeline.getConstantLocation("projectionMatrix");
		} catch( _g ) {
			let x = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 90, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
		}
		let textureLocation = null;
		if(texture) {
			try {
				textureLocation = pipeline.getTextureUnit("tex");
			} catch( _g ) {
				let x = haxe_Exception.caught(_g).unwrap();
				haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 99, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
			}
		}
		this.pipelines.push(new kha_graphics4_InternalPipeline(pipeline,projectionLocation,textureLocation));
	}
	get(colorFormats,depthStencilFormat) {
		return this.pipelines[this.hash(colorFormats,depthStencilFormat)];
	}
	hash(colorFormats,depthStencilFormat) {
		return 0;
	}
}
$hxClasses["kha.graphics4.PerFramebufferPipelineCache"] = kha_graphics4_PerFramebufferPipelineCache;
kha_graphics4_PerFramebufferPipelineCache.__name__ = "kha.graphics4.PerFramebufferPipelineCache";
kha_graphics4_PerFramebufferPipelineCache.__interfaces__ = [kha_graphics4_PipelineCache];
Object.assign(kha_graphics4_PerFramebufferPipelineCache.prototype, {
	__class__: kha_graphics4_PerFramebufferPipelineCache
	,pipelines: null
});
class kha_graphics4_ImageShaderPainter {
	constructor(g4) {
		this.myPipeline = null;
		this.bilinearMipmaps = false;
		this.bilinear = false;
		this.g = g4;
		kha_graphics4_ImageShaderPainter.bufferStart = 0;
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.initShaders();
		this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
		this.initBuffers();
	}
	get_pipeline() {
		return this.myPipeline;
	}
	set_pipeline(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ImageShaderPainter.standardImagePipeline;
		return this.myPipeline;
	}
	setProjection(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	initBuffers() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			let indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			let _g = 0;
			while(_g < 1500) {
				let i = _g++;
				let k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = k * 4;
				let k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp1 = k1 * 4;
				let k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp2 = k2 * 4;
				let k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp3 = k3 * 4;
				let k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp4 = k4 * 4;
				let k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp5 = k5 * 4;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex,bottomleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 4,bottomlefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 24,topleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 28,toplefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 48,toprightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 52,toprighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 72,bottomrightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 76,bottomrighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 80,-5.0,true);
	}
	setRectTexCoords(left,top,right,bottom) {
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 12,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 16,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 36,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 40,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 60,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 64,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 84,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 88,bottom,true);
	}
	setRectColor(r,g,b,a) {
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 3,a * 255 | 0);
	}
	drawBuffer(end) {
		if(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart == 0) {
			return;
		}
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock((kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 4);
		let pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(kha_graphics4_ImageShaderPainter.bufferStart * 2 * 3,(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		if(end || (kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1) * 4 >= 1500) {
			kha_graphics4_ImageShaderPainter.bufferStart = 0;
			kha_graphics4_ImageShaderPainter.bufferIndex = 0;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(0);
		} else {
			kha_graphics4_ImageShaderPainter.bufferStart = kha_graphics4_ImageShaderPainter.bufferIndex;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(kha_graphics4_ImageShaderPainter.bufferStart * 4);
		}
	}
	setBilinearFilter(bilinear) {
		this.drawBuffer(false);
		kha_graphics4_ImageShaderPainter.lastTexture = null;
		this.bilinear = bilinear;
	}
	setBilinearMipmapFilter(bilinear) {
		this.drawBuffer(false);
		kha_graphics4_ImageShaderPainter.lastTexture = null;
		this.bilinearMipmaps = bilinear;
	}
	drawImage(img,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		let tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer(false);
		}
		let r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		let g = ((color & 65280) >>> 8) * 0.00392156862745098;
		let b = (color & 255) * 0.00392156862745098;
		let a = (color >>> 24) * 0.00392156862745098 * opacity;
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 3,a * 255 | 0);
		let right = tex.get_width() / tex.get_realWidth();
		let bottom = tex.get_height() / tex.get_realHeight();
		let baseIndex1 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 12,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 16,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 36,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 40,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 60,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 64,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 84,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 88,bottom,true);
		let baseIndex2 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2,bottomleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 4,bottomlefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 24,topleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 28,toplefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 48,toprightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 52,toprighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 72,bottomrightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 76,bottomrighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 80,-5.0,true);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	drawImage2(img,sx,sy,sw,sh,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		let tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer(false);
		}
		let left = sx / tex.get_realWidth();
		let top = sy / tex.get_realHeight();
		let right = (sx + sw) / tex.get_realWidth();
		let bottom = (sy + sh) / tex.get_realHeight();
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 12,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 16,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 36,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 40,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 60,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 64,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 84,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 88,bottom,true);
		let r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		let g = ((color & 65280) >>> 8) * 0.00392156862745098;
		let b = (color & 255) * 0.00392156862745098;
		let a = (color >>> 24) * 0.00392156862745098 * opacity;
		let baseIndex1 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 3,a * 255 | 0);
		let baseIndex2 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2,bottomleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 4,bottomlefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 24,topleftx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 28,toplefty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 48,toprightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 52,toprighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 72,bottomrightx,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 76,bottomrighty,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 80,-5.0,true);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	drawImageScale(img,sx,sy,sw,sh,left,top,right,bottom,opacity,color) {
		let tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer(false);
		}
		let left1 = sx / tex.get_realWidth();
		let top1 = sy / tex.get_realHeight();
		let right1 = (sx + sw) / tex.get_realWidth();
		let bottom1 = (sy + sh) / tex.get_realHeight();
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 12,left1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 16,bottom1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 36,left1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 40,top1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 60,right1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 64,top1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 84,right1,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 88,bottom1,true);
		let r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		let g = ((color & 65280) >>> 8) * 0.00392156862745098;
		let b = (color & 255) * 0.00392156862745098;
		let baseIndex1 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 3,opacity * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 3,opacity * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 3,opacity * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 3,opacity * 255 | 0);
		let baseIndex2 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 4,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 24,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 28,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 48,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 52,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 72,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 76,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 80,-5.0,true);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	end() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	static initShaders() {
		if(kha_graphics4_ImageShaderPainter.structure == null) {
			kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
		}
		if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
			let pipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
			kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,true);
		}
	}
}
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = "kha.graphics4.ImageShaderPainter";
Object.assign(kha_graphics4_ImageShaderPainter.prototype, {
	__class__: kha_graphics4_ImageShaderPainter
	,projectionMatrix: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,__properties__: {set_pipeline: "set_pipeline",get_pipeline: "get_pipeline"}
});
class kha_graphics4_ColoredShaderPainter {
	constructor(g4) {
		this.myPipeline = null;
		this.g = g4;
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.initShaders();
		this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
		this.initBuffers();
	}
	get_pipeline() {
		return this.myPipeline;
	}
	set_pipeline(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ColoredShaderPainter.standardColorPipeline;
		return this.myPipeline;
	}
	setProjection(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	initBuffers() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			let indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			let _g = 0;
			while(_g < 1000) {
				let i = _g++;
				let k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = k * 4;
				let k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp1 = k1 * 4;
				let k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp2 = k2 * 4;
				let k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp3 = k3 * 4;
				let k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp4 = k4 * 4;
				let k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp5 = k5 * 4;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(3000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(3000,0);
			let triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			let _g1 = 0;
			while(_g1 < 1000) {
				let i = _g1++;
				let k = i * 3;
				triIndices.setUint32(k * 4,i * 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = k * 4;
				let k1 = i * 3 + 1;
				triIndices.setUint32(k1 * 4,i * 3 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp1 = k1 * 4;
				let k2 = i * 3 + 2;
				triIndices.setUint32(k2 * 4,i * 3 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp2 = k2 * 4;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		let baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 4 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32(baseIndex * 4,bottomleftx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 1) * 4,bottomlefty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 2) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 4) * 4,topleftx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 5) * 4,toplefty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 6) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 8) * 4,toprightx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 9) * 4,toprighty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 10) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 12) * 4,bottomrightx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 13) * 4,bottomrighty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 14) * 4,-5.0,true);
	}
	setRectColors(opacity,color) {
		let baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 4 * 4 * 4;
		let a = opacity * ((color >>> 24) * 0.00392156862745098);
		let r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		let g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		let b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 3,a * 255 | 0);
	}
	setTriVertices(x1,y1,x2,y2,x3,y3) {
		let baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 4 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32(baseIndex * 4,x1,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 1) * 4,y1,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 2) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 4) * 4,x2,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 5) * 4,y2,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 6) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 8) * 4,x3,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 9) * 4,y3,true);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setFloat32((baseIndex + 10) * 4,-5.0,true);
	}
	setTriColors(opacity,color) {
		let baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 4 * 4 * 3;
		let a = opacity * ((color >>> 24) * 0.00392156862745098);
		let r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		let g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		let b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 12,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 12 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 12 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 12 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 28,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 28 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 28 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 28 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.triangleVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
	}
	drawBuffer(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex == 0) {
			return;
		}
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.bufferIndex * 4);
		let pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	drawTriBuffer(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		let pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	fillRect(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 1000) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	fillTriangle(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 1000) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	endTris(rectsDone) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(rectsDone);
		}
	}
	endRects(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(trisDone);
		}
	}
	end() {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(false);
		}
	}
	static initShaders() {
		if(kha_graphics4_ColoredShaderPainter.structure == null) {
			kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
		}
		if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
			let pipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
			kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,false);
		}
	}
}
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = "kha.graphics4.ColoredShaderPainter";
Object.assign(kha_graphics4_ColoredShaderPainter.prototype, {
	__class__: kha_graphics4_ColoredShaderPainter
	,projectionMatrix: null
	,g: null
	,myPipeline: null
	,__properties__: {set_pipeline: "set_pipeline",get_pipeline: "get_pipeline"}
});
class kha_graphics4_TextShaderPainter {
	constructor(g4) {
		this.bakedQuadCache = new kha_AlignedQuad();
		this.bilinear = false;
		this.myPipeline = null;
		this.g = g4;
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.initShaders();
		this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
		this.initBuffers();
	}
	get_pipeline() {
		return this.myPipeline;
	}
	set_pipeline(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_TextShaderPainter.standardTextPipeline;
		return this.myPipeline;
	}
	setProjection(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	initBuffers() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			let indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			let _g = 0;
			while(_g < 1000) {
				let i = _g++;
				let k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp = k * 4;
				let k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp1 = k1 * 4;
				let k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp2 = k2 * 4;
				let k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp3 = k3 * 4;
				let k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp4 = k4 * 4;
				let k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				let tmp5 = k5 * 4;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		let baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32(baseIndex * 4,bottomleftx,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 1) * 4,bottomlefty,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 2) * 4,-5.0,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 9) * 4,topleftx,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 10) * 4,toplefty,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 11) * 4,-5.0,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 18) * 4,toprightx,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 19) * 4,toprighty,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 20) * 4,-5.0,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 27) * 4,bottomrightx,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 28) * 4,bottomrighty,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 29) * 4,-5.0,true);
	}
	setRectTexCoords(left,top,right,bottom) {
		let baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 3) * 4,left,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 4) * 4,bottom,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 12) * 4,left,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 13) * 4,top,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 21) * 4,right,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 22) * 4,top,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 30) * 4,right,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 31) * 4,bottom,true);
	}
	setRectColors(opacity,color) {
		let baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		let a = opacity * ((color >>> 24) * 0.00392156862745098);
		let v = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 5) * 4,v,true);
		let v1 = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 6) * 4,v1,true);
		let v2 = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 7) * 4,v2,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 8) * 4,a,true);
		let v3 = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 14) * 4,v3,true);
		let v4 = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 15) * 4,v4,true);
		let v5 = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 16) * 4,v5,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 17) * 4,a,true);
		let v6 = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 23) * 4,v6,true);
		let v7 = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 24) * 4,v7,true);
		let v8 = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 25) * 4,v8,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 26) * 4,a,true);
		let v9 = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 32) * 4,v9,true);
		let v10 = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 33) * 4,v10,true);
		let v11 = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 34) * 4,v11,true);
		kha_graphics4_TextShaderPainter.rectVertices.setFloat32((baseIndex + 35) * 4,a,true);
	}
	drawBuffer() {
		if(kha_graphics4_TextShaderPainter.bufferIndex == 0) {
			return;
		}
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock(kha_graphics4_TextShaderPainter.bufferIndex * 4);
		let pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	setBilinearFilter(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	setFont(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	drawString(text,opacity,color,x,y,transformation) {
		let font = this.font._get(this.fontSize);
		let tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		let xpos = x;
		let ypos = y;
		let _g = 0;
		let _g1 = text.length;
		while(_g < _g1) {
			let i = _g++;
			let charCode = text.charCodeAt(i);
			let q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(charCode),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				let x = q.x0;
				let y = q.y1;
				if(y == null) {
					y = 0;
				}
				if(x == null) {
					x = 0;
				}
				let value_x = x;
				let value_y = y;
				let w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				let x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				let y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				let x2 = x1;
				let y2 = y1;
				if(y2 == null) {
					y2 = 0;
				}
				if(x2 == null) {
					x2 = 0;
				}
				let p0_x = x2;
				let p0_y = y2;
				let x3 = q.x0;
				let y3 = q.y0;
				if(y3 == null) {
					y3 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				let value_x1 = x3;
				let value_y1 = y3;
				let w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				let x4 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				let y4 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				let x5 = x4;
				let y5 = y4;
				if(y5 == null) {
					y5 = 0;
				}
				if(x5 == null) {
					x5 = 0;
				}
				let p1_x = x5;
				let p1_y = y5;
				let x6 = q.x1;
				let y6 = q.y0;
				if(y6 == null) {
					y6 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				let value_x2 = x6;
				let value_y2 = y6;
				let w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				let x7 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				let y7 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				let x8 = x7;
				let y8 = y7;
				if(y8 == null) {
					y8 = 0;
				}
				if(x8 == null) {
					x8 = 0;
				}
				let p2_x = x8;
				let p2_y = y8;
				let x9 = q.x1;
				let y9 = q.y1;
				if(y9 == null) {
					y9 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				let value_x3 = x9;
				let value_y3 = y9;
				let w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				let x10 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				let y10 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				let x11 = x10;
				let y11 = y10;
				if(y11 == null) {
					y11 = 0;
				}
				if(x11 == null) {
					x11 = 0;
				}
				let p3_x = x11;
				let p3_y = y11;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	drawCharacters(text,start,length,opacity,color,x,y,transformation) {
		let font = this.font._get(this.fontSize);
		let tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		let xpos = x;
		let ypos = y;
		let _g = start;
		let _g1 = start + length;
		while(_g < _g1) {
			let i = _g++;
			let q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(text[i]),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				let x = q.x0;
				let y = q.y1;
				if(y == null) {
					y = 0;
				}
				if(x == null) {
					x = 0;
				}
				let value_x = x;
				let value_y = y;
				let w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				let x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				let y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				let x2 = x1;
				let y2 = y1;
				if(y2 == null) {
					y2 = 0;
				}
				if(x2 == null) {
					x2 = 0;
				}
				let p0_x = x2;
				let p0_y = y2;
				let x3 = q.x0;
				let y3 = q.y0;
				if(y3 == null) {
					y3 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				let value_x1 = x3;
				let value_y1 = y3;
				let w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				let x4 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				let y4 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				let x5 = x4;
				let y5 = y4;
				if(y5 == null) {
					y5 = 0;
				}
				if(x5 == null) {
					x5 = 0;
				}
				let p1_x = x5;
				let p1_y = y5;
				let x6 = q.x1;
				let y6 = q.y0;
				if(y6 == null) {
					y6 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				let value_x2 = x6;
				let value_y2 = y6;
				let w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				let x7 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				let y7 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				let x8 = x7;
				let y8 = y7;
				if(y8 == null) {
					y8 = 0;
				}
				if(x8 == null) {
					x8 = 0;
				}
				let p2_x = x8;
				let p2_y = y8;
				let x9 = q.x1;
				let y9 = q.y1;
				if(y9 == null) {
					y9 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				let value_x3 = x9;
				let value_y3 = y9;
				let w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				let x10 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				let y10 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				let x11 = x10;
				let y11 = y10;
				if(y11 == null) {
					y11 = 0;
				}
				if(x11 == null) {
					x11 = 0;
				}
				let p3_x = x11;
				let p3_y = y11;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	end() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	static initShaders() {
		if(kha_graphics4_TextShaderPainter.structure == null) {
			kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
		}
		if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
			let pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
			kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,true);
		}
	}
	static findIndex(charCode) {
		let blocks = kha_KravurImage.charBlocks;
		let offset = 0;
		let _g = 0;
		let _g1 = blocks.length / 2 | 0;
		while(_g < _g1) {
			let i = _g++;
			let start = blocks[i * 2];
			let end = blocks[i * 2 + 1];
			if(charCode >= start && charCode <= end) {
				return offset + charCode - start;
			}
			offset += end - start + 1;
		}
		return 0;
	}
}
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = "kha.graphics4.TextShaderPainter";
Object.assign(kha_graphics4_TextShaderPainter.prototype, {
	__class__: kha_graphics4_TextShaderPainter
	,projectionMatrix: null
	,font: null
	,g: null
	,myPipeline: null
	,fontSize: null
	,bilinear: null
	,bakedQuadCache: null
	,__properties__: {set_pipeline: "set_pipeline",get_pipeline: "get_pipeline"}
});
class kha_graphics4_Graphics2 extends kha_graphics2_Graphics {
	constructor(canvas) {
		kha_graphics2_Graphics._hx_skip_constructor = true;
		super();
		kha_graphics2_Graphics._hx_skip_constructor = false;
		this._hx_constructor(canvas);
	}
	_hx_constructor(canvas) {
		this.scissorH = -1;
		this.scissorW = -1;
		this.scissorY = -1;
		this.scissorX = -1;
		this.scissorEnabled = false;
		this.lastPipeline = null;
		this.pipelineCache = new haxe_ds_ObjectMap();
		this.myMipmapScaleQuality = 0;
		this.myImageScaleQuality = 0;
		super._hx_constructor();
		this.set_color(-1);
		this.canvas = canvas;
		this.g = canvas.get_g4();
		this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
		this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
		this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
		this.textPainter.fontSize = this.get_fontSize();
		this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
		this.setProjection();
		if(kha_graphics4_Graphics2.videoPipeline == null) {
			kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
			kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
			kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
			kha_graphics4_Graphics2.videoPipeline.compile();
		}
	}
	setProjection() {
		let width = this.canvas.get_width();
		let height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			let _this = this.projectionMatrix;
			let tx = -width / width;
			let ty = -height / (0 - height);
			let tz = -1.0002000200020003;
			let m__00 = 2 / width;
			let m__10 = 0;
			let m__20 = 0;
			let m__30 = tx;
			let m__01 = 0;
			let m__11 = 2.0 / (0 - height);
			let m__21 = 0;
			let m__31 = ty;
			let m__02 = 0;
			let m__12 = 0;
			let m__22 = -0.002000200020002;
			let m__32 = tz;
			let m__03 = 0;
			let m__13 = 0;
			let m__23 = 0;
			let m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(kha_Image.renderTargetsInvertedY()) {
				let _this = this.projectionMatrix;
				let tx = -width / width;
				let ty = -height / height;
				let tz = -1.0002000200020003;
				let m__00 = 2 / width;
				let m__10 = 0;
				let m__20 = 0;
				let m__30 = tx;
				let m__01 = 0;
				let m__11 = 2.0 / height;
				let m__21 = 0;
				let m__31 = ty;
				let m__02 = 0;
				let m__12 = 0;
				let m__22 = -0.002000200020002;
				let m__32 = tz;
				let m__03 = 0;
				let m__13 = 0;
				let m__23 = 0;
				let m__33 = 1;
				_this._00 = m__00;
				_this._10 = m__10;
				_this._20 = m__20;
				_this._30 = m__30;
				_this._01 = m__01;
				_this._11 = m__11;
				_this._21 = m__21;
				_this._31 = m__31;
				_this._02 = m__02;
				_this._12 = m__12;
				_this._22 = m__22;
				_this._32 = m__32;
				_this._03 = m__03;
				_this._13 = m__13;
				_this._23 = m__23;
				_this._33 = m__33;
			} else {
				let _this = this.projectionMatrix;
				let tx = -width / width;
				let ty = -height / (0 - height);
				let tz = -1.0002000200020003;
				let m__00 = 2 / width;
				let m__10 = 0;
				let m__20 = 0;
				let m__30 = tx;
				let m__01 = 0;
				let m__11 = 2.0 / (0 - height);
				let m__21 = 0;
				let m__31 = ty;
				let m__02 = 0;
				let m__12 = 0;
				let m__22 = -0.002000200020002;
				let m__32 = tz;
				let m__03 = 0;
				let m__13 = 0;
				let m__23 = 0;
				let m__33 = 1;
				_this._00 = m__00;
				_this._10 = m__10;
				_this._20 = m__20;
				_this._30 = m__30;
				_this._01 = m__01;
				_this._11 = m__11;
				_this._21 = m__21;
				_this._31 = m__31;
				_this._02 = m__02;
				_this._12 = m__12;
				_this._22 = m__22;
				_this._32 = m__32;
				_this._03 = m__03;
				_this._13 = m__13;
				_this._23 = m__23;
				_this._33 = m__33;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	drawImage(img,x,y) {
		let _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		let xw = x + img.get_width();
		let yh = y + img.get_height();
		let _this1 = this.transformations[this.transformationIndex];
		let x1 = x;
		let y1 = yh;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		let value_x = x1;
		let value_y = y1;
		let w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		let x2 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		let y2 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		let x3 = x2;
		let y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let p1_x = x3;
		let p1_y = y3;
		let _this2 = this.transformations[this.transformationIndex];
		let x4 = x;
		let y4 = y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let value_x1 = x4;
		let value_y1 = y4;
		let w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		let x5 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		let y5 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		let x6 = x5;
		let y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		let p2_x = x6;
		let p2_y = y6;
		let _this3 = this.transformations[this.transformationIndex];
		let x7 = xw;
		let y7 = y;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		let value_x2 = x7;
		let value_y2 = y7;
		let w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		let x8 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		let y8 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		let x9 = x8;
		let y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let p3_x = x9;
		let p3_y = y9;
		let _this4 = this.transformations[this.transformationIndex];
		let x10 = xw;
		let y10 = yh;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		let value_x3 = x10;
		let value_y3 = y10;
		let w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		let x11 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		let y11 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		let x12 = x11;
		let y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		let p4_x = x12;
		let p4_y = y12;
		let _this5 = this.imagePainter;
		let opacity = this.get_opacity();
		let color = this.get_color();
		let tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer(false);
		}
		let r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		let g = ((color & 65280) >>> 8) * 0.00392156862745098;
		let b = (color & 255) * 0.00392156862745098;
		let a = (color >>> 24) * 0.00392156862745098 * opacity;
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 20 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 68 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex + 92 + 3,a * 255 | 0);
		let right = tex.get_width() / tex.get_realWidth();
		let bottom = tex.get_height() / tex.get_realHeight();
		let baseIndex1 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 12,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 16,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 36,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 40,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 60,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 64,0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 84,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex1 + 88,bottom,true);
		let baseIndex2 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2,p1_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 4,p1_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 24,p2_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 28,p2_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 48,p3_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 52,p3_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 72,p4_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 76,p4_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 80,-5.0,true);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	drawScaledSubImage(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		let _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		let _this1 = this.transformations[this.transformationIndex];
		let x = dx;
		let y = dy + dh;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let value_x = x;
		let value_y = y;
		let w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		let x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		let y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		let x2 = x1;
		let y2 = y1;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		let p1_x = x2;
		let p1_y = y2;
		let _this2 = this.transformations[this.transformationIndex];
		let x3 = dx;
		let y3 = dy;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let value_x1 = x3;
		let value_y1 = y3;
		let w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		let x4 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		let y4 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		let x5 = x4;
		let y5 = y4;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		let p2_x = x5;
		let p2_y = y5;
		let _this3 = this.transformations[this.transformationIndex];
		let x6 = dx + dw;
		let y6 = dy;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		let value_x2 = x6;
		let value_y2 = y6;
		let w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		let x7 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		let y7 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		let x8 = x7;
		let y8 = y7;
		if(y8 == null) {
			y8 = 0;
		}
		if(x8 == null) {
			x8 = 0;
		}
		let p3_x = x8;
		let p3_y = y8;
		let _this4 = this.transformations[this.transformationIndex];
		let x9 = dx + dw;
		let y9 = dy + dh;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let value_x3 = x9;
		let value_y3 = y9;
		let w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		let x10 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		let y10 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		let x11 = x10;
		let y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		let p4_x = x11;
		let p4_y = y11;
		let _this5 = this.imagePainter;
		let opacity = this.get_opacity();
		let color = this.get_color();
		let tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer(false);
		}
		let left = sx / tex.get_realWidth();
		let top = sy / tex.get_realHeight();
		let right = (sx + sw) / tex.get_realWidth();
		let bottom = (sy + sh) / tex.get_realHeight();
		let baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 12,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 16,bottom,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 36,left,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 40,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 60,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 64,top,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 84,right,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex + 88,bottom,true);
		let r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		let g = ((color & 65280) >>> 8) * 0.00392156862745098;
		let b = (color & 255) * 0.00392156862745098;
		let a = (color >>> 24) * 0.00392156862745098 * opacity;
		let baseIndex1 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 20 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 44 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 68 + 3,a * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92,r * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 1,g * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 2,b * 255 | 0);
		kha_graphics4_ImageShaderPainter.rectVertices.setUint8(baseIndex1 + 92 + 3,a * 255 | 0);
		let baseIndex2 = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 6 * 4 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2,p1_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 4,p1_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 8,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 24,p2_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 28,p2_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 32,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 48,p3_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 52,p3_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 56,-5.0,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 72,p4_x,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 76,p4_y,true);
		kha_graphics4_ImageShaderPainter.rectVertices.setFloat32(baseIndex2 + 80,-5.0,true);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	get_color() {
		return this.myColor;
	}
	set_color(color) {
		return this.myColor = color;
	}
	drawRect(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		let _this = this.transformations[this.transformationIndex];
		let x1 = x - strength / 2;
		let y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		let value_x = x1;
		let value_y = y1;
		let w = _this._02 * value_x + _this._12 * value_y + _this._22;
		let x2 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		let y2 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		let x3 = x2;
		let y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let p1_x = x3;
		let p1_y = y3;
		let _this1 = this.transformations[this.transformationIndex];
		let x4 = x - strength / 2;
		let y4 = y - strength / 2;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let value_x1 = x4;
		let value_y1 = y4;
		let w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		let x5 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		let y5 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		let x6 = x5;
		let y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		let p2_x = x6;
		let p2_y = y6;
		let _this2 = this.transformations[this.transformationIndex];
		let x7 = x + width + strength / 2;
		let y7 = y - strength / 2;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		let value_x2 = x7;
		let value_y2 = y7;
		let w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		let x8 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		let y8 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		let x9 = x8;
		let y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let p3_x = x9;
		let p3_y = y9;
		let _this3 = this.transformations[this.transformationIndex];
		let x10 = x + width + strength / 2;
		let y10 = y + strength / 2;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		let value_x3 = x10;
		let value_y3 = y10;
		let w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		let x11 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		let y11 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		let x12 = x11;
		let y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		let p4_x = x12;
		let p4_y = y12;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		let _this4 = this.transformations[this.transformationIndex];
		let x13 = x - strength / 2;
		let y13 = y + height - strength / 2;
		if(y13 == null) {
			y13 = 0;
		}
		if(x13 == null) {
			x13 = 0;
		}
		let value_x4 = x13;
		let value_y4 = y13;
		let w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		let x14 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		let y14 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		let x15 = x14;
		let y15 = y14;
		if(y15 == null) {
			y15 = 0;
		}
		if(x15 == null) {
			x15 = 0;
		}
		let v_x = x15;
		let v_y = y15;
		p1_x = v_x;
		p1_y = v_y;
		let _this5 = this.transformations[this.transformationIndex];
		let x16 = x - strength / 2;
		let y16 = y + strength / 2;
		if(y16 == null) {
			y16 = 0;
		}
		if(x16 == null) {
			x16 = 0;
		}
		let value_x5 = x16;
		let value_y5 = y16;
		let w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		let x17 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		let y17 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		let x18 = x17;
		let y18 = y17;
		if(y18 == null) {
			y18 = 0;
		}
		if(x18 == null) {
			x18 = 0;
		}
		let v_x1 = x18;
		let v_y1 = y18;
		p2_x = v_x1;
		p2_y = v_y1;
		let _this6 = this.transformations[this.transformationIndex];
		let x19 = x + strength / 2;
		let y19 = y + strength / 2;
		if(y19 == null) {
			y19 = 0;
		}
		if(x19 == null) {
			x19 = 0;
		}
		let value_x6 = x19;
		let value_y6 = y19;
		let w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		let x20 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		let y20 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		let x21 = x20;
		let y21 = y20;
		if(y21 == null) {
			y21 = 0;
		}
		if(x21 == null) {
			x21 = 0;
		}
		let v_x2 = x21;
		let v_y2 = y21;
		p3_x = v_x2;
		p3_y = v_y2;
		let _this7 = this.transformations[this.transformationIndex];
		let x22 = x + strength / 2;
		let y22 = y + height - strength / 2;
		if(y22 == null) {
			y22 = 0;
		}
		if(x22 == null) {
			x22 = 0;
		}
		let value_x7 = x22;
		let value_y7 = y22;
		let w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		let x23 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		let y23 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		let x24 = x23;
		let y24 = y23;
		if(y24 == null) {
			y24 = 0;
		}
		if(x24 == null) {
			x24 = 0;
		}
		let v_x3 = x24;
		let v_y3 = y24;
		p4_x = v_x3;
		p4_y = v_y3;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		let _this8 = this.transformations[this.transformationIndex];
		let x25 = x - strength / 2;
		let y25 = y + height + strength / 2;
		if(y25 == null) {
			y25 = 0;
		}
		if(x25 == null) {
			x25 = 0;
		}
		let value_x8 = x25;
		let value_y8 = y25;
		let w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		let x26 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		let y26 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		let x27 = x26;
		let y27 = y26;
		if(y27 == null) {
			y27 = 0;
		}
		if(x27 == null) {
			x27 = 0;
		}
		let v_x4 = x27;
		let v_y4 = y27;
		p1_x = v_x4;
		p1_y = v_y4;
		let _this9 = this.transformations[this.transformationIndex];
		let x28 = x - strength / 2;
		let y28 = y + height - strength / 2;
		if(y28 == null) {
			y28 = 0;
		}
		if(x28 == null) {
			x28 = 0;
		}
		let value_x9 = x28;
		let value_y9 = y28;
		let w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		let x29 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		let y29 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		let x30 = x29;
		let y30 = y29;
		if(y30 == null) {
			y30 = 0;
		}
		if(x30 == null) {
			x30 = 0;
		}
		let v_x5 = x30;
		let v_y5 = y30;
		p2_x = v_x5;
		p2_y = v_y5;
		let _this10 = this.transformations[this.transformationIndex];
		let x31 = x + width + strength / 2;
		let y31 = y + height - strength / 2;
		if(y31 == null) {
			y31 = 0;
		}
		if(x31 == null) {
			x31 = 0;
		}
		let value_x10 = x31;
		let value_y10 = y31;
		let w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		let x32 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		let y32 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		let x33 = x32;
		let y33 = y32;
		if(y33 == null) {
			y33 = 0;
		}
		if(x33 == null) {
			x33 = 0;
		}
		let v_x6 = x33;
		let v_y6 = y33;
		p3_x = v_x6;
		p3_y = v_y6;
		let _this11 = this.transformations[this.transformationIndex];
		let x34 = x + width + strength / 2;
		let y34 = y + height + strength / 2;
		if(y34 == null) {
			y34 = 0;
		}
		if(x34 == null) {
			x34 = 0;
		}
		let value_x11 = x34;
		let value_y11 = y34;
		let w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		let x35 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		let y35 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		let x36 = x35;
		let y36 = y35;
		if(y36 == null) {
			y36 = 0;
		}
		if(x36 == null) {
			x36 = 0;
		}
		let v_x7 = x36;
		let v_y7 = y36;
		p4_x = v_x7;
		p4_y = v_y7;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		let _this12 = this.transformations[this.transformationIndex];
		let x37 = x + width - strength / 2;
		let y37 = y + height - strength / 2;
		if(y37 == null) {
			y37 = 0;
		}
		if(x37 == null) {
			x37 = 0;
		}
		let value_x12 = x37;
		let value_y12 = y37;
		let w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		let x38 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		let y38 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		let x39 = x38;
		let y39 = y38;
		if(y39 == null) {
			y39 = 0;
		}
		if(x39 == null) {
			x39 = 0;
		}
		let v_x8 = x39;
		let v_y8 = y39;
		p1_x = v_x8;
		p1_y = v_y8;
		let _this13 = this.transformations[this.transformationIndex];
		let x40 = x + width - strength / 2;
		let y40 = y + strength / 2;
		if(y40 == null) {
			y40 = 0;
		}
		if(x40 == null) {
			x40 = 0;
		}
		let value_x13 = x40;
		let value_y13 = y40;
		let w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		let x41 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		let y41 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		let x42 = x41;
		let y42 = y41;
		if(y42 == null) {
			y42 = 0;
		}
		if(x42 == null) {
			x42 = 0;
		}
		let v_x9 = x42;
		let v_y9 = y42;
		p2_x = v_x9;
		p2_y = v_y9;
		let _this14 = this.transformations[this.transformationIndex];
		let x43 = x + width + strength / 2;
		let y43 = y + strength / 2;
		if(y43 == null) {
			y43 = 0;
		}
		if(x43 == null) {
			x43 = 0;
		}
		let value_x14 = x43;
		let value_y14 = y43;
		let w14 = _this14._02 * value_x14 + _this14._12 * value_y14 + _this14._22;
		let x44 = (_this14._00 * value_x14 + _this14._10 * value_y14 + _this14._20) / w14;
		let y44 = (_this14._01 * value_x14 + _this14._11 * value_y14 + _this14._21) / w14;
		let x45 = x44;
		let y45 = y44;
		if(y45 == null) {
			y45 = 0;
		}
		if(x45 == null) {
			x45 = 0;
		}
		let v_x10 = x45;
		let v_y10 = y45;
		p3_x = v_x10;
		p3_y = v_y10;
		let _this15 = this.transformations[this.transformationIndex];
		let x46 = x + width + strength / 2;
		let y46 = y + height - strength / 2;
		if(y46 == null) {
			y46 = 0;
		}
		if(x46 == null) {
			x46 = 0;
		}
		let value_x15 = x46;
		let value_y15 = y46;
		let w15 = _this15._02 * value_x15 + _this15._12 * value_y15 + _this15._22;
		let x47 = (_this15._00 * value_x15 + _this15._10 * value_y15 + _this15._20) / w15;
		let y47 = (_this15._01 * value_x15 + _this15._11 * value_y15 + _this15._21) / w15;
		let x48 = x47;
		let y48 = y47;
		if(y48 == null) {
			y48 = 0;
		}
		if(x48 == null) {
			x48 = 0;
		}
		let v_x11 = x48;
		let v_y11 = y48;
		p4_x = v_x11;
		p4_y = v_y11;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	fillRect(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		let _this = this.transformations[this.transformationIndex];
		let x1 = x;
		let y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		let value_x = x1;
		let value_y = y1;
		let w = _this._02 * value_x + _this._12 * value_y + _this._22;
		let x2 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		let y2 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		let x3 = x2;
		let y3 = y2;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let p1_x = x3;
		let p1_y = y3;
		let _this1 = this.transformations[this.transformationIndex];
		let x4 = x;
		let y4 = y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let value_x1 = x4;
		let value_y1 = y4;
		let w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		let x5 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		let y5 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		let x6 = x5;
		let y6 = y5;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		let p2_x = x6;
		let p2_y = y6;
		let _this2 = this.transformations[this.transformationIndex];
		let x7 = x + width;
		let y7 = y;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		let value_x2 = x7;
		let value_y2 = y7;
		let w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		let x8 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		let y8 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		let x9 = x8;
		let y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let p3_x = x9;
		let p3_y = y9;
		let _this3 = this.transformations[this.transformationIndex];
		let x10 = x + width;
		let y10 = y + height;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		let value_x3 = x10;
		let value_y3 = y10;
		let w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		let x11 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		let y11 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		let x12 = x11;
		let y12 = y11;
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		let p4_x = x12;
		let p4_y = y12;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	drawString(text,x,y) {
		this.imagePainter.end();
		let _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	drawCharacters(text,start,length,x,y) {
		this.imagePainter.end();
		let _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawCharacters(text,start,length,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	get_font() {
		return this.myFont;
	}
	set_font(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	set_fontSize(value) {
		return super.set_fontSize(this.textPainter.fontSize = value);
	}
	drawLine(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		let vec_x = 0;
		let vec_y = 0;
		if(y2 == y1) {
			let x = 0;
			let y = -1;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			let v_x = x;
			let v_y = y;
			vec_x = v_x;
			vec_y = v_y;
		} else {
			let x = 1;
			let y = -(x2 - x1) / (y2 - y1);
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			let v_x = x;
			let v_y = y;
			vec_x = v_x;
			vec_y = v_y;
		}
		let currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
		if(currentLength != 0) {
			let mul = strength / currentLength;
			vec_x *= mul;
			vec_y *= mul;
		}
		let x = x1 + 0.5 * vec_x;
		let y = y1 + 0.5 * vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let p1_x = x;
		let p1_y = y;
		let x3 = x2 + 0.5 * vec_x;
		let y3 = y2 + 0.5 * vec_y;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let p2_x = x3;
		let p2_y = y3;
		let x4 = p1_x - vec_x;
		let y4 = p1_y - vec_y;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let p3_x = x4;
		let p3_y = y4;
		let x5 = p2_x - vec_x;
		let y5 = p2_y - vec_y;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		let p4_x = x5;
		let p4_y = y5;
		let _this = this.transformations[this.transformationIndex];
		let w = _this._02 * p1_x + _this._12 * p1_y + _this._22;
		let x6 = (_this._00 * p1_x + _this._10 * p1_y + _this._20) / w;
		let y6 = (_this._01 * p1_x + _this._11 * p1_y + _this._21) / w;
		let x7 = x6;
		let y7 = y6;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		let v_x = x7;
		let v_y = y7;
		p1_x = v_x;
		p1_y = v_y;
		let _this1 = this.transformations[this.transformationIndex];
		let w1 = _this1._02 * p2_x + _this1._12 * p2_y + _this1._22;
		let x8 = (_this1._00 * p2_x + _this1._10 * p2_y + _this1._20) / w1;
		let y8 = (_this1._01 * p2_x + _this1._11 * p2_y + _this1._21) / w1;
		let x9 = x8;
		let y9 = y8;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let v_x1 = x9;
		let v_y1 = y9;
		p2_x = v_x1;
		p2_y = v_y1;
		let _this2 = this.transformations[this.transformationIndex];
		let w2 = _this2._02 * p3_x + _this2._12 * p3_y + _this2._22;
		let x10 = (_this2._00 * p3_x + _this2._10 * p3_y + _this2._20) / w2;
		let y10 = (_this2._01 * p3_x + _this2._11 * p3_y + _this2._21) / w2;
		let x11 = x10;
		let y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		let v_x2 = x11;
		let v_y2 = y11;
		p3_x = v_x2;
		p3_y = v_y2;
		let _this3 = this.transformations[this.transformationIndex];
		let w3 = _this3._02 * p4_x + _this3._12 * p4_y + _this3._22;
		let x12 = (_this3._00 * p4_x + _this3._10 * p4_y + _this3._20) / w3;
		let y12 = (_this3._01 * p4_x + _this3._11 * p4_y + _this3._21) / w3;
		let x13 = x12;
		let y13 = y12;
		if(y13 == null) {
			y13 = 0;
		}
		if(x13 == null) {
			x13 = 0;
		}
		let v_x3 = x13;
		let v_y3 = y13;
		p4_x = v_x3;
		p4_y = v_y3;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3_x,p3_y,p2_x,p2_y,p4_x,p4_y);
	}
	fillTriangle(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		let _this = this.transformations[this.transformationIndex];
		let x = x1;
		let y = y1;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let value_x = x;
		let value_y = y;
		let w = _this._02 * value_x + _this._12 * value_y + _this._22;
		let x4 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		let y4 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		let x5 = x4;
		let y5 = y4;
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		let p1_x = x5;
		let p1_y = y5;
		let _this1 = this.transformations[this.transformationIndex];
		let x6 = x2;
		let y6 = y2;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		let value_x1 = x6;
		let value_y1 = y6;
		let w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		let x7 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		let y7 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		let x8 = x7;
		let y8 = y7;
		if(y8 == null) {
			y8 = 0;
		}
		if(x8 == null) {
			x8 = 0;
		}
		let p2_x = x8;
		let p2_y = y8;
		let _this2 = this.transformations[this.transformationIndex];
		let x9 = x3;
		let y9 = y3;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		let value_x2 = x9;
		let value_y2 = y9;
		let w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		let x10 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		let y10 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		let x11 = x10;
		let y11 = y10;
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		let p3_x = x11;
		let p3_y = y11;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	}
	get_imageScaleQuality() {
		return this.myImageScaleQuality;
	}
	set_imageScaleQuality(value) {
		if(value == this.myImageScaleQuality) {
			return value;
		}
		this.imagePainter.setBilinearFilter(value == 1);
		this.textPainter.setBilinearFilter(value == 1);
		return this.myImageScaleQuality = value;
	}
	get_mipmapScaleQuality() {
		return this.myMipmapScaleQuality;
	}
	set_mipmapScaleQuality(value) {
		this.imagePainter.setBilinearMipmapFilter(value == 1);
		return this.myMipmapScaleQuality = value;
	}
	setPipeline(pipeline) {
		if(pipeline == this.lastPipeline) {
			return;
		}
		this.lastPipeline = pipeline;
		this.flush();
		if(pipeline == null) {
			this.imagePainter.set_pipeline(null);
			this.coloredPainter.set_pipeline(null);
			this.textPainter.set_pipeline(null);
		} else {
			let cache = this.pipelineCache.h[pipeline.__id__];
			if(cache == null) {
				cache = new kha_graphics4_SimplePipelineCache(pipeline,true);
				this.pipelineCache.set(pipeline,cache);
			}
			this.imagePainter.set_pipeline(cache);
			this.coloredPainter.set_pipeline(cache);
			this.textPainter.set_pipeline(cache);
		}
	}
	scissor(x,y,width,height) {
		this.scissorEnabled = true;
		this.scissorX = x;
		this.scissorY = y;
		this.scissorW = width;
		this.scissorH = height;
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	disableScissor() {
		this.scissorEnabled = false;
		this.flush();
		this.g.disableScissor();
	}
	begin(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw haxe_Exception.thrown("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	clear(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	flush() {
		this.imagePainter.end();
		this.textPainter.end();
		let _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	end() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw haxe_Exception.thrown("Begin before you end");
		}
	}
	drawVideoInternal(video,x,y,width,height) {
	}
	drawVideo(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipeline);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	static upperPowerOfTwo(v) {
		--v;
		v |= v >>> 1;
		v |= v >>> 2;
		v |= v >>> 4;
		v |= v >>> 8;
		v |= v >>> 16;
		return ++v;
	}
	static createImageVertexStructure() {
		let structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",2);
		structure.add("vertexUV",1);
		structure.add("vertexColor",16);
		return structure;
	}
	static createImagePipeline(structure) {
		let shaderPipeline = new kha_graphics4_PipelineState();
		shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
		shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
		shaderPipeline.inputLayout = [structure];
		shaderPipeline.blendSource = 1;
		shaderPipeline.blendDestination = 5;
		shaderPipeline.alphaBlendSource = 1;
		shaderPipeline.alphaBlendDestination = 5;
		return shaderPipeline;
	}
	static createColoredVertexStructure() {
		let structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",2);
		structure.add("vertexColor",16);
		return structure;
	}
	static createColoredPipeline(structure) {
		let shaderPipeline = new kha_graphics4_PipelineState();
		shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
		shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
		shaderPipeline.inputLayout = [structure];
		shaderPipeline.blendSource = 1;
		shaderPipeline.blendDestination = 5;
		shaderPipeline.alphaBlendSource = 1;
		shaderPipeline.alphaBlendDestination = 5;
		return shaderPipeline;
	}
	static createTextVertexStructure() {
		let structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",2);
		structure.add("vertexUV",1);
		structure.add("vertexColor",3);
		return structure;
	}
	static createTextPipeline(structure) {
		let shaderPipeline = new kha_graphics4_PipelineState();
		shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
		shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
		shaderPipeline.inputLayout = [structure];
		shaderPipeline.blendSource = 3;
		shaderPipeline.blendDestination = 5;
		shaderPipeline.alphaBlendSource = 3;
		shaderPipeline.alphaBlendDestination = 5;
		return shaderPipeline;
	}
}
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = "kha.graphics4.Graphics2";
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
Object.assign(kha_graphics4_Graphics2.prototype, {
	__class__: kha_graphics4_Graphics2
	,myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,myImageScaleQuality: null
	,myMipmapScaleQuality: null
	,pipelineCache: null
	,lastPipeline: null
	,scissorEnabled: null
	,scissorX: null
	,scissorY: null
	,scissorW: null
	,scissorH: null
});
class kha_graphics4_IndexBuffer {
	constructor(indexCount,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		this.indexCount = indexCount;
		this.buffer = Krom.createIndexBuffer(indexCount);
	}
	delete() {
		Krom.deleteIndexBuffer(this.buffer);
		this.buffer = null;
	}
	lock(start,count) {
		this._data = Krom.lockIndexBuffer(this.buffer);
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.indexCount;
		}
		let end = start + count;
		let start1 = start * 4;
		let end1 = end != null ? end * 4 : null;
		return kha_arrays_ByteArray._new(this._data.buffer,start1,end1 != null ? end1 - start1 : null);
	}
	unlock(count) {
		Krom.unlockIndexBuffer(this.buffer);
	}
	set() {
		Krom.setIndexBuffer(this.buffer);
	}
	count() {
		return this.indexCount;
	}
}
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = "kha.graphics4.IndexBuffer";
Object.assign(kha_graphics4_IndexBuffer.prototype, {
	__class__: kha_graphics4_IndexBuffer
	,_data: null
	,buffer: null
	,indexCount: null
});
class kha_graphics4_PipelineStateBase {
	constructor() {
		this.inputLayout = null;
		this.vertexShader = null;
		this.fragmentShader = null;
		this.geometryShader = null;
		this.tessellationControlShader = null;
		this.tessellationEvaluationShader = null;
		this.cullMode = 2;
		this.depthWrite = false;
		this.depthMode = 0;
		this.stencilFrontMode = 0;
		this.stencilFrontBothPass = 0;
		this.stencilFrontDepthFail = 0;
		this.stencilFrontFail = 0;
		this.stencilBackMode = 0;
		this.stencilBackBothPass = 0;
		this.stencilBackDepthFail = 0;
		this.stencilBackFail = 0;
		this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
		this.stencilReadMask = 255;
		this.stencilWriteMask = 255;
		this.blendSource = 1;
		this.blendDestination = 2;
		this.blendOperation = 0;
		this.alphaBlendSource = 1;
		this.alphaBlendDestination = 2;
		this.alphaBlendOperation = 0;
		this.colorWriteMasksRed = [];
		this.colorWriteMasksGreen = [];
		this.colorWriteMasksBlue = [];
		this.colorWriteMasksAlpha = [];
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksRed.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksGreen.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksBlue.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorWriteMasksAlpha.push(true);
		this.colorAttachmentCount = 1;
		this.colorAttachments = [];
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.colorAttachments.push(0);
		this.depthStencilAttachment = 0;
		this.conservativeRasterization = false;
	}
	set_colorWriteMask(value) {
		let value1 = this.colorWriteMasksAlpha[0] = value;
		let value2 = this.colorWriteMasksGreen[0] = value1;
		let value3 = this.colorWriteMasksBlue[0] = value2;
		return this.colorWriteMasksRed[0] = value3;
	}
	get_colorWriteMaskRed() {
		return this.colorWriteMasksRed[0];
	}
	set_colorWriteMaskRed(value) {
		return this.colorWriteMasksRed[0] = value;
	}
	get_colorWriteMaskGreen() {
		return this.colorWriteMasksGreen[0];
	}
	set_colorWriteMaskGreen(value) {
		return this.colorWriteMasksGreen[0] = value;
	}
	get_colorWriteMaskBlue() {
		return this.colorWriteMasksBlue[0];
	}
	set_colorWriteMaskBlue(value) {
		return this.colorWriteMasksBlue[0] = value;
	}
	get_colorWriteMaskAlpha() {
		return this.colorWriteMasksAlpha[0];
	}
	set_colorWriteMaskAlpha(value) {
		return this.colorWriteMasksAlpha[0] = value;
	}
}
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = "kha.graphics4.PipelineStateBase";
Object.assign(kha_graphics4_PipelineStateBase.prototype, {
	__class__: kha_graphics4_PipelineStateBase
	,inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tessellationControlShader: null
	,tessellationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilFrontMode: null
	,stencilFrontBothPass: null
	,stencilFrontDepthFail: null
	,stencilFrontFail: null
	,stencilBackMode: null
	,stencilBackBothPass: null
	,stencilBackDepthFail: null
	,stencilBackFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMasksRed: null
	,colorWriteMasksGreen: null
	,colorWriteMasksBlue: null
	,colorWriteMasksAlpha: null
	,colorAttachmentCount: null
	,colorAttachments: null
	,depthStencilAttachment: null
	,conservativeRasterization: null
	,__properties__: {set_colorWriteMaskAlpha: "set_colorWriteMaskAlpha",get_colorWriteMaskAlpha: "get_colorWriteMaskAlpha",set_colorWriteMaskBlue: "set_colorWriteMaskBlue",get_colorWriteMaskBlue: "get_colorWriteMaskBlue",set_colorWriteMaskGreen: "set_colorWriteMaskGreen",get_colorWriteMaskGreen: "get_colorWriteMaskGreen",set_colorWriteMaskRed: "set_colorWriteMaskRed",get_colorWriteMaskRed: "get_colorWriteMaskRed",set_colorWriteMask: "set_colorWriteMask"}
});
class kha_graphics4_PipelineState extends kha_graphics4_PipelineStateBase {
	constructor() {
		super();
		this.pipeline = Krom.createPipeline();
	}
	delete() {
		Krom.deletePipeline(this.pipeline);
		this.pipeline = null;
	}
	compile() {
		let structure0 = this.inputLayout.length > 0 ? this.inputLayout[0] : null;
		let structure1 = this.inputLayout.length > 1 ? this.inputLayout[1] : null;
		let structure2 = this.inputLayout.length > 2 ? this.inputLayout[2] : null;
		let structure3 = this.inputLayout.length > 3 ? this.inputLayout[3] : null;
		let gs = this.geometryShader != null ? this.geometryShader.shader : null;
		let tcs = this.tessellationControlShader != null ? this.tessellationControlShader.shader : null;
		let tes = this.tessellationEvaluationShader != null ? this.tessellationEvaluationShader.shader : null;
		let stencilReferenceValue = 0;
		let _g = this.stencilReferenceValue;
		if(_g._hx_index == 1) {
			let value = _g.value;
			stencilReferenceValue = value;
		}
		Krom.compilePipeline(this.pipeline,structure0,structure1,structure2,structure3,this.inputLayout.length,this.vertexShader.shader,this.fragmentShader.shader,gs,tcs,tes,{ cullMode : this.cullMode, depthWrite : this.depthWrite, depthMode : this.depthMode, stencilMode : this.stencilFrontMode, stencilBothPass : this.stencilFrontBothPass, stencilDepthFail : this.stencilFrontDepthFail, stencilFail : this.stencilFrontFail, stencilReferenceValue : stencilReferenceValue, stencilReadMask : this.stencilReadMask, stencilWriteMask : this.stencilWriteMask, blendSource : kha_graphics4_PipelineState.convertBlendingFactor(this.blendSource), blendDestination : kha_graphics4_PipelineState.convertBlendingFactor(this.blendDestination), alphaBlendSource : kha_graphics4_PipelineState.convertBlendingFactor(this.alphaBlendSource), alphaBlendDestination : kha_graphics4_PipelineState.convertBlendingFactor(this.alphaBlendDestination), colorWriteMaskRed : this.colorWriteMasksRed, colorWriteMaskGreen : this.colorWriteMasksGreen, colorWriteMaskBlue : this.colorWriteMasksBlue, colorWriteMaskAlpha : this.colorWriteMasksAlpha, conservativeRasterization : this.conservativeRasterization});
	}
	set() {
		Krom.setPipeline(this.pipeline);
	}
	getConstantLocation(name) {
		return Krom.getConstantLocation(this.pipeline,name);
	}
	getTextureUnit(name) {
		return Krom.getTextureUnit(this.pipeline,name);
	}
	static convertBlendingFactor(factor) {
		switch(factor) {
		case 0:case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		}
	}
}
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = "kha.graphics4.PipelineState";
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
Object.assign(kha_graphics4_PipelineState.prototype, {
	__class__: kha_graphics4_PipelineState
	,pipeline: null
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__:true,__constructs__:null
	,Dynamic: {_hx_name:"Dynamic",_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_._hx_name="Static",$_.__params__ = ["value"],$_)
};
kha_graphics4_StencilValue.__constructs__ = [kha_graphics4_StencilValue.Dynamic,kha_graphics4_StencilValue.Static];
class kha_graphics4_TessellationControlShader {
	constructor(sources,names) {
		this.shader = Krom.createTessellationControlShader(sources[0].bytes.b.bufferValue,names[0]);
	}
	delete() {
		Krom.deleteShader(this.shader);
		this.shader = null;
	}
}
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = "kha.graphics4.TessellationControlShader";
Object.assign(kha_graphics4_TessellationControlShader.prototype, {
	__class__: kha_graphics4_TessellationControlShader
	,shader: null
});
class kha_graphics4_TessellationEvaluationShader {
	constructor(sources,names) {
		this.shader = Krom.createTessellationEvaluationShader(sources[0].bytes.b.bufferValue,names[0]);
	}
	delete() {
		Krom.deleteShader(this.shader);
		this.shader = null;
	}
}
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = "kha.graphics4.TessellationEvaluationShader";
Object.assign(kha_graphics4_TessellationEvaluationShader.prototype, {
	__class__: kha_graphics4_TessellationEvaluationShader
	,shader: null
});
class kha_graphics4_TextureUnit {
}
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = "kha.graphics4.TextureUnit";
kha_graphics4_TextureUnit.__isInterface__ = true;
class kha_graphics4_VertexBuffer {
	constructor(vertexCount,structure,usage,instanceDataStepRate,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		if(instanceDataStepRate == null) {
			instanceDataStepRate = 0;
		}
		this.lockEnd = 0;
		this.lockStart = 0;
		this.vertexCount = vertexCount;
		this.structure = structure;
		this.mySize = vertexCount;
		this.buffer = Krom.createVertexBuffer(vertexCount,structure.elements,usage,instanceDataStepRate);
	}
	delete() {
		Krom.deleteVertexBuffer(this.buffer);
		this.buffer = null;
	}
	lock(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		this._data = kha_arrays_ByteArray._new(Krom.lockVertexBuffer(this.buffer,this.lockStart,this.lockEnd));
		return this._data;
	}
	lockInt16(start,count) {
		return kha_arrays_Int16Array._new(this.lock(start,count).buffer);
	}
	unlock(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		Krom.unlockVertexBuffer(this.buffer,this.lockEnd);
	}
	stride() {
		return this.structure.byteSize();
	}
	count() {
		return this.vertexCount;
	}
	set(offset) {
		Krom.setVertexBuffer(this.buffer);
		return 0;
	}
}
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = "kha.graphics4.VertexBuffer";
Object.assign(kha_graphics4_VertexBuffer.prototype, {
	__class__: kha_graphics4_VertexBuffer
	,buffer: null
	,_data: null
	,vertexCount: null
	,structure: null
	,mySize: null
	,lockStart: null
	,lockEnd: null
});
class kha_graphics4_VertexData {
	static getStride(vertexData) {
		switch(vertexData) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		case 5:
			return 1;
		case 6:
			return 1;
		case 7:
			return 1;
		case 8:
			return 1;
		case 9:
			return 2;
		case 10:
			return 2;
		case 11:
			return 2;
		case 12:
			return 2;
		case 13:
			return 4;
		case 14:
			return 4;
		case 15:
			return 4;
		case 16:
			return 4;
		case 17:
			return 2;
		case 18:
			return 2;
		case 19:
			return 2;
		case 20:
			return 2;
		case 21:
			return 4;
		case 22:
			return 4;
		case 23:
			return 4;
		case 24:
			return 4;
		case 25:
			return 8;
		case 26:
			return 8;
		case 27:
			return 8;
		case 28:
			return 8;
		case 29:
			return 4;
		case 30:
			return 4;
		case 31:
			return 8;
		case 32:
			return 8;
		case 33:
			return 12;
		case 34:
			return 12;
		case 35:
			return 16;
		case 36:
			return 16;
		}
	}
}
class kha_graphics4_VertexElement {
	constructor(name,data) {
		this.name = name;
		this.data = data;
	}
}
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = "kha.graphics4.VertexElement";
Object.assign(kha_graphics4_VertexElement.prototype, {
	__class__: kha_graphics4_VertexElement
	,name: null
	,data: null
});
class kha_graphics4_VertexShader {
	constructor(sources,names) {
		if(sources != null) {
			this.shader = Krom.createVertexShader(sources[0].bytes.b.bufferValue,names[0]);
		}
	}
	delete() {
		Krom.deleteShader(this.shader);
		this.shader = null;
	}
	static fromSource(source) {
		let shader = new kha_graphics4_VertexShader(null,null);
		shader.shader = Krom.createVertexShaderFromSource(source);
		return shader;
	}
}
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = "kha.graphics4.VertexShader";
Object.assign(kha_graphics4_VertexShader.prototype, {
	__class__: kha_graphics4_VertexShader
	,shader: null
});
class kha_graphics4_VertexStructure {
	constructor() {
		this.elements = [];
		this.instanced = false;
	}
	add(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	size() {
		return this.elements.length;
	}
	byteSize() {
		let byteSize = 0;
		let _g = 0;
		let _g1 = this.elements.length;
		while(_g < _g1) {
			let i = _g++;
			byteSize += kha_graphics4_VertexStructure.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	get(index) {
		return this.elements[index];
	}
	static dataByteSize(data) {
		switch(data) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		case 5:case 6:case 7:case 8:
			return 1;
		case 9:case 10:case 11:case 12:
			return 2;
		case 13:case 14:case 15:case 16:
			return 4;
		case 17:case 18:case 19:case 20:
			return 2;
		case 21:case 22:case 23:case 24:
			return 4;
		case 25:case 26:case 27:case 28:
			return 8;
		case 29:case 30:
			return 4;
		case 31:case 32:
			return 8;
		case 33:case 34:
			return 12;
		case 35:case 36:
			return 16;
		}
	}
}
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = "kha.graphics4.VertexStructure";
Object.assign(kha_graphics4_VertexStructure.prototype, {
	__class__: kha_graphics4_VertexStructure
	,elements: null
	,instanced: null
});
class kha_input_Gamepad {
	constructor(index,id) {
		if(id == null) {
			id = "unknown";
		}
		if(index == null) {
			index = 0;
		}
		this.connected = false;
		this.index = index;
		this.axisListeners = [];
		this.buttonListeners = [];
		kha_input_Gamepad.instances[index] = this;
	}
	notify(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	remove(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	rumble(leftAmount,rightAmount) {
		kha_SystemImpl.setGamepadRumble(this.index,leftAmount,rightAmount);
	}
	get_id() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	get_vendor() {
		return kha_SystemImpl.getGamepadVendor(this.index);
	}
	sendAxisEvent(axis,value) {
		let _g = 0;
		let _g1 = this.axisListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	sendButtonEvent(button,value) {
		let _g = 0;
		let _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	static get(index) {
		if(index == null) {
			index = 0;
		}
		if(index >= kha_input_Gamepad.instances.length) {
			return null;
		}
		return kha_input_Gamepad.instances[index];
	}
	static notifyOnConnect(connectListener,disconnectListener) {
		if(connectListener != null) {
			kha_input_Gamepad.connectListeners.push(connectListener);
		}
		if(disconnectListener != null) {
			kha_input_Gamepad.disconnectListeners.push(disconnectListener);
		}
	}
	static removeConnect(connectListener,disconnectListener) {
		if(connectListener != null) {
			HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
		}
		if(disconnectListener != null) {
			HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
		}
	}
	static sendConnectEvent(index) {
		kha_input_Gamepad.instances[index].connected = true;
		let _g = 0;
		let _g1 = kha_input_Gamepad.connectListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(index);
		}
	}
	static sendDisconnectEvent(index) {
		kha_input_Gamepad.instances[index].connected = false;
		let _g = 0;
		let _g1 = kha_input_Gamepad.disconnectListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(index);
		}
	}
}
$hxClasses["kha.input.Gamepad"] = $hx_exports["kha"]["input"]["Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = "kha.input.Gamepad";
Object.assign(kha_input_Gamepad.prototype, {
	__class__: kha_input_Gamepad
	,index: null
	,axisListeners: null
	,buttonListeners: null
	,id: null
	,vendor: null
	,connected: null
	,__properties__: {get_vendor: "get_vendor",get_id: "get_id"}
});
var kha_input_BlockInterventions = $hxEnums["kha.input.BlockInterventions"] = { __ename__:true,__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,None: {_hx_name:"None",_hx_index:2,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:3,func:func,__enum__:"kha.input.BlockInterventions",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_BlockInterventions.__constructs__ = [kha_input_BlockInterventions.Default,kha_input_BlockInterventions.Full,kha_input_BlockInterventions.None,kha_input_BlockInterventions.Custom];
class kha_netsync_Controller {
	constructor() {
		this.__id = kha_netsync_ControllerBuilder.nextId++;
		this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
	}
	_id() {
		return this.__id;
	}
	_receive(bytes) {
	}
}
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = "kha.netsync.Controller";
Object.assign(kha_netsync_Controller.prototype, {
	__class__: kha_netsync_Controller
	,__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
});
class kha_input_Keyboard extends kha_netsync_Controller {
	constructor() {
		super();
		this.downListeners = [];
		this.upListeners = [];
		this.pressListeners = [];
		kha_input_Keyboard.instance = this;
	}
	notify(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	remove(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	show() {
	}
	hide() {
	}
	sendDownEvent(code) {
		let _g = 0;
		let _g1 = this.downListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	sendUpEvent(code) {
		let _g = 0;
		let _g1 = this.upListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	sendPressEvent(char) {
		let _g = 0;
		let _g1 = this.pressListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	_receive(bytes) {
	}
	static get(num) {
		if(num == null) {
			num = 0;
		}
		return kha_SystemImpl.getKeyboard(num);
	}
	static disableSystemInterventions(behavior) {
		kha_input_Keyboard.keyBehavior = behavior;
	}
}
$hxClasses["kha.input.Keyboard"] = $hx_exports["kha"]["input"]["Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = "kha.input.Keyboard";
kha_input_Keyboard.__super__ = kha_netsync_Controller;
Object.assign(kha_input_Keyboard.prototype, {
	__class__: kha_input_Keyboard
	,downListeners: null
	,upListeners: null
	,pressListeners: null
});
var kha_input_MouseEventBlockBehavior = $hxEnums["kha.input.MouseEventBlockBehavior"] = { __ename__:true,__constructs__:null
	,Full: {_hx_name:"Full",_hx_index:0,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,None: {_hx_name:"None",_hx_index:1,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_MouseEventBlockBehavior.__constructs__ = [kha_input_MouseEventBlockBehavior.Full,kha_input_MouseEventBlockBehavior.None,kha_input_MouseEventBlockBehavior.Custom];
var kha_input_MouseCursor = $hxEnums["kha.input.MouseCursor"] = { __ename__:true,__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Pointer: {_hx_name:"Pointer",_hx_index:1,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Text: {_hx_name:"Text",_hx_index:2,__enum__:"kha.input.MouseCursor",toString:$estr}
	,EastWestResize: {_hx_name:"EastWestResize",_hx_index:3,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthSouthResize: {_hx_name:"NorthSouthResize",_hx_index:4,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthEastResize: {_hx_name:"NorthEastResize",_hx_index:5,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthEastResize: {_hx_name:"SouthEastResize",_hx_index:6,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthWestResize: {_hx_name:"NorthWestResize",_hx_index:7,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthWestResize: {_hx_name:"SouthWestResize",_hx_index:8,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grab: {_hx_name:"Grab",_hx_index:9,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grabbing: {_hx_name:"Grabbing",_hx_index:10,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NotAllowed: {_hx_name:"NotAllowed",_hx_index:11,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Wait: {_hx_name:"Wait",_hx_index:12,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Crosshair: {_hx_name:"Crosshair",_hx_index:13,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Custom: ($_=function(image) { return {_hx_index:14,image:image,__enum__:"kha.input.MouseCursor",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["image"],$_)
};
kha_input_MouseCursor.__constructs__ = [kha_input_MouseCursor.Default,kha_input_MouseCursor.Pointer,kha_input_MouseCursor.Text,kha_input_MouseCursor.EastWestResize,kha_input_MouseCursor.NorthSouthResize,kha_input_MouseCursor.NorthEastResize,kha_input_MouseCursor.SouthEastResize,kha_input_MouseCursor.NorthWestResize,kha_input_MouseCursor.SouthWestResize,kha_input_MouseCursor.Grab,kha_input_MouseCursor.Grabbing,kha_input_MouseCursor.NotAllowed,kha_input_MouseCursor.Wait,kha_input_MouseCursor.Crosshair,kha_input_MouseCursor.Custom];
class kha_input_Mouse extends kha_netsync_Controller {
	constructor() {
		super();
		kha_input_Mouse.instance = this;
	}
	notify(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	remove(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	notifyWindowed(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	removeWindowed(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 180, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 184, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 194, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 198, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 208, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 212, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	lock() {
	}
	unlock() {
	}
	canLock() {
		return false;
	}
	isLocked() {
		return false;
	}
	notifyOnLockChange(change,error) {
	}
	removeFromLockChange(change,error) {
	}
	hideSystemCursor() {
	}
	showSystemCursor() {
	}
	setSystemCursor(cursor) {
	}
	sendLeaveEvent(windowId) {
		if(this.windowLeaveListeners != null) {
			let _g = 0;
			let _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	sendDownEvent(windowId,button,x,y) {
		if(this.windowDownListeners != null) {
			let _g = 0;
			let _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	sendUpEvent(windowId,button,x,y) {
		if(this.windowUpListeners != null) {
			let _g = 0;
			let _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	sendMoveEvent(windowId,x,y,movementX,movementY) {
		if(this.windowMoveListeners != null) {
			let _g = 0;
			let _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	sendWheelEvent(windowId,delta) {
		if(this.windowWheelListeners != null) {
			let _g = 0;
			let _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	_receive(bytes) {
	}
	static get(num) {
		if(num == null) {
			num = 0;
		}
		return kha_SystemImpl.getMouse(num);
	}
	static setWheelEventBlockBehavior(behavior) {
		kha_input_Mouse.wheelEventBlockBehavior = behavior;
	}
}
$hxClasses["kha.input.Mouse"] = $hx_exports["kha"]["input"]["Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = "kha.input.Mouse";
kha_input_Mouse.__super__ = kha_netsync_Controller;
Object.assign(kha_input_Mouse.prototype, {
	__class__: kha_input_Mouse
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,windowLeaveListeners: null
});
class kha_input_MouseImpl extends kha_input_Mouse {
	constructor() {
		super();
	}
	lock() {
		kha_SystemImpl.lockMouse();
	}
	unlock() {
		kha_SystemImpl.unlockMouse();
	}
	canLock() {
		return kha_SystemImpl.canLockMouse();
	}
	isLocked() {
		return kha_SystemImpl.isMouseLocked();
	}
	notifyOnLockChange(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	removeFromLockChange(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	hideSystemCursor() {
		kha_SystemImpl.hideSystemCursor();
	}
	showSystemCursor() {
		kha_SystemImpl.showSystemCursor();
	}
	_receive(bytes) {
	}
}
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = "kha.input.MouseImpl";
kha_input_MouseImpl.__super__ = kha_input_Mouse;
Object.assign(kha_input_MouseImpl.prototype, {
	__class__: kha_input_MouseImpl
});
class kha_input_Pen {
	constructor() {
		kha_input_Pen.instance = this;
	}
	notify(downListener,upListener,moveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener);
	}
	notifyEraser(eraserDownListener,eraserUpListener,eraserMoveListener) {
		this.notifyEraserWindowed(0,eraserDownListener,eraserUpListener,eraserMoveListener);
	}
	remove(downListener,upListener,moveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener);
	}
	removeEraser(eraserDownListener,eraserUpListener,eraserMoveListener) {
		this.removeEraserWindowed(0,eraserDownListener,eraserUpListener,eraserMoveListener);
	}
	notifyWindowed(windowId,downListener,upListener,moveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
	}
	notifyEraserWindowed(windowId,eraserDownListener,eraserUpListener,eraserMoveListener) {
		if(eraserDownListener != null) {
			if(this.windowEraserDownListeners == null) {
				this.windowEraserDownListeners = [];
			}
			while(this.windowEraserDownListeners.length <= windowId) this.windowEraserDownListeners.push([]);
			this.windowEraserDownListeners[windowId].push(eraserDownListener);
		}
		if(eraserUpListener != null) {
			if(this.windowEraserUpListeners == null) {
				this.windowEraserUpListeners = [];
			}
			while(this.windowEraserUpListeners.length <= windowId) this.windowEraserUpListeners.push([]);
			this.windowEraserUpListeners[windowId].push(eraserUpListener);
		}
		if(eraserMoveListener != null) {
			if(this.windowEraserMoveListeners == null) {
				this.windowEraserMoveListeners = [];
			}
			while(this.windowEraserMoveListeners.length <= windowId) this.windowEraserMoveListeners.push([]);
			this.windowEraserMoveListeners[windowId].push(eraserMoveListener);
		}
	}
	removeWindowed(windowId,downListener,upListener,moveListener) {
		if(downListener != null && this.windowDownListeners != null) {
			if(windowId < this.windowDownListeners.length) {
				HxOverrides.remove(this.windowDownListeners[windowId],downListener);
			}
		}
		if(upListener != null && this.windowUpListeners != null) {
			if(windowId < this.windowUpListeners.length) {
				HxOverrides.remove(this.windowUpListeners[windowId],upListener);
			}
		}
		if(moveListener != null && this.windowMoveListeners != null) {
			if(windowId < this.windowMoveListeners.length) {
				HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
			}
		}
	}
	removeEraserWindowed(windowId,eraserDownListener,eraserUpListener,eraserMoveListener) {
		if(eraserDownListener != null && this.windowEraserDownListeners != null) {
			if(windowId < this.windowEraserDownListeners.length) {
				HxOverrides.remove(this.windowEraserDownListeners[windowId],eraserDownListener);
			}
		}
		if(eraserUpListener != null && this.windowEraserUpListeners != null) {
			if(windowId < this.windowEraserUpListeners.length) {
				HxOverrides.remove(this.windowEraserUpListeners[windowId],eraserUpListener);
			}
		}
		if(eraserMoveListener != null && this.windowEraserMoveListeners != null) {
			if(windowId < this.windowEraserMoveListeners.length) {
				HxOverrides.remove(this.windowEraserMoveListeners[windowId],eraserMoveListener);
			}
		}
	}
	sendDownEvent(windowId,x,y,pressure) {
		if(this.windowDownListeners != null) {
			let _g = 0;
			let _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	sendUpEvent(windowId,x,y,pressure) {
		if(this.windowUpListeners != null) {
			let _g = 0;
			let _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	sendMoveEvent(windowId,x,y,pressure) {
		if(this.windowMoveListeners != null) {
			let _g = 0;
			let _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	sendEraserDownEvent(windowId,x,y,pressure) {
		if(this.windowEraserDownListeners != null) {
			let _g = 0;
			let _g1 = this.windowEraserDownListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	sendEraserUpEvent(windowId,x,y,pressure) {
		if(this.windowEraserUpListeners != null) {
			let _g = 0;
			let _g1 = this.windowEraserUpListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	sendEraserMoveEvent(windowId,x,y,pressure) {
		if(this.windowEraserMoveListeners != null) {
			let _g = 0;
			let _g1 = this.windowEraserMoveListeners[windowId];
			while(_g < _g1.length) {
				let listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	static get(num) {
		if(num == null) {
			num = 0;
		}
		return kha_SystemImpl.getPen(num);
	}
}
$hxClasses["kha.input.Pen"] = kha_input_Pen;
kha_input_Pen.__name__ = "kha.input.Pen";
Object.assign(kha_input_Pen.prototype, {
	__class__: kha_input_Pen
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowEraserDownListeners: null
	,windowEraserUpListeners: null
	,windowEraserMoveListeners: null
});
class kha_input_Sensor {
	notify(listener) {
	}
	static get(type) {
		return null;
	}
}
$hxClasses["kha.input.Sensor"] = kha_input_Sensor;
kha_input_Sensor.__name__ = "kha.input.Sensor";
Object.assign(kha_input_Sensor.prototype, {
	__class__: kha_input_Sensor
});
var kha_input_TouchDownEventBlockBehavior = $hxEnums["kha.input.TouchDownEventBlockBehavior"] = { __ename__:true,__constructs__:null
	,Full: {_hx_name:"Full",_hx_index:0,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,None: {_hx_name:"None",_hx_index:1,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_TouchDownEventBlockBehavior.__constructs__ = [kha_input_TouchDownEventBlockBehavior.Full,kha_input_TouchDownEventBlockBehavior.None,kha_input_TouchDownEventBlockBehavior.Custom];
class kha_input_Surface {
	constructor() {
		this.touchStartListeners = [];
		this.touchEndListeners = [];
		this.moveListeners = [];
		kha_input_Surface.instance = this;
	}
	notify(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	remove(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			HxOverrides.remove(this.moveListeners,moveListener);
		}
	}
	sendTouchStartEvent(index,x,y) {
		let _g = 0;
		let _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	sendTouchEndEvent(index,x,y) {
		let _g = 0;
		let _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	sendMoveEvent(index,x,y) {
		let _g = 0;
		let _g1 = this.moveListeners;
		while(_g < _g1.length) {
			let listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	static get(num) {
		if(num == null) {
			num = 0;
		}
		if(num != 0) {
			return null;
		}
		return kha_input_Surface.instance;
	}
	static setTouchDownEventBlockBehavior(behavior) {
		kha_input_Surface.touchDownEventBlockBehavior = behavior;
	}
}
$hxClasses["kha.input.Surface"] = $hx_exports["kha"]["input"]["Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = "kha.input.Surface";
Object.assign(kha_input_Surface.prototype, {
	__class__: kha_input_Surface
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
});
class kha_internal_BytesBlob {
	constructor(bytes) {
		this.bytes = bytes;
	}
	sub(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	get_length() {
		return this.bytes.length;
	}
	writeU8(position,value) {
		this.bytes.b[position] = value;
	}
	readU8(position) {
		let byte = this.bytes.b[position];
		++position;
		return byte;
	}
	readS8(position) {
		let byte = this.bytes.b[position];
		++position;
		let sign = (byte & 128) == 0 ? 1 : -1;
		byte &= 127;
		return sign * byte;
	}
	readU16BE(position) {
		let first = this.bytes.b[position];
		let second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	readU16LE(position) {
		let first = this.bytes.b[position];
		let second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	readU32LE(position) {
		let fourth = this.bytes.b[position];
		let third = this.bytes.b[position + 1];
		let second = this.bytes.b[position + 2];
		let first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	readU32BE(position) {
		let fourth = this.bytes.b[position];
		let third = this.bytes.b[position + 1];
		let second = this.bytes.b[position + 2];
		let first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	readS16BE(position) {
		let first = this.bytes.b[position];
		let second = this.bytes.b[position + 1];
		position += 2;
		let sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	readS16LE(position) {
		let first = this.bytes.b[position];
		let second = this.bytes.b[position + 1];
		let sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	readS32LE(position) {
		let fourth = this.bytes.b[position];
		let third = this.bytes.b[position + 1];
		let second = this.bytes.b[position + 2];
		let first = this.bytes.b[position + 3];
		let sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	readS32BE(position) {
		let fourth = this.bytes.b[position];
		let third = this.bytes.b[position + 1];
		let second = this.bytes.b[position + 2];
		let first = this.bytes.b[position + 3];
		let sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	readF32LE(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	readF32BE(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	toString() {
		return this.bytes.toString();
	}
	readUtf8String() {
		return this.bytes.toString();
	}
	toBytes() {
		return this.bytes;
	}
	unload() {
		this.bytes = null;
	}
	static fromBytes(bytes) {
		return new kha_internal_BytesBlob(bytes);
	}
	static alloc(size) {
		return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
	}
	static readF32(i) {
		let sign = (i & -2147483648) == 0 ? 1 : -1;
		let exp = i >> 23 & 255;
		let man = i & 8388607;
		switch(exp) {
		case 0:
			return 0.0;
		case 255:
			if(man != 0) {
				return NaN;
			} else if(sign > 0) {
				return Infinity;
			} else {
				return -Infinity;
			}
			break;
		default:
			return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
		}
	}
	static bit(value,position) {
		let b = (value >>> position & 1) == 1;
		if(b) {
			let a = 3;
			++a;
			return true;
		} else {
			let c = 4;
			--c;
			return false;
		}
	}
	static toText(chars,length) {
		let value = "";
		let _g = 0;
		let _g1 = length;
		while(_g < _g1) {
			let i = _g++;
			value += String.fromCodePoint(chars[i]);
		}
		return value;
	}
}
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = "kha.internal.BytesBlob";
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
Object.assign(kha_internal_BytesBlob.prototype, {
	__class__: kha_internal_BytesBlob
	,bytes: null
	,length: null
	,__properties__: {get_length: "get_length"}
});
class kha_krom_Graphics {
	constructor(renderTarget) {
		this.renderTarget = renderTarget;
	}
	begin(additionalRenderTargets) {
		Krom.begin(this.renderTarget,additionalRenderTargets);
	}
	beginFace(face) {
		Krom.beginFace(this.renderTarget,face);
	}
	beginEye(eye) {
	}
	end() {
		Krom.end();
	}
	flush() {
	}
	vsynced() {
		return true;
	}
	refreshRate() {
		return 60;
	}
	clear(color,depth,stencil) {
		let flags = 0;
		if(color != null) {
			flags |= 1;
		}
		if(depth != null) {
			flags |= 2;
		}
		if(stencil != null) {
			flags |= 4;
		}
		Krom.clear(flags,color == null ? 0 : color,depth,stencil);
	}
	viewport(x,y,width,height) {
		Krom.viewport(x,y,width,height);
	}
	setVertexBuffer(vertexBuffer) {
		vertexBuffer.set(0);
	}
	setVertexBuffers(vertexBuffers) {
		Krom.setVertexBuffers(vertexBuffers);
	}
	setIndexBuffer(indexBuffer) {
		indexBuffer.set();
	}
	setCubeMap(unit,cubeMap) {
		if(cubeMap == null) {
			return;
		}
		if(cubeMap.texture_ != null) {
			Krom.setTexture(unit,cubeMap.texture_);
		} else {
			Krom.setRenderTarget(unit,cubeMap.renderTarget_);
		}
	}
	setCubeMapDepth(unit,cubeMap) {
		if(cubeMap == null) {
			return;
		}
		Krom.setTextureDepth(unit,cubeMap.renderTarget_);
	}
	setTexture(unit,texture) {
		if(texture == null) {
			return;
		}
		if(texture.texture_ != null) {
			Krom.setTexture(unit,texture.texture_);
		} else {
			Krom.setRenderTarget(unit,texture.renderTarget_);
		}
	}
	setTextureDepth(unit,texture) {
		if(texture == null) {
			return;
		}
		Krom.setTextureDepth(unit,texture.renderTarget_);
	}
	setTextureArray(unit,texture) {
	}
	setVideoTexture(unit,texture) {
	}
	setImageTexture(unit,texture) {
		if(texture == null) {
			return;
		}
		Krom.setImageTexture(unit,texture.texture_);
	}
	setTextureParameters(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		Krom.setTextureParameters(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter);
	}
	setTexture3DParameters(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		Krom.setTexture3DParameters(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter);
	}
	setTextureCompareMode(texunit,enabled) {
		Krom.setTextureCompareMode(texunit,enabled);
	}
	setCubeMapCompareMode(texunit,enabled) {
		Krom.setCubeMapCompareMode(texunit,enabled);
	}
	maxBoundTextures() {
		return 8;
	}
	setPipeline(pipeline) {
		pipeline.set();
	}
	setStencilReferenceValue(value) {
	}
	setBool(location,value) {
		Krom.setBool(location,value);
	}
	setInt(location,value) {
		Krom.setInt(location,value);
	}
	setInt2(location,value1,value2) {
	}
	setInt3(location,value1,value2,value3) {
	}
	setInt4(location,value1,value2,value3,value4) {
	}
	setInts(location,values) {
	}
	setFloat(location,value) {
		Krom.setFloat(location,value);
	}
	setFloat2(location,value1,value2) {
		Krom.setFloat2(location,value1,value2);
	}
	setFloat3(location,value1,value2,value3) {
		Krom.setFloat3(location,value1,value2,value3);
	}
	setFloat4(location,value1,value2,value3,value4) {
		Krom.setFloat4(location,value1,value2,value3,value4);
	}
	setFloats(location,values) {
		Krom.setFloats(location,values.buffer);
	}
	setVector2(location,value) {
		Krom.setFloat2(location,value.x,value.y);
	}
	setVector3(location,value) {
		Krom.setFloat3(location,value.x,value.y,value.z);
	}
	setVector4(location,value) {
		Krom.setFloat4(location,value.x,value.y,value.z,value.w);
	}
	setMatrix(location,matrix) {
		let v = matrix._00;
		kha_krom_Graphics.mat.setFloat32(0,v,true);
		let v1 = matrix._01;
		kha_krom_Graphics.mat.setFloat32(4,v1,true);
		let v2 = matrix._02;
		kha_krom_Graphics.mat.setFloat32(8,v2,true);
		let v3 = matrix._03;
		kha_krom_Graphics.mat.setFloat32(12,v3,true);
		let v4 = matrix._10;
		kha_krom_Graphics.mat.setFloat32(16,v4,true);
		let v5 = matrix._11;
		kha_krom_Graphics.mat.setFloat32(20,v5,true);
		let v6 = matrix._12;
		kha_krom_Graphics.mat.setFloat32(24,v6,true);
		let v7 = matrix._13;
		kha_krom_Graphics.mat.setFloat32(28,v7,true);
		let v8 = matrix._20;
		kha_krom_Graphics.mat.setFloat32(32,v8,true);
		let v9 = matrix._21;
		kha_krom_Graphics.mat.setFloat32(36,v9,true);
		let v10 = matrix._22;
		kha_krom_Graphics.mat.setFloat32(40,v10,true);
		let v11 = matrix._23;
		kha_krom_Graphics.mat.setFloat32(44,v11,true);
		let v12 = matrix._30;
		kha_krom_Graphics.mat.setFloat32(48,v12,true);
		let v13 = matrix._31;
		kha_krom_Graphics.mat.setFloat32(52,v13,true);
		let v14 = matrix._32;
		kha_krom_Graphics.mat.setFloat32(56,v14,true);
		let v15 = matrix._33;
		kha_krom_Graphics.mat.setFloat32(60,v15,true);
		Krom.setMatrix(location,kha_krom_Graphics.mat.buffer);
	}
	setMatrix3(location,matrix) {
		let v = matrix._00;
		kha_krom_Graphics.mat.setFloat32(0,v,true);
		let v1 = matrix._01;
		kha_krom_Graphics.mat.setFloat32(4,v1,true);
		let v2 = matrix._02;
		kha_krom_Graphics.mat.setFloat32(8,v2,true);
		let v3 = matrix._10;
		kha_krom_Graphics.mat.setFloat32(12,v3,true);
		let v4 = matrix._11;
		kha_krom_Graphics.mat.setFloat32(16,v4,true);
		let v5 = matrix._12;
		kha_krom_Graphics.mat.setFloat32(20,v5,true);
		let v6 = matrix._20;
		kha_krom_Graphics.mat.setFloat32(24,v6,true);
		let v7 = matrix._21;
		kha_krom_Graphics.mat.setFloat32(28,v7,true);
		let v8 = matrix._22;
		kha_krom_Graphics.mat.setFloat32(32,v8,true);
		Krom.setMatrix3(location,kha_krom_Graphics.mat.buffer);
	}
	drawIndexedVertices(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		Krom.drawIndexedVertices(start,count);
	}
	drawIndexedVerticesInstanced(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		Krom.drawIndexedVerticesInstanced(instanceCount,start,count);
	}
	instancedRenderingAvailable() {
		return true;
	}
	scissor(x,y,width,height) {
		Krom.scissor(x,y,width,height);
	}
	disableScissor() {
		Krom.disableScissor();
	}
}
$hxClasses["kha.krom.Graphics"] = kha_krom_Graphics;
kha_krom_Graphics.__name__ = "kha.krom.Graphics";
kha_krom_Graphics.__interfaces__ = [kha_graphics4_Graphics];
Object.assign(kha_krom_Graphics.prototype, {
	__class__: kha_krom_Graphics
	,renderTarget: null
});
class kha_krom_Sound extends kha_Sound {
	constructor(bytes) {
		super();
		this.sampleRate = 44100;
		let count = bytes.length / 4 | 0;
		this.uncompressedData = kha_arrays_Float32Array._new(count);
		let _g = 0;
		let _g1 = count;
		while(_g < _g1) {
			let i = _g++;
			let this1 = this.uncompressedData;
			let v = bytes.getFloat(i * 4);
			this1.setFloat32(i * 4,v,true);
		}
		this.compressedData = null;
	}
	uncompress(done) {
		done();
	}
	unload() {
		super.unload();
	}
}
$hxClasses["kha.krom.Sound"] = kha_krom_Sound;
kha_krom_Sound.__name__ = "kha.krom.Sound";
kha_krom_Sound.__super__ = kha_Sound;
Object.assign(kha_krom_Sound.prototype, {
	__class__: kha_krom_Sound
});
class kha_math_FastVector2 {
	constructor(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	toString() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
	static fromVector2(v) {
		return new kha_math_FastVector2(v.x,v.y);
	}
}
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = "kha.math.FastVector2";
Object.assign(kha_math_FastVector2.prototype, {
	__class__: kha_math_FastVector2
	,x: null
	,y: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_math_FastVector3 {
	constructor(x,y,z) {
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	toString() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	static fromVector3(v) {
		return new kha_math_FastVector3(v.x,v.y,v.z);
	}
}
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = "kha.math.FastVector3";
Object.assign(kha_math_FastVector3.prototype, {
	__class__: kha_math_FastVector3
	,x: null
	,y: null
	,z: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_math_FastVector4 {
	constructor(x,y,z,w) {
		if(w == null) {
			w = 1;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	toString() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	static fromVector4(v) {
		return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
	}
}
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = "kha.math.FastVector4";
Object.assign(kha_math_FastVector4.prototype, {
	__class__: kha_math_FastVector4
	,x: null
	,y: null
	,z: null
	,w: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_math_Matrix3 {
	constructor(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
		this._00 = _00;
		this._10 = _10;
		this._20 = _20;
		this._01 = _01;
		this._11 = _11;
		this._21 = _21;
		this._02 = _02;
		this._12 = _12;
		this._22 = _22;
	}
	static fromFastMatrix3(m) {
		return new kha_math_Matrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
	}
}
$hxClasses["kha.math.Matrix3"] = kha_math_Matrix3;
kha_math_Matrix3.__name__ = "kha.math.Matrix3";
Object.assign(kha_math_Matrix3.prototype, {
	__class__: kha_math_Matrix3
	,_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
});
class kha_math_Matrix4 {
	constructor(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
		this._00 = _00;
		this._10 = _10;
		this._20 = _20;
		this._30 = _30;
		this._01 = _01;
		this._11 = _11;
		this._21 = _21;
		this._31 = _31;
		this._02 = _02;
		this._12 = _12;
		this._22 = _22;
		this._32 = _32;
		this._03 = _03;
		this._13 = _13;
		this._23 = _23;
		this._33 = _33;
	}
	static fromFastMatrix4(m) {
		return new kha_math_Matrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
	}
	static orthogonalProjection(left,right,bottom,top,zn,zf) {
		let tx = -(right + left) / (right - left);
		let ty = -(top + bottom) / (top - bottom);
		let tz = -(zf + zn) / (zf - zn);
		return new kha_math_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
	}
	static perspectiveProjection(fovY,aspect,zn,zf) {
		let uh = 1.0 / Math.tan(fovY / 2);
		let uw = uh / aspect;
		return new kha_math_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	}
	static lookAt(eye,at,up) {
		let x = at.x - eye.x;
		let y = at.y - eye.y;
		let z = at.z - eye.z;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		let _this_x = x;
		let _this_y = y;
		let _this_z = z;
		let x1 = _this_x;
		let y1 = _this_y;
		let z1 = _this_z;
		if(z1 == null) {
			z1 = 0;
		}
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		let zaxis_x = x1;
		let zaxis_y = y1;
		let zaxis_z = z1;
		let currentLength = Math.sqrt(zaxis_x * zaxis_x + zaxis_y * zaxis_y + zaxis_z * zaxis_z);
		if(currentLength != 0) {
			let mul = 1 / currentLength;
			zaxis_x *= mul;
			zaxis_y *= mul;
			zaxis_z *= mul;
		}
		let _x = zaxis_y * up.z - zaxis_z * up.y;
		let _y = zaxis_z * up.x - zaxis_x * up.z;
		let _z = zaxis_x * up.y - zaxis_y * up.x;
		let x2 = _x;
		let y2 = _y;
		let z2 = _z;
		if(z2 == null) {
			z2 = 0;
		}
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		let _this_x1 = x2;
		let _this_y1 = y2;
		let _this_z1 = z2;
		let x3 = _this_x1;
		let y3 = _this_y1;
		let z3 = _this_z1;
		if(z3 == null) {
			z3 = 0;
		}
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		let xaxis_x = x3;
		let xaxis_y = y3;
		let xaxis_z = z3;
		let currentLength1 = Math.sqrt(xaxis_x * xaxis_x + xaxis_y * xaxis_y + xaxis_z * xaxis_z);
		if(currentLength1 != 0) {
			let mul = 1 / currentLength1;
			xaxis_x *= mul;
			xaxis_y *= mul;
			xaxis_z *= mul;
		}
		let _x1 = xaxis_y * zaxis_z - xaxis_z * zaxis_y;
		let _y1 = xaxis_z * zaxis_x - xaxis_x * zaxis_z;
		let _z1 = xaxis_x * zaxis_y - xaxis_y * zaxis_x;
		let x4 = _x1;
		let y4 = _y1;
		let z4 = _z1;
		if(z4 == null) {
			z4 = 0;
		}
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		let yaxis_x = x4;
		let yaxis_y = y4;
		let yaxis_z = z4;
		return new kha_math_Matrix4(xaxis_x,xaxis_y,xaxis_z,-(xaxis_x * eye.x + xaxis_y * eye.y + xaxis_z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis_x,-zaxis_y,-zaxis_z,zaxis_x * eye.x + zaxis_y * eye.y + zaxis_z * eye.z,0,0,0,1);
	}
}
$hxClasses["kha.math.Matrix4"] = kha_math_Matrix4;
kha_math_Matrix4.__name__ = "kha.math.Matrix4";
Object.assign(kha_math_Matrix4.prototype, {
	__class__: kha_math_Matrix4
	,_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
});
class kha_math_Vector2 {
	constructor(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
}
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = "kha.math.Vector2";
Object.assign(kha_math_Vector2.prototype, {
	__class__: kha_math_Vector2
	,x: null
	,y: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_math_Vector3 {
	constructor(x,y,z) {
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
}
$hxClasses["kha.math.Vector3"] = kha_math_Vector3;
kha_math_Vector3.__name__ = "kha.math.Vector3";
Object.assign(kha_math_Vector3.prototype, {
	__class__: kha_math_Vector3
	,x: null
	,y: null
	,z: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_math_Vector4 {
	constructor(x,y,z,w) {
		if(w == null) {
			w = 1;
		}
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	get_length() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	set_length(length) {
		let currentLength = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(currentLength == 0) {
			return 0;
		}
		let mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
}
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = "kha.math.Vector4";
Object.assign(kha_math_Vector4.prototype, {
	__class__: kha_math_Vector4
	,x: null
	,y: null
	,z: null
	,w: null
	,__properties__: {set_length: "set_length",get_length: "get_length"}
});
class kha_netsync_Client {
}
$hxClasses["kha.netsync.Client"] = kha_netsync_Client;
kha_netsync_Client.__name__ = "kha.netsync.Client";
kha_netsync_Client.__isInterface__ = true;
Object.assign(kha_netsync_Client.prototype, {
	__class__: kha_netsync_Client
	,get_id: null
	,id: null
	,send: null
	,receive: null
	,onClose: null
	,__properties__: {get_id: "get_id"}
});
class kha_netsync_ControllerBuilder {
}
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = "kha.netsync.ControllerBuilder";
class kha_netsync_Entity {
}
$hxClasses["kha.netsync.Entity"] = kha_netsync_Entity;
kha_netsync_Entity.__name__ = "kha.netsync.Entity";
kha_netsync_Entity.__isInterface__ = true;
Object.assign(kha_netsync_Entity.prototype, {
	__class__: kha_netsync_Entity
	,_id: null
	,_size: null
	,_send: null
	,_receive: null
});
class kha_netsync_LocalClient {
	constructor(id) {
		this.myId = id;
	}
	send(bytes,mandatory) {
	}
	receive(receiver) {
	}
	onClose(close) {
	}
	get_controllers() {
		return null;
	}
	get_id() {
		return this.myId;
	}
}
$hxClasses["kha.netsync.LocalClient"] = kha_netsync_LocalClient;
kha_netsync_LocalClient.__name__ = "kha.netsync.LocalClient";
kha_netsync_LocalClient.__interfaces__ = [kha_netsync_Client];
Object.assign(kha_netsync_LocalClient.prototype, {
	__class__: kha_netsync_LocalClient
	,myId: null
	,controllers: null
	,id: null
	,__properties__: {get_id: "get_id",get_controllers: "get_controllers"}
});
class kha_netsync_State {
	constructor(time,data) {
		this.time = time;
		this.data = data;
	}
}
$hxClasses["kha.netsync.State"] = kha_netsync_State;
kha_netsync_State.__name__ = "kha.netsync.State";
Object.assign(kha_netsync_State.prototype, {
	__class__: kha_netsync_State
	,time: null
	,data: null
});
class kha_netsync_Session {
	constructor(maxPlayers,address,port) {
		this.ping = 1;
		this.currentPlayers = 0;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		kha_netsync_Session.instance = this;
		this.maxPlayers = maxPlayers;
		this.address = address;
		this.port = port;
	}
	get_me() {
		return this.localClient;
	}
	addEntity(entity) {
		let this1 = this.entities;
		let key = entity._id();
		this1.h[key] = entity;
	}
	addController(controller) {
		haxe_Log.trace("Adding controller id " + controller._id(),{ fileName : "kha/netsync/Session.hx", lineNumber : 95, className : "kha.netsync.Session", methodName : "addController"});
		controller._inputBufferIndex = 0;
		let this1 = this.controllers;
		let key = controller._id();
		this1.h[key] = controller;
	}
	sendControllerUpdate(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				let newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	sendPing() {
		let bytes = new haxe_io_Bytes(new ArrayBuffer(5));
		bytes.b[0] = 4;
		bytes.setFloat(1,kha_Scheduler.realTime());
		this.sendToServer(bytes);
	}
	sendPlayerUpdate() {
	}
	receive(bytes,client) {
		switch(bytes.b[0]) {
		case 0:
			let index = bytes.b[1];
			this.localClient = new kha_netsync_LocalClient(index);
			kha_Scheduler.resetTime();
			this.startCallback();
			break;
		case 1:
			let time = bytes.getDouble(1);
			let offset = 9;
			let entity = this.entities.iterator();
			while(entity.hasNext()) {
				let entity1 = entity.next();
				entity1._receive(offset,bytes);
				offset += entity1._size();
			}
			kha_Scheduler.warp(time);
			break;
		case 3:
			switch(bytes.b[1]) {
			case 0:
				break;
			case 1:
				this.executeRPC(bytes);
				break;
			}
			break;
		case 4:
			let sendTime = bytes.getFloat(1);
			this.ping = kha_Scheduler.realTime() - sendTime;
			break;
		case 5:
			this.refusedCallback();
			break;
		case 6:
			this.currentPlayers = bytes.getInt32(1);
			break;
		}
	}
	executeRPC(bytes) {
		let args = [];
		let syncId = bytes.getInt32(2);
		let index = 6;
		let classnamelength = bytes.getUInt16(index);
		index += 2;
		let classname = "";
		let _g = 0;
		let _g1 = classnamelength;
		while(_g < _g1) {
			let i = _g++;
			let code = bytes.b[index];
			classname += String.fromCodePoint(code);
			++index;
		}
		let methodnamelength = bytes.getUInt16(index);
		index += 2;
		let methodname = "";
		let _g2 = 0;
		let _g3 = methodnamelength;
		while(_g2 < _g3) {
			let i = _g2++;
			let code = bytes.b[index];
			methodname += String.fromCodePoint(code);
			++index;
		}
		while(index < bytes.length) {
			let type = bytes.b[index];
			++index;
			switch(type) {
			case 66:
				let value = bytes.b[index] == 1;
				++index;
				haxe_Log.trace("Bool: " + (value == null ? "null" : "" + value),{ fileName : "kha/netsync/Session.hx", lineNumber : 299, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value);
				break;
			case 70:
				let value1 = bytes.getDouble(index);
				index += 8;
				haxe_Log.trace("Float: " + value1,{ fileName : "kha/netsync/Session.hx", lineNumber : 304, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value1);
				break;
			case 73:
				let value2 = bytes.getInt32(index);
				index += 4;
				haxe_Log.trace("Int: " + value2,{ fileName : "kha/netsync/Session.hx", lineNumber : 309, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(value2);
				break;
			case 83:
				let length = bytes.getUInt16(index);
				index += 2;
				let str = "";
				let _g = 0;
				let _g1 = length;
				while(_g < _g1) {
					let i = _g++;
					let code = bytes.b[index];
					str += String.fromCodePoint(code);
					++index;
				}
				haxe_Log.trace("String: " + str,{ fileName : "kha/netsync/Session.hx", lineNumber : 319, className : "kha.netsync.Session", methodName : "executeRPC"});
				args.push(str);
				break;
			default:
				haxe_Log.trace("Unknown argument type.",{ fileName : "kha/netsync/Session.hx", lineNumber : 322, className : "kha.netsync.Session", methodName : "executeRPC"});
			}
		}
		if(syncId == -1) {
			Reflect.field($hxClasses[classname],methodname + "_remotely").apply(null,args);
		} else {
			Reflect.field(kha_netsync_SyncBuilder.objects[syncId],methodname + "_remotely").apply(kha_netsync_SyncBuilder.objects[syncId],args);
		}
	}
	waitForStart(callback,refuseCallback,errorCallback,closeCallback,resCallback) {
		this.startCallback = callback;
		this.refusedCallback = refuseCallback;
		this.resetCallback = resCallback;
		let _gthis = this;
		this.network = new kha.netsync.Network(this.address,this.port,errorCallback,function() {
			closeCallback();
			_gthis.reset();
		});
		this.network.listen(function(bytes) {
			_gthis.receive(bytes);
		});
		this.updateTaskId = kha_Scheduler.addFrameTask($bind(this,this.update),0);
		this.ping = 1;
		this.pingTaskId = kha_Scheduler.addTimeTask($bind(this,this.sendPing),0,1);
	}
	reset() {
		kha_Scheduler.removeFrameTask(this.updateTaskId);
		kha_Scheduler.removeTimeTask(this.pingTaskId);
		this.currentPlayers = 0;
		this.ping = 1;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		this.resetCallback();
	}
	update() {
		let controller = this.controllers.iterator();
		while(controller.hasNext()) {
			let controller1 = controller.next();
			if(controller1._inputBufferIndex > 0) {
				let bytes = new haxe_io_Bytes(new ArrayBuffer(22 + controller1._inputBufferIndex));
				bytes.b[0] = 2;
				bytes.setInt32(1,controller1._id());
				bytes.setDouble(5,kha_Scheduler.time());
				bytes.setInt32(13,kha_System.windowWidth(0));
				bytes.setInt32(17,kha_System.windowHeight(0));
				bytes.b[21] = 0;
				bytes.blit(22,controller1._inputBuffer,0,controller1._inputBufferIndex);
				this.sendToServer(bytes);
				controller1._inputBufferIndex = 0;
			}
		}
	}
	sendToServer(bytes) {
		this.network.send(bytes,false);
	}
	static the() {
		return kha_netsync_Session.instance;
	}
}
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = "kha.netsync.Session";
Object.assign(kha_netsync_Session.prototype, {
	__class__: kha_netsync_Session
	,entities: null
	,controllers: null
	,maxPlayers: null
	,currentPlayers: null
	,ping: null
	,address: null
	,port: null
	,startCallback: null
	,refusedCallback: null
	,resetCallback: null
	,localClient: null
	,network: null
	,updateTaskId: null
	,pingTaskId: null
	,me: null
	,__properties__: {get_me: "get_me"}
});
class kha_netsync_SyncBuilder {
}
$hxClasses["kha.netsync.SyncBuilder"] = kha_netsync_SyncBuilder;
kha_netsync_SyncBuilder.__name__ = "kha.netsync.SyncBuilder";
class kha_simd_Float32x4 {
	constructor(_0,_1,_2,_3) {
		this._0 = _0;
		this._1 = _1;
		this._2 = _2;
		this._3 = _3;
	}
	static create() {
		return new kha_simd_Float32x4(0,0,0,0);
	}
	static loadAllFast(t) {
		return new kha_simd_Float32x4(t,t,t,t);
	}
	static load(a,b,c,d) {
		return new kha_simd_Float32x4(a,b,c,d);
	}
	static loadFast(a,b,c,d) {
		return new kha_simd_Float32x4(a,b,c,d);
	}
	static get(t,index) {
		let value = 0;
		switch(index) {
		case 0:
			value = t._0;
			break;
		case 1:
			value = t._1;
			break;
		case 2:
			value = t._2;
			break;
		case 3:
			value = t._3;
			break;
		}
		return value;
	}
	static getFast(t,index) {
		let value = 0;
		switch(index) {
		case 0:
			value = t._0;
			break;
		case 1:
			value = t._1;
			break;
		case 2:
			value = t._2;
			break;
		case 3:
			value = t._3;
			break;
		}
		return value;
	}
	static abs(t) {
		return new kha_simd_Float32x4(Math.abs(t._0),Math.abs(t._1),Math.abs(t._2),Math.abs(t._3));
	}
	static add(a,b) {
		return new kha_simd_Float32x4(a._0 + b._0,a._1 + b._1,a._2 + b._2,a._3 + b._3);
	}
	static div(a,b) {
		return new kha_simd_Float32x4(a._0 / b._0,a._1 / b._1,a._2 / b._2,a._3 / b._3);
	}
	static mul(a,b) {
		return new kha_simd_Float32x4(a._0 * b._0,a._1 * b._1,a._2 * b._2,a._3 * b._3);
	}
	static neg(t) {
		return new kha_simd_Float32x4(-t._0,-t._1,-t._2,-t._3);
	}
	static reciprocalApproximation(t) {
		return new kha_simd_Float32x4(0,0,0,0);
	}
	static reciprocalSqrtApproximation(t) {
		return new kha_simd_Float32x4(0,0,0,0);
	}
	static sub(a,b) {
		return new kha_simd_Float32x4(a._0 - b._0,a._1 - b._1,a._2 - b._2,a._3 - b._3);
	}
	static sqrt(t) {
		return new kha_simd_Float32x4(Math.sqrt(t._0),Math.sqrt(t._1),Math.sqrt(t._2),Math.sqrt(t._3));
	}
}
$hxClasses["kha.simd.Float32x4"] = kha_simd_Float32x4;
kha_simd_Float32x4.__name__ = "kha.simd.Float32x4";
Object.assign(kha_simd_Float32x4.prototype, {
	__class__: kha_simd_Float32x4
	,_0: null
	,_1: null
	,_2: null
	,_3: null
});
class zui_Ext {
	static floatInput(ui,handle,label,align,precision) {
		if(precision == null) {
			precision = 1000.0;
		}
		if(align == null) {
			align = 0;
		}
		if(label == null) {
			label = "";
		}
		handle.text = Std.string(Math.round(handle.value * precision) / precision);
		let text = ui.textInput(handle,label,align);
		handle.value = parseFloat(text);
		return handle.value;
	}
	static initPath(handle,systemId) {
		handle.text = systemId == "Windows" ? "C:\\Users" : "/";
	}
	static fileBrowser(ui,handle,foldersOnly) {
		if(foldersOnly == null) {
			foldersOnly = false;
		}
		let sep = "/";
		let cmd = "ls ";
		let systemId = kha_System.get_systemId();
		if(systemId == "Windows") {
			cmd = "dir /b ";
			if(foldersOnly) {
				cmd += "/ad ";
			}
			sep = "\\";
			handle.text = StringTools.replace(handle.text,"\\\\","\\");
			handle.text = StringTools.replace(handle.text,"\r","");
		}
		if(handle.text == "") {
			zui_Ext.initPath(handle,systemId);
		}
		let save = Krom.getFilesLocation() + sep + zui_Ext.dataPath + "dir.txt";
		if(handle.text != zui_Ext.lastPath) {
			Krom.sysCommand(cmd + "\"" + handle.text + "\"" + " > " + "\"" + save + "\"");
		}
		zui_Ext.lastPath = handle.text;
		let str = haxe_io_Bytes.ofData(Krom.loadBlob(save)).toString();
		let files = str.split("\n");
		let i1 = handle.text.indexOf("/");
		let i2 = handle.text.indexOf("\\");
		let nested = i1 > -1 && handle.text.length - 1 > i1 || i2 > -1 && handle.text.length - 1 > i2;
		handle.changed = false;
		if(nested && ui.button("..",0)) {
			handle.changed = ui.changed = true;
			handle.text = handle.text.substring(0,handle.text.lastIndexOf(sep));
			if(handle.text.length == 2 && handle.text.charAt(1) == ":") {
				handle.text += sep;
			}
		}
		let _g = 0;
		while(_g < files.length) {
			let f = files[_g];
			++_g;
			if(f == "" || f.charAt(0) == ".") {
				continue;
			}
			if(ui.button(f,0)) {
				handle.changed = ui.changed = true;
				if(handle.text.charAt(handle.text.length - 1) != sep) {
					handle.text += sep;
				}
				handle.text += f;
			}
		}
		return handle.text;
	}
	static inlineRadio(ui,handle,texts,align) {
		if(align == null) {
			align = 0;
		}
		if(!ui.isVisible(ui.t.ELEMENT_H * ui.ops.scaleFactor)) {
			ui.endElement();
			return handle.position;
		}
		let step = ui._w / texts.length;
		let hovered = -1;
		if(ui.getHover()) {
			let ix = ui.inputX - ui._x - ui._windowX | 0;
			let _g = 0;
			let _g1 = texts.length;
			while(_g < _g1) {
				let i = _g++;
				if(ix < i * step + step) {
					hovered = i;
					break;
				}
			}
		}
		if(ui.getReleased()) {
			handle.position = hovered;
			handle.changed = ui.changed = true;
		} else {
			handle.changed = false;
		}
		let _g = 0;
		let _g1 = texts.length;
		while(_g < _g1) {
			let i = _g++;
			if(handle.position == i) {
				ui.g.set_color(ui.t.ACCENT_HOVER_COL);
				if(!ui.enabled) {
					ui.fadeColor();
				}
				ui.g.fillRect(ui._x + step * i,ui._y + ui.buttonOffsetY,step,ui.t.BUTTON_H * ui.ops.scaleFactor);
			} else if(hovered == i) {
				ui.g.set_color(ui.t.ACCENT_COL);
				if(!ui.enabled) {
					ui.fadeColor();
				}
				ui.g.drawRect(ui._x + step * i,ui._y + ui.buttonOffsetY,step,ui.t.BUTTON_H * ui.ops.scaleFactor);
			}
			ui.g.set_color(ui.t.TEXT_COL);
			ui._x += step * i;
			let _w = ui._w;
			ui._w = step | 0;
			ui.drawString(ui.g,texts[i],null,0,align);
			ui._x -= step * i;
			ui._w = _w;
		}
		ui.endElement();
		return handle.position;
	}
	static colorWheel(ui,handle,alpha,w,h,colorPreview,picker) {
		if(colorPreview == null) {
			colorPreview = true;
		}
		if(alpha == null) {
			alpha = false;
		}
		if(w == null) {
			w = ui._w;
		}
		zui_Ext.rgbToHsv(((handle.color & 16711680) >>> 16) * 0.00392156862745098,((handle.color & 65280) >>> 8) * 0.00392156862745098,(handle.color & 255) * 0.00392156862745098,zui_Ext.ar);
		let chue = zui_Ext.ar[0];
		let csat = zui_Ext.ar[1];
		let cval = zui_Ext.ar[2];
		let calpha = (handle.color >>> 24) * 0.00392156862745098;
		let px = ui._x;
		let py = ui._y;
		let scroll = ui.currentWindow != null && ui.currentWindow.scrollEnabled;
		if(!scroll) {
			w -= ui.t.SCROLL_W * ui.ops.scaleFactor | 0;
			px += (ui.t.SCROLL_W * ui.ops.scaleFactor | 0) / 2;
		}
		let _x = ui._x;
		let _y = ui._y;
		let _w = ui._w;
		ui._w = 28 * ui.ops.scaleFactor | 0;
		if(picker != null && ui.button("P")) {
			picker();
			ui.changed = false;
			handle.changed = false;
			return handle.color;
		}
		ui._x = _x;
		ui._y = _y;
		ui._w = _w;
		ui.image(ui.ops.color_wheel,kha_Color.fromFloats(cval,cval,cval));
		let ph = ui._y - py;
		let ox = px + w / 2;
		let oy = py + ph / 2;
		let cw = w * 0.7;
		let cwh = cw / 2;
		let cx = ox;
		let cy = oy + csat * cwh;
		let gradTx = px + 0.897 * w;
		let gradTy = oy - cwh;
		let gradW = 0.0777 * w;
		let gradH = cw;
		let theta = chue * (Math.PI * 2.0);
		let cx2 = Math.cos(theta) * (cx - ox) - Math.sin(theta) * (cy - oy) + ox;
		let cy2 = Math.sin(theta) * (cx - ox) + Math.cos(theta) * (cy - oy) + oy;
		cx = cx2;
		cy = cy2;
		ui._x = px - (scroll ? 0 : (ui.t.SCROLL_W * ui.ops.scaleFactor | 0) / 2);
		ui._y = py;
		ui.image(ui.ops.black_white_gradient);
		ui.g.set_color(-16777216);
		ui.g.fillRect(cx - 3 * ui.ops.scaleFactor,cy - 3 * ui.ops.scaleFactor,6 * ui.ops.scaleFactor,6 * ui.ops.scaleFactor);
		ui.g.set_color(-1);
		ui.g.fillRect(cx - 2 * ui.ops.scaleFactor,cy - 2 * ui.ops.scaleFactor,4 * ui.ops.scaleFactor,4 * ui.ops.scaleFactor);
		ui.g.set_color(-16777216);
		ui.g.fillRect(gradTx + gradW / 2 - 3 * ui.ops.scaleFactor,gradTy + (1 - cval) * gradH - 3 * ui.ops.scaleFactor,6 * ui.ops.scaleFactor,6 * ui.ops.scaleFactor);
		ui.g.set_color(-1);
		ui.g.fillRect(gradTx + gradW / 2 - 2 * ui.ops.scaleFactor,gradTy + (1 - cval) * gradH - 2 * ui.ops.scaleFactor,4 * ui.ops.scaleFactor,4 * ui.ops.scaleFactor);
		if(alpha) {
			let alphaHandle = handle.nest(1,{ value : Math.round(calpha * 100) / 100});
			calpha = ui.slider(alphaHandle,"Alpha",0.0,1.0,true);
			if(alphaHandle.changed) {
				handle.changed = ui.changed = true;
			}
		}
		let gx = ox + ui._windowX;
		let gy = oy + ui._windowY;
		if(ui.inputStarted && ui.getInputInRect(gx - cwh,gy - cwh,cw,cw)) {
			zui_Ext.wheelSelectedHandle = handle;
		}
		if(ui.inputReleased && zui_Ext.wheelSelectedHandle != null) {
			zui_Ext.wheelSelectedHandle = null;
			handle.changed = ui.changed = true;
		}
		if(ui.inputDown && zui_Ext.wheelSelectedHandle == handle) {
			let vx = gx - ui.inputX;
			let vy = gy - ui.inputY;
			csat = Math.min(Math.sqrt(vx * vx + vy * vy),cwh) / cwh;
			let angle = Math.atan2(ui.inputX - gx,ui.inputY - gy);
			if(angle < 0) {
				angle = Math.PI + (Math.PI - Math.abs(angle));
			}
			angle = Math.PI * 2 - angle;
			chue = angle / (Math.PI * 2);
			handle.changed = ui.changed = true;
		}
		if(ui.inputStarted && ui.getInputInRect(gradTx + ui._windowX,gradTy + ui._windowY,gradW,gradH)) {
			zui_Ext.gradientSelectedHandle = handle;
		}
		if(ui.inputReleased && zui_Ext.gradientSelectedHandle != null) {
			zui_Ext.gradientSelectedHandle = null;
			handle.changed = ui.changed = true;
		}
		if(ui.inputDown && zui_Ext.gradientSelectedHandle == handle) {
			cval = Math.max(0.01,Math.min(1,1 - (ui.inputY - gradTy - ui._windowY) / gradH));
			handle.changed = ui.changed = true;
		}
		zui_Ext.hsvToRgb(chue,csat,cval,zui_Ext.ar);
		handle.color = kha_Color.fromFloats(zui_Ext.ar[0],zui_Ext.ar[1],zui_Ext.ar[2],calpha);
		if(colorPreview) {
			ui.text("",2,handle.color);
		}
		let pos = zui_Ext.inlineRadio(ui,zui_Handle.global.nest(1,null),["RGB","HSV","Hex"]);
		let h0 = handle.nest(0).nest(0);
		let h1 = handle.nest(0).nest(1);
		let h2 = handle.nest(0).nest(2);
		if(pos == 0) {
			h0.value = ((handle.color & 16711680) >>> 16) * 0.00392156862745098;
			let f = ui.slider(h0,"R",0,1,true);
			handle.color = ((handle.color >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((handle.color & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((handle.color & 255) * 0.00392156862745098 * 255 | 0);
			h1.value = ((handle.color & 65280) >>> 8) * 0.00392156862745098;
			let f1 = ui.slider(h1,"G",0,1,true);
			handle.color = ((handle.color >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((handle.color & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f1 * 255 | 0) << 8 | ((handle.color & 255) * 0.00392156862745098 * 255 | 0);
			h2.value = (handle.color & 255) * 0.00392156862745098;
			let f2 = ui.slider(h2,"B",0,1,true);
			handle.color = ((handle.color >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((handle.color & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((handle.color & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f2 * 255 | 0);
		} else if(pos == 1) {
			zui_Ext.rgbToHsv(((handle.color & 16711680) >>> 16) * 0.00392156862745098,((handle.color & 65280) >>> 8) * 0.00392156862745098,(handle.color & 255) * 0.00392156862745098,zui_Ext.ar);
			h0.value = zui_Ext.ar[0];
			h1.value = zui_Ext.ar[1];
			h2.value = zui_Ext.ar[2];
			let chue = ui.slider(h0,"H",0,1,true);
			let csat = ui.slider(h1,"S",0,1,true);
			let cval = ui.slider(h2,"V",0,1,true);
			zui_Ext.hsvToRgb(chue,csat,cval,zui_Ext.ar);
			handle.color = kha_Color.fromFloats(zui_Ext.ar[0],zui_Ext.ar[1],zui_Ext.ar[2]);
		} else if(pos == 2) {
			handle.text = (handle.color >>> 0).toString(16);
			let hexCode = ui.textInput(handle,"#");
			if(hexCode.length >= 1 && hexCode.charAt(0) == "#") {
				hexCode = HxOverrides.substr(hexCode,1,null);
			}
			if(hexCode.length == 3) {
				hexCode = hexCode.charAt(0) + hexCode.charAt(0) + hexCode.charAt(1) + hexCode.charAt(1) + hexCode.charAt(2) + hexCode.charAt(2);
			}
			if(hexCode.length == 4) {
				hexCode = hexCode.charAt(0) + hexCode.charAt(0) + hexCode.charAt(1) + hexCode.charAt(1) + hexCode.charAt(2) + hexCode.charAt(2) + hexCode.charAt(3) + hexCode.charAt(3);
			}
			if(hexCode.length == 6) {
				hexCode = "ff" + hexCode;
			}
			handle.color = parseInt(hexCode,16);
		}
		if(h0.changed || h1.changed || h2.changed) {
			handle.changed = ui.changed = true;
		}
		if(ui.getInputInRect(ui._windowX + px,ui._windowY + py,w,h == null ? ui._y - py : h) && ui.inputReleased) {
			ui.changed = true;
		}
		return handle.color;
	}
	static rightAlignNumber(number,length) {
		let s = number + "";
		while(s.length < length) s = " " + s;
		return s;
	}
	static textArea(ui,handle,align,editable,label,wordWrap) {
		if(wordWrap == null) {
			wordWrap = false;
		}
		if(label == null) {
			label = "";
		}
		if(editable == null) {
			editable = true;
		}
		if(align == null) {
			align = 0;
		}
		handle.text = StringTools.replace(handle.text,"\t","    ");
		let selected = ui.textSelectedHandle == handle;
		let lines = handle.text.split("\n");
		let showLabel = lines.length == 1 && lines[0] == "";
		let keyPressed = selected && ui.isKeyPressed;
		ui.highlightOnSelect = false;
		ui.tabSwitchEnabled = false;
		if(wordWrap && handle.text != "") {
			let cursorSet = false;
			let cursorPos = ui.cursorX;
			let _g = 0;
			let _g1 = handle.position;
			while(_g < _g1) {
				let i = _g++;
				cursorPos += lines[i].length + 1;
			}
			let words = lines.join(" ").split(" ");
			lines = [];
			let line = "";
			let _g2 = 0;
			while(_g2 < words.length) {
				let w = words[_g2];
				++_g2;
				let linew = ui.ops.font.width(ui.fontSize,line + " " + w);
				let wordw = ui.ops.font.width(ui.fontSize," " + w);
				if(linew > ui._w - 10 && linew > wordw) {
					lines.push(line);
					line = "";
				}
				line = line == "" ? w : line + " " + w;
				let linesLen = lines.length;
				let _g = 0;
				while(_g < lines.length) {
					let l = lines[_g];
					++_g;
					linesLen += l.length;
				}
				if(selected && !cursorSet && cursorPos <= linesLen + line.length) {
					cursorSet = true;
					handle.position = lines.length;
					ui.cursorX = ui.highlightAnchor = cursorPos - linesLen;
				}
			}
			lines.push(line);
			if(selected) {
				ui.textSelected = handle.text = lines[handle.position];
			}
		}
		let cursorStartX = ui.cursorX;
		if(zui_Ext.textAreaLineNumbers) {
			let _y = ui._y;
			let _TEXT_COL = ui.t.TEXT_COL;
			ui.t.TEXT_COL = ui.t.ACCENT_COL;
			let maxLength = Math.ceil(Math.log(lines.length + 0.5) / Math.log(10));
			let _g = 0;
			let _g1 = lines.length;
			while(_g < _g1) {
				let i = _g++;
				ui.text(zui_Ext.rightAlignNumber(i + 1,maxLength));
				ui._y -= ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
			}
			ui.t.TEXT_COL = _TEXT_COL;
			ui._y = _y;
			ui._x += (lines.length + "").length * 16 + 4;
		}
		ui.g.set_color(ui.t.SEPARATOR_COL);
		let g = ui.g;
		let x = ui._x + ui.buttonOffsetY;
		let y = ui._y + ui.buttonOffsetY;
		let w = ui._w - ui.buttonOffsetY * 2;
		let h = lines.length * (ui.t.ELEMENT_H * ui.ops.scaleFactor) - ui.buttonOffsetY * 2;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!ui.enabled) {
			ui.fadeColor();
		}
		g.fillRect(x,y - 1,w,h + 1);
		let _textColoring = ui.textColoring;
		ui.textColoring = zui_Ext.textAreaColoring;
		let _g = 0;
		let _g1 = lines.length;
		while(_g < _g1) {
			let i = _g++;
			if(!selected && ui.getHover() || selected && i == handle.position) {
				handle.position = i;
				handle.text = lines[i];
				ui.submitTextHandle = null;
				ui.textInput(handle,showLabel ? label : "",align,editable);
				if(keyPressed && ui.key != 13 && ui.key != 27) {
					lines[i] = ui.textSelected;
				}
			} else if(showLabel) {
				let TEXT_COL = ui.t.TEXT_COL;
				ui.t.TEXT_COL = ui.t.LABEL_COL;
				ui.text(label,2);
				ui.t.TEXT_COL = TEXT_COL;
			} else {
				ui.text(lines[i],align);
			}
			ui._y -= ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
		}
		ui._y += ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
		ui.textColoring = _textColoring;
		if(zui_Ext.textAreaScrollPastEnd) {
			ui._y += ui._h - ui.windowHeaderH - ui.t.ELEMENT_H * ui.ops.scaleFactor - ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
		}
		if(keyPressed) {
			if(ui.key == 40 && handle.position < lines.length - 1) {
				handle.position++;
				zui_Ext.scrollAlign(ui,handle);
			}
			if(ui.key == 38 && handle.position > 0) {
				handle.position--;
				zui_Ext.scrollAlign(ui,handle);
			}
			if(editable && ui.key == 13 && !wordWrap) {
				handle.position++;
				lines.splice(handle.position,0,HxOverrides.substr(lines[handle.position - 1],ui.cursorX,null));
				lines[handle.position - 1] = HxOverrides.substr(lines[handle.position - 1],0,ui.cursorX);
				ui.startTextEdit(handle);
				ui.cursorX = ui.highlightAnchor = 0;
				zui_Ext.scrollAlign(ui,handle);
			}
			if(editable && ui.key == 8 && cursorStartX == 0 && handle.position > 0) {
				handle.position--;
				ui.cursorX = ui.highlightAnchor = lines[handle.position].length;
				lines[handle.position] += lines[handle.position + 1];
				lines.splice(handle.position + 1,1);
				zui_Ext.scrollAlign(ui,handle);
			}
			ui.textSelected = lines[handle.position];
		}
		ui.highlightOnSelect = true;
		ui.tabSwitchEnabled = true;
		handle.text = lines.join("\n");
		return handle.text;
	}
	static scrollAlign(ui,handle) {
		if((handle.position + 1) * (ui.t.ELEMENT_H * ui.ops.scaleFactor) + ui.currentWindow.scrollOffset > ui._h - ui.windowHeaderH) {
			ui.currentWindow.scrollOffset -= ui.t.ELEMENT_H * ui.ops.scaleFactor;
		} else if((handle.position + 1) * (ui.t.ELEMENT_H * ui.ops.scaleFactor) + ui.currentWindow.scrollOffset < ui.windowHeaderH) {
			ui.currentWindow.scrollOffset += ui.t.ELEMENT_H * ui.ops.scaleFactor;
		}
	}
	static beginMenu(ui) {
		zui_Ext._ELEMENT_OFFSET = ui.t.ELEMENT_OFFSET;
		zui_Ext._BUTTON_COL = ui.t.BUTTON_COL;
		ui.t.ELEMENT_OFFSET = 0;
		ui.t.BUTTON_COL = ui.t.SEPARATOR_COL;
		ui.g.set_color(ui.t.SEPARATOR_COL);
		ui.g.fillRect(0,0,ui._windowW,ui.t.BUTTON_H * ui.ops.scaleFactor * 1.1 + 2 + ui.buttonOffsetY);
	}
	static endMenu(ui) {
		ui.t.ELEMENT_OFFSET = zui_Ext._ELEMENT_OFFSET;
		ui.t.BUTTON_COL = zui_Ext._BUTTON_COL;
	}
	static menuButton(ui,text) {
		ui._w = ui.ops.font.width(ui.fontSize,text) + 25 * ui.ops.scaleFactor | 0;
		return ui.button(text);
	}
	static MENUBAR_H(ui) {
		return ui.t.BUTTON_H * ui.ops.scaleFactor * 1.1 + 2 + ui.buttonOffsetY;
	}
	static dist(x1,y1,x2,y2) {
		let vx = x1 - x2;
		let vy = y1 - y2;
		return Math.sqrt(vx * vx + vy * vy);
	}
	static fract(f) {
		return f - (f | 0);
	}
	static mix(x,y,a) {
		return x * (1.0 - a) + y * a;
	}
	static clamp(x,minVal,maxVal) {
		return Math.min(Math.max(x,minVal),maxVal);
	}
	static step(edge,x) {
		if(x < edge) {
			return 0.0;
		} else {
			return 1.0;
		}
	}
	static hsvToRgb(cR,cG,cB,out) {
		let f = cR + 1.0;
		let px = Math.abs((f - (f | 0)) * 6.0 - 3.0);
		let f1 = cR + 0.66666666666666663;
		let py = Math.abs((f1 - (f1 | 0)) * 6.0 - 3.0);
		let f2 = cR + 0.33333333333333331;
		let pz = Math.abs((f2 - (f2 | 0)) * 6.0 - 3.0);
		out[0] = cB * (1.0 - cG + Math.min(Math.max(px - 1.0,0.0),1.0) * cG);
		out[1] = cB * (1.0 - cG + Math.min(Math.max(py - 1.0,0.0),1.0) * cG);
		out[2] = cB * (1.0 - cG + Math.min(Math.max(pz - 1.0,0.0),1.0) * cG);
	}
	static rgbToHsv(cR,cG,cB,out) {
		let a = cG < cB ? 0.0 : 1.0;
		let px = cB * (1.0 - a) + cG * a;
		let a1 = cG < cB ? 0.0 : 1.0;
		let py = cG * (1.0 - a1) + cB * a1;
		let a2 = cG < cB ? 0.0 : 1.0;
		let pz = -1.0 * (1.0 - a2) + 0.0 * a2;
		let a3 = cG < cB ? 0.0 : 1.0;
		let pw = 0.66666666666666663 * (1.0 - a3) + -0.33333333333333331 * a3;
		let a4 = cR < px ? 0.0 : 1.0;
		let qx = px * (1.0 - a4) + cR * a4;
		let a5 = cR < px ? 0.0 : 1.0;
		let qy = py * (1.0 - a5) + py * a5;
		let a6 = cR < px ? 0.0 : 1.0;
		let qz = pw * (1.0 - a6) + pz * a6;
		let a7 = cR < px ? 0.0 : 1.0;
		let qw = cR * (1.0 - a7) + px * a7;
		let d = qx - Math.min(qw,qy);
		out[0] = Math.abs(qz + (qw - qy) / (6.0 * d + 1.0e-10));
		out[1] = d / (qx + 1.0e-10);
		out[2] = qx;
	}
}
$hxClasses["zui.Ext"] = zui_Ext;
zui_Ext.__name__ = "zui.Ext";
class zui_Id {
}
$hxClasses["zui.Id"] = zui_Id;
zui_Id.__name__ = "zui.Id";
class zui_Themes {
}
$hxClasses["zui.Themes"] = zui_Themes;
zui_Themes.__name__ = "zui.Themes";
class zui_Zui {
	constructor(ops) {
		this.checkSelectImage = null;
		this.elementsBaked = false;
		this.scissor = false;
		this.sticky = false;
		this.tabVertical = false;
		this.tabScroll = 0.0;
		this.tabHandle = null;
		this.tabColors = null;
		this.tabNames = null;
		this.tooltipTime = 0.0;
		this.tooltipWait = false;
		this.tooltipShown = false;
		this.tooltipY = 0.0;
		this.tooltipX = 0.0;
		this.tooltipInvertY = false;
		this.tooltipImgMaxWidth = null;
		this.tooltipImg = null;
		this.tooltipText = "";
		this.comboInitialValue = 0;
		this.comboToSubmit = 0;
		this.submitComboHandle = null;
		this.comboSearchBar = false;
		this.comboSelectedWindow = null;
		this.comboSelectedHandle = null;
		this.tabPressedHandle = null;
		this.tabPressed = false;
		this.textToSubmit = "";
		this.submitTextHandle = null;
		this.textSelectedHandle = null;
		this.restoreY = -1.0;
		this.restoreX = -1.0;
		this.windowHeaderH = 0.0;
		this.windowHeaderW = 0.0;
		this.dragHandle = null;
		this.scrollHandle = null;
		this.windowEnded = true;
		this._windowY = 0.0;
		this._windowX = 0.0;
		this.imageScrollAlign = true;
		this.scrollAlign = 0.0;
		this.curRatio = -1;
		this.highlightAnchor = 0;
		this.cursorX = 0;
		this.inputStartedTime = 0.0;
		this.key = null;
		this.isTabDown = false;
		this.isReturnDown = false;
		this.isEscapeDown = false;
		this.isDeleteDown = false;
		this.isBackspaceDown = false;
		this.isADown = false;
		this.isAltDown = false;
		this.isCtrlDown = false;
		this.isShiftDown = false;
		this.isKeyDown = false;
		this.isKeyPressed = false;
		this.inputWheelDelta = 0;
		this.inputEnabled = true;
		this.inputRegistered = false;
		this.sliderTooltipW = 0.0;
		this.sliderTooltipY = 0.0;
		this.sliderTooltipX = 0.0;
		this.sliderTooltip = false;
		this.touchHoldActivated = false;
		this.highlightFullRow = false;
		this.windowBorderRight = 0;
		this.windowBorderLeft = 0;
		this.windowBorderBottom = 0;
		this.windowBorderTop = 0;
		this.textColoring = null;
		this.tabSwitchEnabled = true;
		this.highlightOnSelect = true;
		this.alwaysRedraw = false;
		this.scrollEnabled = true;
		this.imageInvertY = false;
		this.changed = false;
		this.isReleased = false;
		this.isHovered = false;
		this.isPushed = false;
		this.isStarted = false;
		this.enabled = true;
		this.isTyping = false;
		this.isScrolling = false;
		if(ops.theme == null) {
			ops.theme = zui_Themes.dark;
		}
		this.t = ops.theme;
		if(ops.khaWindowId == null) {
			ops.khaWindowId = 0;
		}
		if(ops.scaleFactor == null) {
			ops.scaleFactor = 1.0;
		}
		if(ops.autoNotifyInput == null) {
			ops.autoNotifyInput = true;
		}
		this.ops = ops;
		this.setScale(ops.scaleFactor);
		if(ops.autoNotifyInput) {
			this.registerInput();
		}
		if(zui_Zui.copyReceiver == null) {
			zui_Zui.copyReceiver = this;
			kha_System.notifyOnCutCopyPaste($bind(this,this.onCut),$bind(this,this.onCopy),$bind(this,this.onPaste));
			kha_System.notifyOnFrames(function(frames) {
				if((zui_Zui.isCopy || zui_Zui.isPaste) && ++zui_Zui.copyFrame > 1) {
					zui_Zui.isCopy = zui_Zui.isCut = zui_Zui.isPaste = false;
				} else if(zui_Zui.copyFrame > 1 && ++zui_Zui.copyFrame > 2) {
					zui_Zui.copyFrame = 0;
					zui_Zui.textToPaste = "";
				}
			});
		}
		let rtTextVS = kha_graphics4_Graphics2.createTextVertexStructure();
		this.rtTextPipeline = kha_graphics4_Graphics2.createTextPipeline(rtTextVS);
		this.rtTextPipeline.alphaBlendSource = 1;
		this.rtTextPipeline.compile();
	}
	setScale(factor) {
		this.ops.scaleFactor = factor;
		this.fontSize = this.t.FONT_SIZE * this.ops.scaleFactor | 0;
		let fontHeight = this.ops.font.height(this.fontSize);
		this.fontOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - fontHeight) / 2;
		this.arrowOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.ARROW_SIZE * this.ops.scaleFactor) / 2;
		this.arrowOffsetX = this.arrowOffsetY;
		this.titleOffsetX = (this.arrowOffsetX * 2 + this.t.ARROW_SIZE * this.ops.scaleFactor) / this.ops.scaleFactor;
		this.buttonOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.BUTTON_H * this.ops.scaleFactor) / 2;
		this.checkOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.CHECK_SIZE * this.ops.scaleFactor) / 2;
		this.checkOffsetX = this.checkOffsetY;
		this.checkSelectOffsetY = (this.t.CHECK_SIZE * this.ops.scaleFactor - this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor) / 2;
		this.checkSelectOffsetX = this.checkSelectOffsetY;
		this.radioOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.CHECK_SIZE * this.ops.scaleFactor) / 2;
		this.radioOffsetX = this.radioOffsetY;
		this.radioSelectOffsetY = (this.t.CHECK_SIZE * this.ops.scaleFactor - this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor) / 2;
		this.radioSelectOffsetX = this.radioSelectOffsetY;
		this.elementsBaked = false;
	}
	bakeElements() {
		if(this.checkSelectImage != null) {
			this.checkSelectImage.unload();
		}
		this.checkSelectImage = kha_Image.createRenderTarget(this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor | 0,this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor | 0,null,0,1);
		let g = this.checkSelectImage.get_g2();
		g.begin(true,0);
		g.set_color(this.t.ACCENT_SELECT_COL);
		g.drawLine(0,0,this.checkSelectImage.get_width(),this.checkSelectImage.get_height(),2 * this.ops.scaleFactor);
		g.drawLine(this.checkSelectImage.get_width(),0,0,this.checkSelectImage.get_height(),2 * this.ops.scaleFactor);
		g.end();
		this.elementsBaked = true;
	}
	remove() {
		if(this.ops.autoNotifyInput) {
			this.unregisterInput();
		}
	}
	registerInput() {
		if(this.inputRegistered) {
			return;
		}
		kha_input_Mouse.get().notifyWindowed(this.ops.khaWindowId,$bind(this,this.onMouseDown),$bind(this,this.onMouseUp),$bind(this,this.onMouseMove),$bind(this,this.onMouseWheel));
		if(kha_input_Pen.get() != null) {
			kha_input_Pen.get().notify($bind(this,this.onPenDown),$bind(this,this.onPenUp),$bind(this,this.onPenMove));
		}
		kha_input_Keyboard.get().notify($bind(this,this.onKeyDown),$bind(this,this.onKeyUp),$bind(this,this.onKeyPress));
		let _gthis = this;
		kha_System.notifyOnApplicationState(function() {
			_gthis.inputDX = _gthis.inputDY = 0;
		},null,null,null,null);
		this.inputRegistered = true;
	}
	unregisterInput() {
		if(!this.inputRegistered) {
			return;
		}
		kha_input_Mouse.get().removeWindowed(this.ops.khaWindowId,$bind(this,this.onMouseDown),$bind(this,this.onMouseUp),$bind(this,this.onMouseMove),$bind(this,this.onMouseWheel));
		if(kha_input_Pen.get() != null) {
			kha_input_Pen.get().remove($bind(this,this.onPenDown),$bind(this,this.onPenUp),$bind(this,this.onPenMove));
		}
		kha_input_Keyboard.get().remove($bind(this,this.onKeyDown),$bind(this,this.onKeyUp),$bind(this,this.onKeyPress));
		this.endInput();
		this.isShiftDown = this.isCtrlDown = this.isAltDown = false;
		this.inputX = this.inputY = 0;
		this.inputRegistered = false;
	}
	begin(g) {
		if(!this.elementsBaked) {
			this.bakeElements();
		}
		this.changed = false;
		this.globalG = g;
		zui_Zui.current = this;
		this._x = 0;
		this._y = 0;
		this._w = 0;
		this._h = 0;
	}
	end(last) {
		if(last == null) {
			last = true;
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		this.drawCombo();
		this.drawTooltip(true);
		this.tabPressedHandle = null;
		if(last) {
			this.endInput();
		}
	}
	beginRegion(g,x,y,w) {
		if(!this.elementsBaked) {
			g.end();
			this.bakeElements();
			g.begin(false);
		}
		this.changed = false;
		this.globalG = g;
		this.g = g;
		this.currentWindow = null;
		this.tooltipText = "";
		this.tooltipImg = null;
		this._windowX = 0;
		this._windowY = 0;
		this._windowW = w;
		this._x = x;
		this._y = y;
		this._w = w;
	}
	endRegion(last) {
		if(last == null) {
			last = true;
		}
		this.drawTooltip(false);
		this.tabPressedHandle = null;
		if(last) {
			this.endInput();
		}
	}
	beginSticky() {
		this.sticky = true;
		this._y -= this.currentWindow.scrollOffset;
	}
	endSticky() {
		this.sticky = false;
		this.scissor = true;
		this.g.scissor(0,this._y | 0,this._windowW | 0,this._windowH - this._y | 0);
		this.windowHeaderH += this._y - this.windowHeaderH;
		this._y += this.currentWindow.scrollOffset;
		this.isHovered = false;
	}
	endInput() {
		this.isKeyPressed = false;
		this.inputStarted = false;
		this.inputStartedR = false;
		this.inputReleased = false;
		this.inputReleasedR = false;
		this.inputDX = 0;
		this.inputDY = 0;
		this.inputWheelDelta = 0;
		this.penInUse = false;
		if(zui_Zui.keyRepeat && this.isKeyDown && kha_Scheduler.time() - zui_Zui.keyRepeatTime > 0.05) {
			if(this.key == 8 || this.key == 46 || this.key == 37 || this.key == 39 || this.key == 38 || this.key == 40) {
				zui_Zui.keyRepeatTime = kha_Scheduler.time();
				this.isKeyPressed = true;
			}
		}
		if(zui_Zui.touchHold && this.inputDown && this.inputX == this.inputStartedX && this.inputY == this.inputStartedY && this.inputStartedTime > 0 && kha_Scheduler.time() - this.inputStartedTime > 0.7) {
			this.touchHoldActivated = true;
			this.inputReleasedR = true;
			this.inputStartedTime = 0;
		}
	}
	inputChanged() {
		if(!(this.inputDX != 0 || this.inputDY != 0 || this.inputWheelDelta != 0 || this.inputStarted || this.inputStartedR || this.inputReleased || this.inputReleasedR || this.inputDown || this.inputDownR)) {
			return this.isKeyPressed;
		} else {
			return true;
		}
	}
	windowDirty(handle,x,y,w,h) {
		let wx = x + handle.dragX;
		let wy = y + handle.dragY;
		let inputChanged = this.getInputInRect(wx,wy,w,h) && this.inputChanged();
		if(!(this.alwaysRedraw || this.isScrolling)) {
			return inputChanged;
		} else {
			return true;
		}
	}
	window(handle,x,y,w,h,drag) {
		if(drag == null) {
			drag = false;
		}
		if(handle.texture == null || w != handle.texture.get_width() || h != handle.texture.get_height()) {
			this.resize(handle,w,h);
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		this.windowEnded = false;
		this.g = handle.texture.get_g2();
		this.currentWindow = handle;
		this._windowX = x + handle.dragX;
		this._windowY = y + handle.dragY;
		this._windowW = w;
		this._windowH = h;
		this.windowHeaderW = 0;
		this.windowHeaderH = 0;
		if(this.windowDirty(handle,x,y,w,h)) {
			handle.redraws = 2;
		}
		if(zui_Zui.onBorderHover != null) {
			if(this.getInputInRect(this._windowX - 4,this._windowY,8,this._windowH)) {
				zui_Zui.onBorderHover(handle,0);
			} else if(this.getInputInRect(this._windowX + this._windowW - 4,this._windowY,8,this._windowH)) {
				zui_Zui.onBorderHover(handle,1);
			} else if(this.getInputInRect(this._windowX,this._windowY - 4,this._windowW,8)) {
				zui_Zui.onBorderHover(handle,2);
			} else if(this.getInputInRect(this._windowX,this._windowY + this._windowH - 4,this._windowW,8)) {
				zui_Zui.onBorderHover(handle,3);
			}
		}
		if(handle.redraws <= 0) {
			return false;
		}
		this._x = 0;
		this._y = handle.scrollOffset;
		if(handle.layout == 1) {
			w = this.t.ELEMENT_W * this.ops.scaleFactor | 0;
		}
		this._w = !handle.scrollEnabled ? w : w - (this.t.SCROLL_W * this.ops.scaleFactor | 0);
		this._h = h;
		this.tooltipText = "";
		this.tooltipImg = null;
		this.tabNames = null;
		if(this.t.FILL_WINDOW_BG) {
			this.g.begin(true,this.t.WINDOW_BG_COL);
		} else {
			this.g.begin(true,0);
			this.g.set_color(this.t.WINDOW_BG_COL);
			this.g.fillRect(this._x,this._y - handle.scrollOffset,handle.lastMaxX,handle.lastMaxY);
		}
		handle.dragEnabled = drag;
		if(drag) {
			if(this.inputStarted && this.getInputInRect(this._windowX,this._windowY,this._windowW,15 * this.ops.scaleFactor | 0)) {
				this.dragHandle = handle;
			} else if(this.inputReleased) {
				this.dragHandle = null;
			}
			if(handle == this.dragHandle) {
				handle.redraws = 2;
				handle.dragX += this.inputDX | 0;
				handle.dragY += this.inputDY | 0;
			}
			this._y += 15 * this.ops.scaleFactor | 0;
			this.windowHeaderH += 15 * this.ops.scaleFactor | 0;
		}
		return true;
	}
	endWindow(bindGlobalG) {
		if(bindGlobalG == null) {
			bindGlobalG = true;
		}
		let handle = this.currentWindow;
		if(handle == null) {
			return;
		}
		if(handle.redraws > 0 || this.isScrolling) {
			if(this.scissor) {
				this.scissor = false;
				this.g.disableScissor();
			}
			if(this.tabNames != null) {
				this.drawTabs();
			}
			if(handle.dragEnabled) {
				this.g.set_color(this.t.SEPARATOR_COL);
				this.g.fillRect(0,0,this._windowW,15 * this.ops.scaleFactor | 0);
			}
			let wh = this._windowH - this.windowHeaderH;
			let fullHeight = this._y - handle.scrollOffset - this.windowHeaderH;
			if(fullHeight < wh || handle.layout == 1 || !this.scrollEnabled) {
				handle.scrollEnabled = false;
				handle.scrollOffset = 0;
			} else {
				handle.scrollEnabled = true;
				if(this.tabScroll < 0) {
					handle.scrollOffset = this.tabScroll;
					this.tabScroll = 0;
				}
				let wy = this._windowY + this.windowHeaderH;
				let amountToScroll = fullHeight - wh;
				let amountScrolled = -handle.scrollOffset;
				let ratio = amountScrolled / amountToScroll;
				let barH = wh * Math.abs(wh / fullHeight);
				barH = Math.max(barH,this.t.ELEMENT_H * this.ops.scaleFactor);
				let totalScrollableArea = wh - barH;
				let e = amountToScroll / totalScrollableArea;
				let barY = totalScrollableArea * ratio + this.windowHeaderH;
				let barFocus = this.getInputInRect(this._windowX + this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0),barY + this._windowY,this.t.SCROLL_W * this.ops.scaleFactor | 0,barH);
				if(this.inputStarted && barFocus) {
					this.scrollHandle = handle;
					this.isScrolling = true;
				}
				let scrollDelta = this.inputWheelDelta;
				if(zui_Zui.touchScroll && this.inputDown && this.inputDY != 0 && this.inputX > this._windowX + this.windowHeaderW && this.inputY > this._windowY + this.windowHeaderH) {
					this.isScrolling = true;
					scrollDelta = -this.inputDY / 20;
				}
				if(handle == this.scrollHandle) {
					this.scroll(this.inputDY * e,fullHeight);
				} else if(scrollDelta != 0 && this.comboSelectedHandle == null && this.getInputInRect(this._windowX,wy,this._windowW,wh)) {
					this.scroll(scrollDelta * (this.t.ELEMENT_H * this.ops.scaleFactor),fullHeight);
				}
				if(handle.scrollOffset > 0) {
					handle.scrollOffset = 0;
				} else if(fullHeight + handle.scrollOffset < wh) {
					handle.scrollOffset = wh - fullHeight;
				}
				this.g.set_color(this.t.ACCENT_COL);
				let scrollbarFocus = this.getInputInRect(this._windowX + this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0),wy,this.t.SCROLL_W * this.ops.scaleFactor | 0,wh);
				let barW = scrollbarFocus || handle == this.scrollHandle ? this.t.SCROLL_W * this.ops.scaleFactor | 0 : (this.t.SCROLL_W * this.ops.scaleFactor | 0) / 3;
				this.g.fillRect(this._windowW - barW - this.scrollAlign,barY,barW,barH);
			}
			handle.lastMaxX = this._x;
			handle.lastMaxY = this._y;
			if(handle.layout == 0) {
				handle.lastMaxX += this._windowW;
			} else {
				handle.lastMaxY += this._windowH;
			}
			handle.redraws--;
			this.g.end();
		}
		this.windowEnded = true;
		if(zui_Zui.alwaysRedrawWindow || handle.redraws > -4) {
			if(bindGlobalG) {
				this.globalG.begin(false);
			}
			this.globalG.set_color(this.t.WINDOW_TINT_COL);
			this.globalG.drawImage(handle.texture,this._windowX,this._windowY);
			if(bindGlobalG) {
				this.globalG.end();
			}
			if(handle.redraws <= 0) {
				handle.redraws--;
			}
		}
	}
	scroll(delta,fullHeight) {
		this.currentWindow.scrollOffset -= delta;
	}
	tab(handle,text,vertical,color) {
		if(color == null) {
			color = -1;
		}
		if(vertical == null) {
			vertical = false;
		}
		if(this.tabNames == null) {
			this.tabNames = [];
			this.tabColors = [];
			this.tabHandle = handle;
			this.tabVertical = vertical;
			this._w -= this.tabVertical ? this.t.ELEMENT_OFFSET * this.ops.scaleFactor + this.t.ELEMENT_W * this.ops.scaleFactor - this.ops.scaleFactor | 0 : 0;
			if(vertical) {
				this.windowHeaderW += this.t.ELEMENT_W * this.ops.scaleFactor;
			} else {
				this.windowHeaderH += this.t.BUTTON_H * this.ops.scaleFactor + this.buttonOffsetY + this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
			}
			this.restoreX = this.inputX;
			this.restoreY = this.inputY;
			if(!vertical && this.getInputInRect(this._windowX,this._windowY,this._windowW,this.windowHeaderH)) {
				this.inputX = this.inputY = -1;
			}
			if(vertical) {
				this._x += this.windowHeaderW + 6;
				this._w -= 6;
			} else {
				this._y += this.windowHeaderH + 3;
			}
		}
		this.tabNames.push(text);
		this.tabColors.push(color);
		return handle.position == this.tabNames.length - 1;
	}
	drawTabs() {
		this.inputX = this.restoreX;
		this.inputY = this.restoreY;
		if(this.currentWindow == null) {
			return;
		}
		let tabX = 0.0;
		let tabY = 0.0;
		let tabHMin = this.t.BUTTON_H * this.ops.scaleFactor * 1.1 | 0;
		let headerH = this.currentWindow.dragEnabled ? 15 * this.ops.scaleFactor | 0 : 0;
		let tabH = this.t.FULL_TABS && this.tabVertical ? (this._windowH - headerH) / this.tabNames.length | 0 : tabHMin;
		let origy = this._y;
		this._y = headerH;
		this.tabHandle.changed = false;
		if(this.isCtrlDown && this.isTabDown) {
			this.tabHandle.position++;
			if(this.tabHandle.position >= this.tabNames.length) {
				this.tabHandle.position = 0;
			}
			this.tabHandle.changed = true;
			this.isTabDown = false;
		}
		if(this.tabHandle.position >= this.tabNames.length) {
			this.tabHandle.position = this.tabNames.length - 1;
		}
		this.g.set_color(this.t.SEPARATOR_COL);
		if(this.tabVertical) {
			this.g.fillRect(0,this._y,this.t.ELEMENT_W * this.ops.scaleFactor,this._windowH);
		} else {
			this.g.fillRect(0,this._y,this._windowW,this.buttonOffsetY + tabH + 2);
		}
		this.g.set_color(this.t.ACCENT_COL);
		if(this.tabVertical) {
			this.g.fillRect(this.t.ELEMENT_W * this.ops.scaleFactor,this._y,1,this._windowH);
		} else {
			this.g.fillRect(this.buttonOffsetY,this._y + this.buttonOffsetY + tabH + 2,this._windowW - this.buttonOffsetY * 2,1);
		}
		let basey = this.tabVertical ? this._y : this._y + 2;
		let _g = 0;
		let _g1 = this.tabNames.length;
		while(_g < _g1) {
			let i = _g++;
			this._x = tabX;
			this._y = basey + tabY;
			this._w = this.tabVertical ? this.t.ELEMENT_W * this.ops.scaleFactor - this.ops.scaleFactor | 0 : this.t.FULL_TABS ? this._windowW / this.tabNames.length | 0 : this.ops.font.width(this.fontSize,this.tabNames[i]) + this.buttonOffsetY * 2 + 18 * this.ops.scaleFactor | 0;
			let released = this.getReleased(tabH);
			let pushed = this.getPushed(tabH);
			let hover = this.getHover(tabH);
			if(released) {
				let h = this.tabHandle.nest(this.tabHandle.position);
				h.scrollOffset = this.currentWindow.scrollOffset;
				h = this.tabHandle.nest(i);
				this.tabScroll = h.scrollOffset;
				this.tabHandle.position = i;
				this.currentWindow.redraws = 3;
				this.tabHandle.changed = true;
			}
			let selected = this.tabHandle.position == i;
			this.g.set_color(pushed || hover ? this.t.BUTTON_HOVER_COL : this.tabColors[i] != -1 ? this.tabColors[i] : selected ? this.t.WINDOW_BG_COL : this.t.SEPARATOR_COL);
			if(this.tabVertical) {
				tabY += tabH + 1;
			} else {
				tabX += this._w + 1;
			}
			let g = this.g;
			let x = this._x + this.buttonOffsetY;
			let y = this._y + this.buttonOffsetY;
			let w = this._w;
			let strength = 0.0;
			if(strength == 0.0) {
				strength = 1;
			}
			if(!this.enabled) {
				this.fadeColor();
			}
			g.fillRect(x,y - 1,w,tabH + 1);
			this.g.set_color(selected ? this.t.BUTTON_TEXT_COL : this.t.LABEL_COL);
			this.drawString(this.g,this.tabNames[i],null,(tabH - tabHMin) / 2,this.t.FULL_TABS ? 1 : 0);
			if(selected) {
				if(this.tabVertical) {
					this.g.set_color(this.t.HIGHLIGHT_COL);
					this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY - 1,2,tabH + this.buttonOffsetY);
				} else {
					this.g.set_color(this.t.WINDOW_BG_COL);
					this.g.fillRect(this._x + this.buttonOffsetY + 1,this._y + this.buttonOffsetY + tabH,this._w - 1,1);
					this.g.set_color(this.t.HIGHLIGHT_COL);
					this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w,2);
				}
			}
		}
		this._x = 0;
		this._y = origy;
		this._w = (!this.currentWindow.scrollEnabled ? this._windowW : this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0)) | 0;
	}
	panel(handle,text,isTree,filled,pack) {
		if(pack == null) {
			pack = true;
		}
		if(filled == null) {
			filled = true;
		}
		if(isTree == null) {
			isTree = false;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.selected;
		}
		if(this.getReleased()) {
			handle.selected = !handle.selected;
			handle.changed = this.changed = true;
		}
		if(filled) {
			this.g.set_color(this.t.PANEL_BG_COL);
			let g = this.g;
			let x = this._x;
			let y = this._y;
			let w = this._w;
			let h = this.t.ELEMENT_H * this.ops.scaleFactor;
			let strength = 0.0;
			if(strength == 0.0) {
				strength = 1;
			}
			if(!this.enabled) {
				this.fadeColor();
			}
			g.fillRect(x,y - 1,w,h + 1);
		}
		if(isTree) {
			this.drawTree(handle.selected);
		} else {
			this.drawArrow(handle.selected);
		}
		this.g.set_color(this.t.LABEL_COL);
		this.drawString(this.g,text,this.titleOffsetX,0);
		this.endElement();
		if(pack && !handle.selected) {
			this._y -= this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
		return handle.selected;
	}
	image(image,tint,h,sx,sy,sw,sh) {
		if(sh == null) {
			sh = 0;
		}
		if(sw == null) {
			sw = 0;
		}
		if(sy == null) {
			sy = 0;
		}
		if(sx == null) {
			sx = 0;
		}
		if(tint == null) {
			tint = -1;
		}
		let iw = (sw > 0 ? sw : image.get_width()) * this.ops.scaleFactor;
		let ih = (sh > 0 ? sh : image.get_height()) * this.ops.scaleFactor;
		let w = Math.min(iw,this._w);
		let x = this._x;
		let scroll = this.currentWindow != null && this.currentWindow.scrollEnabled;
		let r;
		if(this.curRatio == -1) {
			r = 1.0;
		} else {
			let ratio = this.ratios[this.curRatio];
			r = ratio < 0 ? -ratio : ratio;
		}
		if(this.imageScrollAlign) {
			w = Math.min(iw,this._w - this.buttonOffsetY * 2);
			x += this.buttonOffsetY;
			if(!scroll) {
				w -= (this.t.SCROLL_W * this.ops.scaleFactor | 0) * r;
				x += (this.t.SCROLL_W * this.ops.scaleFactor | 0) * r / 2;
			}
		} else if(scroll) {
			w += (this.t.SCROLL_W * this.ops.scaleFactor | 0) * r;
		}
		let ratio = h == null ? w / iw : h / ih;
		if(h == null) {
			h = ih * ratio;
		} else {
			w = iw * ratio;
		}
		if(!this.isVisible(h)) {
			this.endElement(h);
			return 0;
		}
		let started = this.getStarted(h);
		let down = this.getPushed(h);
		let released = this.getReleased(h);
		let hover = this.getHover(h);
		if(this.curRatio == -1 && (started || down || released || hover)) {
			if(this.inputX < this._windowX + this._x || this.inputX > this._windowX + this._x + w) {
				hover = false;
				released = hover;
				down = released;
				started = down;
			}
		}
		this.g.set_color(tint);
		if(!this.enabled) {
			this.fadeColor();
		}
		let h_float = h;
		if(sw > 0) {
			if(this.imageInvertY) {
				this.g.drawScaledSubImage(image,sx,sy,sw,sh,x,this._y + h_float,w,-h_float);
			} else {
				this.g.drawScaledSubImage(image,sx,sy,sw,sh,x,this._y,w,h_float);
			}
		} else if(this.imageInvertY) {
			this.g.drawScaledImage(image,x,this._y + h_float,w,-h_float);
		} else {
			this.g.drawScaledImage(image,x,this._y,w,h_float);
		}
		this.endElement(h);
		if(started) {
			return 1;
		} else if(released) {
			return 3;
		} else if(down) {
			return 2;
		} else if(hover) {
			return 4;
		} else {
			return 0;
		}
	}
	text(text,align,bg) {
		if(bg == null) {
			bg = 0;
		}
		if(align == null) {
			align = 0;
		}
		if(text.indexOf("\n") >= 0) {
			let align1 = align;
			let bg1 = bg;
			if(bg1 == null) {
				bg1 = 0;
			}
			if(align1 == null) {
				align1 = 0;
			}
			let _g = 0;
			let _g1 = text.split("\n");
			while(_g < _g1.length) {
				let line = _g1[_g];
				++_g;
				this.text(line,align1,bg1);
			}
			return 0;
		}
		let h = Math.max(this.t.ELEMENT_H * this.ops.scaleFactor,this.ops.font.height(this.fontSize));
		if(!this.isVisible(h)) {
			this.endElement(h + this.t.ELEMENT_OFFSET * this.ops.scaleFactor);
			return 0;
		}
		let started = this.getStarted(h);
		let down = this.getPushed(h);
		let released = this.getReleased(h);
		let hover = this.getHover(h);
		if(bg != 0) {
			this.g.set_color(bg);
			this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w - this.buttonOffsetY * 2,this.t.BUTTON_H * this.ops.scaleFactor);
		}
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,null,0,align);
		this.endElement(h + this.t.ELEMENT_OFFSET * this.ops.scaleFactor);
		if(started) {
			return 1;
		} else if(released) {
			return 3;
		} else if(down) {
			return 2;
		} else {
			return 0;
		}
	}
	splitText(lines,align,bg) {
		if(bg == null) {
			bg = 0;
		}
		if(align == null) {
			align = 0;
		}
		let _g = 0;
		let _g1 = lines.split("\n");
		while(_g < _g1.length) {
			let line = _g1[_g];
			++_g;
			this.text(line,align,bg);
		}
	}
	startTextEdit(handle,align) {
		if(align == null) {
			align = 0;
		}
		this.isTyping = true;
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelected;
		this.textSelectedHandle = handle;
		this.textSelected = handle.text;
		this.cursorX = handle.text.length;
		if(this.tabPressed) {
			this.tabPressed = false;
			this.isKeyPressed = false;
		} else if(!this.highlightOnSelect) {
			this.setCursorToInput(align);
		}
		this.tabPressedHandle = handle;
		this.highlightAnchor = this.highlightOnSelect ? 0 : this.cursorX;
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().show();
		}
	}
	submitTextEdit() {
		this.submitTextHandle.changed = this.submitTextHandle.text != this.textToSubmit;
		this.submitTextHandle.text = this.textToSubmit;
		this.submitTextHandle = null;
		this.textToSubmit = "";
		this.textSelected = "";
	}
	updateTextEdit(align,editable,liveUpdate) {
		if(liveUpdate == null) {
			liveUpdate = false;
		}
		if(editable == null) {
			editable = true;
		}
		if(align == null) {
			align = 0;
		}
		let text = this.textSelected;
		if(this.isKeyPressed) {
			if(this.key == 37) {
				if(this.cursorX > 0) {
					this.cursorX--;
				}
			} else if(this.key == 39) {
				if(this.cursorX < text.length) {
					this.cursorX++;
				}
			} else if(editable && this.key == 8) {
				if(this.cursorX > 0 && this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX - 1) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX--;
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(editable && this.key == 46) {
				if(this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.cursorX + 1,null);
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(this.key == 13) {
				this.deselectText();
			} else if(this.key == 27) {
				this.textSelected = this.textSelectedHandle.text;
				this.deselectText();
			} else if(this.key == 9 && this.tabSwitchEnabled && !this.isCtrlDown) {
				this.tabPressed = true;
				this.deselectText();
				this.key = null;
			} else if(this.key == 36) {
				this.cursorX = 0;
			} else if(this.key == 35) {
				this.cursorX = text.length;
			} else if(this.isCtrlDown && this.isADown) {
				this.cursorX = text.length;
				this.highlightAnchor = 0;
			} else if(editable && this.key != 16 && this.key != 20 && this.key != 17 && this.key != 224 && this.key != 18 && this.key != 38 && this.key != 40 && this.char != null && this.char != "" && HxOverrides.cca(this.char,0) >= 32) {
				text = HxOverrides.substr(text,0,this.highlightAnchor) + this.char + HxOverrides.substr(text,this.cursorX,null);
				this.cursorX = this.cursorX + 1 > text.length ? text.length : this.cursorX + 1;
			}
			let selecting = this.isShiftDown && (this.key == 37 || this.key == 39 || this.key == 16);
			if(!selecting && (!this.isCtrlDown || this.isCtrlDown && this.isAltDown)) {
				this.highlightAnchor = this.cursorX;
			}
		}
		if(editable && zui_Zui.textToPaste != "") {
			text = HxOverrides.substr(text,0,this.highlightAnchor) + zui_Zui.textToPaste + HxOverrides.substr(text,this.cursorX,null);
			this.cursorX += zui_Zui.textToPaste.length;
			this.highlightAnchor = this.cursorX;
			zui_Zui.textToPaste = "";
			zui_Zui.isPaste = false;
		}
		if(this.highlightAnchor == this.cursorX) {
			zui_Zui.textToCopy = text;
		} else if(this.highlightAnchor < this.cursorX) {
			zui_Zui.textToCopy = text.substring(this.highlightAnchor,this.cursorX);
		} else {
			zui_Zui.textToCopy = text.substring(this.cursorX,this.highlightAnchor);
		}
		if(editable && zui_Zui.isCut) {
			if(this.highlightAnchor == this.cursorX) {
				text = "";
			} else if(this.highlightAnchor < this.cursorX) {
				text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
				this.cursorX = this.highlightAnchor;
			} else {
				text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
			}
		}
		let off = this.t.TEXT_OFFSET * this.ops.scaleFactor;
		let lineHeight = this.t.ELEMENT_H * this.ops.scaleFactor;
		let cursorHeight = lineHeight - this.buttonOffsetY * 3.0;
		if(this.highlightAnchor != this.cursorX) {
			let istart = this.cursorX;
			let iend = this.highlightAnchor;
			if(this.highlightAnchor < this.cursorX) {
				istart = this.highlightAnchor;
				iend = this.cursorX;
			}
			let hlstr = HxOverrides.substr(text,istart,iend - istart);
			let hlstrw = this.ops.font.width(this.fontSize,hlstr);
			let startoff = this.ops.font.width(this.fontSize,HxOverrides.substr(text,0,istart));
			let hlStart = align == 0 ? this._x + startoff + off : this._x + this._w - hlstrw - off;
			if(align == 2) {
				hlStart -= this.ops.font.width(this.fontSize,HxOverrides.substr(text,iend,text.length));
			}
			this.g.set_color(this.t.ACCENT_SELECT_COL);
			this.g.fillRect(hlStart,this._y + this.buttonOffsetY * 1.5,hlstrw,cursorHeight);
		}
		let str = align == 0 ? HxOverrides.substr(text,0,this.cursorX) : text.substring(this.cursorX,text.length);
		let strw = this.ops.font.width(this.fontSize,str);
		let cursorX = align == 0 ? this._x + strw + off : this._x + this._w - strw - off;
		this.g.set_color(this.t.TEXT_COL);
		this.g.fillRect(cursorX,this._y + this.buttonOffsetY * 1.5,2 * this.ops.scaleFactor,cursorHeight);
		this.textSelected = text;
		if(liveUpdate && this.textSelectedHandle != null) {
			this.textSelectedHandle.changed = this.textSelectedHandle.text != this.textSelected;
			this.textSelectedHandle.text = this.textSelected;
		}
	}
	textInput(handle,label,align,editable,liveUpdate) {
		if(liveUpdate == null) {
			liveUpdate = false;
		}
		if(editable == null) {
			editable = true;
		}
		if(align == null) {
			align = 0;
		}
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.text;
		}
		let hover = this.getHover();
		if(hover && zui_Zui.onTextHover != null) {
			zui_Zui.onTextHover();
		}
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		let g = this.g;
		let fill = this.t.FILL_ACCENT_BG;
		let x = this._x + this.buttonOffsetY;
		let y = this._y + this.buttonOffsetY;
		let w = this._w - this.buttonOffsetY * 2;
		let h = this.t.BUTTON_H * this.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		let released = this.getReleased();
		if(this.submitTextHandle == handle && released) {
			this.isTyping = true;
			this.textSelectedHandle = this.submitTextHandle;
			this.submitTextHandle = null;
			this.setCursorToInput(align);
		}
		let startEdit = released || this.tabPressed;
		handle.changed = false;
		if(this.textSelectedHandle != handle && startEdit) {
			this.startTextEdit(handle,align);
		}
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(align,editable,liveUpdate);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
		}
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			let labelAlign = align == 2 ? 0 : 2;
			this.drawString(this.g,label,labelAlign == 0 ? null : 0,0,labelAlign);
		}
		this.g.set_color(this.t.TEXT_COL);
		if(this.textSelectedHandle != handle) {
			this.drawString(this.g,handle.text,null,0,align);
		} else {
			this.drawString(this.g,this.textSelected,null,0,align,false);
		}
		this.endElement();
		return handle.text;
	}
	setCursorToInput(align) {
		let off = align == 0 ? this.t.TEXT_OFFSET * this.ops.scaleFactor : this._w - this.ops.font.width(this.fontSize,this.textSelected);
		let x = this.inputX - (this._windowX + this._x + off);
		this.cursorX = 0;
		while(this.cursorX < this.textSelected.length && this.ops.font.width(this.fontSize,HxOverrides.substr(this.textSelected,0,this.cursorX)) < x) this.cursorX++;
		this.highlightAnchor = this.cursorX;
	}
	deselectText() {
		if(this.textSelectedHandle == null) {
			return;
		}
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelected;
		this.textSelectedHandle = null;
		this.isTyping = false;
		if(this.currentWindow != null) {
			this.currentWindow.redraws = 2;
		}
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().hide();
		}
		this.highlightAnchor = this.cursorX;
		if(zui_Zui.onDeselectText != null) {
			zui_Zui.onDeselectText();
		}
	}
	button(text,align,label) {
		if(label == null) {
			label = "";
		}
		if(align == null) {
			align = 1;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return false;
		}
		let released = this.getReleased();
		let pushed = this.getPushed();
		let hover = this.getHover();
		if(released) {
			this.changed = true;
		}
		this.g.set_color(pushed ? this.t.BUTTON_PRESSED_COL : hover ? this.t.BUTTON_HOVER_COL : this.t.BUTTON_COL);
		let g = this.g;
		let fill = this.t.FILL_BUTTON_BG;
		let x = this._x + this.buttonOffsetY;
		let y = this._y + this.buttonOffsetY;
		let w = this._w - this.buttonOffsetY * 2;
		let h = this.t.BUTTON_H * this.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(this.t.BUTTON_TEXT_COL);
		this.drawString(this.g,text,null,0,align);
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,label,null,0,align == 2 ? 0 : 2);
		}
		this.endElement();
		return released;
	}
	check(handle,text,label) {
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.selected;
		}
		if(this.getReleased()) {
			handle.selected = !handle.selected;
			handle.changed = this.changed = true;
		} else {
			handle.changed = false;
		}
		let hover = this.getHover();
		this.drawCheck(handle.selected,hover);
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.titleOffsetX,0,0);
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,label,null,0,2);
		}
		this.endElement();
		return handle.selected;
	}
	radio(handle,position,text,label) {
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.position == position;
		}
		if(position == 0) {
			handle.changed = false;
		}
		if(this.getReleased()) {
			handle.position = position;
			handle.changed = this.changed = true;
		}
		let hover = this.getHover();
		this.drawRadio(handle.position == position,hover);
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.titleOffsetX,0);
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,label,null,0,2);
		}
		this.endElement();
		return handle.position == position;
	}
	combo(handle,texts,label,showLabel,align,searchBar) {
		if(searchBar == null) {
			searchBar = true;
		}
		if(align == null) {
			align = 0;
		}
		if(showLabel == null) {
			showLabel = false;
		}
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.position;
		}
		if(this.getReleased()) {
			if(this.comboSelectedHandle == null) {
				this.inputEnabled = false;
				this.comboSelectedHandle = handle;
				this.comboSelectedWindow = this.currentWindow;
				this.comboSelectedAlign = align;
				this.comboSelectedTexts = texts;
				this.comboSelectedLabel = label;
				this.comboSelectedX = this._x + this._windowX | 0;
				this.comboSelectedY = this._y + this._windowY + this.t.ELEMENT_H * this.ops.scaleFactor | 0;
				this.comboSelectedW = this._w | 0;
				this.comboSearchBar = searchBar;
				let _g = 0;
				while(_g < texts.length) {
					let t = texts[_g];
					++_g;
					let w = (this.ops.font.width(this.fontSize,t) | 0) + 10;
					if(this.comboSelectedW < w) {
						this.comboSelectedW = w;
					}
				}
				if(this.comboSelectedW > this._w * 2) {
					this.comboSelectedW = this._w * 2 | 0;
				}
				if(this.comboSelectedW > this._w) {
					this.comboSelectedW += this.t.TEXT_OFFSET * this.ops.scaleFactor | 0;
				}
				this.comboToSubmit = handle.position;
				this.comboInitialValue = handle.position;
			}
		}
		if(handle == this.comboSelectedHandle && (this.isEscapeDown || this.inputReleasedR)) {
			handle.position = this.comboInitialValue;
			handle.changed = this.changed = true;
			this.submitComboHandle = null;
		} else if(handle == this.submitComboHandle) {
			handle.position = this.comboToSubmit;
			this.submitComboHandle = null;
			handle.changed = this.changed = true;
		} else {
			handle.changed = false;
		}
		let hover = this.getHover();
		if(hover) {
			this.g.set_color(this.t.ACCENT_HOVER_COL);
			let g = this.g;
			let fill = this.t.FILL_ACCENT_BG;
			let x = this._x + this.buttonOffsetY;
			let y = this._y + this.buttonOffsetY;
			let w = this._w - this.buttonOffsetY * 2;
			let h = this.t.BUTTON_H * this.ops.scaleFactor;
			let strength = 0.0;
			if(strength == 0.0) {
				strength = 1;
			}
			if(!this.enabled) {
				this.fadeColor();
			}
			if(fill) {
				g.fillRect(x,y - 1,w,h + 1);
			} else {
				g.drawRect(x,y,w,h,strength);
			}
		} else {
			this.g.set_color(this.t.ACCENT_COL);
			let g = this.g;
			let fill = this.t.FILL_ACCENT_BG;
			let x = this._x + this.buttonOffsetY;
			let y = this._y + this.buttonOffsetY;
			let w = this._w - this.buttonOffsetY * 2;
			let h = this.t.BUTTON_H * this.ops.scaleFactor;
			let strength = 0.0;
			if(strength == 0.0) {
				strength = 1;
			}
			if(!this.enabled) {
				this.fadeColor();
			}
			if(fill) {
				g.fillRect(x,y - 1,w,h + 1);
			} else {
				g.drawRect(x,y,w,h,strength);
			}
		}
		let x = this._x + this._w - this.arrowOffsetX - 8;
		let y = this._y + this.arrowOffsetY + 3;
		this.g.fillTriangle(x,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor / 2,y + this.t.ARROW_SIZE * this.ops.scaleFactor / 2);
		if(showLabel && label != "") {
			if(align == 0) {
				this._x -= 15;
			}
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,label,null,0,align == 0 ? 2 : 0);
			if(align == 0) {
				this._x += 15;
			}
		}
		if(align == 2) {
			this._x -= 15;
		}
		this.g.set_color(this.t.TEXT_COL);
		if(handle.position < texts.length) {
			this.drawString(this.g,texts[handle.position],null,0,align);
		}
		if(align == 2) {
			this._x += 15;
		}
		this.endElement();
		return handle.position;
	}
	slider(handle,text,from,to,filled,precision,displayValue,align,textEdit) {
		if(textEdit == null) {
			textEdit = true;
		}
		if(align == null) {
			align = 2;
		}
		if(displayValue == null) {
			displayValue = true;
		}
		if(precision == null) {
			precision = 100.0;
		}
		if(filled == null) {
			filled = false;
		}
		if(to == null) {
			to = 1.0;
		}
		if(from == null) {
			from = 0.0;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.value;
		}
		if(this.getStarted()) {
			this.scrollHandle = handle;
			this.isScrolling = true;
			this.changed = handle.changed = true;
			if(zui_Zui.touchTooltip) {
				this.sliderTooltip = true;
				this.sliderTooltipX = this._x + this._windowX;
				this.sliderTooltipY = this._y + this._windowY;
				this.sliderTooltipW = this._w;
			}
		} else {
			handle.changed = false;
		}
		if(handle == this.scrollHandle && this.inputDX != 0) {
			let range = to - from;
			let sliderX = this._x + this._windowX + this.buttonOffsetY;
			let sliderW = this._w - this.buttonOffsetY * 2;
			let step = range / sliderW;
			let value = from + (this.inputX - sliderX) * step;
			handle.value = Math.round(value * precision) / precision;
			if(handle.value < from) {
				handle.value = from;
			} else if(handle.value > to) {
				handle.value = to;
			}
			handle.changed = this.changed = true;
		}
		let hover = this.getHover();
		this.drawSlider(handle.value,from,to,filled,hover);
		let startEdit = (this.getReleased() || this.tabPressed) && textEdit;
		if(startEdit) {
			handle.text = handle.value + "";
			this.startTextEdit(handle);
			handle.changed = this.changed = true;
		}
		let lalign = align == 0 ? 2 : 0;
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(lalign);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
			try {
				let code = handle.text;
				handle.value = eval(code);
			} catch( _g ) {
			}
			handle.changed = this.changed = true;
		}
		this.g.set_color(this.t.LABEL_COL);
		this.drawString(this.g,text,null,0,align);
		if(displayValue) {
			this.g.set_color(this.t.TEXT_COL);
			if(this.textSelectedHandle != handle) {
				this.drawString(this.g,Math.round(handle.value * precision) / precision + "",null,0,lalign);
			} else {
				this.drawString(this.g,this.textSelected,null,0,lalign);
			}
		}
		this.endElement();
		return handle.value;
	}
	separator(h,fill) {
		if(fill == null) {
			fill = true;
		}
		if(h == null) {
			h = 4;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this._y += h * this.ops.scaleFactor;
			return;
		}
		if(fill) {
			this.g.set_color(this.t.SEPARATOR_COL);
			this.g.fillRect(this._x,this._y,this._w,h * this.ops.scaleFactor);
		}
		this._y += h * this.ops.scaleFactor;
	}
	tooltip(text) {
		this.tooltipText = text;
		this.tooltipY = this._y + this._windowY;
	}
	tooltipImage(image,maxWidth) {
		this.tooltipImg = image;
		this.tooltipImgMaxWidth = maxWidth;
		this.tooltipInvertY = this.imageInvertY;
		this.tooltipY = this._y + this._windowY;
	}
	drawArrow(selected) {
		let x = this._x + this.arrowOffsetX;
		let y = this._y + this.arrowOffsetY;
		this.g.set_color(this.t.TEXT_COL);
		if(selected) {
			this.g.fillTriangle(x,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor / 2,y + this.t.ARROW_SIZE * this.ops.scaleFactor);
		} else {
			this.g.fillTriangle(x,y,x,y + this.t.ARROW_SIZE * this.ops.scaleFactor,x + this.t.ARROW_SIZE * this.ops.scaleFactor,y + this.t.ARROW_SIZE * this.ops.scaleFactor / 2);
		}
	}
	drawTree(selected) {
		let SIGN_W = 7 * this.ops.scaleFactor;
		let x = this._x + this.arrowOffsetX + 1;
		let y = this._y + this.arrowOffsetY + 1;
		this.g.set_color(this.t.TEXT_COL);
		if(selected) {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
		} else {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
			this.g.fillRect(x + SIGN_W / 2 - 1,y,SIGN_W / 8,SIGN_W);
		}
	}
	drawCheck(selected,hover) {
		let x = this._x + this.checkOffsetX;
		let y = this._y + this.checkOffsetY;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		let g = this.g;
		let fill = this.t.FILL_ACCENT_BG;
		let w = this.t.CHECK_SIZE * this.ops.scaleFactor;
		let h = this.t.CHECK_SIZE * this.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		if(selected) {
			this.g.set_color(-1);
			if(!this.enabled) {
				this.fadeColor();
			}
			let size = this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor | 0;
			this.g.drawScaledImage(this.checkSelectImage,x + this.checkSelectOffsetX,y + this.checkSelectOffsetY,size,size);
		}
	}
	drawRadio(selected,hover) {
		let x = this._x + this.radioOffsetX;
		let y = this._y + this.radioOffsetY;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		let g = this.g;
		let fill = this.t.FILL_ACCENT_BG;
		let w = this.t.CHECK_SIZE * this.ops.scaleFactor;
		let h = this.t.CHECK_SIZE * this.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		if(selected) {
			this.g.set_color(this.t.ACCENT_SELECT_COL);
			if(!this.enabled) {
				this.fadeColor();
			}
			this.g.fillRect(x + this.radioSelectOffsetX,y + this.radioSelectOffsetY,this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor,this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor);
		}
	}
	drawSlider(value,from,to,filled,hover) {
		let x = this._x + this.buttonOffsetY;
		let y = this._y + this.buttonOffsetY;
		let w = this._w - this.buttonOffsetY * 2;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		let g = this.g;
		let fill = this.t.FILL_ACCENT_BG;
		let h = this.t.BUTTON_H * this.ops.scaleFactor;
		let strength = 0.0;
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		let offset = (value - from) / (to - from);
		let barW = 8 * this.ops.scaleFactor;
		let sliderX = filled ? x : x + (w - barW) * offset;
		sliderX = Math.max(Math.min(sliderX,x + (w - barW)),x);
		let sliderW = filled ? w * offset : barW;
		sliderW = Math.max(Math.min(sliderW,w),0);
		let g1 = this.g;
		let h1 = this.t.BUTTON_H * this.ops.scaleFactor;
		let strength1 = 0.0;
		if(strength1 == 0.0) {
			strength1 = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		g1.fillRect(sliderX,y - 1,sliderW,h1 + 1);
	}
	drawCombo() {
		if(this.comboSelectedHandle == null) {
			return;
		}
		let _g = this.g;
		this.globalG.set_color(this.t.SEPARATOR_COL);
		this.globalG.begin(false);
		let comboH = (this.comboSelectedTexts.length + (this.comboSelectedLabel != "" ? 1 : 0) + (this.comboSearchBar ? 1 : 0)) * (this.t.ELEMENT_H * this.ops.scaleFactor | 0);
		let distTop = this.comboSelectedY - comboH - (this.t.ELEMENT_H * this.ops.scaleFactor | 0) - this.windowBorderTop;
		let distBottom = kha_System.windowHeight() - this.windowBorderBottom - (this.comboSelectedY + comboH);
		let unrollUp = distBottom < 0 && distBottom < distTop;
		this.beginRegion(this.globalG,this.comboSelectedX,this.comboSelectedY,this.comboSelectedW);
		if(this.isKeyPressed || this.inputWheelDelta != 0) {
			let arrowUp = this.isKeyPressed && this.key == (unrollUp ? 40 : 38);
			let arrowDown = this.isKeyPressed && this.key == (unrollUp ? 38 : 40);
			let wheelUp = unrollUp && this.inputWheelDelta > 0 || !unrollUp && this.inputWheelDelta < 0;
			let wheelDown = unrollUp && this.inputWheelDelta < 0 || !unrollUp && this.inputWheelDelta > 0;
			if((arrowUp || wheelUp) && this.comboToSubmit > 0) {
				let step = 1;
				if(this.comboSearchBar && this.textSelected.length > 0) {
					let search = this.textSelected.toLowerCase();
					while(this.comboSelectedTexts[this.comboToSubmit - step].toLowerCase().indexOf(search) < 0 && this.comboToSubmit - step > 0) ++step;
					if(this.comboSelectedTexts[this.comboToSubmit - step].toLowerCase().indexOf(search) < 0) {
						step = 0;
					}
				}
				this.comboToSubmit -= step;
				this.submitComboHandle = this.comboSelectedHandle;
			} else if((arrowDown || wheelDown) && this.comboToSubmit < this.comboSelectedTexts.length - 1) {
				let step = 1;
				if(this.comboSearchBar && this.textSelected.length > 0) {
					let search = this.textSelected.toLowerCase();
					while(this.comboSelectedTexts[this.comboToSubmit + step].toLowerCase().indexOf(search) < 0 && this.comboToSubmit + step < this.comboSelectedTexts.length - 1) ++step;
					if(this.comboSelectedTexts[this.comboToSubmit + step].toLowerCase().indexOf(search) < 0) {
						step = 0;
					}
				}
				this.comboToSubmit += step;
				this.submitComboHandle = this.comboSelectedHandle;
			}
			if(this.comboSelectedWindow != null) {
				this.comboSelectedWindow.redraws = 2;
			}
		}
		this.inputEnabled = true;
		let _BUTTON_COL = this.t.BUTTON_COL;
		let _ELEMENT_OFFSET = this.t.ELEMENT_OFFSET;
		this.t.ELEMENT_OFFSET = 0;
		let unrollRight = this._x + this.comboSelectedW * 2 < kha_System.windowWidth() - this.windowBorderRight ? 1 : -1;
		let resetPosition = false;
		let search = "";
		if(this.comboSearchBar) {
			if(unrollUp) {
				this._y -= this.t.ELEMENT_H * this.ops.scaleFactor * 2;
			}
			let comboSearchHandle = zui_Handle.global.nest(0,null);
			if(zui_Zui.comboFirst) {
				comboSearchHandle.text = "";
			}
			this.fill(0,0,this._w / this.ops.scaleFactor,this.t.ELEMENT_H * this.ops.scaleFactor / this.ops.scaleFactor,this.t.SEPARATOR_COL);
			search = this.textInput(comboSearchHandle,"",0,true,true).toLowerCase();
			if(this.isReleased) {
				zui_Zui.comboFirst = true;
			}
			if(zui_Zui.comboFirst) {
				this.startTextEdit(comboSearchHandle);
			}
			resetPosition = comboSearchHandle.changed;
		}
		let _g1 = 0;
		let _g2 = this.comboSelectedTexts.length;
		while(_g1 < _g2) {
			let i = _g1++;
			if(search.length > 0 && this.comboSelectedTexts[i].toLowerCase().indexOf(search) < 0) {
				continue;
			}
			if(resetPosition) {
				this.comboToSubmit = this.comboSelectedHandle.position = i;
				this.submitComboHandle = this.comboSelectedHandle;
				resetPosition = false;
			}
			if(unrollUp) {
				this._y -= this.t.ELEMENT_H * this.ops.scaleFactor * 2;
			}
			this.t.BUTTON_COL = i == this.comboSelectedHandle.position ? this.t.ACCENT_SELECT_COL : this.t.SEPARATOR_COL;
			this.fill(0,0,this._w / this.ops.scaleFactor,this.t.ELEMENT_H * this.ops.scaleFactor / this.ops.scaleFactor,this.t.SEPARATOR_COL);
			if(this.button(this.comboSelectedTexts[i],this.comboSelectedAlign)) {
				this.comboToSubmit = i;
				this.submitComboHandle = this.comboSelectedHandle;
				if(this.comboSelectedWindow != null) {
					this.comboSelectedWindow.redraws = 2;
				}
				break;
			}
			if(this._y + this.t.ELEMENT_H * this.ops.scaleFactor > kha_System.windowHeight() - this.windowBorderBottom || this._y - this.t.ELEMENT_H * this.ops.scaleFactor * 2 < this.windowBorderTop) {
				this._x += this.comboSelectedW * unrollRight;
				this._y = this.comboSelectedY;
			}
		}
		this.t.BUTTON_COL = _BUTTON_COL;
		this.t.ELEMENT_OFFSET = _ELEMENT_OFFSET;
		if(this.comboSelectedLabel != "") {
			if(unrollUp) {
				this._y -= this.t.ELEMENT_H * this.ops.scaleFactor * 2;
				this.fill(0,0,this._w / this.ops.scaleFactor,this.t.ELEMENT_H * this.ops.scaleFactor / this.ops.scaleFactor,this.t.SEPARATOR_COL);
				this.g.set_color(this.t.LABEL_COL);
				this.drawString(this.g,this.comboSelectedLabel,null,0,2);
				this._y += this.t.ELEMENT_H * this.ops.scaleFactor;
				this.fill(0,0,this._w / this.ops.scaleFactor,this.ops.scaleFactor,this.t.ACCENT_SELECT_COL);
			} else {
				this.fill(0,0,this._w / this.ops.scaleFactor,this.t.ELEMENT_H * this.ops.scaleFactor / this.ops.scaleFactor,this.t.SEPARATOR_COL);
				this.fill(0,0,this._w / this.ops.scaleFactor,this.ops.scaleFactor,this.t.ACCENT_SELECT_COL);
				this.g.set_color(this.t.LABEL_COL);
				this.drawString(this.g,this.comboSelectedLabel,null,0,2);
			}
		}
		if((this.inputReleased || this.inputReleasedR || this.isEscapeDown || this.isReturnDown) && !zui_Zui.comboFirst) {
			this.comboSelectedHandle = null;
			zui_Zui.comboFirst = true;
		} else {
			zui_Zui.comboFirst = false;
		}
		this.inputEnabled = this.comboSelectedHandle == null;
		this.endRegion(false);
		this.globalG.end();
		this.g = _g;
	}
	drawTooltip(bindGlobalG) {
		if(this.sliderTooltip) {
			if(bindGlobalG) {
				this.globalG.begin(false);
			}
			this.globalG.set_font(this.ops.font);
			this.globalG.set_fontSize(this.fontSize * 2);
			let text = Math.round(this.scrollHandle.value * 100) / 100 + "";
			let xoff = this.ops.font.width(this.globalG.get_fontSize(),text) / 2;
			let yoff = this.ops.font.height(this.globalG.get_fontSize());
			let x = Math.min(Math.max(this.sliderTooltipX,this.inputX),this.sliderTooltipX + this.sliderTooltipW);
			this.globalG.set_color(this.t.ACCENT_COL);
			this.globalG.fillRect(x - xoff,this.sliderTooltipY - yoff,xoff * 2,yoff);
			this.globalG.set_color(this.t.TEXT_COL);
			this.globalG.drawString(text,x - xoff,this.sliderTooltipY - yoff);
			if(bindGlobalG) {
				this.globalG.end();
			}
		}
		if(zui_Zui.touchTooltip && this.textSelectedHandle != null) {
			if(bindGlobalG) {
				this.globalG.begin(false);
			}
			this.globalG.set_font(this.ops.font);
			this.globalG.set_fontSize(this.fontSize * 2);
			let xoff = this.ops.font.width(this.globalG.get_fontSize(),this.textSelected) / 2;
			let yoff = this.ops.font.height(this.globalG.get_fontSize()) / 2;
			let x = kha_System.windowWidth() / 2;
			let y = kha_System.windowHeight() / 3;
			this.globalG.set_color(this.t.ACCENT_COL);
			this.globalG.fillRect(x - xoff,y - yoff,xoff * 2,yoff * 2);
			this.globalG.set_color(this.t.TEXT_COL);
			this.globalG.drawString(this.textSelected,x - xoff,y - yoff);
			if(bindGlobalG) {
				this.globalG.end();
			}
		}
		if(this.tooltipText != "" || this.tooltipImg != null) {
			if(this.inputChanged()) {
				this.tooltipShown = false;
				this.tooltipWait = this.inputDX == 0 && this.inputDY == 0;
			}
			if(!this.tooltipShown) {
				this.tooltipShown = true;
				this.tooltipX = this.inputX;
				this.tooltipTime = kha_Scheduler.time();
			}
			if(!this.tooltipWait && kha_Scheduler.time() - this.tooltipTime > 1.0) {
				if(this.tooltipImg != null) {
					this.drawTooltipImage(bindGlobalG);
				}
				if(this.tooltipText != "") {
					this.drawTooltipText(bindGlobalG);
				}
			}
		} else {
			this.tooltipShown = false;
		}
	}
	drawTooltipText(bindGlobalG) {
		this.globalG.set_color(this.t.TEXT_COL);
		let lines = this.tooltipText.split("\n");
		let tooltipW = 0.0;
		let _g = 0;
		while(_g < lines.length) {
			let line = lines[_g];
			++_g;
			let lineTooltipW = this.ops.font.width(this.fontSize,line);
			if(lineTooltipW > tooltipW) {
				tooltipW = lineTooltipW;
			}
		}
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - tooltipW - 20);
		if(bindGlobalG) {
			this.globalG.begin(false);
		}
		let fontHeight = this.ops.font.height(this.fontSize);
		let off = 0;
		if(this.tooltipImg != null) {
			let w = this.tooltipImg.get_width();
			if(this.tooltipImgMaxWidth != null && w > this.tooltipImgMaxWidth) {
				w = this.tooltipImgMaxWidth;
			}
			off = this.tooltipImg.get_height() * (w / this.tooltipImg.get_width()) | 0;
		}
		this.globalG.fillRect(this.tooltipX,this.tooltipY + off,tooltipW + 20,fontHeight * lines.length);
		this.globalG.set_font(this.ops.font);
		this.globalG.set_fontSize(this.fontSize);
		this.globalG.set_color(this.t.ACCENT_COL);
		let _g1 = 0;
		let _g2 = lines.length;
		while(_g1 < _g2) {
			let i = _g1++;
			this.globalG.drawString(lines[i],this.tooltipX + 5,this.tooltipY + off + i * this.fontSize);
		}
		if(bindGlobalG) {
			this.globalG.end();
		}
	}
	drawTooltipImage(bindGlobalG) {
		let w = this.tooltipImg.get_width();
		if(this.tooltipImgMaxWidth != null && w > this.tooltipImgMaxWidth) {
			w = this.tooltipImgMaxWidth;
		}
		let h = this.tooltipImg.get_height() * (w / this.tooltipImg.get_width());
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - w - 20);
		this.tooltipY = Math.min(this.tooltipY,kha_System.windowHeight() - h - 20);
		if(bindGlobalG) {
			this.globalG.begin(false);
		}
		this.globalG.set_color(-16777216);
		this.globalG.fillRect(this.tooltipX,this.tooltipY,w,h);
		this.globalG.set_color(-1);
		if(this.tooltipInvertY) {
			this.globalG.drawScaledImage(this.tooltipImg,this.tooltipX,this.tooltipY + h,w,-h);
		} else {
			this.globalG.drawScaledImage(this.tooltipImg,this.tooltipX,this.tooltipY,w,h);
		}
		if(bindGlobalG) {
			this.globalG.end();
		}
	}
	drawString(g,text,xOffset,yOffset,align,truncation) {
		if(truncation == null) {
			truncation = true;
		}
		if(align == null) {
			align = 0;
		}
		if(yOffset == null) {
			yOffset = 0;
		}
		let fullText = text;
		if(truncation) {
			while(text.length > 0 && this.ops.font.width(this.fontSize,text) > this._w - 6 * this.ops.scaleFactor) text = HxOverrides.substr(text,0,text.length - 1);
			if(text.length < fullText.length) {
				text += "..";
				while(text.length > 2 && this.ops.font.width(this.fontSize,text) > this._w - 10 * this.ops.scaleFactor) text = HxOverrides.substr(text,0,text.length - 3) + "..";
				if(this.isHovered) {
					this.tooltip(fullText);
				}
			}
		}
		if(zui_Zui.dynamicGlyphLoad) {
			let _g = 0;
			let _g1 = text.length;
			while(_g < _g1) {
				let i = _g++;
				if(HxOverrides.cca(text,i) > 126 && kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,i)) == -1) {
					kha_graphics2_Graphics.fontGlyphs.push(HxOverrides.cca(text,i));
					kha_graphics2_Graphics.fontGlyphs = kha_graphics2_Graphics.fontGlyphs.slice();
				}
			}
		}
		if(xOffset == null) {
			xOffset = this.t.TEXT_OFFSET;
		}
		xOffset *= this.ops.scaleFactor;
		g.set_font(this.ops.font);
		g.set_fontSize(this.fontSize);
		if(align == 1) {
			xOffset = this._w / 2 - this.ops.font.width(this.fontSize,text) / 2;
		} else if(align == 2) {
			xOffset = this._w - this.ops.font.width(this.fontSize,text) - this.t.TEXT_OFFSET * this.ops.scaleFactor;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		g.set_pipeline(this.rtTextPipeline);
		if(this.textColoring == null) {
			g.drawString(text,this._x + xOffset,this._y + this.fontOffsetY + yOffset);
		} else {
			let _g = 0;
			let _g1 = this.textColoring.colorings;
			while(_g < _g1.length) {
				let coloring = _g1[_g];
				++_g;
				let result = zui_Zui.extractColoring(text,coloring);
				if(result.colored != "") {
					g.set_color(coloring.color);
					g.drawString(result.colored,this._x + xOffset,this._y + this.fontOffsetY + yOffset);
				}
				text = result.uncolored;
			}
			g.set_color(this.textColoring.default_color);
			g.drawString(text,this._x + xOffset,this._y + this.fontOffsetY + yOffset);
		}
		g.set_pipeline(null);
	}
	endElement(elementSize) {
		if(elementSize == null) {
			elementSize = this.t.ELEMENT_H * this.ops.scaleFactor + this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
		if(this.currentWindow == null || this.currentWindow.layout == 0) {
			if(this.curRatio == -1 || this.ratios != null && this.curRatio == this.ratios.length - 1) {
				this._y += elementSize;
				if(this.ratios != null && this.curRatio == this.ratios.length - 1) {
					this.curRatio = -1;
					this.ratios = null;
					this._x = this.xBeforeSplit;
					this._w = this.wBeforeSplit;
					this.highlightFullRow = false;
				}
			} else {
				this.curRatio++;
				this._x += this._w;
				let ratio = this.ratios[this.curRatio];
				this._w = (ratio < 0 ? -ratio : ratio * this.wBeforeSplit) | 0;
			}
		} else {
			this._x += this._w + this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
	}
	highlightNextRow() {
		this.highlightFullRow = true;
	}
	getRatio(ratio,dyn) {
		if(ratio < 0) {
			return -ratio;
		} else {
			return ratio * dyn;
		}
	}
	row(ratios) {
		this.ratios = ratios;
		this.curRatio = 0;
		this.xBeforeSplit = this._x;
		this.wBeforeSplit = this._w;
		let ratio = ratios[this.curRatio];
		this._w = (ratio < 0 ? -ratio : ratio * this._w) | 0;
	}
	indent(bothSides) {
		if(bothSides == null) {
			bothSides = true;
		}
		this._x += this.t.TAB_W * this.ops.scaleFactor | 0;
		this._w -= this.t.TAB_W * this.ops.scaleFactor | 0;
		if(bothSides) {
			this._w -= this.t.TAB_W * this.ops.scaleFactor | 0;
		}
	}
	unindent(bothSides) {
		if(bothSides == null) {
			bothSides = true;
		}
		this._x -= this.t.TAB_W * this.ops.scaleFactor | 0;
		this._w += this.t.TAB_W * this.ops.scaleFactor | 0;
		if(bothSides) {
			this._w += this.t.TAB_W * this.ops.scaleFactor | 0;
		}
	}
	fadeColor() {
		this.g.set_color(kha_Color.fromFloats(((this.g.get_color() & 16711680) >>> 16) * 0.00392156862745098,((this.g.get_color() & 65280) >>> 8) * 0.00392156862745098,(this.g.get_color() & 255) * 0.00392156862745098,0.25));
	}
	fill(x,y,w,h,color) {
		this.g.set_color(color);
		if(!this.enabled) {
			this.fadeColor();
		}
		this.g.fillRect(this._x + x * this.ops.scaleFactor,this._y + y * this.ops.scaleFactor - 1,w * this.ops.scaleFactor,h * this.ops.scaleFactor);
		this.g.set_color(-1);
	}
	rect(x,y,w,h,color,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.g.set_color(color);
		if(!this.enabled) {
			this.fadeColor();
		}
		this.g.drawRect(this._x + x * this.ops.scaleFactor,this._y + y * this.ops.scaleFactor,w * this.ops.scaleFactor,h * this.ops.scaleFactor,strength);
		this.g.set_color(-1);
	}
	drawRect(g,fill,x,y,w,h,strength) {
		if(strength == null) {
			strength = 0.0;
		}
		if(strength == 0.0) {
			strength = 1;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
	}
	isVisible(elemH) {
		if(this.currentWindow == null) {
			return true;
		}
		if(this._y + elemH > this.windowHeaderH) {
			return this._y < this.currentWindow.texture.get_height();
		} else {
			return false;
		}
	}
	getReleased(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isReleased = this.enabled && this.inputEnabled && this.inputReleased && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isReleased;
	}
	getPushed(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isPushed = this.enabled && this.inputEnabled && this.inputDown && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isPushed;
	}
	getStarted(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isStarted = this.enabled && this.inputEnabled && this.inputStarted && this.getHover(elemH);
		return this.isStarted;
	}
	getInitialHover(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(this.scissor && this.inputY < this._windowY + this.windowHeaderH) {
			return false;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.ops.scaleFactor;
		}
		if(this.enabled && this.inputEnabled && this.inputStartedX >= this._windowX + this._x && this.inputStartedX < this._windowX + this._x + this._w && this.inputStartedY >= this._windowY + this._y) {
			return this.inputStartedY < this._windowY + this._y + elemH;
		} else {
			return false;
		}
	}
	getHover(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(this.scissor && this.inputY < this._windowY + this.windowHeaderH) {
			return false;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.ops.scaleFactor;
		}
		this.isHovered = this.enabled && this.inputEnabled && this.inputX >= this._windowX + (this.highlightFullRow ? 0 : this._x) && this.inputX < this._windowX + this._x + (this.highlightFullRow ? this._windowW : this._w) && this.inputY >= this._windowY + this._y && this.inputY < this._windowY + this._y + elemH;
		return this.isHovered;
	}
	getInputInRect(x,y,w,h,scale) {
		if(scale == null) {
			scale = 1.0;
		}
		if(this.enabled && this.inputEnabled && this.inputX >= x * scale && this.inputX < (x + w) * scale && this.inputY >= y * scale) {
			return this.inputY < (y + h) * scale;
		} else {
			return false;
		}
	}
	onMouseDown(button,x,y) {
		if(this.penInUse) {
			return;
		}
		if(button == 0) {
			this.inputStarted = true;
		} else {
			this.inputStartedR = true;
		}
		if(button == 0) {
			this.inputDown = true;
		} else {
			this.inputDownR = true;
		}
		this.inputStartedTime = kha_Scheduler.time();
		this.inputStartedX = x;
		this.inputStartedY = y;
	}
	onMouseUp(button,x,y) {
		if(this.penInUse) {
			return;
		}
		if(this.touchHoldActivated) {
			this.touchHoldActivated = false;
			return;
		}
		if(this.isScrolling) {
			this.isScrolling = false;
			this.scrollHandle = null;
			this.sliderTooltip = false;
			if(x == this.inputStartedX && y == this.inputStartedY) {
				if(button == 0) {
					this.inputReleased = true;
				} else {
					this.inputReleasedR = true;
				}
			}
		} else if(button == 0) {
			this.inputReleased = true;
		} else {
			this.inputReleasedR = true;
		}
		if(button == 0) {
			this.inputDown = false;
		} else {
			this.inputDownR = false;
		}
		this.deselectText();
	}
	onMouseMove(x,y,movementX,movementY) {
		this.setInputPosition(x,y);
	}
	onMouseWheel(delta) {
		this.inputWheelDelta = delta;
	}
	setInputPosition(x,y) {
		this.inputDX += x - this.inputX;
		this.inputDY += y - this.inputY;
		this.inputX = x;
		this.inputY = y;
	}
	onPenDown(x,y,pressure) {
		this.onMouseDown(0,x,y);
	}
	onPenUp(x,y,pressure) {
		if(this.inputStarted) {
			this.inputStarted = false;
			this.penInUse = true;
			return;
		}
		this.onMouseUp(0,x,y);
		this.penInUse = true;
	}
	onPenMove(x,y,pressure) {
		this.onMouseMove(x,y,0,0);
	}
	onKeyDown(code) {
		this.key = code;
		this.isKeyPressed = true;
		this.isKeyDown = true;
		zui_Zui.keyRepeatTime = kha_Scheduler.time() + 0.4;
		switch(code) {
		case 8:
			this.isBackspaceDown = true;
			break;
		case 9:
			this.isTabDown = true;
			break;
		case 13:
			this.isReturnDown = true;
			break;
		case 16:
			this.isShiftDown = true;
			break;
		case 17:
			this.isCtrlDown = true;
			break;
		case 18:
			this.isAltDown = true;
			break;
		case 27:
			this.isEscapeDown = true;
			break;
		case 32:
			this.char = " ";
			break;
		case 46:
			this.isDeleteDown = true;
			break;
		case 65:
			this.isADown = true;
			break;
		default:
		}
	}
	onKeyUp(code) {
		this.isKeyDown = false;
		switch(code) {
		case 8:
			this.isBackspaceDown = false;
			break;
		case 9:
			this.isTabDown = false;
			break;
		case 13:
			this.isReturnDown = false;
			break;
		case 16:
			this.isShiftDown = false;
			break;
		case 17:
			this.isCtrlDown = false;
			break;
		case 18:
			this.isAltDown = false;
			break;
		case 27:
			this.isEscapeDown = false;
			break;
		case 46:
			this.isDeleteDown = false;
			break;
		case 65:
			this.isADown = false;
			break;
		default:
		}
	}
	onKeyPress(char) {
		this.char = char;
		this.isKeyPressed = true;
	}
	onCut() {
		zui_Zui.isCut = true;
		return this.onCopy();
	}
	onCopy() {
		zui_Zui.isCopy = true;
		return zui_Zui.textToCopy;
	}
	onPaste(s) {
		zui_Zui.isPaste = true;
		zui_Zui.textToPaste = s;
	}
	ELEMENT_W() {
		return this.t.ELEMENT_W * this.ops.scaleFactor;
	}
	ELEMENT_H() {
		return this.t.ELEMENT_H * this.ops.scaleFactor;
	}
	ELEMENT_OFFSET() {
		return this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
	}
	ARROW_SIZE() {
		return this.t.ARROW_SIZE * this.ops.scaleFactor;
	}
	BUTTON_H() {
		return this.t.BUTTON_H * this.ops.scaleFactor;
	}
	CHECK_SIZE() {
		return this.t.CHECK_SIZE * this.ops.scaleFactor;
	}
	CHECK_SELECT_SIZE() {
		return this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor;
	}
	FONT_SIZE() {
		return this.t.FONT_SIZE * this.ops.scaleFactor | 0;
	}
	SCROLL_W() {
		return this.t.SCROLL_W * this.ops.scaleFactor | 0;
	}
	TEXT_OFFSET() {
		return this.t.TEXT_OFFSET * this.ops.scaleFactor;
	}
	TAB_W() {
		return this.t.TAB_W * this.ops.scaleFactor | 0;
	}
	HEADER_DRAG_H() {
		return 15 * this.ops.scaleFactor | 0;
	}
	SCALE() {
		return this.ops.scaleFactor;
	}
	TOOLTIP_DELAY() {
		return 1.0;
	}
	resize(handle,w,h) {
		handle.redraws = 2;
		if(handle.texture != null) {
			handle.texture.unload();
		}
		if(w < 1) {
			w = 1;
		}
		if(h < 1) {
			h = 1;
		}
		handle.texture = kha_Image.createRenderTarget(w,h,0,0,1);
		handle.texture.get_g2().set_imageScaleQuality(1);
	}
	static extractColoring(text,col) {
		let res = { colored : "", uncolored : ""};
		let coloring = false;
		let startFrom = 0;
		let startLength = 0;
		let _g = 0;
		let _g1 = text.length;
		while(_g < _g1) {
			let i = _g++;
			let skipFirst = false;
			let length = zui_Zui.checkStart(i,text,col.start);
			let separatedLeft;
			if(i != 0) {
				let code = HxOverrides.cca(text,i - 1);
				separatedLeft = !(code >= 65 && code <= 90 || code >= 97 && code <= 122);
			} else {
				separatedLeft = true;
			}
			let separatedRight;
			if(i + length < text.length) {
				let code = HxOverrides.cca(text,i + length);
				separatedRight = !(code >= 65 && code <= 90 || code >= 97 && code <= 122);
			} else {
				separatedRight = true;
			}
			let isSeparated = separatedLeft && separatedRight;
			if(length > 0 && (!coloring || col.end == "") && (!col.separated || isSeparated)) {
				coloring = true;
				startFrom = i;
				startLength = length;
				if(col.end != "" && col.end != "\n") {
					skipFirst = true;
				}
			} else if(col.end == "") {
				if(i == startFrom + startLength) {
					coloring = false;
				}
			} else if(HxOverrides.substr(text,i,col.end.length) == col.end) {
				coloring = false;
			}
			let b = coloring && !skipFirst;
			res.colored += b ? text.charAt(i) : " ";
			res.uncolored += b ? " " : text.charAt(i);
		}
		return res;
	}
	static isChar(code) {
		if(!(code >= 65 && code <= 90)) {
			if(code >= 97) {
				return code <= 122;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static checkStart(i,text,start) {
		let _g = 0;
		while(_g < start.length) {
			let s = start[_g];
			++_g;
			if(HxOverrides.substr(text,i,s.length) == s) {
				return s.length;
			}
		}
		return 0;
	}
}
$hxClasses["zui.Zui"] = zui_Zui;
zui_Zui.__name__ = "zui.Zui";
Object.assign(zui_Zui.prototype, {
	__class__: zui_Zui
	,isScrolling: null
	,isTyping: null
	,enabled: null
	,isStarted: null
	,isPushed: null
	,isHovered: null
	,isReleased: null
	,changed: null
	,imageInvertY: null
	,scrollEnabled: null
	,alwaysRedraw: null
	,highlightOnSelect: null
	,tabSwitchEnabled: null
	,textColoring: null
	,windowBorderTop: null
	,windowBorderBottom: null
	,windowBorderLeft: null
	,windowBorderRight: null
	,highlightFullRow: null
	,touchHoldActivated: null
	,sliderTooltip: null
	,sliderTooltipX: null
	,sliderTooltipY: null
	,sliderTooltipW: null
	,inputRegistered: null
	,inputEnabled: null
	,inputX: null
	,inputY: null
	,inputStartedX: null
	,inputStartedY: null
	,inputDX: null
	,inputDY: null
	,inputWheelDelta: null
	,inputStarted: null
	,inputStartedR: null
	,inputReleased: null
	,inputReleasedR: null
	,inputDown: null
	,inputDownR: null
	,penInUse: null
	,isKeyPressed: null
	,isKeyDown: null
	,isShiftDown: null
	,isCtrlDown: null
	,isAltDown: null
	,isADown: null
	,isBackspaceDown: null
	,isDeleteDown: null
	,isEscapeDown: null
	,isReturnDown: null
	,isTabDown: null
	,key: null
	,char: null
	,inputStartedTime: null
	,cursorX: null
	,highlightAnchor: null
	,ratios: null
	,curRatio: null
	,xBeforeSplit: null
	,wBeforeSplit: null
	,g: null
	,t: null
	,ops: null
	,globalG: null
	,rtTextPipeline: null
	,fontSize: null
	,fontOffsetY: null
	,arrowOffsetX: null
	,arrowOffsetY: null
	,titleOffsetX: null
	,buttonOffsetY: null
	,checkOffsetX: null
	,checkOffsetY: null
	,checkSelectOffsetX: null
	,checkSelectOffsetY: null
	,radioOffsetX: null
	,radioOffsetY: null
	,radioSelectOffsetX: null
	,radioSelectOffsetY: null
	,scrollAlign: null
	,imageScrollAlign: null
	,_x: null
	,_y: null
	,_w: null
	,_h: null
	,_windowX: null
	,_windowY: null
	,_windowW: null
	,_windowH: null
	,currentWindow: null
	,windowEnded: null
	,scrollHandle: null
	,dragHandle: null
	,windowHeaderW: null
	,windowHeaderH: null
	,restoreX: null
	,restoreY: null
	,textSelectedHandle: null
	,textSelected: null
	,submitTextHandle: null
	,textToSubmit: null
	,tabPressed: null
	,tabPressedHandle: null
	,comboSelectedHandle: null
	,comboSelectedWindow: null
	,comboSelectedAlign: null
	,comboSelectedTexts: null
	,comboSelectedLabel: null
	,comboSelectedX: null
	,comboSelectedY: null
	,comboSelectedW: null
	,comboSearchBar: null
	,submitComboHandle: null
	,comboToSubmit: null
	,comboInitialValue: null
	,tooltipText: null
	,tooltipImg: null
	,tooltipImgMaxWidth: null
	,tooltipInvertY: null
	,tooltipX: null
	,tooltipY: null
	,tooltipShown: null
	,tooltipWait: null
	,tooltipTime: null
	,tabNames: null
	,tabColors: null
	,tabHandle: null
	,tabScroll: null
	,tabVertical: null
	,sticky: null
	,scissor: null
	,elementsBaked: null
	,checkSelectImage: null
});
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
{
	String.prototype.__class__ = $hxClasses["String"] = String;
	String.__name__ = "String";
	$hxClasses["Array"] = Array;
	Array.__name__ = "Array";
	Date.prototype.__class__ = $hxClasses["Date"] = Date;
	Date.__name__ = "Date";
	var Int = { };
	var Dynamic = { };
	var Float = Number;
	var Bool = Boolean;
	var Class = { };
	var Enum = { };
}
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
Main.projectName = "SteelSoul";
Main.projectVersion = "1.0.2";
Main.projectPackage = "arm";
iron_Trait._hx_skip_constructor = false;
arm_PlayerController.rotationSpeed = 1.0;
armory_data_Config.configLoaded = false;
armory_renderpath_Downsampler.currentMipLevel = 0;
armory_renderpath_Downsampler.numMipLevels = 0;
armory_renderpath_Downsampler.isRegistered = false;
armory_renderpath_Inc.superSample = 1.0;
armory_renderpath_Inc.pointIndex = 0;
armory_renderpath_Inc.spotIndex = 0;
armory_renderpath_Inc.lastFrame = -1;
armory_renderpath_Inc.shadowsLogicTime = 0.0;
armory_renderpath_Inc.shadowsRenderTime = 0.0;
armory_renderpath_Inc.startShadowsLogicTime = 0.0;
armory_renderpath_Inc.startShadowsRenderTime = 0.0;
armory_renderpath_Inc.callBackSetup = false;
armory_renderpath_NishitaData.lutHeightSteps = 128;
armory_renderpath_NishitaData.lutAngleSteps = 128;
armory_renderpath_NishitaData.jSteps = 8;
armory_renderpath_NishitaData.radiusAtmo = 6420.0;
armory_renderpath_NishitaData.radiusPlanet = 6360.0;
armory_renderpath_NishitaData.rayleighCoeff = new iron_math_Vec3(5.5e-6,13.0e-6,22.4e-6);
armory_renderpath_NishitaData.rayleighScale = 8e3;
armory_renderpath_NishitaData.mieCoeff = 2e-5;
armory_renderpath_NishitaData.mieScale = 1.2e3;
armory_renderpath_NishitaData.ozoneCoeff = new iron_math_Vec3(1.59051840791988e-6,0.00000096707041180970,0.00000007309568762914);
armory_renderpath_Postprocess.colorgrading_global_uniforms = [[6500.0,1.0,0.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0]];
armory_renderpath_Postprocess.colorgrading_shadow_uniforms = [[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0]];
armory_renderpath_Postprocess.colorgrading_midtone_uniforms = [[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0]];
armory_renderpath_Postprocess.colorgrading_highlight_uniforms = [[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0]];
armory_renderpath_Postprocess.camera_uniforms = [1.0,2.8333,100.0,0.0,0.01,1,10.0,160.0,128,0,2.0,2.0,0.25,0.7];
armory_renderpath_Postprocess.tonemapper_uniforms = [1.0,1.0,1.0,1.0,1.0];
armory_renderpath_Postprocess.letterbox_uniforms = [[0.0,0.0,0.0],[0.1]];
armory_renderpath_Postprocess.ssr_uniforms = [0.04,0.05,5.0,5.0,0.6];
armory_renderpath_Postprocess.bloom_uniforms = [0.8,0.5,0.05,0.0];
armory_renderpath_Postprocess.ssao_uniforms = [1.0,1.0,8];
armory_renderpath_Postprocess.lenstexture_uniforms = [0.1,0.5,0.1,2.5,2.0];
armory_renderpath_Postprocess.chromatic_aberration_uniforms = [2.0,32];
armory_renderpath_RenderPathCreator.setTargetMeshes = armory_renderpath_RenderPathDeferred.setTargetMeshes;
armory_renderpath_RenderPathCreator.drawMeshes = armory_renderpath_RenderPathDeferred.drawMeshes;
armory_renderpath_RenderPathCreator.applyConfig = armory_renderpath_RenderPathDeferred.applyConfig;
armory_system_AssertLevel.Warning = 0;
armory_system_AssertLevel.Error = 1;
armory_system_AssertLevel.NoAssertions = 2;
armory_trait_internal_CameraController.keyUp = "w";
armory_trait_internal_CameraController.keyDown = "s";
armory_trait_internal_CameraController.keyLeft = "a";
armory_trait_internal_CameraController.keyRight = "d";
armory_trait_internal_CameraController.keyStrafeUp = "e";
armory_trait_internal_CameraController.keyStrafeDown = "q";
armory_trait_ThirdPersonController.rotationSpeed = 1.0;
armory_trait_WalkNavigation.enabled = true;
armory_trait_WalkNavigation.keyUp = "w";
armory_trait_WalkNavigation.keyDown = "s";
armory_trait_WalkNavigation.keyLeft = "a";
armory_trait_WalkNavigation.keyRight = "d";
armory_trait_WalkNavigation.keyStrafeUp = "e";
armory_trait_WalkNavigation.keyStrafeDown = "q";
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_App.pauseUpdates = false;
iron_App.endFrameCallbacks = [];
iron_App.lastw = -1;
iron_App.lasth = -1;
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLights = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.cachedVideos = new haxe_ds_StringMap();
iron_data_Data.cachedFonts = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLights = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_Data.loadingVideos = new haxe_ds_StringMap();
iron_data_Data.loadingFonts = new haxe_ds_StringMap();
iron_data_Data.sep = "/";
iron_data_Data.dataPath = "";
iron_system_Input.occupied = false;
iron_system_Input.gamepads = [];
iron_system_Input.registered = false;
iron_object_Object._hx_skip_constructor = false;
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
kha_math_FastMatrix4.width = 4;
kha_math_FastMatrix4.height = 4;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_Quat.helpVec0 = new iron_math_Vec4();
iron_math_Quat.helpVec1 = new iron_math_Vec4();
iron_math_Quat.helpVec2 = new iron_math_Vec4();
iron_math_Quat.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_Quat.xAxis = new iron_math_Vec4(1.0,0.0,0.0);
iron_math_Quat.yAxis = new iron_math_Vec4(0.0,1.0,0.0);
iron_math_Quat.SQRT2 = 1.4142135623730951;
iron_Scene.uidCounter = 0;
iron_Scene.framePassed = true;
iron_system_Time.scale = 1.0;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
armory_trait_internal_Bridge.App = iron_App;
armory_trait_internal_Bridge.Scene = iron_Scene;
armory_trait_internal_Bridge.Time = iron_system_Time;
armory_trait_internal_Bridge.Input = iron_system_Input;
armory_trait_internal_Bridge.Object = iron_object_Object;
armory_trait_internal_Bridge.Data = iron_data_Data;
armory_trait_internal_Bridge.Vec4 = iron_math_Vec4;
armory_trait_internal_Bridge.Quat = iron_math_Quat;
armory_trait_internal_DebugConsole.visible = true;
armory_trait_internal_DebugConsole.traceWithPosition = true;
armory_trait_internal_DebugConsole.fpsAvg = 0.0;
armory_trait_internal_DebugConsole.lrow = [0.5,0.5];
armory_trait_internal_DebugConsole.row4 = [0.25,0.25,0.25,0.25];
armory_trait_internal_DebugConsole.debugFloat = 1.0;
armory_trait_internal_DebugConsole.watchNodes = [];
armory_trait_internal_DebugConsole.positionConsole = 2;
armory_trait_internal_DebugConsole.lastTraces = [""];
armory_trait_internal_DebugDraw.maxLines = 300;
armory_trait_internal_DebugDraw.maxVertices = 1200;
armory_trait_internal_DebugDraw.maxIndices = 1800;
armory_trait_internal_DebugDraw.vx = new iron_math_Vec4();
armory_trait_internal_DebugDraw.vy = new iron_math_Vec4();
armory_trait_internal_DebugDraw.vz = new iron_math_Vec4();
armory_trait_internal_DebugDraw.v1 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.v2 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.t = new iron_math_Vec4();
armory_trait_internal_DebugDraw.midPoint = new iron_math_Vec4();
armory_trait_internal_DebugDraw.midLine = new iron_math_Vec4();
armory_trait_internal_DebugDraw.corner1 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.corner2 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.corner3 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.corner4 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.cameraLook = new iron_math_Vec4();
armory_trait_internal_UniformsManager.floatsRegistered = false;
armory_trait_internal_UniformsManager.floatsMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.vectorsRegistered = false;
armory_trait_internal_UniformsManager.vectorsMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.texturesRegistered = false;
armory_trait_internal_UniformsManager.texturesMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.sceneRemoveInitalized = false;
armory_trait_physics_bullet_PhysicsConstraint.nextId = 0;
armory_trait_physics_bullet_PhysicsConstraint.nullvec = true;
armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = false;
armory_trait_physics_bullet_PhysicsWorld.nullvec = true;
armory_trait_physics_bullet_PhysicsWorld.physTime = 0.0;
armory_trait_physics_bullet_RigidBody.nextId = 0;
armory_trait_physics_bullet_RigidBody.ammoArray = -1;
armory_trait_physics_bullet_RigidBody.nullvec = true;
armory_trait_physics_bullet_RigidBody.quat = new iron_math_Quat();
armory_trait_physics_bullet_RigidBody.CF_STATIC_OBJECT = 1;
armory_trait_physics_bullet_RigidBody.CF_KINEMATIC_OBJECT = 2;
armory_trait_physics_bullet_RigidBody.CF_NO_CONTACT_RESPONSE = 4;
armory_trait_physics_bullet_RigidBody.CF_CHARACTER_OBJECT = 16;
armory_trait_physics_bullet_RigidBody.convexHullCache = new haxe_ds_ObjectMap();
armory_trait_physics_bullet_RigidBody.triangleMeshCache = new haxe_ds_ObjectMap();
armory_trait_physics_bullet_RigidBody.usersCache = new haxe_ds_ObjectMap();
zui_Handle.global = new zui_Handle();
armory_ui_Canvas.defaultFontName = "font_default.ttf";
armory_ui_Canvas.assetMap = new haxe_ds_IntMap();
armory_ui_Canvas.themes = [];
armory_ui_Canvas.events = [];
armory_ui_Canvas.screenW = -1;
armory_ui_Canvas.screenH = -1;
armory_ui_Canvas.locale = "en";
armory_ui_Canvas.h = new zui_Handle();
armory_ui_Canvas.elemId = -1;
armory_ui_Canvas.assetId = -1;
armory_ui_Popup.show = false;
armory_ui_Popup.hwnd = new zui_Handle();
armory_ui_Popup.boxTitle = "";
armory_ui_Popup.boxText = "";
armory_ui_Popup.modalX = 0;
armory_ui_Popup.modalY = 0;
armory_ui_Popup.modalW = 400;
armory_ui_Popup.modalH = 160;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
iron_RenderPath.drawCalls = 0;
iron_RenderPath.batchBuckets = 0;
iron_RenderPath.batchCalls = 0;
iron_RenderPath.culled = 0;
iron_RenderPath.numTrisMesh = 0;
iron_RenderPath.numTrisShadow = 0;
iron_data_ConstData.skydomeIndices = [261,8,7,258,5,4,265,12,11,257,2,156,262,9,8,259,6,5,179,12,265,0,3,2,263,10,9,260,7,6,1,4,3,264,11,10,6,17,16,179,23,12,3,14,13,10,21,20,7,18,17,4,15,14,11,22,21,8,19,18,5,16,15,12,23,22,2,13,156,9,20,19,16,27,26,23,34,33,13,24,156,20,31,30,17,28,27,179,34,23,14,25,24,21,32,31,18,29,28,15,26,25,22,33,32,19,30,29,29,40,39,26,37,36,33,44,43,30,41,40,27,38,37,34,45,44,24,35,156,31,42,41,28,39,38,179,45,34,25,36,35,32,43,42,39,50,49,179,56,45,36,47,46,43,54,53,40,51,50,37,48,47,44,55,54,41,52,51,38,49,48,45,56,55,35,46,156,42,53,52,52,63,62,49,60,59,56,67,66,46,57,156,53,64,63,50,61,60,179,67,56,47,58,57,54,65,64,51,62,61,48,59,58,55,66,65,62,73,72,59,70,69,66,77,76,63,74,73,60,71,70,67,78,77,57,68,156,64,75,74,61,72,71,179,78,67,58,69,68,65,76,75,75,86,85,72,83,82,179,89,78,69,80,79,76,87,86,73,84,83,70,81,80,77,88,87,74,85,84,71,82,81,78,89,88,68,79,156,85,96,95,82,93,92,89,100,99,79,90,156,86,97,96,83,94,93,179,100,89,80,91,90,87,98,97,84,95,94,81,92,91,88,99,98,98,109,108,95,106,105,92,103,102,99,110,109,96,107,106,93,104,103,100,111,110,90,101,156,97,108,107,94,105,104,179,111,100,91,102,101,101,112,156,108,119,118,105,116,115,179,122,111,102,113,112,109,120,119,106,117,116,103,114,113,110,121,120,107,118,117,104,115,114,111,122,121,121,132,131,118,129,128,115,126,125,122,133,132,112,123,156,119,130,129,116,127,126,179,133,122,113,124,123,120,131,130,117,128,127,114,125,124,124,135,134,131,142,141,128,139,138,125,136,135,132,143,142,129,140,139,126,137,136,133,144,143,123,134,156,130,141,140,127,138,137,179,144,133,144,155,154,134,145,156,141,152,151,138,149,148,179,155,144,135,146,145,142,153,152,139,150,149,136,147,146,143,154,153,140,151,150,137,148,147,147,159,158,154,166,165,151,163,162,148,160,159,155,167,166,145,157,156,152,164,163,149,161,160,179,167,155,146,158,157,153,165,164,150,162,161,179,178,167,158,169,168,165,176,175,162,173,172,159,170,169,166,177,176,163,174,173,160,171,170,167,178,177,157,168,156,164,175,174,161,172,171,171,183,182,178,190,189,168,180,156,175,187,186,172,184,183,179,190,178,169,181,180,176,188,187,173,185,184,170,182,181,177,189,188,174,186,185,182,193,192,189,200,199,186,197,196,183,194,193,190,201,200,180,191,156,187,198,197,184,195,194,179,201,190,181,192,191,188,199,198,185,196,195,195,206,205,179,212,201,192,203,202,199,210,209,196,207,206,193,204,203,200,211,210,197,208,207,194,205,204,201,212,211,191,202,156,198,209,208,205,216,215,212,223,222,202,213,156,209,220,219,206,217,216,179,223,212,203,214,213,210,221,220,207,218,217,204,215,214,211,222,221,208,219,218,218,229,228,215,226,225,222,233,232,219,230,229,216,227,226,223,234,233,213,224,156,220,231,230,217,228,227,179,234,223,214,225,224,221,232,231,228,239,238,179,245,234,225,236,235,232,243,242,229,240,239,226,237,236,233,244,243,230,241,240,227,238,237,234,245,244,224,235,156,231,242,241,241,252,251,238,249,248,245,256,255,235,246,156,242,253,252,239,250,249,179,256,245,236,247,246,243,254,253,240,251,250,237,248,247,244,255,254,251,260,259,248,1,0,255,264,263,252,261,260,249,258,1,256,265,264,246,257,156,253,262,261,250,259,258,179,265,256,247,0,257,254,263,262,261,7,260,258,4,1,265,11,264,262,8,261,259,5,258,0,2,257,263,9,262,260,6,259,1,3,0,264,10,263,6,16,5,3,13,2,10,20,9,7,17,6,4,14,3,11,21,10,8,18,7,5,15,4,12,22,11,9,19,8,16,26,15,23,33,22,20,30,19,17,27,16,14,24,13,21,31,20,18,28,17,15,25,14,22,32,21,19,29,18,29,39,28,26,36,25,33,43,32,30,40,29,27,37,26,34,44,33,31,41,30,28,38,27,25,35,24,32,42,31,39,49,38,36,46,35,43,53,42,40,50,39,37,47,36,44,54,43,41,51,40,38,48,37,45,55,44,42,52,41,52,62,51,49,59,48,56,66,55,53,63,52,50,60,49,47,57,46,54,64,53,51,61,50,48,58,47,55,65,54,62,72,61,59,69,58,66,76,65,63,73,62,60,70,59,67,77,66,64,74,63,61,71,60,58,68,57,65,75,64,75,85,74,72,82,71,69,79,68,76,86,75,73,83,72,70,80,69,77,87,76,74,84,73,71,81,70,78,88,77,85,95,84,82,92,81,89,99,88,86,96,85,83,93,82,80,90,79,87,97,86,84,94,83,81,91,80,88,98,87,98,108,97,95,105,94,92,102,91,99,109,98,96,106,95,93,103,92,100,110,99,97,107,96,94,104,93,91,101,90,108,118,107,105,115,104,102,112,101,109,119,108,106,116,105,103,113,102,110,120,109,107,117,106,104,114,103,111,121,110,121,131,120,118,128,117,115,125,114,122,132,121,119,129,118,116,126,115,113,123,112,120,130,119,117,127,116,114,124,113,124,134,123,131,141,130,128,138,127,125,135,124,132,142,131,129,139,128,126,136,125,133,143,132,130,140,129,127,137,126,144,154,143,141,151,140,138,148,137,135,145,134,142,152,141,139,149,138,136,146,135,143,153,142,140,150,139,137,147,136,147,158,146,154,165,153,151,162,150,148,159,147,155,166,154,152,163,151,149,160,148,146,157,145,153,164,152,150,161,149,158,168,157,165,175,164,162,172,161,159,169,158,166,176,165,163,173,162,160,170,159,167,177,166,164,174,163,161,171,160,171,182,170,178,189,177,175,186,174,172,183,171,169,180,168,176,187,175,173,184,172,170,181,169,177,188,176,174,185,173,182,192,181,189,199,188,186,196,185,183,193,182,190,200,189,187,197,186,184,194,183,181,191,180,188,198,187,185,195,184,195,205,194,192,202,191,199,209,198,196,206,195,193,203,192,200,210,199,197,207,196,194,204,193,201,211,200,198,208,197,205,215,204,212,222,211,209,219,208,206,216,205,203,213,202,210,220,209,207,217,206,204,214,203,211,221,210,208,218,207,218,228,217,215,225,214,222,232,221,219,229,218,216,226,215,223,233,222,220,230,219,217,227,216,214,224,213,221,231,220,228,238,227,225,235,224,232,242,231,229,239,228,226,236,225,233,243,232,230,240,229,227,237,226,234,244,233,231,241,230,241,251,240,238,248,237,245,255,244,242,252,241,239,249,238,236,246,235,243,253,242,240,250,239,237,247,236,244,254,243,251,259,250,248,0,247,255,263,254,252,260,251,249,1,248,256,264,255,253,261,252,250,258,249,247,257,246,254,262,253];
iron_data_ConstData.skydomePos = [0.0,0.5,0.86603,0.0,0.70711,0.70711,0.06699,0.25,0.96593,0.12941,0.48296,0.86603,0.18301,0.68301,0.70711,0.22414,0.83652,0.5,0.25,0.93301,0.25882,0.25882,0.96593,-0.0,0.25,0.93301,-0.25882,0.22414,0.83652,-0.5,0.18301,0.68301,-0.70711,0.12941,0.48296,-0.86603,0.06699,0.25,-0.96593,0.12941,0.22414,0.96593,0.25,0.43301,0.86603,0.35355,0.61237,0.70711,0.43301,0.75,0.5,0.48296,0.83652,0.25882,0.5,0.86603,-0.0,0.48296,0.83652,-0.25882,0.43301,0.75,-0.5,0.35355,0.61237,-0.70711,0.25,0.43301,-0.86603,0.12941,0.22414,-0.96593,0.18301,0.18301,0.96593,0.35355,0.35355,0.86603,0.5,0.5,0.70711,0.61237,0.61237,0.5,0.68301,0.68301,0.25882,0.70711,0.70711,-0.0,0.68301,0.68301,-0.25882,0.61237,0.61237,-0.5,0.5,0.5,-0.70711,0.35355,0.35355,-0.86603,0.18301,0.18301,-0.96593,0.22414,0.12941,0.96593,0.43301,0.25,0.86603,0.61237,0.35355,0.70711,0.75,0.43301,0.5,0.83652,0.48296,0.25882,0.86603,0.5,-0.0,0.83652,0.48296,-0.25882,0.75,0.43301,-0.5,0.61237,0.35355,-0.70711,0.43301,0.25,-0.86603,0.22414,0.12941,-0.96593,0.25,0.06699,0.96593,0.48296,0.12941,0.86603,0.68301,0.18301,0.70711,0.83652,0.22414,0.5,0.93301,0.25,0.25882,0.96593,0.25882,-0.0,0.93301,0.25,-0.25882,0.83652,0.22414,-0.5,0.68301,0.18301,-0.70711,0.48296,0.12941,-0.86603,0.25,0.06699,-0.96593,0.25882,-0.0,0.96593,0.5,-0.0,0.86603,0.70711,-0.0,0.70711,0.86603,0.0,0.5,0.96593,-0.0,0.25882,1.0,-0.0,-0.0,0.96593,-0.0,-0.25882,0.86603,-0.0,-0.5,0.70711,-0.0,-0.70711,0.5,-0.0,-0.86603,0.25882,-0.0,-0.96593,0.25,-0.06699,0.96593,0.48296,-0.12941,0.86603,0.68301,-0.18301,0.70711,0.83652,-0.22414,0.5,0.93301,-0.25,0.25882,0.96593,-0.25882,-0.0,0.93301,-0.25,-0.25882,0.83652,-0.22414,-0.5,0.68301,-0.18301,-0.70711,0.48296,-0.12941,-0.86603,0.25,-0.06699,-0.96593,0.22414,-0.12941,0.96593,0.43301,-0.25,0.86603,0.61237,-0.35355,0.70711,0.75,-0.43301,0.5,0.83652,-0.48296,0.25882,0.86603,-0.5,-0.0,0.83652,-0.48296,-0.25882,0.75,-0.43301,-0.5,0.61237,-0.35355,-0.70711,0.43301,-0.25,-0.86603,0.22414,-0.12941,-0.96593,0.18301,-0.18301,0.96593,0.35355,-0.35355,0.86603,0.5,-0.5,0.70711,0.61237,-0.61237,0.5,0.68301,-0.68301,0.25882,0.70711,-0.70711,-0.0,0.68301,-0.68301,-0.25882,0.61237,-0.61237,-0.5,0.5,-0.5,-0.70711,0.35355,-0.35355,-0.86603,0.18301,-0.18301,-0.96593,0.12941,-0.22414,0.96593,0.25,-0.43301,0.86603,0.35355,-0.61237,0.70711,0.43301,-0.75,0.5,0.48296,-0.83652,0.25882,0.5,-0.86603,-0.0,0.48296,-0.83652,-0.25882,0.43301,-0.75,-0.5,0.35355,-0.61237,-0.70711,0.25,-0.43301,-0.86603,0.12941,-0.22414,-0.96593,0.06699,-0.25,0.96593,0.12941,-0.48296,0.86603,0.18301,-0.68301,0.70711,0.22414,-0.83652,0.5,0.25,-0.93301,0.25882,0.25882,-0.96593,-0.0,0.25,-0.93301,-0.25882,0.22414,-0.83652,-0.5,0.18301,-0.68301,-0.70711,0.12941,-0.48296,-0.86603,0.06699,-0.25,-0.96593,0.0,-0.25882,0.96593,-0.0,-0.5,0.86603,0.0,-0.70711,0.70711,0.0,-0.86603,0.5,0.0,-0.96593,0.25882,-0.0,-1.0,-0.0,0.0,-0.96593,-0.25882,0.0,-0.86603,-0.5,0.0,-0.70711,-0.70711,0.0,-0.5,-0.86603,0.0,-0.25882,-0.96593,-0.06699,-0.25,0.96593,-0.12941,-0.48296,0.86603,-0.18301,-0.68301,0.70711,-0.22414,-0.83652,0.5,-0.25,-0.93301,0.25882,-0.25882,-0.96593,-0.0,-0.25,-0.93301,-0.25882,-0.22414,-0.83652,-0.5,-0.18301,-0.68301,-0.70711,-0.12941,-0.48296,-0.86603,-0.06699,-0.25,-0.96593,-0.12941,-0.22414,0.96593,-0.25,-0.43301,0.86603,-0.35355,-0.61237,0.70711,-0.43301,-0.75,0.5,-0.48296,-0.83652,0.25882,-0.5,-0.86603,-0.0,-0.48296,-0.83652,-0.25882,-0.43301,-0.75,-0.5,-0.35355,-0.61237,-0.70711,-0.25,-0.43301,-0.86603,-0.12941,-0.22414,-0.96593,-0.0,-0.0,1.0,-0.18301,-0.18301,0.96593,-0.35355,-0.35355,0.86603,-0.5,-0.5,0.70711,-0.61237,-0.61237,0.5,-0.68301,-0.68301,0.25882,-0.70711,-0.70711,-0.0,-0.68301,-0.68301,-0.25882,-0.61237,-0.61237,-0.5,-0.5,-0.5,-0.70711,-0.35355,-0.35355,-0.86603,-0.18301,-0.18301,-0.96593,-0.22414,-0.12941,0.96593,-0.43301,-0.25,0.86603,-0.61237,-0.35355,0.70711,-0.75,-0.43301,0.5,-0.83652,-0.48296,0.25882,-0.86602,-0.5,-0.0,-0.83652,-0.48296,-0.25882,-0.75,-0.43301,-0.5,-0.61237,-0.35355,-0.70711,-0.43301,-0.25,-0.86603,-0.22414,-0.12941,-0.96593,0.0,-0.0,-1.0,-0.25,-0.06699,0.96593,-0.48296,-0.12941,0.86603,-0.68301,-0.18301,0.70711,-0.83652,-0.22414,0.5,-0.93301,-0.25,0.25882,-0.96593,-0.25882,-0.0,-0.93301,-0.25,-0.25882,-0.83652,-0.22414,-0.5,-0.68301,-0.18301,-0.70711,-0.48296,-0.12941,-0.86603,-0.25,-0.06699,-0.96593,-0.25882,-0.0,0.96593,-0.5,-0.0,0.86603,-0.70711,-0.0,0.70711,-0.86603,-0.0,0.5,-0.96593,-0.0,0.25882,-1.0,-0.0,-0.0,-0.96593,-0.0,-0.25882,-0.86603,-0.0,-0.5,-0.70711,-0.0,-0.70711,-0.5,-0.0,-0.86603,-0.25882,-0.0,-0.96593,-0.25,0.06699,0.96593,-0.48296,0.12941,0.86603,-0.68301,0.18301,0.70711,-0.83652,0.22414,0.5,-0.93301,0.25,0.25882,-0.96593,0.25882,-0.0,-0.93301,0.25,-0.25882,-0.83652,0.22414,-0.5,-0.68301,0.18301,-0.70711,-0.48296,0.12941,-0.86603,-0.25,0.06699,-0.96593,-0.22414,0.12941,0.96593,-0.43301,0.25,0.86603,-0.61237,0.35355,0.70711,-0.75,0.43301,0.5,-0.83652,0.48296,0.25882,-0.86602,0.5,-0.0,-0.83652,0.48296,-0.25882,-0.75,0.43301,-0.5,-0.61237,0.35355,-0.70711,-0.43301,0.25,-0.86603,-0.22414,0.12941,-0.96593,-0.18301,0.18301,0.96593,-0.35355,0.35355,0.86603,-0.5,0.5,0.70711,-0.61237,0.61237,0.5,-0.68301,0.68301,0.25882,-0.70711,0.70711,-0.0,-0.68301,0.68301,-0.25882,-0.61237,0.61237,-0.5,-0.5,0.5,-0.70711,-0.35355,0.35355,-0.86603,-0.18301,0.18301,-0.96593,-0.12941,0.22414,0.96593,-0.25,0.43301,0.86603,-0.35355,0.61237,0.70711,-0.43301,0.75,0.5,-0.48296,0.83652,0.25882,-0.5,0.86602,-0.0,-0.48296,0.83652,-0.25882,-0.43301,0.75,-0.5,-0.35355,0.61237,-0.70711,-0.25,0.43301,-0.86603,-0.12941,0.22414,-0.96593,-0.06699,0.25,0.96593,-0.12941,0.48296,0.86603,-0.18301,0.68301,0.70711,-0.22414,0.83652,0.5,-0.25,0.93301,0.25882,-0.25882,0.96593,-0.0,-0.25,0.93301,-0.25882,-0.22414,0.83652,-0.5,-0.18301,0.68301,-0.70711,-0.12941,0.48296,-0.86603,-0.06699,0.25,-0.96593,-0.0,0.25882,0.96593,-0.0,0.86603,0.5,-0.0,0.96593,0.25882,0.0,1.0,-0.0,-0.0,0.96593,-0.25882,-0.0,0.86603,-0.5,0.0,0.70711,-0.70711,0.0,0.5,-0.86603,-0.0,0.25882,-0.96593];
iron_data_ConstData.skydomeNor = [0.0,-0.50807,-0.86132,0.0,-0.71246,-0.70172,-0.0696,-0.25975,-0.96317,-0.1315,-0.49075,-0.86132,-0.1844,-0.68818,-0.70172,-0.22483,-0.83909,-0.49536,-0.25018,-0.9337,-0.25615,-0.25882,-0.96593,-0.0,-0.25018,-0.9337,0.25615,-0.22483,-0.83909,0.49536,-0.1844,-0.68818,0.70172,-0.1315,-0.49075,0.86132,-0.0696,-0.25975,0.96317,-0.13445,-0.23288,-0.96317,-0.25403,-0.44,-0.86132,-0.35623,-0.61701,-0.70172,-0.43434,-0.75231,-0.49536,-0.48332,-0.83713,-0.25615,-0.5,-0.86603,0.0,-0.48332,-0.83713,0.25615,-0.43434,-0.75231,0.49536,-0.35623,-0.61701,0.70172,-0.25403,-0.44,0.86132,-0.13445,-0.23288,0.96317,-0.19015,-0.19015,-0.96317,-0.35926,-0.35926,-0.86132,-0.50378,-0.50378,-0.70172,-0.61426,-0.61426,-0.49536,-0.68352,-0.68352,-0.25615,-0.70711,-0.70711,0.0,-0.68352,-0.68352,0.25615,-0.61426,-0.61426,0.49536,-0.50378,-0.50378,0.70172,-0.35926,-0.35926,0.86132,-0.19015,-0.19015,0.96317,-0.23288,-0.13445,-0.96317,-0.44,-0.25403,-0.86132,-0.61701,-0.35623,-0.70172,-0.75231,-0.43434,-0.49536,-0.83713,-0.48332,-0.25615,-0.86603,-0.5,0.0,-0.83713,-0.48332,0.25615,-0.75231,-0.43434,0.49536,-0.61701,-0.35623,0.70172,-0.44,-0.25403,0.86132,-0.23288,-0.13445,0.96317,-0.25975,-0.0696,-0.96317,-0.49075,-0.1315,-0.86132,-0.68818,-0.1844,-0.70172,-0.83909,-0.22483,-0.49536,-0.9337,-0.25018,-0.25615,-0.96593,-0.25882,0.0,-0.9337,-0.25018,0.25615,-0.83909,-0.22483,0.49536,-0.68818,-0.1844,0.70172,-0.49075,-0.1315,0.86132,-0.25975,-0.0696,0.96317,-0.26891,-0.0,-0.96317,-0.50807,0.0,-0.86132,-0.71246,0.0,-0.70172,-0.86869,-0.0,-0.49536,-0.96664,0.0,-0.25615,-1.0,0.0,0.0,-0.96664,0.0,0.25615,-0.86869,0.0,0.49536,-0.71246,0.0,0.70172,-0.50807,0.0,0.86132,-0.26891,-0.0,0.96317,-0.25975,0.0696,-0.96317,-0.49075,0.1315,-0.86132,-0.68818,0.1844,-0.70172,-0.83909,0.22483,-0.49536,-0.9337,0.25018,-0.25615,-0.96593,0.25882,0.0,-0.9337,0.25018,0.25615,-0.83909,0.22483,0.49536,-0.68818,0.1844,0.70172,-0.49075,0.1315,0.86132,-0.25975,0.0696,0.96317,-0.23288,0.13445,-0.96317,-0.44,0.25403,-0.86132,-0.61701,0.35623,-0.70172,-0.75231,0.43434,-0.49536,-0.83713,0.48332,-0.25615,-0.86603,0.5,0.0,-0.83713,0.48332,0.25615,-0.75231,0.43434,0.49536,-0.61701,0.35623,0.70172,-0.44,0.25403,0.86132,-0.23288,0.13445,0.96317,-0.19015,0.19015,-0.96317,-0.35926,0.35926,-0.86132,-0.50378,0.50378,-0.70172,-0.61426,0.61426,-0.49536,-0.68352,0.68352,-0.25615,-0.70711,0.70711,0.0,-0.68352,0.68352,0.25615,-0.61426,0.61426,0.49536,-0.50378,0.50378,0.70172,-0.35926,0.35926,0.86132,-0.19015,0.19015,0.96317,-0.13445,0.23288,-0.96317,-0.25403,0.44,-0.86132,-0.35623,0.61701,-0.70172,-0.43434,0.75231,-0.49536,-0.48332,0.83713,-0.25615,-0.5,0.86603,0.0,-0.48332,0.83713,0.25615,-0.43434,0.75231,0.49536,-0.35623,0.61701,0.70172,-0.25403,0.44,0.86132,-0.13445,0.23288,0.96317,-0.0696,0.25975,-0.96317,-0.1315,0.49075,-0.86132,-0.1844,0.68818,-0.70172,-0.22483,0.83909,-0.49536,-0.25018,0.9337,-0.25615,-0.25882,0.96593,0.0,-0.25018,0.9337,0.25615,-0.22483,0.83909,0.49536,-0.1844,0.68818,0.70172,-0.1315,0.49075,0.86132,-0.0696,0.25975,0.96317,-0.0,0.26891,-0.96317,0.0,0.50807,-0.86132,0.0,0.71246,-0.70172,-0.0,0.86869,-0.49536,0.0,0.96664,-0.25615,0.0,1.0,0.0,-0.0,0.96664,0.25615,0.0,0.86869,0.49536,0.0,0.71246,0.70172,0.0,0.50807,0.86132,0.0,0.26891,0.96317,0.0696,0.25975,-0.96317,0.1315,0.49075,-0.86132,0.1844,0.68818,-0.70172,0.22483,0.83909,-0.49536,0.25018,0.9337,-0.25615,0.25882,0.96593,0.0,0.25018,0.9337,0.25615,0.22483,0.83909,0.49536,0.1844,0.68818,0.70172,0.1315,0.49075,0.86132,0.0696,0.25975,0.96317,0.13445,0.23288,-0.96317,0.25403,0.44,-0.86132,0.35623,0.61701,-0.70172,0.43434,0.75231,-0.49536,0.48332,0.83713,-0.25615,0.5,0.86603,0.0,0.48332,0.83713,0.25615,0.43434,0.75231,0.49536,0.35623,0.61701,0.70172,0.25403,0.44,0.86132,0.13445,0.23288,0.96317,0.0,0.0,-1.0,0.19015,0.19015,-0.96317,0.35926,0.35926,-0.86132,0.50378,0.50378,-0.70172,0.61426,0.61426,-0.49536,0.68352,0.68352,-0.25615,0.70711,0.70711,0.0,0.68352,0.68352,0.25615,0.61426,0.61426,0.49536,0.50378,0.50378,0.70172,0.35926,0.35926,0.86132,0.19015,0.19015,0.96317,0.23288,0.13445,-0.96317,0.44,0.25403,-0.86132,0.61701,0.35623,-0.70172,0.75231,0.43434,-0.49536,0.83713,0.48332,-0.25615,0.86603,0.5,0.0,0.83713,0.48332,0.25615,0.75231,0.43434,0.49536,0.61701,0.35623,0.70172,0.44,0.25403,0.86132,0.23288,0.13445,0.96317,0.0,-0.0,1.0,0.25975,0.0696,-0.96317,0.49075,0.1315,-0.86132,0.68818,0.1844,-0.70172,0.83909,0.22483,-0.49536,0.9337,0.25018,-0.25615,0.96593,0.25882,0.0,0.9337,0.25018,0.25615,0.83909,0.22483,0.49536,0.68818,0.1844,0.70172,0.49075,0.1315,0.86132,0.25975,0.0696,0.96317,0.26891,-0.0,-0.96317,0.50807,-0.0,-0.86132,0.71246,0.0,-0.70172,0.86869,0.0,-0.49536,0.96664,-0.0,-0.25615,1.0,-0.0,0.0,0.96664,0.0,0.25615,0.86869,0.0,0.49536,0.71246,-0.0,0.70172,0.50807,0.0,0.86132,0.26891,-0.0,0.96317,0.25975,-0.0696,-0.96317,0.49075,-0.1315,-0.86132,0.68818,-0.1844,-0.70172,0.83909,-0.22483,-0.49536,0.9337,-0.25018,-0.25615,0.96593,-0.25882,0.0,0.9337,-0.25018,0.25615,0.83909,-0.22483,0.49536,0.68818,-0.1844,0.70172,0.49075,-0.1315,0.86132,0.25975,-0.0696,0.96317,0.23288,-0.13445,-0.96317,0.44,-0.25403,-0.86132,0.61701,-0.35623,-0.70172,0.75231,-0.43434,-0.49536,0.83713,-0.48332,-0.25615,0.86603,-0.5,0.0,0.83713,-0.48332,0.25615,0.75231,-0.43434,0.49536,0.617,-0.35623,0.70172,0.44,-0.25403,0.86132,0.23288,-0.13445,0.96317,0.19015,-0.19015,-0.96317,0.35926,-0.35926,-0.86132,0.50378,-0.50378,-0.70172,0.61426,-0.61426,-0.49536,0.68352,-0.68352,-0.25615,0.70711,-0.70711,-0.0,0.68352,-0.68352,0.25615,0.61426,-0.61426,0.49536,0.50378,-0.50378,0.70172,0.35926,-0.35926,0.86132,0.19015,-0.19015,0.96317,0.13445,-0.23288,-0.96317,0.25403,-0.44,-0.86132,0.35623,-0.61701,-0.70172,0.43434,-0.75231,-0.49536,0.48332,-0.83713,-0.25615,0.5,-0.86603,0.0,0.48332,-0.83713,0.25615,0.43434,-0.75231,0.49536,0.35623,-0.617,0.70172,0.25403,-0.44,0.86132,0.13445,-0.23288,0.96317,0.0696,-0.25975,-0.96317,0.1315,-0.49075,-0.86132,0.1844,-0.68818,-0.70172,0.22483,-0.83909,-0.49536,0.25018,-0.9337,-0.25615,0.25882,-0.96593,0.0,0.25018,-0.9337,0.25615,0.22483,-0.83909,0.49536,0.1844,-0.68818,0.70172,0.1315,-0.49075,0.86132,0.0696,-0.25975,0.96317,0.0,-0.26891,-0.96317,0.0,-0.86869,-0.49536,0.0,-0.96664,-0.25615,0.0,-1.0,-0.0,0.0,-0.96664,0.25615,0.0,-0.86869,0.49536,0.0,-0.71246,0.70172,0.0,-0.50807,0.86132,0.0,-0.26891,0.96317];
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_data_ShaderData.shaderPath = "../krom-resources/";
iron_data_ShaderData.shaderExt = ".d3d11";
iron_math_RayCaster.VPInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_RayCaster.PInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_RayCaster.VInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_RayCaster.loc = new iron_math_Vec4();
iron_math_RayCaster.nor = new iron_math_Vec4();
iron_math_RayCaster.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation._hx_skip_constructor = false;
iron_object_Animation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_Animation.q3 = new iron_math_Quat();
iron_object_Animation.vp = new iron_math_Vec4();
iron_object_Animation.vs = new iron_math_Vec4();
iron_object_Animation.animationTime = 0.0;
iron_object_Animation.startTime = 0.0;
iron_object_BoneAnimation.skinMaxBones = 128;
iron_object_BoneAnimation.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.bm = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.wm = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.vpos = new iron_math_Vec4();
iron_object_BoneAnimation.vscl = new iron_math_Vec4();
iron_object_BoneAnimation.q1 = new iron_math_Quat();
iron_object_BoneAnimation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.q3 = new iron_math_Quat();
iron_object_BoneAnimation.vpos2 = new iron_math_Vec4();
iron_object_BoneAnimation.vscl2 = new iron_math_Vec4();
iron_object_BoneAnimation.v1 = new iron_math_Vec4();
iron_object_BoneAnimation.v2 = new iron_math_Vec4();
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_CameraObject.q = new iron_math_Quat();
iron_object_CameraObject.sphereCenter = new iron_math_Vec4();
iron_object_CameraObject.vcenter = new iron_math_Vec4();
iron_object_CameraObject.vup = new iron_math_Vec4();
iron_object_LightObject.cascadeCount = 1;
iron_object_LightObject.cascadeSplitFactor = 0.8;
iron_object_LightObject.cascadeBounds = 1.0;
iron_object_LightObject.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_LightObject.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_LightObject.eye = new iron_math_Vec4();
iron_object_Transform.temp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Transform.q = new iron_math_Quat();
kha_math_FastMatrix3.width = 3;
kha_math_FastMatrix3.height = 3;
iron_object_Uniforms.biasMat = new iron_math_Mat4(0.5,0.0,0.0,0.5,0.0,-0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat3 = new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
iron_object_Uniforms.helpVec = new iron_math_Vec4();
iron_object_Uniforms.helpVec2 = new iron_math_Vec4();
iron_object_Uniforms.helpQuat = new iron_math_Quat();
iron_object_Uniforms.defaultFilter = 1;
iron_system_VirtualInput._hx_skip_constructor = false;
iron_system_Mouse.buttons = ["left","right","middle","side1","side2"];
iron_system_Pen.buttons = ["tip"];
iron_system_Keyboard.keys = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","space","backspace","tab","enter","shift","control","alt","capslock","win","escape","delete","up","down","left","right","back",",",".",":",";","<","=",">","?","!","\"","#","$","%","&","_","(",")","*","|","{","}","[","]","~","`","/","\\","@","+","-","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12"];
iron_system_Gamepad.buttonsPS = ["cross","circle","square","triangle","l1","r1","l2","r2","share","options","l3","r3","up","down","left","right","home","touchpad"];
iron_system_Gamepad.buttonsXBOX = ["a","b","x","y","l1","r1","l2","r2","share","options","l3","r3","up","down","left","right","home","touchpad"];
iron_system_Gamepad.buttons = iron_system_Gamepad.buttonsPS;
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Assets.videos = new kha__$Assets_VideoList();
kha_Color.Black = -16777216;
kha_Color.White = -1;
kha_Color.Red = -65536;
kha_Color.Blue = -16776961;
kha_Color.Green = -16711936;
kha_Color.Magenta = -65281;
kha_Color.Yellow = -256;
kha_Color.Cyan = -16711681;
kha_Color.Purple = -8388480;
kha_Color.Pink = -16181;
kha_Color.Orange = -23296;
kha_Color.Transparent = 0;
kha_Color.invMaxChannelValue = 0.00392156862745098;
kha_FontStyle.Default = new kha_FontStyle(false,false,false);
kha_Scheduler.timeWarpSaveTime = 10.0;
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.GroundMaterial_mesh_fragData0 = "s22367:AAAARFhCQ5lhEDiZMZriNRIWyfqfdZ8BAAAAhEEAAAYAAAA4AAAAhAAAALgAAAAEAQAAAAMAAHwDAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAABwcAAFRFWENPT1JEAKurq09TR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8AAAA4AAAAAQAAAAAAAAADAAAAAQAAAA8AAABTVl9UYXJnZXQAq6tTSERS9AEAAEAAAAB9AAAAYhAAA3IQEAAAAAAAZQAAA:IgEAAAAAAAZQAAA:IgEAABAAAAaAAAAgMAAAAQAAAHEgAQAAAAAABGEhAAAAAAAEYSEAAAAAAARAAABRIAEAAAAAAACgAQAAAAAAA4AAAHcgAQAAAAAAAGABAAAAAAACYZEAAAAAAAAAAACYIAEAAAAAAAKgAQgIEAAAAAAAAAGgAQgIEAAAAAAAAAAAAACIIAEAAAAAAACgAQgIEAAAAAAAAAOgAQAAAAAAAOAAAHcgAQAAAAAABGAhAAAAAAAPYPEAAAAAAAAAAACzIAEAABAAAAZgoQgMEAAAAAAAAAAkAAAAAAgD8AAIA:AAAAAAAAAAAdAAAKcgAQAAIAAABGAhAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAANwAAD5IAEAAAAAAAVgkQAAIAAAACQAAAAACAPwAAAAAAAAAAAACAPwJAAAAAAIC:AAAAAAAAAAAAAIC:OAAAB5IAEAAAAAAABgwQAAAAAAAGBBAAAQAAADcAAAkyIBAAAAAAAAYAEAACAAAAlgUQAAAAAADGABAAAAAAADYAAAjCIBAAAAAAAAJAAAAAAAAAAAAAAMzMTD4AQN9ENgAACPIgEAABAAAAAkAAAM7MTD:Y8N096qqKPQCAf0M%AAABU1RBVHQAAAAOAAAAAwAAAAAAAAADAAAACQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIAPgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAAB8AAACgzggAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAANiKRdZvhg5HopN:GL:6aesAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzaW50IGkpCnsKICAgIHVpbnQgYml0c0ludCA9IGkgPDwgMTJ1OwogICAgdWludCBiaXRzRmxvYXQgPSB1aW50KGYgKiA0MDk1LjBmKTsKICAgIHJldHVybiBmbG9hdChiaXRzSW50IHwgYml0c0Zsb2F0KTsKfQoKZmxvYXQgcGFja0Zsb2F0MihmbG9hdCBmMSwgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wZikgKyBtaW4oZjIsIDAuOTkwMDAwMDA5NTM2NzQzMTY0MDYyNWYpOwp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgZmxvYXQzIGJhc2Vjb2wgPSBmbG9hdDMoMC44MDAwMDAwNzE1MjU1NzM3MzA0Njg3NWYsIDAuMTA4MzY5NTI5MjQ3MjgzOTM1NTQ2ODc1ZiwgMC4wNjc3MDg4MDUyMDM0Mzc4MDUxNzU3ODEyNWYpOwogICAgZmxvYXQgcm91Z2huZXNzID0gMC4xOTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzVmOwogICAgZmxvYXQgbWV0YWxsaWMgPSAwLjQzNjM2MzYzNzQ0NzM1NzE3NzczNDM3NWY7CiAgICBmbG9hdCBM6AMAGaIDAAhoAAAewgIAxloAAMWpAgD%9AIAwcMAANkqAgCgSgMAUIUBACYXAwB1gwEAZP0BAFocAACF9gpYyBmbG9hdDMgd25vcm1hbDsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3JbMl07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIHdub3JtYWwgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3JbMl0gOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKZmxvYXQgcGFja0Zsb2F0SW50MTYoZmxvYXQgZiwgdWludCBpKQp7CiAgICB1aW50IGJpdHNJbnQgPSBpIDw8IDEydTsKICAgIHVpbnQgYml0c0Zsb2F0ID0gdWludChmICogNDA5NS4wZik7CiAgICByZXR1cm4gZmxvYXQoYml0c0ludCB8IGJpdHNGbG9hdCk7Cn0KCmZsb2F0IHBhY2tGbG9hdDIoZmxvYXQgZjEsIGZsb2F0IGYyKQp7CiAgICByZXR1cm4gZmxvb3IoZjEgKiAyNTUuMGYpICsgbWluKGYyLCAwLjk5MDAwMDAwOTUzNjc0MzE2NDA2MjVmKTsKfQoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBmbG9hdDMgbiA9IG5vcm1hbGl6ZSh3bm9ybWFsKTsKICAgIGZsb2F0MyBiYXNlY29sID0gZmxvYXQzKDAuODAwMDAwMDcxNTI1NTczNzMwNDY4NzVmLCAwLjEwODM2OTUyOTI0NzI4MzkzNTU0Njg3NWYsIDAuMDY3NzA4ODA1MjAzNDM3ODA1MTc1NzgxMjVmKTsKICAgIGZsb2F0IHJvdWdobmVzcyA9IDAuMTk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ZjsKICAgIGZsb2F0IG1ldGFsbGljID0gMC40MzYzNjM2Mzc0NDczNTcxNzc3MzQzNzVmOwogICAgZmxvYXQgb2NjbHVzaW9uID0gMS4wZjsKICAgIGZsb2F0IHNwZWN1bGFyID0gMC41ZjsKICAgIGZsb2F0MyBlbWlzc2lvbkNvbCA9IDAuMGYueHh4OwogICAgbiAvPSAoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpLnh4eDsKICAgIGZsb2F0MiBfMTA2OwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF8xMDYgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDYgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSBmbG9hdDMoXzEwNi54LCBfMTA2LnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSBmbG9hdDQobi54eSwgcm91Z2huZXNzLCBwYWNrRmxvYXRJbnQxNihtZXRhbGxpYywgMHUpKTsKICAgIGZyYWdDb2xvclsxXSA9IGZsb2F0NChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHdub3JtYWwgPSBzdGFnZV9pbnB1dC53bm9ybWFsOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAP7v:u8BAAAAgwYAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxHcm91bmRNYXRlcmlhbF9tZXNoLmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcZ3JvdW5kbWF0ZXJpYWxfbWVzaC5mcmFnLmhsc2wAc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQ0IGZyYWdDb2xvclsyXTsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDMgd25vcm1hbCA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdDb2xvclsyXSA6IFNWX1RhcmdldDA7Cn07CgpmbG9hdDIgb2N0YWhlZHJvbldyYXAoZmxvYXQyIHYpCnsKICAgIHJldHVybiAoMS4wZi54eCAtIGFicyh2Lnl4KSkgKiBmbG9hdDIoKHYueCA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpLCAodi55ID49IDAuMGYpID8gMS4wZiA6ICgtMS4wZikpOwp9CgpmbG9hdCBwYWNrRmxvYXRJbnQxNihmbG9hdCBmLCB1G%IwAYAAAACZrz20SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAARwAAACgAAAAb4jABQGXLW:YFAAABAAAARgAAAEcgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAuAMAAAAAAADAAQAAAAAAAMABAAAJEAAANAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADQAAAABAMABAAAAABYAUBEBAAUABAAEADQAAAABAMABBAAAABYAUBEBAAUACAAEADQAAAABAMABCAAAADoAPhEIEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAEAAEADQAAAABAMABEAAAABYAUBECAAUAFAAEADQAAAABAMABFAAAABYAUBECAAUAGAAEADQAAAABAMABGAAAABYAUBECAAUAHAAEADQAAAABAMABHAAAABYAUBECAAUAAAAEADQAAAABAMABAAAAABYAUBECAAUABAAEADQAAAABAMABBAAAABYAUBECAAUACAAEADQAAAABAMABCAAAABYAUBECAAUADAAEADQAAAABAMABDAAAAGIATRGAAAAAtAMAAAAQAAAHAAkFDSILIA0wBg4DTAkJDSQGEANgCQUNBQYCDCSArAgACRANIQE0BiEDAAkMDR4GDgNMCQsNKgMkCQUNLwMgCRANIwYQAxwJBQ0FBgIMJICsAAAqAD4RABAAAAgAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAIAAAAABAPAAAAAAABYAUBEAAAUAAAAEAIAAAAABAFABBAAAABYAUBEAAAUABAAEAIAAAAABAFABCAAAADoATREkAgAAsAMAAAEQAAAHAAkFDWoGAgyArICsCAAJDQ0fAYDgAwAJTA1WAywJSw1oAygJDA1pDBw8AEYAPhEOEAAAiAA8b2N0YWhlZHJvbldyYXAgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIwBAAABACQAAAAAABYAUBEAAAUABAAEAIwBAAABACQADAAAAAIAThECAE4RAgAGAPQAAAAYAAAAAQAAABABuTc%45Oq6P0g1uZ85m7EvgAA8gAAAGgBAAAAAAAAAQABAPQBAAAAAAAAHAAAAFwBAAA0AAAAOgAAgDQAAAA6AAAAUAAAADoAAIBQAAAAOgAAAGQAAAA6AACAZAAAADoAAACAAAAAOgAAgIAAAAA6AAAApAAAADoAAICkAAAAOgAAAMQAAAA6AACAxAAAADoAAADgAAAAOgAAgOAAAAA6AAAADAEAADoAAIAMAQAAOgAAADQBAAA6AACANAEAADoAAABwAQAAOgAAgHABAAA6AAAAjAEAADoAAICMAQAAOgAAALABAAA9AACAsAEAAD0AAADQAQAAPQAAgNABAAA9AAAA8AEAAD0AAIDwAQAAPQAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAGAAFABgABQAYAAUAGAD2AAAAHAAAAAAAAAAAEAAAAAAAACAAAAABEAAAAAAAAA8AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAQEAAATAEAAAoA::8EAAAA::8DAAAAAABAAAAAQAAAAAgAAABIAAAAAAAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8RYAAxINFQMAABAAAAAAd25vcm1hbADy8SYABRUBAAAAARAAAAAAAAAAAAAADABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vESABYVBBAAACIAAAAQAAAAIAAA8RYAAxINFQMABRAAAAAAZnJhZ0NvbG9yACoABRUBAAAABhAAAAAAAAAAAAAAIABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQcQAAABAAEADgAIEAgQAAAXAAEAAxAAAAoAGBUDAAAAAQABAA4ACBAKEAAAFwAAAAMAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEKAAESAQAAAAwQAAAKABgVDBAAAAEAAQAOAAgQDhAAABcb2NjbHVzaW9uID0gMS4wZjsKICAgIGZsb2F0IHNwZWN1bGFyID0gMC41ZjsKICAgIGZsb2F0MyBlbWlzc2lvbkNvbCA9IDAuMGYueHh4OwogICAgbiAvPSAoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpLnh4eDsKICAgIGZsb2F0MiBfMTA2OwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF8xMDYgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDYgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSBmbG9hdDMoXzEwNi54LCBfMTA2LnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSBmbG9hdDQobi54eSwgcm91Z2huZXNzLCBwYWNrRmxvYXRJbnQxNihtZXRhbGxpYywgMHUpKTsKICAgIGZyYWdDb2xvclsxXSA9IGZsb2F0NChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHdub3JtYWwgPSBzdGFnZV9pbnB1dC53bm9ybWFsOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAARgAAAIwAAAAAAAAAAAAAAAEAAABHAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAIQAAA0AAAACwD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAAFgABFgAAAAALEAAAZnJhZ19tYWluAPLxGgABFgAAAAAPEAAAb2N0YWhlZHJvbldyhEUgD0AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAsQAABmcmFnX21haW4A8vEaAAEWAAAAAA8QAABvY3RhaGVkcm9uV3JhcADxgkv8QgAAAAIAggAlEQAAAACAAAAAAQBtYWluAAAAAAAAAAAAAP::::8aCS:xxorDwABAEwAAAAgAAAALAAAAFQAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAD0AQAAIAAAYAAAAAAAAAAAAAAAAAIACQC8AwAAAAAAALQBAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAA9AEAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAPQBAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXEdyb3VuZE1hdGVyaWFsX21lc2guZnJhZy5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQdbYmQBAAAA2IpF1m%GDkeik38Yv:pp63IAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxncm91bmRtYXRlcmlhbF9tZXNoLmZyYWcuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAM4AAACEAQAAWwEAAGwAAAAAAAAAswYAAIAAAAD2BQAAeAUAAEgAAAAQAAAAKAAAACACAAAsAAAAFAAAAAMAAAAbAAAAEAAAABoAAAAUAAAACwAAAAYAAAASAAAAEwAAAAwAAAAIAAAACQAAAAoAAAANAAAADgAAAA8AAAAHAAAAEQAAABUAAAAWAAAAFwAAABkAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw
kha_Shaders.GroundMaterial_mesh_vertData0 = "s20012:Am5vcgAAcG9zAAEBJEdsb2JhbHMAAAJOAAAAAAAsAAAAAwNXVlAAMAAAAEAAAAAEBERYQkOyw9tMzqqriLx:IUv3sOu:AQAAAHA6AAAGAAAAOAAAACABAABsAQAAxAEAAOwDAABoBAAAUkRFRuAAAAABAAAASAAAAAEAAAAcAAAAAAT%:wEBAAC4AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkR2xvYmFscwCrq6s8AAAAAgAAAGAAAABwAAAAAAAAAAAAAACQAAAAAAAAACwAAAACAAAAlAAAAAAAAACkAAAAMAAAAEAAAAACAAAAqAAAAAAAAABOAKurAwADAAMAAwAAAAAAAAAAAFdWUAADAAMABAAEAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAAMDAAA4AAAAAQAAAAAAAAADAAAAAQAAAA8PAABURVhDT09SRACrq6tPU0dOUAAAAAIAAAAIAAAAOAAAAAAAAAAAAAAAAwAAAAAAAAAHCAAAQQAAAAAAAAABAAAAAwAAAAEAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUiACAABAAAEAiAAAAFkAAARGjiAAAAAAAAcAAABfAAADMhAQAAAAAABfAAAD8hAQAAEAAABlAAADciAQAAAAAABnAAAE8iAQAAEAAAABAAAAaAAAAgIAAAA2AAAFMgAQAAAAAABGEBAAAAAAADYAAAVCABAAAAAAADoQEAABAAAAEAAACBIAEAABAAAARgIQAAAAAABGgiAAAAAAAAAAAAAQAAAIIgAQAAEAAABGAhAAAAAAAEaCIAAAAAAAAQAAABAAAAhCABAAAQAAAEYCEAAAAAAARoIgAAAAAAACAAAAEAAABxIAEAAAAAAARgIQAAEAAABGAhAAAQAAAEQAAAUSABAAAAAAAAoAEAAAAAAAOAAAB3IgEAAAAAAABgAQAAAAAABGAhAAAQAAADYAAAVyABAAAAAAAEYSEAABAAAANgAABYIAEAAAAAAAAUAAAAAAgD8RAAAIEgAQAAEAAABGDhAAAAAAAEaOIAAAAAAABQAAABEAAAgiABAAAQAAAEYOEAAAAAAARo4gAAAAAAAGAAAAAAAABxIAEAABAAAAGgAQAAEAAAAKABAAAQAAADYAAAWCIBAAAQAAABoAEAABAAAAOAAAB0IgEAABAAAACgAQAAEAAAABQAAAAAAAPxEAAAgSIBAAAQAAAEYOEAAAAAAARo4gAAAAAAADAAAAEQAACCIgEAABAAAARg4QAAAAAABGjiAAAAAAAAQAAAA%AAABU1RBVHQAAAASAAAAAgAAAAAAAAAEAAAADAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACUAAAAAAAAABozgAAPj:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::BQAAACAAAAA8AAAAAAAAAP::::8AAAAABguMQEHW2JkAQAAAAmgbMmczsNMmyBDlHwCFlEAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzb2F0NChwb3MueHl6LCAxLjBmKTsKICAgIHdub3JtYWwgPSBub3JtYWxpemUobXVsKGZsb2F0Myhub3IsIHBvcy53KSwgTikpOwogICAgZ2xfUG9zaXRpb24gPSBtdWwoc3BvcywgV1ZQKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgbm9yID0gc3RhZ2VfaW5wdXQubm9yOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQud25vcm1hbCA9IHdub3JtYWw7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAAAAAAEYAAACMAAAAAAAAAAEAAABHAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1gwEAxloAAJmUAAAIaAAAJvcCAEzoAwBmgQEAwcMAANkqAgASLAAAUIUBACYXAwCLvAEAWhwAALHFAABnnwEA1f8AAGKjAgAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVuaWZvcm0gZmxvYXQzeDMgTjsKdW5pZm9ybSBmbG9hdDR4NCBXVlA7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IHBvczsKc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQyIG5vcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgbm9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IHBvcyA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQzIHdub3JtYWwgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgZmxvYXQ0IHNwb3MgPSBmbG9hdDQocG9zLnh5eiwgMS4wZik7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKG11bChmbG9hdDMobm9yLCBwb3MudyksIE4pKTsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKHNwb3MsIFdWUCk7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIG5vciA9IHN0YWdlX2lucHV0Lm5vcjsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0Lndub3JtYWwgPSB3bm9ybWFsOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAK8DAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcR3JvdW5kTWF0ZXJpYWxfbWVzaC52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXGdyb3VuZG1hdGVyaWFsX21lc2gudmVydC5obHNsAHVuaWZvcm0gZmxvYXQzeDMgTjsKdW5pZm9ybSBmbG9hdDR4NCBXVlA7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IHBvczsKc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQyIG5vcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgbm9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IHBvcyA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQzIHdub3JtYWwgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgZmxvYXQ0IHNwb3MgPSBmbBviMAGAAAAAQ8tJtEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEcAAAAoAAAAG%IwATAXiSYiAwjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAIADAAAAAAAAzAEAAAAAAADMAQAACRAAAFQAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABUAAAAAQDMAQAAAAAWAFARAQAFAAQABABUAAAAAQDMAQQAAAAWAFARAQAFAAgABABUAAAAAQDMARAAAAAWAFARAQAFAAwABABUAAAAAQDMARQAAAAWAFARAQAFABAABABUAAAAAQDMARgAAAAWAFARAQAFABQABABUAAAAAQDMARwAAAA6AD4RCBAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAwABABUAAAAAQDMARAAAAAWAFARAgAFABAABABUAAAAAQDMARQAAAAWAFARAgAFABQABABUAAAAAQDMARgAAAAWAFARAgAFABgABABUAAAAAQDMARwAAAAWAFARAgAFAAAABABUAAAAAQDMAQAAAAAWAFARAgAFAAQABABUAAAAAQDMAQQAAAAWAFARAgAFAAgABABUAAAAAQDMAQgAAAAyAD4RARAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAcAEAAAEAPAAQAAAAFgBQEQAABQAMAAQAkAEAAAEAkAAUAAAAXgBNEYAAAAB8AwAAABAAAAcACQUNNAtADSEGAgOA1A06BgIMHGgDMA0hBgMMQBwIAAkZDTIBVAswCQ8NMwOAiAkTDSAGAgNMCRYNMgYCDBxoCRUNOQMwCRMNIAYDDEAcMgA%EQEQAAAIAGdsX1Bvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAHABAAABADwAEAAAABYAUBEAAAUADAAEAJABAAABAJAAFAAAAAIAThECAAYAHgBSEQEQAAAAAAAAEAD:::::::9nbF9Qb3NpdGlvbgD0AAAAGAAAAAEAAAAQAf8eGHpBWM6K5%CyYQqGDD8AAPIAAADIAQAAAAAAAAEAAQAgAgAAAAAAACQAAAC8AQAAVAAAACEAAIBUAAAAIQAAAGgAAAAhAACAaAAAACEAAAB8AAAAIQAAgHwAAAAhAAAAnAAAACEAAICcAAAAIQAAALwAAAAhAACAvAAAACEAAADcAAAAIQAAgNwAAAAhAAAA%AAAACEAAID4AAAAIQAAAAwBAAAhAACADAEAACEAAAAoAQAAIQAAgCgBAAAhAAAAPAEAACEAAIA8AQAAIQAAAFABAAAhAACAUAEAACEAAABwAQAAIQAAgHABAAAhAAAAkAEAACEAAICQAQAAIQAAAKwBAAAlAACArAEAACUAAADAAQAAIQAAgMABAAAhAAAA3AEAACEAAIDcAQAAIQAAAPwBAAAhAACA:AEAACEAAAAcAgAAJQAAgBwCAAAlAAAABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgA9gAAABAAAAAAAAAAABAAAAAAAAAWAAAAEAAAAAAAAAAUAAAALAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAEhAAAKQBAAAKAP::BAAAAP::AwAAAAAASAAAAEgAAAAIAAAAUAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEiAAMSDRUDAAAQAAAAAG5vcgDy8Q0VAwABEAAACABwb3MA8vEmAAUVAgAAAAIQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAADEAAAFgAbFUAAAAADAAAADABmbG9hdDMA8:LxLgADEg0VAwAFEAAAAAB3bm9ybWFsAPLxDRUDAAEQAAAMAGdsX1Bvc2l0aW9uAPLxKgAFFQIAAAAGEAAAAAAAAAAAAAAcAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBxAAAAEAAQAOAAgQCBAAABcAAQAEEAAACgAYFQMAAAABAAEADgAIEAoQAAAXAAAAAwAAAB4AHBVAAAAAAwAAAAMAAAAQAAAAACwAZmxvYXQzeDMACgAYFQwQAAABAAEACgAYFQ0QAAABAAACHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVDxAAAAEAAQAKABgvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAALEAAAdmVydF9tYWluAPLxhEUgAgAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAsQAAB2ZXJ0X21haW4A8vgkv8SAAAAAUAgAALQAAAAEAAAABAAAAAQAAAEUAAAABAAAAFQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABgAAAAkgAlEQAAAACAAAAAAQBtYWluAAAWAFERDhAAAAgAAAAAAP:::::::04AAAAWAFERERAAAAgAAAAwAP:::::::1dWUAAeAFIRARAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uxorDwABAEwAAAAgAAAALAAAAFQAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAgAgAAIAAAYAAAAAAAAAAAAAAAAAIACQCkAwAAAAAAAAgCAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAIAIAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAACACAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXEdyb3VuZE1hdGVyaWFsX21lc2gudmVydC5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQdbYmQBAAAACaBsyZzOw0ybIEOUfAIWUXIAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxncm91bmRtYXRlcmlhbF9tZXNoLnZlcnQuaGxzbAAEAAAABgAAAAEAAAAbAAAAAAAAACIAAAAIAAAAEQAAAAcAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAM4AAADcAQAAWwEAAFAAAAAAAAAA3wMAAIAAAAAiAwAAwAUAAFAAAAAMAAAAKAAAAEQCAAAsAAAAZAAAAAMAAAAYAAAADwAAABcAAAARAAAACgAAAAYAAAALAAAACAAAAAkk
kha_Shaders.GroundMaterial_shadowmap_vertData0 = "s19543:AXBvcwAAASRHbG9iYWxzAAABTFdWUAAAAAAAQAAAAAQERFhCQy9csMwjgqxX:Jenh8yaTYUBAAAAIDkAAAYAAAA4AAAA%AAAACwBAABgAQAAnAIAABgDAABSREVGuAAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAJAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAABAAAAYAAAAEAAAAAAAAAAAAAAAHgAAAAAAAAAQAAAAAIAAACAAAAAAAAAAExXVlAAq6urAwADAAQABAAAAAAAAAAAAE1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQBJU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPBwAAVEVYQ09PUkQAq6urT1NHTiwAAAABAAAACAAAACAAAAAAAAAAAQAAAAMAAAAAAAAADwAAAFNWX1Bvc2l0aW9uAFNIRFI0AQAAQAABAE0AAABZAAAERo4gAAAAAAAEAAAAXwAAA3IQEAAAAAAAZwAABPIgEAAAAAAAAQAAAGgAAAICAAAANgAABXIAEAAAAAAARhIQAAAAAAA2AAAFggAQAAAAAAABQAAAAACAPxEAAAgSABAAAQAAAEYOEAAAAAAARo4gAAAAAAACAAAAEQAACCIAEAABAAAARg4QAAAAAABGjiAAAAAAAAMAAAAAAAAHEgAQAAEAAAAaABAAAQAAAAoAEAABAAAANgAABYIgEAAAAAAAGgAQAAEAAAA4AAAHQiAQAAAAAAAKABAAAQAAAAFAAAAAAAA:EQAACBIgEAAAAAAARg4QAAAAAABGjiAAAAAAAAAAAAARAAAIIiAQAAAAAABGDhAAAAAAAEaOIAAAAAAAAQAAAD4AAAFTVEFUdAAAAAoAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwAAAJQAAAAAAAAAGgwAAAAAAAAA:::::wlC4xAQdbYmQBAAAAj%CpQCnu7kKHOMWyBKzL4wAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAABLAAAAAAAAAAEAAACWAAAATAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMZaAADuMgEACGgAAB7CAgCQsgEAwcMAAG0YAQDO3QIAUIUBAKmGAQBnnwEASRQBAJm9AwdW5pZm9ybSBmbG9hdDR4NCBMV1ZQOwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0NCBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIGZsb2F0NCBzcG9zID0gZmxvYXQ0KHBvcy54eXosIDEuMGYpOwogICAgZ2xfUG9zaXRpb24gPSBtdWwoc3BvcywgTFdWUCk7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQov:u8BAAAAzQIAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxHcm91bmRNYXRlcmlhbF9zaGFkb3dtYXAudmVydC5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxncm91bmRtYXRlcmlhbF9zaGFkb3dtYXAudmVydC5obHNsAHVuaWZvcm0gZmxvYXQ0eDQgTFdWUDsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDQgcG9zOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBwb3MgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBmbG9hdDQgc3BvcyA9IGZsb2F0NChwb3MueHl6LCAxLjBmKTsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKHNwb3MsIExXVlApOwogICAgZ2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56ICsgZ2xfUG9zaXRpb24udykgKiAwG%IwAYAAAAC5GFW0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAATAAAACgAAAAb4jABVVdX5TYCAAABAAAASwAAAEwgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAA9AIAAAAAAAD4AAAAAAAAAPgAAAAHEAAAPAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADwAAAABAPgAAAAAABYAUBEBAAUABAAEADwAAAABAPgABAAAABYAUBEBAAUACAAEADwAAAABAPgACAAAABYAUBEBAAUADAAEADwAAAABAPgADAAAADoAPhEGEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAAAAEADwAAAABAPgAAAAAABYAUBECAAUABAAEADwAAAABAPgABAAAABYAUBECAAUACAAEADwAAAABAPgACAAAABYAUBECAAUADAAEADwAAAABAPgADAAAADIAPhEAEAAACABnbF9Qb3NpdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAgABACEAAAAAQA8ABAAAAAWAFARAAAFAAwABACkAAAAAQCQABQAAABKAE0RgAAAAPACAAAAEAAABwAJBQ0iC0ANOgYCDBxoAzANIgYDDEAcCAAJEw0hATwDAAkWDTIGAgwcaAkVDTkDMAkTDSEGAwxAHAAAMgA%EQAQAAAIAGdsX1Bvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAIQAAAABADwAEAAAABYAUBEAAAUADAAEAKQAAAABAJAAFAAAAAIAThECAAYAHgBSEQAQAAAAAAAAEAD:::::::9nbF9Qb3NpdGlvbgD0AAAAGAAAAAEAAAAQARA0QYAUUIlKywMAP:7Zh1QAAPIAAAAIAQAAAAAAAAEAAQA0AQAAAAAAABQAAAD8AAAAPAAAABoAAIA8AAAAGgAAAFAAAAAaAACAUAAAABoAAABkAAAAGgAAgGQAAAAaAAAAhAAAABoAAICEAAAAGgAAAKQAAAAaAACApAAAABoAAADAAAAAHQAAgMAAAAAdAAAA1AAAABoAAIDUAAAAGgAAAPAAAAAaAACA8AAAABoAAAAQAQAAGgAAgBABAAAaAAAAMAEAAB0AAIAwAQAAHQAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgA9gAAABAAAAAAAAAAABAAAAAAAAARAAAADAAAAAAAAAAUAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAANEAAAGAEAAAoA::8EAAAA::8DAAAAAAA0AAAANAAAAAgAAAA8AAAAAAAAABYAGxVAAAAABAAAABAAZmxvYXQ0APPy8RIAAxINFQMAABAAAAAAcG9zAPLxJgAFFQEAAAABEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAAAhAAABoAAxINFQMAABAAAAAAZ2xfUG9zaXRpb24A8vEqAAUVAQAAAAQQAAAAAAAAAAAAABAAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUFEAAAAQABAA4ACBAGEAAAFwABAAMQAAAKABgVAwAAAAEAAQAOAAgQCBAAABcAAAADAAAAHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVChAAAAEAAQAKABgVCxAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTlAQAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAkQAAB2ZXJ0X21haW4A8vgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAACRAAAHZlcnRfbWFpbgDyaCS:xghaW4AABoAUREMEAAACAAAAAAA::::::::TFdWUAAAAAAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9ugkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAAWAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAADQBAAAgAABgAAAAAAAAAAAAAAAAAgAJABgDAAAAAAAASAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAAA0AQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAANAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcR3JvdW5kTWF0ZXJpYWxfc2hhZG93bWFwLnZlcnQuaGxzbAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBB1tiZAEAAACP4KlAKe7uQoc4xbIErMvjdwAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXGdyb3VuZG1hdGVyaWFsX3NoYWRvd21hcC52ZXJ0Lmhsc2wABAAAAAYAAAABAAAAOgAAAAAAAAARAAAABwAAAAoAAAAGAAAAAAAAAAUAAAAiAAAACAAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAA0wAAAFABAABfAQAAUAAAAAAAAAD9AgAAgAAAADYCAABwBAAAPAAAAAwAAAAoAAAAOAIAACwAAABQAAAAAwAAABgAAAAPAAAAFwAAABEAAAAKAAAABgAAAAsAAAAIAAAACQAAAAwAAAANAAAADgAAAAcAAAAQAAAAEgAAABMAAAAUAAAAFg
kha_Shaders.World_World_fragData0 = "s19012:AAAARFhCQ2yW38nPLmNnVjc6VqRWC54BAAAAsDcAAAYAAAA4AAAAhAAAALgAAADsAAAALAEAAKgBAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAABwAAAFRFWENPT1JEAKurq09TR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAA8AAABTVl9UYXJnZXQAq6tTSERSOAAAAEAAAAAOAAAAZQAAA:IgEAAAAAAANgAACPIgEAAAAAAAAkAAAHJjUD1yY1A9cmNQPQAAAAA%AAABU1RBVHQAAAACAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACMAAAAAAAAABgzgguMQEIW2JkAQAAADC3hOqtEexDm0R0UXBWpEgAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzncpOwogICAgZnJhZ0NvbG9yLncgPSAwLjBmOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgbm9ybWFsID0gc3RhZ2VfaW5wdXQubm9ybWFsOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAAPgAAAAAAAAABAAAAPwAAAHwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM6AMAj6IDAAhoAAAewgIAxloAAAU9AgDBwwAAMfsDAIq3AwpYyBmbG9hdDMgbm9ybWFsOwpzdGF0aWMgZmxvYXQ0IGZyYWdDb2xvcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDMgbm9ybWFsIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQzIG4gPSBub3JtYWxpemUobm9ybWFsKTsKICAgIGZyYWdDb2xvciA9IGZsb2F0NCgwLjA1MDg3NjA4ODQ0MDQxODI0MzQwODIwMzEyNWYueHh4LngsIDAuMDUwODc2MDg4NDQwNDE4MjQzNDA4MjAzMTI1Zi54eHgueSwgMC4wNTA4NzYwODg0NDA0MTgyNDM0MDgyMDMxMjVmLnh4eC56LCBmcmFnQ29sb3Iudyk7CiAgICBmcmFnQ29sb3IudyA9IDAuMGY7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBub3JtYWwgPSBzdGFnZV9pbnB1dC5ub3JtYWw7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZnJhZ0NvbG9yID0gZnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQovAQAAAOgCAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcV29ybGRfV29ybGQuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFx3b3JsZF93b3JsZC5mcmFnLmhsc2wAc3RhdGljIGZsb2F0MyBub3JtYWw7CnN0YXRpYyBmbG9hdDQgZnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MyBub3JtYWwgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBmbG9hdDMgbiA9IG5vcm1hbGl6ZShub3JtYWwpOwogICAgZnJhZ0NvbG9yID0gZmxvYXQ0KDAuMDUwODc2MDg4NDQwNDE4MjQzNDA4MjAzMTI1Zi54eHgueCwgMC4wNTA4NzYwODg0NDA0MTgyNDM0MDgyMDMxMjVmLnh4eC55LCAwLjA1MDg3NjA4ODQ0MDQxODI0MzQwODIwMzEyNWYueHh4LnosIGZyYWdDb2xvchviMAGAAAAAevXztEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAD8AAAAoAAAAG%IwAduyC8BrAgjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAMQBAAAAAAAAJAAAAAAAAAAkAAAACBAAABQAAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABAAUAAAAAQAkAAAAAAAWAFARAQAFAAQABAAUAAAAAQAkAAQAAAAWAFARAQAFAAgABAAUAAAAAQAkAAgAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAAABAAUAAAAAQAkAAAAAAAWAFARAgAFAAQABAAUAAAAAQAkAAQAAAAWAFARAgAFAAgABAAUAAAAAQAkAAgAAAAWAFARAgAFAAwABAAUAAAAAQAkAAwAAAACAAYA9AAAABgAAAABAAAAEAEK3M9DNSU3eg%B%JZBK6TSAADyAAAASAAAAAAAAAABAAEAOAAAAAAAAAAEAAAAPAAAABQAAAAbAACAFAAAABsAAAA0AAAAGwAAgDQAAAAbAAAABQAYAAUAGAAFABgvKMQE4AAAAABAAAAkQAADcAAAACgD::wQAAAD::wMAAAAAACQAAAAkAAAACAAAACwAAAAAAAAAFgAbFUAAAAADAAAADABmbG9hdDMA8:LxFgADEg0VAwAAEAAAAABub3JtYWwA8:LxJgAFFQEAAAABEAAAAAAAAAAAAAAMAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAAAhAAABYAGxVAAAAABAAAABAAZmxvYXQ0APPy8RYAAxINFQMABBAAAAAAZnJhZ0NvbG9yACoABRUBAAAABRAAAAAAAAAAAAAAEABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQYQAAABAAEADgAIEAcQAAAXAAEAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAABAAAAAAAAALAP::BAAAAP::AwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xCAAAAAghaW4AAAAAAAAAAAAA:::::xogkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAATAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAADgAAAAgAABgAAAAAAAAAAAAAAAAAgAJAMgBAAAAAAAAfAAAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAAA4AAAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAOAAAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcV29ybGRfV29ybGQuZnJhZy5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCFtiZAEAAAAwt4TqrRHsQ5tEdFFwVqRIagAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHdvcmxkX3dvcmxkLmZyYWcuaGxzbAAEAAAABgAAAAEAAAA6AAAAAAAAABEAAAAHAAAACgAAAAYAAAAAAAAABQAAACIAAAAIAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAxgAAABQBAABTAQAAOAAAAAAAAAAYAwAAgAAAAGsCAABMAgAALAAAAAAAAAAoAAAAIAIAACwAAAAUAAAAAwAAABYAAAAOAAAAFQAAAA8AAAAKAAAABgAAAAsAAAAIAAAACQAAAAwAAAANAAAABwAAABAAAAARAAAAEgw
kha_Shaders.World_World_vertData0 = "s19688:Am5vcgAAcG9zAAEBJEdsb2JhbHMAAAFTTVZQAAAAAABAAAAABAREWEJD5z4CFSU:O9SaEZ:7bUGZcQEAAACIOQAABgAAADgAAAD4AAAARAEAAJwBAAAEAwAAgAMAAFJERUa4AAAAAQAAAEgAAAABAAAAHAAAAAAE:v8BAQAAkAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJEdsb2JhbHMAq6urPAAAAAEAAABgAAAAQAAAAAAAAAAAAAAAeAAAAAAAAABAAAAAAgAAAIAAAAAAAAAAU01WUACrq6sDAAMABAAEAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAAcHAAA4AAAAAQAAAAAAAAADAAAAAQAAAAcHAABURVhDT09SRACrq6tPU0dOUAAAAAIAAAAIAAAAOAAAAAAAAAAAAAAAAwAAAAAAAAAHCAAAQQAAAAAAAAABAAAAAwAAAAEAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUmABAABAAAEAWAAAAFkAAARGjiAAAAAAAAQAAABfAAADchAQAAAAAABfAAADchAQAAEAAABlAAADciAQAAAAAABnAAAE8iAQAAEAAAABAAAAaAAAAgIAAAA2AAAFciAQAAAAAABGEhAAAAAAADYAAAVyABAAAAAAAEYSEAABAAAANgAABYIAEAAAAAAAAUAAAAAAgD8RAAAIEgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAgAAABEAAAgiABAAAQAAAEYOEAAAAAAARo4gAAAAAAADAAAAAAAABxIAEAABAAAAGgAQAAEAAAAKABAAAQAAADYAAAWCIBAAAQAAABoAEAABAAAAOAAAB0IgEAABAAAACgAQAAEAAAABQAAAAAAAPxEAAAgSIBAAAQAAAEYOEAAAAAAARo4gAAAAAAAAAAAAEQAACCIgEAABAAAARg4QAAAAAABGjiAAAAAAAAEAAAA%AAABU1RBVHQAAAALAAAAAgAAAAAAAAAEAAAABgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACUAAAAAAAAABozgAAPj:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::BQAAACAAAAA8AAAAAAAAAP::::8AAAAABguMQEIW2JkAQAAANTeZ:4hKhNHqk27bxW0iIcAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzjBmKSwgU01WUCk7CiAgICBnbF9Qb3NpdGlvbiA9IGZsb2F0NChwb3NpdGlvbik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIG5vciA9IHN0YWdlX2lucHV0Lm5vcjsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0Lm5vcm1hbCA9IG5vcm1hbDsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAABAAAAPgAAAD8AAAB8AAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM6AMAx1gDAAhoAAAewgIAxloAAGVsAADBwwAAMfsDAIq3AwBQhQEA02MAAGefAQDBIQMAQbkuaWZvcm0gZmxvYXQ0eDQgU01WUDsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDMgbm9ybWFsOwpzdGF0aWMgZmxvYXQzIG5vcjsKc3RhdGljIGZsb2F0MyBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIG5vciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyBwb3MgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0MyBub3JtYWwgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgbm9ybWFsID0gbm9yOwogICAgZmxvYXQ0IHBvc2l0aW9uID0gbXVsKGZsb2F0NChwb3MsIDEuMGYpLCBTTVZQKTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvc2l0aW9uKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgbm9yID0gc3RhZ2VfaW5wdXQubm9yOwogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQubm9ybWFsID0gbm9ybWFsOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAHIDAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcV29ybGRfV29ybGQudmVydC5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFx3b3JsZF93b3JsZC52ZXJ0Lmhsc2wAdW5pZm9ybSBmbG9hdDR4NCBTTVZQOwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MyBub3JtYWw7CnN0YXRpYyBmbG9hdDMgbm9yOwpzdGF0aWMgZmxvYXQzIHBvczsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDMgbm9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHBvcyA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQzIG5vcm1hbCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBub3JtYWwgPSBub3I7CiAgICBmbG9hdDQgcG9zaXRpb24gPSBtdWwoZmxvYXQ0KHBvcywgMRviMAGAAAAAVSQAtUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAD8AAAAoAAAAG%IwAT:x%y:1AgjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAAQDAAAAAAAADAEAAAAAAAAMAQAACBAAAFQAAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABUAAAAAQAMAQAAAAAWAFARAQAFAAQABABUAAAAAQAMAQQAAAAWAFARAQAFAAgABABUAAAAAQAMAQgAAAAWAFARAQAFAAwABABUAAAAAQAMARAAAAAWAFARAQAFABAABABUAAAAAQAMARQAAAAWAFARAQAFABQABABUAAAAAQAMARgAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAwABABUAAAAAQAMARAAAAAWAFARAgAFABAABABUAAAAAQAMARQAAAAWAFARAgAFABQABABUAAAAAQAMARgAAAAWAFARAgAFABgABABUAAAAAQAMARwAAAAWAFARAgAFAAAABABUAAAAAQAMAQAAAAAWAFARAgAFAAQABABUAAAAAQAMAQQAAAAWAFARAgAFAAgABABUAAAAAQAMAQgAAABKAE0RgAAAAAADAAAAEAAABwAJBQ0zBgQDFA06BgQMHGgDMA0zBgUMQBwIAAkXDTIBaAMACRYGBAwcaAkVDTkDMAkXDTIGBQxAHAAALgA%EQQQAAAIAHBvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAsAAAAAEAPAAQAAAAFgBQEQAABQAMAAQA0AAAAAEAkAAUAAAAAgBOEQIABgD0AAAAGAAAAAEAAAAQAWW9o1LSxsmsBmXb%qFpOxMAAPIAAAAgAQAAAAAAAAEAAQBgAQAAAAAAABYAAAAUAQAAVAAAACQAAIBUAAAAJAAAAGgAAAAgAACAaAAAACAAAAB8AAAAIAAAgHwAAAAgAAAAkAAAACAAAICQAAAAIAAAALAAAAAgAACAsAAAACAAAADQAAAAIAAAgNAAAAAgAAAA7AAAACQAAIDsAAAAJAAAAAABAAAgAACAAAEAACAAAAAcAQAAIAAAgBwBAAAgAAAAPAEAACAAAIA8AQAAIAAAAFwBAAAkAACAXAEAACQAAAAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgA9goxATgAAAAAEAAADhAAAFQBAAAKAP::BAAAAP::AwAAAAAAOAAAADgAAAAIAAAAQAAAAAAAAAAWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEiAAMSDRUDAAAQAAAAAG5vcgDy8Q0VAwAAEAAADABwb3MA8vEmAAUVAgAAAAEQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAACEAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxLgADEg0VAwAAEAAAAABub3JtYWwA8:LxDRUDAAQQAAAMAGdsX1Bvc2l0aW9uAPLxKgAFFQIAAAAFEAAAAAAAAAAAAAAcAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBhAAAAEAAQAOAAgQBxAAABcAAQADEAAACgAYFQMAAAABAAEADgAIEAkQAAAXAAAAAwAAAB4AHBVAAAAABAAAAAQAAAAQAAAAAEAAZmxvYXQ0eDQACgAYFQsQAAABAAEACgAYFQwQAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAdmVydF9tYWluAPLxhEUgBgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAAB2ZXJ0X21haW4A8vgkv8RAAAAAMAggAlEQAAAACAAAAAAQBtYWluAAAaAFERDRAAAAgAAAAAAP:::::::1NNVlxorDwABAEwAAAAgAAAALAAAAEwAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABgAQAAIAAAYAAAAAAAAAAAAAAAAAIACQAIAwAAAAAAAGABAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAYAEAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAGABAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXFdvcmxkX1dvcmxkLnZlcnQuaGxzbAAAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQhbYmQBAAAA1N5n:iEqE0eqTbtvFbSIh2oAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFx3b3JsZF93b3JsZC52ZXJ0Lmhsc2wABAAAAAYAAAABAAAAGwAAAAAAAAAiAAAACAAAABEAAAAHAAAACgAAAAYAAAAAAAAABQAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMYAAACMAQAAUwEAAFAAAAAAAAAAogMAAIAAAAD1AgAAdAQAAEAAAAAMAAAAKAAAACwCAAAsAAAAMAAAAAMAAAAYAAAADwAAABcAAAARAAAACgAAAAYAAAALAAAACAAAAAkk
kha_Shaders.armdefaultskin_mesh_fragData0 = "s22367:AAAARFhCQzO0tFA%P97KhXkMGeGB0ZUBAAAAhEEAAAYAAAA4AAAAhAAAALgAAAAEAQAAAAMAAHwDAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAABwcAAFRFWENPT1JEAKurq09TR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8AAAA4AAAAAQAAAAAAAAADAAAAAQAAAA8AAABTVl9UYXJnZXQAq6tTSERS9AEAAEAAAAB9AAAAYhAAA3IQEAAAAAAAZQAAA:IgEAAAAAAAZQAAA:IgEAABAAAAaAAAAgMAAAAQAAAHEgAQAAAAAABGEhAAAAAAAEYSEAAAAAAARAAABRIAEAAAAAAACgAQAAAAAAA4AAAHcgAQAAAAAAAGABAAAAAAACYZEAAAAAAAAAAACYIAEAAAAAAAKgAQgIEAAAAAAAAAGgAQgIEAAAAAAAAAAAAACIIAEAAAAAAACgAQgIEAAAAAAAAAOgAQAAAAAAAOAAAHcgAQAAAAAABGAhAAAAAAAPYPEAAAAAAAAAAACzIAEAABAAAAZgoQgMEAAAAAAAAAAkAAAAAAgD8AAIA:AAAAAAAAAAAdAAAKcgAQAAIAAABGAhAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAANwAAD5IAEAAAAAAAVgkQAAIAAAACQAAAAACAPwAAAAAAAAAAAACAPwJAAAAAAIC:AAAAAAAAAAAAAIC:OAAAB5IAEAAAAAAABgwQAAAAAAAGBBAAAQAAADcAAAkyIBAAAAAAAAYAEAACAAAAlgUQAAAAAADGABAAAAAAADYAAAjCIBAAAAAAAAJAAAAAAAAAAAAAAAAAAD8AAAAANgAACPIgEAABAAAAAkAAAM3MTD:NzEw:zcxMPwBAf0M%AAABU1RBVHQAAAAOAAAAAwAAAAAAAAADAAAACQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIAPgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAAB8AAACgzgAAMD:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::BQAAACAAAAA8AAAAAAAAAP::::8AAAAABguMQEGW2JkAQAAAE5d6AqHqnxAmlbt9TLt1ekAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzaW50IGkpCnsKICAgIHVpbnQgYml0c0ludCA9IGkgPDwgMTJ1OwogICAgdWludCBiaXRzRmxvYXQgPSB1aW50KGYgKiA0MDk1LjBmKTsKICAgIHJldHVybiBmbG9hdChiaXRzSW50IHwgYml0c0Zsb2F0KTsKfQoKZmxvYXQgcGFja0Zsb2F0MihmbG9hdCBmMSwgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wZikgKyBtaW4oZjIsIDAuOTkwMDAwMDA5NTM2NzQzMTY0MDYyNWYpOwp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgZmxvYXQzIGJhc2Vjb2wgPSAwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNWYueHh4OwogICAgZmxvYXQgcm91Z2huZXNzID0gMC41ZjsKICAgIGZsb2F0IG1ldGFsbGljID0gMC4wZjsKICAgIGZsb2F0IG9jY2x1c2lvbiA9IDEuMGY7CiAgICBmbG9hdCBzcGVjdWxhciA9IDAuMjVmOwogICAgZmxvYXQzIGVtaXNzaW9uQ29sID0gMC4wZi54eHg7CiAgICBuIC89ICgoYWJzKG4ueCkgKyBhYnMobi5M6AMAGaIDAAhoAAAewgIAxloAAMWpAgD%9AIAwcMAANkqAgCgSgMAUIUBACYXAwB1gwEAZP0BAFocAACF9gpYyBmbG9hdDMgd25vcm1hbDsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3JbMl07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIHdub3JtYWwgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3JbMl0gOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKZmxvYXQgcGFja0Zsb2F0SW50MTYoZmxvYXQgZiwgdWludCBpKQp7CiAgICB1aW50IGJpdHNJbnQgPSBpIDw8IDEydTsKICAgIHVpbnQgYml0c0Zsb2F0ID0gdWludChmICogNDA5NS4wZik7CiAgICByZXR1cm4gZmxvYXQoYml0c0ludCB8IGJpdHNGbG9hdCk7Cn0KCmZsb2F0IHBhY2tGbG9hdDIoZmxvYXQgZjEsIGZsb2F0IGYyKQp7CiAgICByZXR1cm4gZmxvb3IoZjEgKiAyNTUuMGYpICsgbWluKGYyLCAwLjk5MDAwMDAwOTUzNjc0MzE2NDA2MjVmKTsKfQoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBmbG9hdDMgbiA9IG5vcm1hbGl6ZSh3bm9ybWFsKTsKICAgIGZsb2F0MyBiYXNlY29sID0gMC44MDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjVmLnh4eDsKICAgIGZsb2F0IHJvdWdobmVzcyA9IDAuNWY7CiAgICBmbG9hdCBtZXRhbGxpYyA9IDAuMGY7CiAgICBmbG9hdCBvY2NsdXNpb24gPSAxLjBmOwogICAgZmxvYXQgc3BlY3VsYXIgPSAwLjI1ZjsKICAgIGZsb2F0MyBlbWlzc2lvbkNvbCA9IDAuMGYueHh4OwogICAgbiAvPSAoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpLnh4eDsKICAgIGZsb2F0MiBfMTAzOwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF8xMDMgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDMgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSBmbG9hdDMoXzEwMy54LCBfMTAzLnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSBmbG9hdDQobi54eSwgcm91Z2huZXNzLCBwYWNrRmxvYXRJbnQxNihtZXRhbGxpYywgMHUpKTsKICAgIGZyYWdDb2xvclsxXSA9IGZsb2F0NChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHdub3JtYWwgPSBzdGFnZV9pbnB1dC53bm9ybWFsOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAAFwYAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9tZXNoLmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcYXJtZGVmYXVsdHNraW5fbWVzaC5mcmFnLmhsc2wAc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQ0IGZyYWdDb2xvclsyXTsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDMgd25vcm1hbCA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdDb2xvclsyXSA6IFNWX1RhcmdldDA7Cn07CgpmbG9hdDIgb2N0YWhlZHJvbldyYXAoZmxvYXQyIHYpCnsKICAgIHJldHVybiAoMS4wZi54eCAtIGFicyh2Lnl4KSkgKiBmbG9hdDIoKHYueCA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpLCAodi55ID49IDAuMGYpID8gMS4wZiA6ICgtMS4wZikpOwp9CgpmbG9hdCBwYWNrRmxvYXRJbnQxNihmbG9hdCBmLCB1G%IwAYAAAACKv8uzSIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAARwAAACgAAAAb4jABTYK:k4oFAAABAAAARgAAAEcgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAuAMAAAAAAADAAQAAAAAAAMABAAAJEAAANAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADQAAAABAMABAAAAABYAUBEBAAUABAAEADQAAAABAMABBAAAABYAUBEBAAUACAAEADQAAAABAMABCAAAADoAPhEIEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAEAAEADQAAAABAMABEAAAABYAUBECAAUAFAAEADQAAAABAMABFAAAABYAUBECAAUAGAAEADQAAAABAMABGAAAABYAUBECAAUAHAAEADQAAAABAMABHAAAABYAUBECAAUAAAAEADQAAAABAMABAAAAABYAUBECAAUABAAEADQAAAABAMABBAAAABYAUBECAAUACAAEADQAAAABAMABCAAAABYAUBECAAUADAAEADQAAAABAMABDAAAAGIATRGAAAAAtAMAAAAQAAAHAAkFDSILIA0wBg4DTAkJDSQGEANgCQUNBQYCDCSArAgACRANIQE0BiEDAAkMDR4GDgNMCQsNKgMkCQUNLwMgCRANIwYQAxwJBQ0FBgIMJICsAAAqAD4RABAAAAgAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAIAAAAABAPAAAAAAABYAUBEAAAUAAAAEAIAAAAABAFABBAAAABYAUBEAAAUABAAEAIAAAAABAFABCAAAADoATREkAgAAsAMAAAEQAAAHAAkFDWoGAgyArICsCAAJDQ0fAYDgAwAJTA1WAywJSw1oAygJDA1pDBw8AEYAPhEOEAAAiAA8b2N0YWhlZHJvbldyYXAgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIwBAAABACQAAAAAABYAUBEAAAUABAAEAIwBAAABACQADAAAAAIAThECAE4RAgAGAPQAAAAYAAAAAQAAABABtDb0:00QyCH:3GlFVJ%KRAAA8gAAAGgBAAAAAAAAAQABAPQBAAAAAAAAHAAAAFwBAAA0AAAAOgAAgDQAAAA6AAAAUAAAADoAAIBQAAAAOgAAAGQAAAA6AACAZAAAADoAAACAAAAAOgAAgIAAAAA6AAAApAAAADoAAICkAAAAOgAAAMQAAAA6AACAxAAAADoAAADgAAAAOgAAgOAAAAA6AAAADAEAADoAAIAMAQAAOgAAADQBAAA6AACANAEAADoAAABwAQAAOgAAgHABAAA6AAAAjAEAADoAAICMAQAAOgAAALABAAA9AACAsAEAAD0AAADQAQAAPQAAgNABAAA9AAAA8AEAAD0AAIDwAQAAPQAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAGAAFABgABQAYAAUAGAD2AAAAHAAAAAAAAAAAEAAAAAAAACAAAAABEAAAAAAAAA8AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAQEAAATAEAAAoA::8EAAAA::8DAAAAAABAAAAAQAAAAAgAAABIAAAAAAAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8RYAAxINFQMAABAAAAAAd25vcm1hbADy8SYABRUBAAAAARAAAAAAAAAAAAAADABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vESABYVBBAAACIAAAAQAAAAIAAA8RYAAxINFQMABRAAAAAAZnJhZ0NvbG9yACoABRUBAAAABhAAAAAAAAAAAAAAIABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQcQAAABAAEADgAIEAgQAAAXAAEAAxAAAAoAGBUDAAAAAQABAA4ACBAKEAAAFwAAAAMAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEKAAESAQAAAAwQAAAKABgVDBAAAAEAAQAOAAgQDhAAABceSkpICsgYWJzKG4ueikpLnh4eDsKICAgIGZsb2F0MiBfMTAzOwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF8xMDMgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDMgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSBmbG9hdDMoXzEwMy54LCBfMTAzLnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSBmbG9hdDQobi54eSwgcm91Z2huZXNzLCBwYWNrRmxvYXRJbnQxNihtZXRhbGxpYywgMHUpKTsKICAgIGZyYWdDb2xvclsxXSA9IGZsb2F0NChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHdub3JtYWwgPSBzdGFnZV9pbnB1dC53bm9ybWFsOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAARgAAAAEAAABHAAAAjvKMQE4AAAAABAAAAIQAAA0AAAACwD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAAFgABFgAAAAALEAAAZnJhZ19tYWluAPLxGgABFgAAAAAPEAAAb2N0YWhlZHJvbldyhEUgD0AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAsQAABmcmFnX21haW4A8vEaAAEWAAAAAA8QAABvY3RhaGVkcm9uV3JhcADxgkv8QgAAAAIAggAlEQAAAACAAAAAAQBtYWluAAAAAAAAAAAAAP::::8aCS:xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::xorDwABAEwAAAAgAAAALAAAAFQAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAD0AQAAIAAAYAAAAAAAAAAAAAAAAAIACQC8AwAAAAAAALQBAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAA9AEAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAPQBAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGFybWRlZmF1bHRza2luX21lc2guZnJhZy5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQZbYmQBAAAATl3oCoeqfECaVu31Mu3V6XIAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9tZXNoLmZyYWcuaGxzbAAEAAAABgAAAAEAAAA6AAAAAAAAABEAAAAHAAAACgAAAAYAAAAAAAAABQAAACIAAAAIAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAM4AAACEAQAAWwEAAGwAAAAAAAAARwYAAIAAAACKBQAAeAUAAEgAAAAQAAAAKAAAACACAAAsAAAAFAAAAAMAAAAbAAAAEAAAABoAAAAUAAAACwAAAAYAAAASAAAAEwAAAAwAAAAIAAAACQAAAAoAAAANAAAADgAAAA8AAAAHAAAAEQAAABUAAAAWAAAAFwAAABkAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw
kha_Shaders.armdefaultskin_mesh_vertData0 = "s33370:BGJvbmUAAG5vcgABcG9zAAJ3ZWlnaHQAAwEkR2xvYmFscwAABHNraW5Cb25lcwAAAAAAIAQAAAQBcG9zVW5wYWNrACAEAAAEAAAAAQFOADAEAAAsAAAAAwNXVlAAYAQAAEAAAAAEBERYQkPiJ%dySSOQPGXuyvsG2wGhAQAAAFxhAAAGAAAAOAAAAIgBAAAEAgAAXAIAANgKAABUCwAAUkRFRkgBAAABAAAASAAAAAEAAAAcAAAAAAT%:wEBAAAgAQAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkR2xvYmFscwCrq6s8AAAABAAAAGAAAACgBAAAAAAAAAAAAADAAAAAAAAAACAEAAACAAAAzAAAAAAAAADcAAAAIAQAAAQAAAACAAAA6AAAAAAAAAD4AAAAMAQAACwAAAACAAAA:AAAAAAAAAAMAQAAYAQAAEAAAAACAAAAEAEAAAAAAABza2luQm9uZXMAq6sBAAMAAQAEAEIAAAAAAAAAcG9zVW5wYWNrAKurAAADAAEAAQAAAAAAAAAAAE4Aq6sDAAMAAwADAAAAAAAAAAAAV1ZQAAMAAwAEAAQAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTnQAAAAEAAAACAAAAGgAAAAAAAAAAAAAAAMAAAAAAAAADw8AAGgAAAABAAAAAAAAAAMAAAABAAAAAwMAAGgAAAACAAAAAAAAAAMAAAACAAAADw8AAGgAAAADAAAAAAAAAAMAAAADAAAADw8AAFRFWENPT1JEAKurq09TR05QAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAAcIAABBAAAAAAAAAAEAAAADAAAAAQAAAA8AAABURVhDT09SRABTVl9Qb3NpdGlvbgCrq6tTSERSdAgAAEAAAQAdAgAAWQgABEaOIAAAAAAASgAAAF8AAAPyEBAAAAAAAF8AAAMyEBAAAQAAAF8AAAPyEBAAAgAAAF8AAAPyEBAAAwAAAGUAAANyIBAAAAAAAGcAAATyIBAAAQAAAAEAAABoAAACBgAAADgAAAryABAAAAAAAEYeEAAAAAAAAkAAAAD%:0YA:v9GAP7:RgD%:0YbAAAF8gAQAAAAAABGDhAAAAAAACkAAAfyABAAAAAAAEYOEAAAAAAAAUAAAAEAAAARAAALEgAQAAEAAABGjiAEAAAAAAoAEAAAAAAARo4gBAAAAAA6ABAAAAAAABEAAAsiABAAAQAAAEaOIAQAAAAAGgAQAAAAAABGjiAEAAAAADoAEAAAAAAAEQAAC0IAEAABAAAARo4gBAAAAAAqABAAAAAAAEaOIAQAAAAAOgAQAAAAAAAxAAAKcgAQAAIAAAACQAAAAAAAAAAAAAAAAAAAAAAAAEYCEAABAAAAMQAACnIAEAABAAAARgIQAAEAAAACQAAAAAAAAAAAAAAAAAAAAAAAAB4AAAhyABAAAQAAAEYCEIBBAAAAAgAAAEYCEAABAAAAKwAABXIAEAABAAAARgIQAAEAAAA4AAAHcgAQAAEAAABGAhAAAQAAAEYSEAADAAAAOAAACfIAEAACAAAAVgUQAAEAAABGjiAEAAAAABoAEAAAAAAAMgAAC:IAEAACAAAABgAQAAEAAABGjiAEAAAAAAoAEAAAAAAARg4QAAIAAAAyAAAL8gAQAAIAAACmChAAAQAAAEaOIAQAAAAAKgAQAAAAAABGDhAAAgAAADIAAAvyABAAAgAAAPYfEAADAAAARo4gBAAAAAA6ABAAAAAAAEYOEAACAAAAHgAACvIAEAAAAAAARg4QAAAAAAACQAAAAQAAAAEAAAABAAAAAQAAABEAAAeCABAAAQAAAEYOEAACAAAARg4QAAIAAABLAAAFggAQAAEAAAA6ABAAAQAAAA4AAAqCABAAAQAAAAJAAAAAAIA:AACAPwAAgD8AAIA:OgAQAAEAAAA4AAAH8gAQAAIAAAD2DxAAAQAAAEYOEAACAAAANgAABUIAEAADAAAAOhAQAAIAAAA2AAAFMgAQAAMAAABGEBAAAQAAADgAAAdyABAABAAAAEYCEAACAAAAJgkQAAMAAAAyAAAKcgAQAAQAAAAmCRAAAgAAAEYCEAADAAAARgIQgEEAAAAEAAAAMgAACXIAEAAEAAAAlgQQAAMAAAD2DxAAAgAAAEYCEAAEAAAAOAAAB3IAEAAFAAAAJgkQAAIAAABGAhAABAAAADIAAApyABAABAAAAJYEEAACAAAAlgQQAAQAAABGAhCAQQAAAAUAAAAyAAAMcgAQAAMAAABGAhAABAAAAAJAAAAAAABAAAAAQAAAAEAAAAAARgIQAAMAAAAQAAAIEgAQAAQAAABGAhAAAwAAAEaCIAAAAAAAQwAAABAAAAgiABAABAAAAEYCEAADAAAARoIgAAAAAABEAAAAEAAACEIAEAAEAAAARgIQAAMAAABGgiAAAAAAAEUAAAAQAAAHEgAQAAMAAABGAhAABAAAAEYCEAAEAAAARAAABRIAEAADAAAACgAQAAMAAAA4AAAHciAQAAAAAAAGABAAAwAAAEYCEAAEAAAAOAAACfIAEAADAAAAVgUQAAEAAABGjiAEAAAAABoAEAAAAAAAMgAAC:IAEAADAAAABgAQAAEAAABGjiAEAAAAAAoAEAAAAAAARg4QAAMAAAAyAAAL8gAQAAMAAACmChAAAQAAAEaOIAQAAAAAKgAQAAAAAABGDhAAAwAAADIAAAvyABAAAAAAAPYfEAADAAAARo4gBAAAAAA6ABAAAAAAAEYOEAADAAAAOAAAB:IAEAAAAAAA9g8QAAEAAABGDhAAAAAAADgAAAdyABAAAQAAAPYPEAAAAAAARgIQAAIAAAAyAAAKcgAQAAEAAABGAhAAAAAAAPYPEAACAAAARgIQgEEAAAABAAAAOAAAB3IAEAADAAAAlgQQAAAAAAAmCRAAAgAAADIAAApyABAAAAAAAJYEEAACAAAAJgkQAAAAAABGAhCAQQAAAAMAAAAAAAAHcgAQAAAAAABGAhAAAAAAAEYCEAABAAAAOAAACHIAEAABAAAARhIQAAIAAAAGgCAAAAAAAEIAAAA4AAAHcgAQAAMAAAAmCRAAAQAAAEYCEAACAAAAMgAACnIAEAADAAAAJgkQAAIAAABGAhAAAQAAAEYCEIBBAAAAAwAAADIAAAlyABAAAwAAAJYEEAABAAAA9g8QAAIAAABGAhAAAwAAADgAAAdyABAABAAAACYJEAACAAAARgIQAAMAAAAyAAAKcgAQAAIAAACWBBAAAgAAAJYEEAADAAAARgIQgEEAAAAEAAAAMgAADHIAEAABAAAARgIQAAIAAAACQAAAAAAAQAAAAEAAAABAAAAAAEYCEAABAAAAMgAADHIAEAAAAAAARgIQAAAAAAACQAAAAAAAQAAAAEAAAABAAAAAAEYCEAABAAAADgAACHIAEAAAAAAARgIQAAAAAAAGgCAAAAAAAEIAAAA2AAAFggAQAAAAAAABQAAAAACAPxEAAAgSABAAAQAAAEYOEAAAAAAARo4gAAAAAABIAAAAEQAACCIAEAABAAAARg4QAAAAAABGjiAAAAAAAEkAAAAAAAAHEgAQAAEAAAAaABAAAQAAAAoAEAABAAAANgAABYIgEAABAAAAGgAQAAEAAAA4AAAHQiAQAAEAAAAKABAAAQAAAAFAAAAAAAA:EQAACBIgEAABAAAARg4QAAAAAABGjiAAAAAAAEYAAAARAAAIIiAQAAEAAABGDhAAAAAAAEaOIAAAAAAARwAAAD4AAAFTVEFUdAAAAD4AAAAGAAAAAAAAAAYAAAA0AAAAAwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgBWAABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAKwAAAMwwAAAAAAAAA:::::wlC4xAQZbYmQBAAAAr7FT90zrJ0CiAh6of1aHJgAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcgVEVYQ09PUkQzOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDMgd25vcm1hbCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCBnZXRTa2lubmluZ0R1YWxRdWF0KGludDQgYm9uZV8xLCBpbm91dCBmbG9hdDQgd2VpZ2h0XzEsIGlub3V0IGZsb2F0NCBBLCBpbm91dCBmbG9hdDQgQikKewogICAgaW50NCBib25laSA9IGJvbmVfMSAqIGludDQoMiwgMiwgMiwgMik7CiAgICBmbG9hdDR4NCBtYXRBID0gZmxvYXQ0eDQoZmxvYXQ0KHNraW5Cb25lc1tib25laS54XSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkueV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnpdKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS53XSkpOwogICAgZmxvYXQ0eDQgbWF0QiA9IGZsb2F0NHg0KGZsb2F0NChza2luQm9uZXNbYm9uZWkueCArIDFdKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS55ICsgMV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbsZaAAB1gwEA%W4CAAhoAAAm9wIATOgDAOmTAgDBwwAA2SoCABIsAABQhQEAJhcDANx3AQCWCgEAk5sCAEEkAQA4MwAAYqMCAJLmAwCMkAMAi7wBABzdAQDWmgIAZ58BAKL%AgDkxwdW5pZm9ybSBmbG9hdDQgc2tpbkJvbmVzWzY2XTsKdW5pZm9ybSBmbG9hdCBwb3NVbnBhY2s7CnVuaWZvcm0gZmxvYXQzeDMgTjsKdW5pZm9ybSBmbG9hdDR4NCBXVlA7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IHBvczsKc3RhdGljIGZsb2F0NCBib25lOwpzdGF0aWMgZmxvYXQ0IHdlaWdodDsKc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQyIG5vcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgYm9uZSA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiBub3IgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgcG9zIDogVEVYQ09PUkQyOwogICAgZmxvYXQ0IHdlaWdodCA6IFRFWENPT1JEMzsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQzIHdub3JtYWwgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgZ2V0U2tpbm5pbmdEdWFsUXVhdChpbnQ0IGJvbmVfMSwgaW5vdXQgZmxvYXQ0IHdlaWdodF8xLCBpbm91dCBmbG9hdDQgQSwgaW5vdXQgZmxvYXQ0IEIpCnsKICAgIGludDQgYm9uZWkgPSBib25lXzEgKiBpbnQ0KDIsIDIsIDIsIDIpOwogICAgZmxvYXQ0eDQgbWF0QSA9IGZsb2F0NHg0KGZsb2F0NChza2luQm9uZXNbYm9uZWkueF0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnldKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56XSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkud10pKTsKICAgIGZsb2F0NHg0IG1hdEIgPSBmbG9hdDR4NChmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnggKyAxXSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkueSArIDFdKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56ICsgMV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLncgKyAxXSkpOwogICAgZmxvYXQzIF8xMjkgPSB3ZWlnaHRfMS54eXogKiBzaWduKG11bChtYXRBLCBtYXRBWzNdKSkueHl6OwogICAgd2VpZ2h0XzEgPSBmbG9hdDQoXzEyOS54LCBfMTI5LnksIF8xMjkueiwgd2VpZ2h0XzEudyk7CiAgICBBID0gbXVsKHdlaWdodF8xLCBtYXRBKTsKICAgIEIgPSBtdWwod2VpZ2h0XzEsIG1hdEIpOwogICAgZmxvYXQgaW52Tm9ybUEgPSAxLjBmIC8gbGVuZ3RoKEEpOwogICAgQSAqPSBpbnZOb3JtQTsKICAgIEIgKj0gaW52Tm9ybUE7Cn0KCnZvaWQgdmVydF9tYWluKCkKewogICAgZmxvYXQ0IHNwb3MgPSBmbG9hdDQocG9zLnh5eiwgMS4wZik7CiAgICBmbG9hdDQgcGFyYW0gPSB3ZWlnaHQ7CiAgICBmbG9hdDQgc2tpbkI7CiAgICBmbG9hdDQgcGFyYW1fMiA9IHNraW5COwogICAgZmxvYXQ0IHBhcmFtXzE7CiAgICBnZXRTa2lubmluZ0R1YWxRdWF0KGludDQoYm9uZSAqIDMyNzY3LjBmKSwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZmxvYXQ0IHNraW5BID0gcGFyYW1fMTsKICAgIHNraW5CID0gcGFyYW1fMjsKICAgIGZsb2F0MyBfMTc5ID0gc3Bvcy54eXogKiBwb3NVbnBhY2s7CiAgICBzcG9zID0gZmxvYXQ0KF8xNzkueCwgXzE3OS55LCBfMTc5LnosIHNwb3Mudyk7CiAgICBmbG9hdDMgXzIwMCA9IHNwb3MueHl6ICsgKGNyb3NzKHNraW5BLnh5eiwgY3Jvc3Moc2tpbkEueHl6LCBzcG9zLnh5eikgKyAoc3Bvcy54eXogKiBza2luQS53KSkgKiAyLjBmKTsKICAgIHNwb3MgPSBmbG9hdDQoXzIwMC54LCBfMjAwLnksIF8yMDAueiwgc3Bvcy53KTsKICAgIGZsb2F0MyBfMjIzID0gc3Bvcy54eXogKyAoKCgoc2tpbkIueHl6ICogc2tpbkEudykgLSAoc2tpbkEueHl6ICogc2tpbkIudykpICsgY3Jvc3Moc2tpbkEueHl6LCBza2luQi54eXopKSAqIDIuMGYpOwogICAgc3BvcyA9IGZsb2F0NChfMjIzLngsIF8yMjMueSwgXzIyMy56LCBzcG9zLncpOwogICAgZmxvYXQzIF8yMzAgPSBzcG9zLnh5eiAvIHBvc1VucGFjay54eHg7CiAgICBzcG9zID0gZmxvYXQ0KF8yMzAueCwgXzIzMC55LCBfMjMwLnosIHNwb3Mudyk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKG11bChmbG9hdDMobm9yLCBwb3MudykgKyAoY3Jvc3Moc2tpbkEueHl6LCBjcm9zcyhza2luQS54eXosIGZsb2F0Myhub3IsIHBvcy53KSkgKyAoZmxvYXQzKG5vciwgcG9zLncpICogc2tpbkEudykpICogMi4wZiksIE4pKTsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKHNwb3MsIFdWUCk7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIGJvbmUgPSBzdGFnZV9pbnB1dC5ib25lOwogICAgd2VpZ2h0ID0gc3RhZ2VfaW5wdXQud2VpZ2h0OwogICAgbm9yID0gc3RhZ2VfaW5wdXQubm9yOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQud25vcm1hbCA9IHdub3JtYWw7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAP7v:u8BAAAAgQoAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9tZXNoLnZlcnQuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcYXJtZGVmYXVsdHNraW5fbWVzaC52ZXJ0Lmhsc2wAdW5pZm9ybSBmbG9hdDQgc2tpbkJvbmVzWzY2XTsKdW5pZm9ybSBmbG9hdCBwb3NVbnBhY2s7CnVuaWZvcm0gZmxvYXQzeDMgTjsKdW5pZm9ybSBmbG9hdDR4NCBXVlA7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IHBvczsKc3RhdGljIGZsb2F0NCBib25lOwpzdGF0aWMgZmxvYXQ0IHdlaWdodDsKc3RhdGljIGZsb2F0MyB3bm9ybWFsOwpzdGF0aWMgZmxvYXQyIG5vcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgYm9uZSA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiBub3IgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgcG9zIDogVEVYQ09PUkQyOwogICAgZmxvYXQ0IHdlaWdodCA6G%IwAYAAAADXKNuzSIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAARwAAACgAAAAb4jAB:5OnwfQJAAABAAAARgAAAEcgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAYAoAAAAAAAAICAAAAAAAAAgIAAAJEAAAbAAAAAEAoG1haW4AMgA%EQMQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAGwAAAABAAgIAAAAABYAUBEBAAUABAAEAGwAAAABAAgIBAAAABYAUBEBAAUACAAEAGwAAAABAAgICAAAABYAUBEBAAUADAAEAGwAAAABAAgIDAAAABYAUBEBAAUAEAAEAGwAAAABAAgIEAAAABYAUBEBAAUAFAAEAGwAAAABAAgIFAAAABYAUBEBAAUAGAAEAGwAAAABAAgIIAAAABYAUBEBAAUAHAAEAGwAAAABAAgIJAAAABYAUBEBAAUAIAAEAGwAAAABAAgIKAAAABYAUBEBAAUAJAAEAGwAAAABAAgILAAAABYAUBEBAAUAKAAEAGwAAAABAAgIMAAAABYAUBEBAAUALAAEAGwAAAABAAgINAAAABYAUBEBAAUAMAAEAGwAAAABAAgIOAAAABYAUBEBAAUANAAEAGwAAAABAAgIPAAAADoAPhEIEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUADAAEAGwAAAABAAgIEAAAABYAUBECAAUAEAAEAGwAAAABAAgIFAAAABYAUBECAAUAFAAEAGwAAAABAAgIGAAAABYAUBECAAUAGAAEAGwAAAABAAgIHAAAABYAUBECAAUAAAAEAGwAAAABAAgIAAAAABYAUBECAAUABAAEAGwAAAABAAgIBAAAABYAUBECAAUACAAEAGwAAAABAAgICAAAADIAPhEAEAAACABnbF9Qb3NpdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAgABADEBwAAAQA8ABAAAAAWAFARAAAFAAwABADkBwAAAQCQABQAAAAOAU0RgAAAAFwKAAAAEAAABwAJBQ1IBgwDAA2AlwYWA4LADUgGFwOBsA12Bg4DgMQNJwYJA4CkDWoGBAMgDXYGBAOA3A0rBgQDMA0hBgYDIA06BgIMHFQDMA0hBgMMQBwIAAkeDSwBbAYZAwAJGQ0tAygJBQ1HAxQJRA1nBhYDgoQNgIgDbAkzDYCJAyQJHQ2AkQNECRkNgJUDMAkPDYCWA2AJBQ1HBhcDTAk6DUwGDgOAxAkhDU0DHAlSDWwDKAkgA0QJEw0mBgkDHAkwDUkGBAMgDWADRAkfDWEDJAkTDWkDRA11BgQDMA0qBgQDMA0gBgYDIAkWDTIGAgwcVAkVDTkDMAkTDSAGAwxAHAAAACoAPhEFEAAACABfMTc5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAZAYAAAEA3AAQAAAAFgBQEQAABQAEAAQAZAYAAAEA3AAUAAAAFgBQEQAABQAIAAQAZAYAAAEA3AAYAAAAKgA%EQUQAAAIAF8yMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABABwAAAQCEABAAAAAWAFARAAAFAAQABABABwAAAQCkABQAAAAWAFARAAAFAAgABABABwAAAQA0ARgAAAAqAD4RBRAAAAgAXzIyMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAHAHAAABACAAAAAAABYAUBEAAAUABAAEAHAHAAABACAABAAAABYAUBEAAAUACAAEAHAHAAABACAACAAAACoAPhEFEAAACABfMjMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAkAcAAAEA5AAAAAAAFgBQEQAABQAEAAQAkAcAAAEA5AAEAAAAFgBQEQAABQAIAAQAkAcAAAEA5AAIAAAAMgA%EQAQAAAIAGdsX1Bvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAMQHAAABADwAEAAAABYAUBEAAAUADAAEAOQHAAABAJAAFAAAAKYATRF4AwAAWAoAAAEQAAAHAAkFDSsGAgM8DT4GBgMcDRwGBAOBJA2AnQYHA4CoDSYGCgMoDRIGAgwcWA0cBgUDgcwNEgYGDByAqAgACRINKgGAqAYTAwAJJw04BgYDHAkiDTkDgIQJEw09A3AJCQ0bBgQDMAmAjw2AmQYHA4CoCR0NJQYKAygJFgMwCQUNEQYCDBwoCQkNGwYFA4HMCQUNEQYGDByAqC4APhEMEAAACQBib25lXzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKgAAAABABwAAAAAABYAUBEAAAUABAAEAKgAAAABABwABAAAABYAUBEAAAUACAAEAKgAAAABABwACAAAABYAUBEAAAUADAAEAKgAAAABABwADAAAACoAPhEAEAAACQBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAkAIAAAEALAMgAAAAFgBQEQAABQAEAAQAkAIAAAEALAMkAAAAFgBQEQAABQAIAAQAkAIAAAEALAMoAAAAFgBQEQAABQAMAAQAkAIAAAEALAMsAAAAKgA%EQAQAAAJAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACEBQAAAQA4AAAAAAAWAFARAAAFAAQABACEBQAAAQA4AAQAAAAWAFARAAAFAAgABACEBQAAAQA4AAgAAAAWAFARAAAFAAwABACEBQAAAQA4AAwAAAAuAD4RDBAAAAgAYm9uZWkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADEAAAAAQD0AQAAAAAWAFARAAAFAAQABADEAAAAAQD0AQQAAAAWAFARAAAFAAgABADEAAAAAQD0AQgAAAAWAFARAAAFAAwABADEAAAAAQD0AQwAAAAqAD4RBRAAAAgAXzEyOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAOgBAAABANQDEAAAABYAUBEAAAUABAAEAOgBAAABANQDFAAAABYAUBEAAAUACAAEAOgBAAABANQDGAAAAC4APhFAAAAAAABpbnZOb3JtQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEABADAAABAKwCHAAAAAIAThECAE4RAgAGAB4AUhEAEAAAAAAAABAA::::::::Z2xfUG9zaXRpb24A9AAAABgAAAABAAAAEAFOHrElb2v1nNwdB8F1kl4:AADyAAAA6AUAAAAAAAABAAEAdAgAAAAAAAB8AAAA3AUAAGwAAABGAACAbAAAAEYAAACUAAAARgAAgJQAAABGAAAAqAAAAEYAAICoAAAARgAAAMQAAABGAACAxAAAAEYAAADwAAAARgAAgPAAAABGAAAAHAEAAEYAAIAcAQAARgAAAEgBAABGAACASAEAAEYAAABwAQAARgAAgHABAABGAAAAmAEAAEYAAICYAQAARgAAALgBAABGAACAuAEAAEYAAADMAQAARgAAgMwBAABGAAAA6AEAAEYAAIDoAQAARgAAAAwCAABGAACADAIAAEYAAAA4AgAARgAAgDgCAABGAAAAZAIAAEYAAIBkAgAARgAAAJACAABGAACAkAIAAEYAAAC4AgAARgAAgLgCAABGAAAA1AIAAEYAAIDUAgAARgAAAOgCAABGAACA6AIAAEYAAAAQAwAARgAAgBADAABGAAAALAMAAEYAAIAsAwAARgAAAEADAABGAACAQAMAAEYAAABUAwAARgAAgFQDAABGAAAAcAMAAEYAAIBwAwAARgAAAJgDAABGAACAmAMAAEYAAAC8AwAARgAAgLwDAABGAAAA2AMAAEYAAIDYAwAARgAAAAAEAABGAACAAAQAAEYAAAAwBAAARgAAgDAEAABGAAAAUAQAAEYAAIBQBAAARgAAAHAEAABGAACAcAQAAEYAAACQBAAARgAAgJAEAABGAAAArAQAAEYAAICsBAAARgAAAMAEAABGAACAwAQAAEYAAADcBAAARgAAgNwEAABGAAAAAAUAAEYAAIAABQAARgAAACwFAABGAACALAUAAEYAAABYBQAARgAAgFgFAABGAAAAhAUAAEYAAICEBQAARgAAAKAFAABGAACAoAUAAEYAAAC8BQAARgAAgLwFAABGAAAA5AUAAEYAAIDkBQAARgAAAAAGAABGAACAAAYAAEYAAAAoBgAARgAAgCgGAABGAAAARAYAAEYAAIBEBgAARgAAAGQGAABGAACAZAYAAEYAAACABgAARgAAgIAGAABGAAAAqAYAAEYAAICoBgAARgAAAMwGAABGAACAzAYAAEYAAADoBgAARgAAgOgGAABGAAAAEAcAAEYAAIAQBwAARgAAAEAHAABGAACAQAcAAEYAAABwBwAARgAAgHAHAABGAAAAkAcAAEYAAICQBwAARgAAAKQHAABGAACApAcAAEYAAADEBwAARgAAgMQHAABGAAAA5AcAAEYAAIDkBwAARgAAAAAIAABKAACAAAgAAEoAAAAUCAAARgAAgBQIAABGAAAAMAgAAEYAAIAwCAAARgAAAFAIAABGAACAUAgAAEYAAABwCAAASgAAgHAIAABKAAAABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAPYAAAAcAAAAAAAAAAAQAAAAAAAAKgAAAAEQAAAAAAAAHAAAABgAAAAAAAAAFAAAADQAAABUAAAAbAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEACgAYFRIQAAABAAACHgAcFUAAAAADAAAAAwAAABAAAAAALABmbG9hdDN4MwAKABgVFBAAAAEAAQAKABgVFRAAAAEAAAIeABwVQAAAAAQAAAAEAAAAEAAAAABAAGZsb2F0NHg0AAoAGBUXEAAAAQABAAoAGBUYEAAAAQAAAgvKMQE4AAAAABAAABoQAABIAgAACgD::wQAAAD::wMAAAAAAGgAAABoAAAACAAAAHAAAAAAAAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgAbFUAAAAACAAAACABmbG9hdDIA8:LxRgADEg0VAwAAEAAAAABib25lAPENFQMAARAAABAAbm9yAPLxDRUDAAAQAAAYAHBvcwDy8Q0VAwAAEAAAKAB3ZWlnaHQA8:LxJgAFFQQAAAACEAAAAAAAAAAAAAA4AFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAAAxAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8S4AAxINFQMABRAAAAAAd25vcm1hbADy8Q0VAwAAEAAADABnbF9Qb3NpdGlvbgDy8SoABRUCAAAABhAAAAAAAAAAAAAAHABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQcQAAABAAEADgAIEAgQAAAXAAEABBAAAAoAGBUDAAAAAQABAA4ACBAKEAAAFwAAAAMAAAASABsVdAAAAAQAAAAQAGludDQA8RYAARIEAAAADBAAAAAQAAAAEAAAABAAAA4ACBAKEAAAFwAEAA0QAAAKABgVABAAAAEAAQASABYVDxAAACIAAAAQAAAAIAQA8QoAGBUQEAAAAQAAAgoAGBVAAAAAfSklaS56ICsgMV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLncgKyAxXSkpOwogICAgZmxvYXQzIF8xMjkgPSB3ZWlnaHRfMS54eXogKiBzaWduKG11bChtYXRBLCBtYXRBWzNdKSkueHl6OwogICAgd2VpZ2h0XzEgPSBmbG9hdDQoXzEyOS54LCBfMTI5LnksIF8xMjkueiwgd2VpZ2h0XzEudyk7CiAgICBBID0gbXVsKHdlaWdodF8xLCBtYXRBKTsKICAgIEIgPSBtdWwod2VpZ2h0XzEsIG1hdEIpOwogICAgZmxvYXQgaW52Tm9ybUEgPSAxLjBmIC8gbGVuZ3RoKEEpOwogICAgQSAqPSBpbnZOb3JtQTsKICAgIEIgKj0gaW52Tm9ybUE7Cn0KCnZvaWQgdmVydF9tYWluKCkKewogICAgZmxvYXQ0IHNwb3MgPSBmbG9hdDQocG9zLnh5eiwgMS4wZik7CiAgICBmbG9hdDQgcGFyYW0gPSB3ZWlnaHQ7CiAgICBmbG9hdDQgc2tpbkI7CiAgICBmbG9hdDQgcGFyYW1fMiA9IHNraW5COwogICAgZmxvYXQ0IHBhcmFtXzE7CiAgICBnZXRTa2lubmluZ0R1YWxRdWF0KGludDQoYm9uZSAqIDMyNzY3LjBmKSwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZmxvYXQ0IHNraW5BID0gcGFyYW1fMTsKICAgIHNraW5CID0gcGFyYW1fMjsKICAgIGZsb2F0MyBfMTc5ID0gc3Bvcy54eXogKiBwb3NVbnBhY2s7CiAgICBzcG9zID0gZmxvYXQ0KF8xNzkueCwgXzE3OS55LCBfMTc5LnosIHNwb3Mudyk7CiAgICBmbG9hdDMgXzIwMCA9IHNwb3MueHl6ICsgKGNyb3NzKHNraW5BLnh5eiwgY3Jvc3Moc2tpbkEueHl6LCBzcG9zLnh5eikgKyAoc3Bvcy54eXogKiBza2luQS53KSkgKiAyLjBmKTsKICAgIHNwb3MgPSBmbG9hdDQoXzIwMC54LCBfMjAwLnksIF8yMDAueiwgc3Bvcy53KTsKICAgIGZsb2F0MyBfMjIzID0gc3Bvcy54eXogKyAoKCgoc2tpbkIueHl6ICogc2tpbkEudykgLSAoc2tpbkEueHl6ICogc2tpbkIudykpICsgY3Jvc3Moc2tpbkEueHl6LCBza2luQi54eXopKSAqIDIuMGYpOwogICAgc3BvcyA9IGZsb2F0NChfMjIzLngsIF8yMjMueSwgXzIyMy56LCBzcG9zLncpOwogICAgZmxvYXQzIF8yMzAgPSBzcG9zLnh5eiAvIHBvc1VucGFjay54eHg7CiAgICBzcG9zID0gZmxvYXQ0KF8yMzAueCwgXzIzMC55LCBfMjMwLnosIHNwb3Mudyk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKG11bChmbG9hdDMobm9yLCBwb3MudykgKyAoY3Jvc3Moc2tpbkEueHl6LCBjcm9zcyhza2luQS54eXosIGZsb2F0Myhub3IsIHBvcy53KSkgKyAoZmxvYXQzKG5vciwgcG9zLncpICogc2tpbkEudykpICogMi4wZiksIE4pKTsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKHNwb3MsIFdWUCk7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIGJvbmUgPSBzdGFnZV9pbnB1dC5ib25lOwogICAgd2VpZ2h0ID0gc3RhZ2VfaW5wdXQud2VpZ2h0OwogICAgbm9yID0gc3RhZ2VfaW5wdXQubm9yOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQud25vcm1hbCA9IHdub3JtYWw7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAAAAAAEYAAAABAAAARwAAAIwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAIQAAA4AAAACwD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAAFgABFgAAAAALEAAAdmVydF9tYWluAPLxHgABFgAAAAAOEAAAZ2V0U2tpbm5pbmdEdWFsUXVhdhEUgB0CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAsQAAB2ZXJ0X21haW4A8vEeAAEWAAAAAA4QAABnZXRTa2lubmluZ0R1YWxRdgkv8TAAAAAcAgAAbQAAAAEAAAABAAAAAQAAAIUAAAABAAAAVQAAAAEAAAAVAAAAAQAAADUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgwgAlEQAAAACAAAAAAQBtYWluAAAeAFERERAAAAgAAAAAAP:::::::3NraW5Cb25lcwAAAB4AURETEAAACAAAACAE::::::::cG9zVW5wYWNrAAAAFgBRERYQAAAIAAAAMAT:::::::9OAAAAFgBRERkQAAAIAAAAYAT:::::::9XVlAAHgBSEQAQAAAAAAAAEAD:::::::9nbF9Qb3NpdGlvbgxorDwABAEwAAAAgAAAALAAAAFQAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAB0CAAAIAAAYAAAAAAAAAAAAAAAAAIACQCECgAAAAAAADQGAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAdAgAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAHQIAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGFybWRlZmF1bHRza2luX21lc2gudmVydC5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQZbYmQBAAAAr7FT90zrJ0CiAh6of1aHJnIAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9tZXNoLnZlcnQuaGxzbAAEAAAABgAAAAEAAAAbAAAAAAAAACIAAAAIAAAAEQAAAAcAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAM4AAACAAgAAWwEAAHAAAAAAAAAAsQoAAIAAAAD0CQAA1BAAAHAAAAAQAAAAKAAAAFwCAAAsAAAApAAAAAMAAAAmAAAAGQAAABgAAAAlAAAAHwAAAA0AAAAGAAAAGwAAABwAAAAdAAAAHgAAAA4AAAAIAAAACQAAAAoAAAALAAAADAAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAAAcAAAAaAAAAIAAAACEAAAAiAAAAJAAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACc
kha_Shaders.armdefaultskin_shadowmap_fragData0 = "s16127:AAAARFhCQyt6cE1Ix1niPlqAzu%24usBAAAAPC8AAAYAAAA4AAAAhAAAAJQAAACkAAAAuAAAADQBAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTggAAAAAAAAACAAAAE9TR04IAAAAAAAAAAgAAABTSERSDAAAAEAAAAADAAAAPgAAAVNUQVR0AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAC4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAXAAAAgwwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBBltiZAEAAAB2BjH1x66uRpGOqhDWppOxAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwzgb2lkIGZyYWdfbWFpbigpCnsKfQoKdm9pZCBtYWluKCkKewogICAgZnJhZ19tYWluKCk7Cnv:u8BAAAAzgAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9zaGFkb3dtYXAuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9zaGFkb3dtYXAuZnJhZy5obHNsAHZvaWQgZnJhZ19tYWluKCkKewp9Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnX21haW4oKTsKfQoABwAAAEwAAABLAAAAAAAAAJYAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG%IwAYAAAACFJeazSIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAATAAAACgAAAAb4jAB9fHO5DcAAAABAAAASwAAAEwgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAArAAAAAAAAAAEAAAAAAAAAAQAAAABEAAACAAAAAEAoG1haW4AAgAGAPQAAAAYAAAAAQAAABAB4hQ95zPzbLngipWEflmybAAA8gAAADAAAAAAAAAAAQABAAwAAAAAAAAAAgAAACQAAAAIAAAACAAAgAgAAAAIAAAAAQABAAEAAQD2AAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAIQAAAcAAAACgD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAACgAYFQMAAAABAAEADgAIEAAQAAAXAAAAAwoxATgAAAAAEAAAABAAAAAAAAALAP::BAAAAP::Awgkv8QgAAAAIAggAlEQAAAACAAAAAAQBtYWluAAAAAAAAAAAAAP::::8aCS:xxorDwABAEwAAAAgAAAALAAAAFgAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAMAAAAIAAAYAAAAAAAAAAAAAAAAAIACQCwAAAAAAAAAGQAAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAADAAAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAAwAAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGFybWRlZmF1bHRza2luX3NoYWRvd21hcC5mcmFnLmhsc2wAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQZbYmQBAAAAdgYx9ceurkaRjqoQ1qaTsXcAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9zaGFkb3dtYXAuZnJhZy5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAANMAAABUAAAAXwEAADgAAAAAAAAA:gAAAIAAAAA3AAAAHAEAABAAAAAAAAAAKAAAACACAAAsAAAAFAAAAAMAAAATAAAADAAAABIAAAANAAAACQAAAAoAAAAIAAAACwAAAAcAAAAGAAAADg
kha_Shaders.armdefaultskin_shadowmap_vertData0 = "s29876:A2JvbmUAAHBvcwABd2VpZ2h0AAIBJEdsb2JhbHMAAANza2luQm9uZXMAAAAAACAEAAAEAXBvc1VucGFjawAgBAAABAAAAAEBTFdWUAAwBAAAQAAAAAQERFhCQ0wyBhdZQooMAO3vmib3GtwBAAAAMFcAAAYAAAA4AAAAYAEAAMQBAAD4AQAArAgAACgJAABSREVGIAEAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAPgAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAADAAAAYAAAAHAEAAAAAAAAAAAAAKgAAAAAAAAAIAQAAAIAAAC0AAAAAAAAAMQAAAAgBAAABAAAAAIAAADQAAAAAAAAAOAAAAAwBAAAQAAAAAIAAADoAAAAAAAAAHNraW5Cb25lcwCrqwEAAwABAAQAQgAAAAAAAABwb3NVbnBhY2sAq6sAAAMAAQABAAAAAAAAAAAATFdWUACrq6sDAAMABAAEAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR05cAAAAAwAAAAgAAABQAAAAAAAAAAAAAAADAAAAAAAAAA8PAABQAAAAAQAAAAAAAAADAAAAAQAAAA8HAABQAAAAAgAAAAAAAAADAAAAAgAAAA8PAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAABAAAAAwAAAAAAAAAPAAAAU1ZfUG9zaXRpb24AU0hEUqwGAABAAAEAqwEAAFkIAARGjiAAAAAAAEcAAABfAAAD8hAQAAAAAABfAAADchAQAAEAAABfAAAD8hAQAAIAAABnAAAE8iAQAAAAAAABAAAAaAAAAgUAAAA4AAAK8gAQAAAAAABGHhAAAAAAAAJAAAAA:v9GAP7:RgD%:0YA:v9GGwAABfIAEAAAAAAARg4QAAAAAAApAAAH8gAQAAAAAABGDhAAAAAAAAFAAAABAAAAEQAACxIAEAABAAAARo4gBAAAAAAKABAAAAAAAEaOIAQAAAAAOgAQAAAAAAARAAALIgAQAAEAAABGjiAEAAAAABoAEAAAAAAARo4gBAAAAAA6ABAAAAAAABEAAAtCABAAAQAAAEaOIAQAAAAAKgAQAAAAAABGjiAEAAAAADoAEAAAAAAAMQAACnIAEAACAAAAAkAAAAAAAAAAAAAAAAAAAAAAAABGAhAAAQAAADEAAApyABAAAQAAAEYCEAABAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAeAAAIcgAQAAEAAABGAhCAQQAAAAIAAABGAhAAAQAAACsAAAVyABAAAQAAAEYCEAABAAAAOAAAB3IAEAABAAAARgIQAAEAAABGEhAAAgAAADgAAAnyABAAAgAAAFYFEAABAAAARo4gBAAAAAAaABAAAAAAADIAAAvyABAAAgAAAAYAEAABAAAARo4gBAAAAAAKABAAAAAAAEYOEAACAAAAMgAAC:IAEAACAAAApgoQAAEAAABGjiAEAAAAACoAEAAAAAAARg4QAAIAAAAyAAAL8gAQAAIAAAD2HxAAAgAAAEaOIAQAAAAAOgAQAAAAAABGDhAAAgAAAB4AAAryABAAAAAAAEYOEAAAAAAAAkAAAAEAAAABAAAAAQAAAAEAAAARAAAHggAQAAEAAABGDhAAAgAAAEYOEAACAAAASwAABYIAEAABAAAAOgAQAAEAAAAOAAAKggAQAAEAAAACQAAAAACAPwAAgD8AAIA:AACAPzoAEAABAAAAOAAACfIAEAADAAAAVgUQAAEAAABGjiAEAAAAABoAEAAAAAAAMgAAC:IAEAADAAAABgAQAAEAAABGjiAEAAAAAAoAEAAAAAAARg4QAAMAAAAyAAAL8gAQAAMAAACmChAAAQAAAEaOIAQAAAAAKgAQAAAAAABGDhAAAwAAADIAAAvyABAAAAAAAPYfEAACAAAARo4gBAAAAAA6ABAAAAAAAEYOEAADAAAAOAAAB:IAEAAAAAAA9g8QAAEAAABGDhAAAAAAADgAAAfyABAAAQAAAPYPEAABAAAARg4QAAIAAAA4AAAHcgAQAAIAAAD2DxAAAAAAAEYCEAABAAAAMgAACnIAEAACAAAARgIQAAAAAAD2DxAAAQAAAEYCEIBBAAAAAgAAADgAAAdyABAAAwAAAJYEEAAAAAAAJgkQAAEAAAAyAAAKcgAQAAAAAACWBBAAAQAAACYJEAAAAAAARgIQgEEAAAADAAAAAAAAB3IAEAAAAAAARgIQAAAAAABGAhAAAgAAADgAAAhyABAAAgAAAEYSEAABAAAABoAgAAAAAABCAAAAOAAAB3IAEAADAAAARgIQAAEAAAAmCRAAAgAAADIAAApyABAAAwAAACYJEAABAAAARgIQAAIAAABGAhCAQQAAAAMAAAAyAAAJcgAQAAMAAACWBBAAAgAAAPYPEAABAAAARgIQAAMAAAA4AAAHcgAQAAQAAAAmCRAAAQAAAEYCEAADAAAAMgAACnIAEAABAAAAlgQQAAEAAACWBBAAAwAAAEYCEIBBAAAABAAAADIAAAxyABAAAQAAAEYCEAABAAAAAkAAAAAAAEAAAABAAAAAQAAAAABGAhAAAgAAADIAAAxyABAAAAAAAEYCEAAAAAAAAkAAAAAAAEAAAABAAAAAQAAAAABGAhAAAQAAAA4AAAhyABAAAAAAAEYCEAAAAAAABoAgAAAAAABCAAAANgAABYIAEAAAAAAAAUAAAAAAgD8RAAAIEgAQAAEAAABGDhAAAAAAAEaOIAAAAAAARQAAABEAAAgiABAAAQAAAEYOEAAAAAAARo4gAAAAAABGAAAAAAAABxIAEAABAAAAGgAQAAEAAAAKABAAAQAAADYAAAWCIBAAAAAAABoAEAABAAAAOAAAB0IgEAAAAAAACgAQAAEAAAABQAAAAAAAPxEAAAgSIBAAAAAAAEYOEAAAAAAARo4gAAAAAABDAAAAEQAACCIgEAAAAAAARg4QAAAAAABGjiAAAAAAAEQAAAA%AAABU1RBVHQAAAAwAAAABQAAAAAAAAAEAAAAKAAAAAMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIATgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAACczggAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAANyknELyRoxFm0y19vFla7AAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzbjsKfTsKCnZvaWQgZ2V0U2tpbm5pbmdEdWFsUXVhdChpbnQ0IGJvbmVfMSwgaW5vdXQgZmxvYXQ0IHdlaWdodF8xLCBpbm91dCBmbG9hdDQgQSwgaW5vdXQgZmxvYXQ0IEIpCnsKICAgIGludDQgYm9uZWkgPSBib25lXzEgKiBpbnQ0KDIsIDIsIDIsIDIpOwogICAgZmxvYXQ0eDQgbWF0QSA9IGZsb2F0NHg0KGZsb2F0NChza2luQm9uZXNbYm9uZWkueF0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnldKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56XSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkud10pKTsKICAgIGZsb2F0NHg0IG1hdEIgPSBmbG9hdDR4NChmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnggKyAxXSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkueSArIDFdKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56ICsgMV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLncgKyAxXSkpOwogICAgZmxvYXQzIF8xMjkgPSB3ZWlnaHRfMS54eXogKiBzaWduKG11bChtYXRBLCBtYXRBWzNdKSkueHl6OwogICDGWgAAtdsDAAhoAAAewgIAkLIBAMHDAABtGAEAzt0CAFCFAQCphgEATOgDANx3AQBjOwEArMcBAEEkAQBDqgAAfdoBAJLmAwDKswAAZ58BAHbVAAB2xwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVuaWZvcm0gZmxvYXQ0IHNraW5Cb25lc1s2Nl07CnVuaWZvcm0gZmxvYXQgcG9zVW5wYWNrOwp1bmlmb3JtIGZsb2F0NHg0IExXVlA7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IHBvczsKc3RhdGljIGZsb2F0NCBib25lOwpzdGF0aWMgZmxvYXQ0IHdlaWdodDsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgYm9uZSA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBwb3MgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgd2VpZ2h0IDogVEVYQ09PUkQyOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgZ2V0U2tpbm5pbmdEdWFsUXVhdChpbnQ0IGJvbmVfMSwgaW5vdXQgZmxvYXQ0IHdlaWdodF8xLCBpbm91dCBmbG9hdDQgQSwgaW5vdXQgZmxvYXQ0IEIpCnsKICAgIGludDQgYm9uZWkgPSBib25lXzEgKiBpbnQ0KDIsIDIsIDIsIDIpOwogICAgZmxvYXQ0eDQgbWF0QSA9IGZsb2F0NHg0KGZsb2F0NChza2luQm9uZXNbYm9uZWkueF0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnldKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56XSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkud10pKTsKICAgIGZsb2F0NHg0IG1hdEIgPSBmbG9hdDR4NChmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLnggKyAxXSksIGZsb2F0NChza2luQm9uZXNbYm9uZWkueSArIDFdKSwgZmxvYXQ0KHNraW5Cb25lc1tib25laS56ICsgMV0pLCBmbG9hdDQoc2tpbkJvbmVzW2JvbmVpLncgKyAxXSkpOwogICAgZmxvYXQzIF8xMjkgPSB3ZWlnaHRfMS54eXogKiBzaWduKG11bChtYXRBLCBtYXRBWzNdKSkueHl6OwogICAgd2VpZ2h0XzEgPSBmbG9hdDQoXzEyOS54LCBfMTI5LnksIF8xMjkueiwgd2VpZ2h0XzEudyk7CiAgICBBID0gbXVsKHdlaWdodF8xLCBtYXRBKTsKICAgIEIgPSBtdWwod2VpZ2h0XzEsIG1hdEIpOwogICAgZmxvYXQgaW52Tm9ybUEgPSAxLjBmIC8gbGVuZ3RoKEEpOwogICAgQSAqPSBpbnZOb3JtQTsKICAgIEIgKj0gaW52Tm9ybUE7Cn0KCnZvaWQgdmVydF9tYWluKCkKewogICAgZmxvYXQ0IHNwb3MgPSBmbG9hdDQocG9zLnh5eiwgMS4wZik7CiAgICBmbG9hdDQgcGFyYW0gPSB3ZWlnaHQ7CiAgICBmbG9hdDQgc2tpbkI7CiAgICBmbG9hdDQgcGFyYW1fMiA9IHNraW5COwogICAgZmxvYXQ0IHBhcmFtXzE7CiAgICBnZXRTa2lubmluZ0R1YWxRdWF0KGludDQoYm9uZSAqIDMyNzY3LjBmKSwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZmxvYXQ0IHNraW5BID0gcGFyYW1fMTsKICAgIHNraW5CID0gcGFyYW1fMjsKICAgIGZsb2F0MyBfMTc5ID0gc3Bvcy54eXogKiBwb3NVbnBhY2s7CiAgICBzcG9zID0gZmxvYXQ0KF8xNzkueCwgXzE3OS55LCBfMTc5LnosIHNwb3Mudyk7CiAgICBmbG9hdDMgXzIwMCA9IHNwb3MueHl6ICsgKGNyb3NzKHNraW5BLnh5eiwgY3Jvc3Moc2tpbkEueHl6LCBzcG9zLnh5eikgKyAoc3Bvcy54eXogKiBza2luQS53KSkgKiAyLjBmKTsKICAgIHNwb3MgPSBmbG9hdDQoXzIwMC54LCBfMjAwLnksIF8yMDAueiwgc3Bvcy53KTsKICAgIGZsb2F0MyBfMjIzID0gc3Bvcy54eXogKyAoKCgoc2tpbkIueHl6ICogc2tpbkEudykgLSAoc2tpbkEueHl6ICogc2tpbkIudykpICsgY3Jvc3Moc2tpbkEueHl6LCBza2luQi54eXopKSAqIDIuMGYpOwogICAgc3BvcyA9IGZsb2F0NChfMjIzLngsIF8yMjMueSwgXzIyMy56LCBzcG9zLncpOwogICAgZmxvYXQzIF8yMzAgPSBzcG9zLnh5eiAvIHBvc1VucGFjay54eHg7CiAgICBzcG9zID0gZmxvYXQ0KF8yMzAueCwgXzIzMC55LCBfMjMwLnosIHNwb3Mudyk7CiAgICBnbF9Qb3NpdGlvbiA9IG11bChzcG9zLCBMV1ZQKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgYm9uZSA9IHN0YWdlX2lucHV0LmJvbmU7CiAgICB3ZWlnaHQgPSBzdGFnZV9pbnB1dC53ZWlnaHQ7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAADwJAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcYXJtZGVmYXVsdHNraW5fc2hhZG93bWFwLnZlcnQuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcYXJtZGVmYXVsdHNraW5fc2hhZG93bWFwLnZlcnQuaGxzbAB1bmlmb3JtIGZsb2F0NCBza2luQm9uZXNbNjZdOwp1bmlmb3JtIGZsb2F0IHBvc1VucGFjazsKdW5pZm9ybSBmbG9hdDR4NCBMV1ZQOwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0NCBwb3M7CnN0YXRpYyBmbG9hdDQgYm9uZTsKc3RhdGljIGZsb2F0NCB3ZWlnaHQ7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IGJvbmUgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgcG9zIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IHdlaWdodCA6IFRFWENPT1JEMjsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpbxviMAGAAAAAimv2s0iH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAABAAAAAAAAAEwAAAAoAAAAG%IwASneh7ylCAAAAQAAAEsjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAPwJAAAAAAAAWAYAAAAAAABYBgAABxAAAFQAAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABUAAAAAQBYBgAAAAAWAFARAQAFAAQABABUAAAAAQBYBgQAAAAWAFARAQAFAAgABABUAAAAAQBYBggAAAAWAFARAQAFAAwABABUAAAAAQBYBgwAAAAWAFARAQAFABAABABUAAAAAQBYBhAAAAAWAFARAQAFABQABABUAAAAAQBYBhQAAAAWAFARAQAFABgABABUAAAAAQBYBhgAAAAWAFARAQAFABwABABUAAAAAQBYBhwAAAAWAFARAQAFACAABABUAAAAAQBYBiAAAAAWAFARAQAFACQABABUAAAAAQBYBiQAAAAWAFARAQAFACgABABUAAAAAQBYBigAAAAWAFARAQAFACwABABUAAAAAQBYBiwAAAA6AD4RBhAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAAABABUAAAAAQBYBgAAAAAWAFARAgAFAAQABABUAAAAAQBYBgQAAAAWAFARAgAFAAgABABUAAAAAQBYBggAAAAWAFARAgAFAAwABABUAAAAAQBYBgwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA:AUAAAEAPAAQAAAAFgBQEQAABQAMAAQAHAYAAAEAkAAUAAAAygBNEYAAAAD4CQAAABAAAAcACQUNSAYMAwANdgYOA4OEDScGCQOApA1qBgQDIA12BgQDgNwNKwYEAzANIgYEAyANOgYCDBxUAzANIgYDDEAcCAAJHg0sAVQGFwMACRkNLQMoCQUNRwMUCToNTAYOA4NICSENTQMcCVINbAMoCSADRAkTDSYGCQMcCTANSQYEAyANYANECR8NYQMkCRMNaQNEDXUGBAMwDSoGBAMwDSEGBAMgCRYNMgYCDBxUCRUNOQMwCRMNIQYDDEAcKgA%EQoQAAAIAF8xNzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACcBAAAAQAQAiAAAAAWAFARAAAFAAQABACcBAAAAQAQAiQAAAAWAFARAAAFAAgABACcBAAAAQAQAigAAAAqAD4RChAAAAgAXzIwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAHgFAAABAIQAEAAAABYAUBEAAAUABAAEAHgFAAABAKQAFAAAABYAUBEAAAUACAAEAHgFAAABADQBGAAAACoAPhEKEAAACABfMjIzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAqAUAAAEAIAAAAAAAFgBQEQAABQAEAAQAqAUAAAEAIAAEAAAAFgBQEQAABQAIAAQAqAUAAAEAIAAIAAAAKgA%EQoQAAAIAF8yMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADIBQAAAQDkAAAAAAAWAFARAAAFAAQABADIBQAAAQDkAAQAAAAWAFARAAAFAAgABADIBQAAAQDkAAgAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA:AUAAAEAPAAQAAAAFgBQEQAABQAMAAQAHAYAAAEAkAAUAAAAngBNEQADAAD0CQAAARAAAAcACQUNKwYCAzwNPgYGAxwNHAYEA4EkDYCdBgcDgKgNJgYKAygNHAYDA1gNEgYGA4CoBgMMHBwIAAkSDSoBgJAGEQMACScNOAYGAxwJIg05A4CECRMNPQNwCQkNGwYEAzAJgI8NgJkGBwOAqAkdDSUGCgMoCRYDMAkJDRsGAwMoCQUNEQYGA4CoBgMMHBwAAC4APhELEAAACQBib25lXzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJAAAAABABwAAAAAABYAUBEAAAUABAAEAJAAAAABABwABAAAABYAUBEAAAUACAAEAJAAAAABABwACAAAABYAUBEAAAUADAAEAJAAAAABABwADAAAACoAPhEAEAAACQBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAeAIAAAEAYAEgAAAAFgBQEQAABQAEAAQAeAIAAAEAYAEkAAAAFgBQEQAABQAIAAQAeAIAAAEAYAEoAAAAFgBQEQAABQAMAAQAeAIAAAEAYAEsAAAAFgBQEQAABQAAAAQA2AMAAAEAHAAQAAAAFgBQEQAABQAEAAQA2AMAAAEAHAAUAAAAFgBQEQAABQAIAAQA2AMAAAEAHAAYAAAAFgBQEQAABQAMAAQA2AMAAAEAHAAcAAAAKgA%EQAQAAAJAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACgAwAAAQBUAAAAAAAWAFARAAAFAAQABACgAwAAAQBUAAQAAAAWAFARAAAFAAgABACgAwAAAQBUAAgAAAAWAFARAAAFAAwABACgAwAAAQBUAAwAAAAuAD4RCxAAAAgAYm9uZWkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACsAAAAAQD0AQAAAAAWAFARAAAFAAQABACsAAAAAQD0AQQAAAAWAFARAAAFAAgABACsAAAAAQD0AQgAAAAWAFARAAAFAAwABACsAAAAAQD0AQwAAAAqAD4RChAAAAgAXzEyOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANABAAABAAgCEAAAABYAUBEAAAUABAAEANABAAABAAgCFAAAABYAUBEAAAUACAAEANABAAABAAgCGAAAAC4APhFAAAAAAABpbnZOb3JtQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAPgCAAABAOAAHAAAAAIAThECAE4RAgAGAB4AUhEAEAAAAAAAABAA::::::::Z2xfUG9zaXRpb24A9AAAABgAAAABAAAAEAGGuFCQSwROYrQrw%mWx5aXAADyAAAAmAQAAAAAAAABAAEArAYAAAAAAABgAAAAjAQAAFQAAAA:AACAVAAAAD8AAAB8AAAAPwAAgHwAAAA:AAAAkAAAAD8AAICQAAAAPwAAAKwAAAA:AACArAAAAD8AAADYAAAAPwAAgNgAAAA:AAAABAEAAD8AAIAEAQAAPwAAADABAAA:AACAMAEAAD8AAABYAQAAPwAAgFgBAAA:AAAAgAEAAD8AAICAAQAAPwAAAKABAAA:AACAoAEAAD8AAAC0AQAAPwAAgLQBAAA:AAAA0AEAAD8AAIDQAQAAPwAAAPQBAAA:AACA9AEAAD8AAAAgAgAAPwAAgCACAAA:AAAATAIAAD8AAIBMAgAAPwAAAHgCAAA:AACAeAIAAD8AAACgAgAAPwAAgKACAAA:AAAAvAIAAD8AAIC8AgAAPwAAANACAAA:AACA0AIAAD8AAAD4AgAAPwAAgPgCAAA:AAAAHAMAAD8AAIAcAwAAPwAAAEgDAAA:AACASAMAAD8AAAB0AwAAPwAAgHQDAAA:AAAAoAMAAD8AAICgAwAAPwAAALwDAAA:AACAvAMAAD8AAADYAwAAPwAAgNgDAAA:AAAA9AMAAD8AAID0AwAAPwAAABwEAAA:AACAHAQAAD8AAAA4BAAAPwAAgDgEAAA:AAAAYAQAAD8AAIBgBAAAPwAAAHwEAAA:AACAfAQAAD8AAACcBAAAPwAAgJwEAAA:AAAAuAQAAD8AAIC4BAAAPwAAAOAEAAA:AACA4AQAAD8AAAAEBQAAPwAAgAQFAAA:AAAAIAUAAD8AAIAgBQAAPwAAAEgFAAA:AACASAUAAD8AAAB4BQAAPwAAgHgFAAA:AAAAqAUAAD8AAICoBQAAPwAAAMgFAAA:AACAyAUAAD8AAADcBQAAPwAAgNwFAAA:AAAA:AUAAD8AAID8BQAAPwAAABwGAAA:AACAHAYAAD8AAAA4BgAAQgAAgDgGAABCAAAATAYAAD8AAIBMBgAAPwAAAGgGAAA:AACAaAYAAD8AAACIBgAAPwAAgIgGAAA:AAAAqAYAAEIAAICoBgAAQgAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAPYAAAAcAAAAAAAAAAAQAAAAAAAAJQAAAAEQAAAAAAAAFwAAABQAAAAAAAAAFAAAADQAAABUAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAGBUUEAAAAQAAAgoxATgAAAAAEAAAFhAAANQBAAAKAP::BAAAAP::AwAAAAAAWAAAAFgAAAAIAAAAYAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vE2AAMSDRUDAAAQAAAAAGJvbmUA8Q0VAwAAEAAAEABwb3MA8vENFQMAABAAACAAd2VpZ2h0APPy8SYABRUDAAAAARAAAAAAAAAAAAAAMABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAaAAMSDRUDAAAQAAAAAGdsX1Bvc2l0aW9uAPLxKgAFFQEAAAAEEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBRAAAAEAAQAOAAgQBhAAABcAAQADEAAACgAYFQMAAAABAAEADgAIEAgQAAAXAAAAAwAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8RIAGxV0AAAABAAAABAAaW50NADxFgABEgQAAAALEAAAABAAAAAQAAAAEAAADgAIEAgQAAAXAAQADBAAAAoAGBUAEAAAAQABABIAFhUOEAAAIgAAABAAAAAgBADxCgAYFQ8QAAABAAACCgAYFUAAAAABAAEACgAYFREQAAABAAACHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVExAAAAEAAQD05QEAnlnaHRfMSA9IGZsb2F0NChfMTI5LngsIF8xMjkueSwgXzEyOS56LCB3ZWlnaHRfMS53KTsKICAgIEEgPSBtdWwod2VpZ2h0XzEsIG1hdEEpOwogICAgQiA9IG11bCh3ZWlnaHRfMSwgbWF0Qik7CiAgICBmbG9hdCBpbnZOb3JtQSA9IDEuMGYgLyBsZW5ndGgoQSk7CiAgICBBICo9IGludk5vcm1BOwogICAgQiAqPSBpbnZOb3JtQTsKfQoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBmbG9hdDQgc3BvcyA9IGZsb2F0NChwb3MueHl6LCAxLjBmKTsKICAgIGZsb2F0NCBwYXJhbSA9IHdlaWdodDsKICAgIGZsb2F0NCBza2luQjsKICAgIGZsb2F0NCBwYXJhbV8yID0gc2tpbkI7CiAgICBmbG9hdDQgcGFyYW1fMTsKICAgIGdldFNraW5uaW5nRHVhbFF1YXQoaW50NChib25lICogMzI3NjcuMGYpLCBwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICBmbG9hdDQgc2tpbkEgPSBwYXJhbV8xOwogICAgc2tpbkIgPSBwYXJhbV8yOwogICAgZmxvYXQzIF8xNzkgPSBzcG9zLnh5eiAqIHBvc1VucGFjazsKICAgIHNwb3MgPSBmbG9hdDQoXzE3OS54LCBfMTc5LnksIF8xNzkueiwgc3Bvcy53KTsKICAgIGZsb2F0MyBfMjAwID0gc3Bvcy54eXogKyAoY3Jvc3Moc2tpbkEueHl6LCBjcm9zcyhza2luQS54eXosIHNwb3MueHl6KSArIChzcG9zLnh5eiAqIHNraW5BLncpKSAqIDIuMGYpOwogICAgc3BvcyA9IGZsb2F0NChfMjAwLngsIF8yMDAueSwgXzIwMC56LCBzcG9zLncpOwogICAgZmxvYXQzIF8yMjMgPSBzcG9zLnh5eiArICgoKChza2luQi54eXogKiBza2luQS53KSAtIChza2luQS54eXogKiBza2luQi53KSkgKyBjcm9zcyhza2luQS54eXosIHNraW5CLnh5eikpICogMi4wZik7CiAgICBzcG9zID0gZmxvYXQ0KF8yMjMueCwgXzIyMy55LCBfMjIzLnosIHNwb3Mudyk7CiAgICBmbG9hdDMgXzIzMCA9IHNwb3MueHl6IC8gcG9zVW5wYWNrLnh4eDsKICAgIHNwb3MgPSBmbG9hdDQoXzIzMC54LCBfMjMwLnksIF8yMzAueiwgc3Bvcy53KTsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKHNwb3MsIExXVlApOwogICAgZ2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56ICsgZ2xfUG9zaXRpb24udykgKiAwLjU7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBwb3MgPSBzdGFnZV9pbnB1dC5wb3M7CiAgICBib25lID0gc3RhZ2VfaW5wdXQuYm9uZTsKICAgIHdlaWdodCA9IHN0YWdlX2lucHV0LndlaWdodDsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAABLAAAAAQAAAEwAAAAAAAAAlgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAIQAAA4AAAACwD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAAFgABFgAAAAAJEAAAdmVydF9tYWluAPLxHgABFgAAAAANEAAAZ2V0U2tpbm5pbmdEdWFsUXVhdhEUgCsBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAkQAAB2ZXJ0X21haW4A8vEeAAEWAAAAAA0QAABnZXRTa2lubmluZ0R1YWxRdgkv8SgAAAAYAgAAAQAAAAEAAABxAAAAAQAAAFUAAAABAAAAFQAAAAEAAAA1AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwgAlEQAAAACAAAAAAQBtYWluAAAeAFEREBAAAAgAAAAAAP:::::::3NraW5Cb25lcwAAAB4AURESEAAACAAAACAE::::::::cG9zVW5wYWNrAAAAGgBRERUQAAAIAAAAMAT:::::::9MV1ZQAAAAAB4AUhEAEAAAAAAAABAA::::::::Z2xfUG9zaXRpbxorDwABAEwAAAAgAAAALAAAAFgAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAACsBgAAIAAAYAAAAAAAAAAAAAAAAAIACQAgCgAAAAAAAOQEAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAArAYAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAKwGAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGFybWRlZmF1bHRza2luX3NoYWRvd21hcC52ZXJ0Lmhsc2wAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQdbYmQBAAAA3KScQvJGjEWbTLX28WVrsHcAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxhcm1kZWZhdWx0c2tpbl9zaGFkb3dtYXAudmVydC5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAANMAAAAMAgAAXwEAAHAAAAAAAAAAbAkAAIAAAAClCAAAHA8AAGAAAAAQAAAAKAAAAFACAAAsAAAAkAAAAAMAAAAkAAAAGAAAABcAAAAjAAAAHQAAAA0AAAAGAAAAGgAAABsAAAAcAAAADgAAAAgAAAAJAAAACgAAAAsAAAAMAAAADwAAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAHAAAAGQAAAB4AAAAfAAAAIAAAACIAAAAh
kha_Shaders.blur_edge_pass_fragData0 = "s33347:AAVfZ2J1ZmZlcjBfc2FtcGxlcgAAX3RleF9zYW1wbGVyAAFnYnVmZmVyMAAAdGV4AAEkR2xvYmFscwAAAWRpckludgAAAAAACAAAAAIBRFhCQ937:8E76sf1fhuBbFw6QswBAAAAZGEAAAYAAAA4AAAApAEAANgBAAAMAgAA4AoAAFwLAABSREVGZAEAAAEAAAD0AAAABQAAABwAAAAABP::AQEAADwBAAC8AAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAM4AAAADAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAA2wAAAAIAAAAFAAAABAAAAP::::8AAAAAAQAAAA0AAADkAAAAAgAAAAUAAAAEAAAA:::::wEAAAABAAAADQAAAOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAX2didWZmZXIwX3NhbXBsZXIAX3RleF9zYW1wbGVyAGdidWZmZXIwAHRleAAkR2xvYmFscwCrq6voAAAAAQAAAAwBAAAQAAAAAAAAAAAAAAAkAQAAAAAAAAgAAAACAAAALAEAAAAAAABkaXJJbnYAqwEAAwABAAIAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAAAwMAAFRFWENPT1JEAKurq09TR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAEOAABTVl9UYXJnZXQAq6tTSERSzAgAAEAAAAAzAgAANRgAACoAAAD0wAc%AAAAAAAAAAAAAAAAu3sAPgAAAAAAAAAAAAAAABba2T0AAAAAAAAAAAAAAAD8b6U9AAAAAAAAAAAAAAAAQBNhPQAAAAAAAAAAAAAAAGwkCT0AAAAAAAAAAAAAAAB0tZU8AAAAAAAAAAAAAAAA6V8SPAAAAAAAAAAAAAAAADwwgDsAAAAAAAAAAAAAAAAOMsk6AAAAAAAAAAAAAAAAWQAABEaOIAAAAAAAAQAAAFoAAAMAYBAAAAAAAFoAAAMAYBAAAQAAAFgYAAQAcBAAAAAAAFVVAABYGAAEAHAQAAEAAABVVQAAYhAAAzIQEAAAAAAAZQAAAxIgEAAAAAAAaAAAAgYAAABIAAAL8gAQAAAAAABGEBAAAAAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAAAAAAtyABAAAQAAAEYAEIDBAAAAAAAAAAJAAAAAAIA:AACAPwAAgD8AAAAAAAAACEIAEAACAAAAGgAQgMEAAAAAAAAACgAQAAEAAAAdAAAHQgAQAAAAAAAqABAAAgAAAAFAAAAAAAAAHQAACpIAEAABAAAABgQQAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAADcAAA%SABAAAQAAAAYMEAABAAAAAkAAAAAAgD8AAAAAAAAAAAAAgD8CQAAAAACAvwAAAAAAAAAAAACAvzgAAAcyABAAAQAAAMYAEAABAAAAlgUQAAEAAAA3AAAJMgAQAAIAAACmChAAAAAAAEYAEAAAAAAARgAQAAEAAAAQAAAHEgAQAAAAAABGAhAAAgAAAEYCEAACAAAARAAABRIAEAAAAAAACgAQAAAAAAA4AAAHcgAQAAAAAAAGABAAAAAAAEYCEAACAAAASAAAC:IAEAABAAAARhAQAAAAAABGfhAAAQAAAABgEAABAAAAAUAAAAAAAAA4AAAHggAQAAAAAAAKABAAAQAAAAFAAAD0wAc%NgAABRIAEAABAAAAOgAQAAAAAAA2AAAIYgAQAAEAAAACQAAAAAAAAPTABz4BAAAAAAAAADAAAAEhAAAHggAQAAEAAAAqABAAAQAAAAFAAAAIAAAAAwAEAzoAEAABAAAAKwAABYIAEAABAAAAKgAQAAEAAAAyAAAKMgAQAAIAAABGgCAAAAAAAAAAAAD2DxAAAQAAAEYQEAAAAAAASAAAC:IAEAADAAAARgAQAAIAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAAAAALcgAQAAQAAABGABCAwQAAAAMAAAACQAAAAACAPwAAgD8AAIA:AAAAAAAAAAhCABAABQAAABoAEIDBAAAAAwAAAAoAEAAEAAAAHQAAB0IAEAACAAAAKgAQAAUAAAABQAAAAAAAAB0AAArCABAAAwAAAAYEEAADAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAA3AAAPwgAQAAMAAACmDhAAAwAAAAJAAAAAAAAAAAAAAAAAgD8AAIA:AkAAAAAAAAAAAAAAAACAvwAAgL84AAAHwgAQAAMAAACmDhAAAwAAAFYJEAAEAAAANwAACTIAEAAFAAAApgoQAAIAAABGABAAAwAAAOYKEAADAAAAEAAAB0IAEAACAAAARgIQAAUAAABGAhAABQAAAEQAAAVCABAAAgAAACoAEAACAAAAOAAAB3IAEAADAAAApgoQAAIAAABGAhAABQAAABAAAAdCABAAAgAAAEYCEAADAAAARgIQAAAAAAAdAAAHQgAQAAIAAAAqABAAAgAAAAFAAAAzM3M:AQAAB0IAEAACAAAAKgAQAAIAAAABQAAAAACAP0gAAAvyABAAAwAAAEYAEAACAAAARn4QAAEAAAAAYBAAAQAAAAFAAAAAAAAAOAAACBIAEAACAAAAKgAQAAIAAAAKkJAAKgAQAAEAAAAyAAAJEgAQAAIAAAAKABAAAwAAAAoAEAACAAAACgAQAAEAAAAyAAAKIgAQAAIAAAAKkJAAKgAQAAEAAAAqABAAAgAAABoAEAABAAAAMgAAC8IAEAACAAAABoQggEEAAAAAAAAAAAAAAPYPEAABAAAABhQQAAAAAABIAAAL8gAQAAMAAADmChAAAgAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAAAAAAtyABAABAAAAEYAEIDBAAAAAwAAAAJAAAAAAIA:AACAPwAAgD8AAAAAAAAACEIAEAAFAAAAGgAQgMEAAAADAAAACgAQAAQAAAAdAAAHggAQAAEAAAAqABAABQAAAAFAAAAAAAAAHQAACsIAEAADAAAABgQQAAMAAAACQAAAAAAAAAAAAAAAAAAAAAAAADcAAA:CABAAAwAAAKYOEAADAAAAAkAAAAAAAAAAAAAAAACAPwAAgD8CQAAAAAAAAAAAAAAAAIC:AACAvzgAAAfCABAAAwAAAKYOEAADAAAAVgkQAAQAAAA3AAAJMgAQAAUAAAD2DxAAAQAAAEYAEAADAAAA5goQAAMAAAAQAAAHggAQAAEAAABGAhAABQAAAEYCEAAFAAAARAAABYIAEAABAAAAOgAQAAEAAAA4AAAHcgAQAAMAAAD2DxAAAQAAAEYCEAAFAAAAEAAAB4IAEAABAAAARgIQAAMAAABGAhAAAAAAAB0AAAeCABAAAQAAADoAEAABAAAAAUAAADMzcz8BAAAHggAQAAEAAAA6ABAAAQAAAAFAAAAAAIA:SAAAC:IAEAADAAAA5goQAAIAAABGfhAAAQAAAABgEAABAAAAAUAAAAAAAAA4AAAIQgAQAAIAAAA6ABAAAQAAAAqQkAAqABAAAQAAADIAAAkSABAAAQAAAAoAEAADAAAAKgAQAAIAAAAKABAAAgAAADIAAAoiABAAAQAAAAqQkAAqABAAAQAAADoAEAABAAAAGgAQAAIAAAAeAAAHQgAQAAEAAAAqABAAAQAAAAFAAAABAAAAFgAAAQ4AAAcSIBAAAAAAAAoAEAABAAAAGgAQAAEAAAA%AAABU1RBVHQAAAA9AAAABgAAAAoAAAACAAAAJgAAAAIAAAACAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIAVgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAACsAAADMAAAAAAAAACgzgAAAAA:vgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAE7CZa5kIxdOkK62ObJKBDUAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzmZlcjAgOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfZ2J1ZmZlcjBfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKVGV4dHVyZTJEPGZsb2F0ND4gdGV4IDogcmVnaXN0ZXIodDEpOwpTYW1wbGVyU3RhdGUgX3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczEpOwp1bmlmb3JtIGZsb2F0MiBkaXJJbnY7CgpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQgZnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCmZsb2F0MiBvY3RhaGVkcm9uV3JhcChmbG9hdDIgdikKewogICAgcmV0dXJuICgxLjBmLnh4IC0gYWJzKHYueXgpKSAqIGZsb2F0Migodi54ID49IDAuMGYpID8gMS4wZiA6ICgtMS4wZiksICh2LnkgPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSk7Cn0KCmZsb2F0MyBnZXROb3J1gwEArvsBAAhoAAAewgIAcj0DAMHDAABtGAEAzt0CAFCFAQCphgEAGWADAEzoAwDBIQMANKABAEEkAQC5:AIAxloAAPxlAgC46AEAjJADALgcAwAc3QEA1poCADWuAwpYyBjb25zdCBmbG9hdCBfMTQ0WzEwXSA9IHsgMC4xMzI1NzE5OTUyNTgzMzEyOTg4MjgxMjVmLCAwLjEyNTQ3MTk5NDI4MDgxNTEyNDUxMTcxODc1ZiwgMC4xMDYzNzI5OTcxNjQ3MjYyNTczMjQyMTg3NWYsIDAuMDgwNzc5OTk5NDk0NTUyNjEyMzA0Njg3NWYsIDAuMDU0OTQ5OTk4ODU1NTkwODIwMzEyNWYsIDAuMDMzNDgyMDAwMjMxNzQyODU4ODg2NzE4NzVmLCAwLjAxODI3NTAwMDE1NDk3MjA3NjQxNjAxNTYyNWYsIDAuMDA4OTMzOTk5NTc1Njc0NTMzODQzOTk0MTQwNjI1ZiwgMC4wMDM5MTE5OTk5ODU1NzU2NzU5NjQzNTU0Njg3NWYsIDAuMDAxNTM1MDAwMDQ2NzE1MTQwMzQyNzEyNDAyMzQzNzVmIH07CgpUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyMCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyMF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwpUZXh0dXJlMkQ8ZmxvYXQ0PiB0ZXggOiByZWdpc3Rlcih0MSk7ClNhbXBsZXJTdGF0ZSBfdGV4X3NhbXBsZXIgOiByZWdpc3RlcihzMSk7CnVuaWZvcm0gZmxvYXQyIGRpckludjsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdCBmcmFnQ29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKZmxvYXQzIGdldE5vcihmbG9hdDIgZW5jKQp7CiAgICBmbG9hdDMgbjsKICAgIG4ueiA9ICgxLjBmIC0gYWJzKGVuYy54KSkgLSBhYnMoZW5jLnkpOwogICAgZmxvYXQyIF81MzsKICAgIGlmIChuLnogPj0gMC4wZikKICAgIHsKICAgICAgICBfNTMgPSBlbmM7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzUzID0gb2N0YWhlZHJvbldyYXAoZW5jKTsKICAgIH0KICAgIG4gPSBmbG9hdDMoXzUzLngsIF81My55LCBuLnopOwogICAgbiA9IG5vcm1hbGl6ZShuKTsKICAgIHJldHVybiBuOwp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MyBub3IgPSBnZXROb3IoZ2J1ZmZlcjAuU2FtcGxlTGV2ZWwoX2didWZmZXIwX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54eSk7CiAgICBmcmFnQ29sb3IgPSB0ZXguU2FtcGxlTGV2ZWwoX3RleF9zYW1wbGVyLCB0ZXhDb29yZCwgMC4wZikueCAqIDAuMTMyNTcxOTk1MjU4MzMxMjk4ODI4MTI1ZjsKICAgIGZsb2F0IHdlaWdodCA9IDAuMTMyNTcxOTk1MjU4MzMxMjk4ODI4MTI1ZjsKICAgIGZvciAoaW50IGkgPSAxOyBpIDwgODsgaSsrKQogICAgewogICAgICAgIGZsb2F0IHBvc2FkZCA9IGZsb2F0KGkpOwogICAgICAgIGZsb2F0MyBub3IyID0gZ2V0Tm9yKGdidWZmZXIwLlNhbXBsZUxldmVsKF9nYnVmZmVyMF9zYW1wbGVyLCB0ZXhDb29yZCArIChkaXJJbnYgKiBmbG9hdChpKSksIDAuMGYpLnh5KTsKICAgICAgICBmbG9hdCBpbmZsdWVuY2VGYWN0b3IgPSBzdGVwKDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ZiwgZG90KG5vcjIsIG5vcikpOwogICAgICAgIGZsb2F0IGNvbCA9IHRleC5TYW1wbGVMZXZlbChfdGV4X3NhbXBsZXIsIHRleENvb3JkICsgKGRpckludiAqIHBvc2FkZCksIDAuMGYpLng7CiAgICAgICAgZmxvYXQgdyA9IF8xNDRbaV0gKiBpbmZsdWVuY2VGYWN0b3I7CiAgICAgICAgZnJhZ0NvbG9yICs9IChjb2wgKiB3KTsKICAgICAgICB3ZWlnaHQgKz0gdzsKICAgICAgICBub3IyID0gZ2V0Tm9yKGdidWZmZXIwLlNhbXBsZUxldmVsKF9nYnVmZmVyMF9zYW1wbGVyLCB0ZXhDb29yZCAtIChkaXJJbnYgKiBmbG9hdChpKSksIDAuMGYpLnh5KTsKICAgICAgICBpbmZsdWVuY2VGYWN0b3IgPSBzdGVwKDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ZiwgZG90KG5vcjIsIG5vcikpOwogICAgICAgIGNvbCA9IHRleC5TYW1wbGVMZXZlbChfdGV4X3NhbXBsZXIsIHRleENvb3JkIC0gKGRpckludiAqIHBvc2FkZCksIDAuMGYpLng7CiAgICAgICAgdyA9IF8xNDRbaV0gKiBpbmZsdWVuY2VGYWN0b3I7CiAgICAgICAgZnJhZ0NvbG9yICs9IChjb2wgKiB3KTsKICAgICAgICB3ZWlnaHQgKz0gdzsKICAgIH0KICAgIGZyYWdDb2xvciAvPSB3ZWlnaHQ7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICB0ZXhDb29yZCA9IHN0YWdlX2lucHV0LnRleENvb3JkOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAB4KAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcYmx1cl9lZGdlX3Bhc3MuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxibHVyX2VkZ2VfcGFzcy5mcmFnLmhsc2wAc3RhdGljIGNvbnN0IGZsb2F0IF8xNDRbMTBdID0geyAwLjEzMjU3MTk5NTI1ODMzMTI5ODgyODEyNWYsIDAuMTI1NDcxOTk0MjgwODE1MTI0NTExNzE4NzVmLCAwLjEwNjM3Mjk5NzE2NDcyNjI1NzMyNDIxODc1ZiwgMC4wODA3Nzk5OTk0OTQ1NTI2MTIzMDQ2ODc1ZiwgMC4wNTQ5NDk5OTg4NTU1OTA4MjAzMTI1ZiwgMC4wMzM0ODIwMDAyMzE3NDI4NTg4ODY3MTg3NWYsIDAuMDE4Mjc1MDAwMTU0OTcyMDc2NDE2MDE1NjI1ZiwgMC4wMDg5MzM5OTk1NzU2NzQ1MzM4NDM5OTQxNDA2MjVmLCAwLjAwMzkxMTk5OTk4NTU3NTY3NTk2NDM1NTQ2ODc1ZiwgMC4wMDE1MzUwMDAwNDY3MTUxNDAzNDI3MTI0MDIzNDM3NWYgfTsKClRleHR1cmUyRDxmbG9hdDQ%IBviMAGAAAAAHUMEtEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAABAAAAAAAAAEIAAAAoAAAAG%IwAUyvm8WbjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAADQNAAAAAAAAtAcAAAAAAAC0BwAABxAAABgBAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABAAYAQAAAQC0BwAAAAAWAFARAQAFAAQABAAYAQAAAQC0BwQAAAA6AD4RBhAAAIAAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgABAAAABAAYAQAAAQC0BwAAAAAyAD4RQAAAAAAAZnJhZ0NvbG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA5AIAAAEAFAAMAAAAGgBQEQAAAQAAAAQA%AIAAAEA1AXQApwCEAAAABYAUBEAAAEAAAAEAMgFAAABAJwCIAAAAFIBTRGAAAAAMA0AAAAQAAAHAAkFDVQLIA1eBgIDgYQNHwYEA0gJCQ0gBgQDYA1vBgIDFA1SBgIDgawNWAYCA1QNLAYCAywNHwYCAyANFAYCAyQNaAYCAygNTAYCA4GwDVIGAgNUDSYGAgMsDR8GAgMgDRQGAgMkCQUNBQYCAygNGAYCDBwgCAAJGQ1PAYEYBicDAAkSDVMDLAkRDT0GAgOBWA1dAywJBQ0fBgQDHAkVDRkDOAkYDR8GBAMoCUYNYwYCAxQJHg1qAygJFw1uAywJQw1QBgIDgVgJIQ1RAxwJFQ1VBgIDOAkTDSsGAgMsCQkNHgYCAyANEwYCAyQJPw1cBgIDKAkXDWMDLAkQDWcDLAk9DUoGAgOBWAkbDUsDHAkPDU8GAgM4CQ0NJQYCAywJCQ0eBgIDIA0TBgIDJAkcDR4GHQMoCQUNBQYeAxwNFwskBBwuAD4RQAAAAAAAd2VpZ2h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAABAAAABAAYAwAAAQC0BdgCnAIUAAAAFgBQEQAAAQAAAAQA8AUAAAEAnAIkAAAAKgA%EXQAAAAAAGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAYAwAAAQC0BRgAAAAuAD4RQAAAAAAAcG9zYWRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABYAwAAAQBYAxwAAAA2AD4RQAAAAAAAaW5mbHVlbmNlRmFjdG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAFgFAAABAMQAKAAAABYAUBEAAAEAAAAEAPQHAAABALgAHAAAACoAPhFAAAAAAABjb2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgBQEQAAAQAAAAQAhAUAAAEAKAPEANgBMAAAACoAPhFAAAAAAAB3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQApAUAAAEAJAAgAAAAFgBQEQAAAQAAAAQAQAgAAAEAbAAoAAAAMgA%EUAAAAAAAGZyYWdDb2xvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAOQCAAABABQADAAAABoAUBEAAAEAAAAEAPgCAAABANQF0AKcAhAAAAAWAFARAAABAAAABADIBQAAAQCcAiAAAAB2AE0R5AEAACwIAAABEAAABwAJCQ0iBhQDLAkFDSsGEQMsDRQGBAMgCQkNIgYMAxwJBQ0FBgIDgIANFQYEDEwkCAAJDw0hAYFEC3AJCw0qBhEDLAkJDRMGBAMgCQ8NIQYMAxwJBQ0FBgIDgIAJCQ0UBgQMTCQAAAAqAD4RABAAAAkAZW5jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEQBAAABACgBAAAAABYAUBEAAAUABAAEAEQBAAABAFgBBAAAACoAPhELEAAACABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAkAEAAAEADAEoAAAAFgBQEQAABQAAAAQAnAIAAAEALAAAAAAAFgBQEQAABQAEAAQAnAIAAAEALAAEAAAAFgBQEQAABQAIAAQAnAIAAAEALAAIAAAAKgA%EQAQAAAIAF81MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABQAgAAAQB4ACAAAAAWAFARAAAFAAQABABQAgAAAQB4ACQAAAA%AE0RtAUAACgIAAACEAAABwAJBQ1qBgIMLCwMgIBoCAAJDQ0fAYFEDCwACUwNVgNoCUsNaAMoCQwNaQwcPAAARgA%EQ4QAACIADxvY3RhaGVkcm9uV3JhcCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQALAIAAAEAJAAQAAAAFgBQEQAABQAEAAQALAIAAAEAJAAUAAAAAgBOEQIAThF2AE0R5AEAAKgKAAABEAAABwAJCQ0iBhQDgpQJBQ0rBhEDLA0UBgQDIAkJDSIGDAMcCQUNBQYCA4CADRUGBAxMJAgACQ8NIQGDrAtwCQsNKgYRAywJCQ0TBgQDIAkPDSEGDAMcCQUNBQYCA4CACQkNFAYEDEwkAAAqAD4RABAAAAkAZW5jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKwDAAABAFgBMAAAABYAUBEAAAUABAAEAKwDAAABAFgBNAAAACoAPhELEAAACABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA%AMAAAEADAFYAAAAFgBQEQAABQAAAAQABAUAAAEAHAAwAAAAFgBQEQAABQAEAAQABAUAAAEAHAA0AAAAFgBQEQAABQAIAAQABAUAAAEAHAA4AAAAKgA%EQAQAAAIAF81MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAC4BAAAAQBoAFAAAAAWAFARAAAFAAQABAC4BAAAAQBoAFQAAAA%AE0RMAgAAKQKAAACEAAABwAJBQ1qBgIMLIKUDICAaAgACQ0NHwGDrAwsAAlMDVYDaAlLDWgDKAkMDWkMHDwARgA%EQ4QAACIADxvY3RhaGVkcm9uV3JhcCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAlAQAAAEAJAA4AAAAFgBQEQAABQAEAAQAlAQAAAEAJAA8AAAAAgBOEQIAThF2AE0R5AEAACwNAAABEAAABwAJCQ0iBhQDhTAJBQ0rBhEDLA0UBgQDIAkJDSIGDAMcCQUNBQYCA4CADRUGBAxMJAgACQ8NIQGGSAtwCQsNKgYRAywJCQ0TBgQDIAkPDSEGDAMcCQUNBQYCA4CACQkNFAYEDEwkAAAqAD4RABAAAAkAZW5jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEgGAAABAFgBMAAAABYAUBEAAAUABAAEAEgGAAABAFgBNAAAACoAPhELEAAACABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAlAYAAAEADAFYAAAAFgBQEQAABQAAAAQAoAcAAAEAHAAwAAAAFgBQEQAABQAEAAQAoAcAAAEAHAA0AAAAGgBQEQAABQAIAAQASAYAAAEAdAFMAAwBOAAAACoAPhEAEAAACABfNTMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQASAYAAAEAdAFQAAAAFgBQEQAABQAEAAQASAYAAAEAdAFUAAAAPgBNEawKAAAoDQAAAhAAAAcACQUNagYCDCyFMAyAgGgIAAkNDR8BhkgMLAAJTA1WA2gJSw1oAygJDA1pDBw8AEYAPhEOEAAAiAA8b2N0YWhlZHJvbldyYXAgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEADAHAAABACQAOAAAABoAUBEAAAUABAAEAEgGAAABAAwBkABYADwAAAACAE4RAgBOEQIAThECAAYAHgBSEUAAAAAAAAAADAD:::::::9mcmFnQ29sb3IAAAD0AAAAGAAAAAEAAAAQATG3SsrOcJdS9kX6hvMnDqYAAPIAAADQBQAAAAAAAAEAAQDMCAAAAAAAAHoAAADEBQAAGAEAAEgAAIAYAQAASAAAAEQBAABIAACARAEAAEgAAABwAQAASAAAgHABAABIAAAAkAEAAEgAAICQAQAASAAAAKwBAABIAACArAEAAEgAAADUAQAASAAAgNQBAABIAAAAEAIAAEgAAIAQAgAASAAAACwCAABIAACALAIAAEgAAABQAgAASAAAgFACAABIAAAAbAIAAEgAAIBsAgAASAAAAIACAABIAACAgAIAAEgAAACcAgAASAAAgJwCAABIAAAAyAIAAEgAAIDIAgAASAAAAOQCAABIAACA5AIAAEgAAAD4AgAASAAAgPgCAABIAAAAGAMAAEgAAIAYAwAASAAAABwDAABIAACAHAMAAEgAAAA4AwAASAAAgDgDAABIAAAARAMAAEgAAIBEAwAASAAAAFgDAABIAACAWAMAAEgAAACAAwAASAAAgIADAABIAAAArAMAAEgAAICsAwAASAAAANgDAABIAACA2AMAAEgAAAD4AwAASAAAgPgDAABIAAAAFAQAAEgAAIAUBAAASAAAADwEAABIAACAPAQAAEgAAAB4BAAASAAAgHgEAABIAAAAlAQAAEgAAICUBAAASAAAALgEAABIAACAuAQAAEgAAADUBAAASAAAgNQEAABIAAAA6AQAAEgAAIDoBAAASAAAAAQFAABIAACABAUAAEgAAAAgBQAASAAAgCAFAABIAAAAPAUAAEgAAIA8BQAASAAAAFgFAABIAACAWAUAAEgAAACEBQAASAAAgIQFAABIAAAApAUAAEgAAICkBQAASAAAAMgFAABIAACAyAUAAEgAAADwBQAASAAAgPAFAABIAAAAHAYAAEgAAIAcBgAASAAAAEgGAABIAACASAYAAEgAAAB0BgAASAAAgHQGAABIAAAAlAYAAEgAAICUBgAASAAAALAGAABIAACAsAYAAEgAAADYBgAASAAAgNgGAABIAAAAFAcAAEgAAIAUBwAASAAAADAHAABIAACAMAcAAEgAAABUBwAASAAAgFQHAABIAAAAcAcAAEgAAIBwBwAASAAAAIQHAABIAACAhAcAAEgAAACgBwAASAAAgKAHAABIAAAAvAcAAEgAAIC8BwAASAAAANgHAABIAACA2AcAAEgAAAD0BwAASAAAgPQHAABIAAAAIAgAAEgAAIAgCAAASAAAAEAIAABIAACAQAgAAEgAAABkCAAASAAAgGQIAABIAAAAjAgAAEgAAICMCAAASAAAAKgIAABIAACAqAgAAEgAAACsCAAASAAAgKwIAABIAAAAyAgAAEsAAIDICAAASwAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgA9gAAAFgAAAAAAAAAABAAAAAAAAAuAAAAARAAAAAAAAAcAAAAAhAAAAAAAAAXAAAAARAAAAAAAAAcAAAAAhAAAAAAAAAXAAAAARAAAAAAAAAcAAAAAhAAAAAAAAAXAAAAHAAAAAAAAAAUAAAANAAAAFwAAAB0AAAAmAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAYEAAAsAEAAAoA::8EAAAA::8DAAAAAABgAAAAYAAAAAgAAABoAAAAAAAAABYAGxVAAAAAAgAAAAgAZmxvYXQyAPPy8RYAAxINFQMAABAAAAAAdGV4Q29vcmQA8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWAAMSDRUDAEAAAAAAAGZyYWdDb2xvcgAqAAUVAQAAAAQQAAAAAAAAAAAAAAQAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUFEAAAAQABAA4ACBAGEAAAFwABAAMQAAAKABgVAwAAAAEAAQAOAAgQCBAAABcAAAADAAAACgABEgEAAAAAEAAAFgAbFUAAAAADAAAADABmbG9hdDMA8:LxCgAYFQsQAAABAAEADgAIEAwQAAAXAAEAChAAAAoAGBUAEAAAAQABAA4ACBAOEAAAFwABAAoQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEOABcVEBAAAAMC8EMAAPLxCgAYFREQAAABAAEACgAYFRIQAAABAAACDgAXFQAAAAAKAvBDAADy8QoAGBUUEAAAAQABAAoAGBUVEAAAAQAAAgoAGBUOEAAAAQAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3SAAC1rgAAhsb2F0MiBlbmMpCnsKICAgIGZsb2F0MyBuOwogICAgbi56ID0gKDEuMGYgLSBhYnMoZW5jLngpKSAtIGFicyhlbmMueSk7CiAgICBmbG9hdDIgXzUzOwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF81MyA9IGVuYzsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNTMgPSBvY3RhaGVkcm9uV3JhcChlbmMpOwogICAgfQogICAgbiA9IGZsb2F0MyhfNTMueCwgXzUzLnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgcmV0dXJuIG47Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQzIG5vciA9IGdldE5vcihnYnVmZmVyMC5TYW1wbGVMZXZlbChfZ2J1ZmZlcjBfc2FtcGxlciwgdGV4Q29vcmQsIDAuMGYpLnh5KTsKICAgIGZyYWdDb2xvciA9IHRleC5TYW1wbGVMZXZlbChfdGV4X3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54ICogMC4xMzI1NzE5OTUyNTgzMzEyOTg4MjgxMjVmOwogICAgZmxvYXQgd2VpZ2h0ID0gMC4xMzI1NzE5OTUyNTgzMzEyOTg4MjgxMjVmOwogICAgZm9yIChpbnQgaSA9IDE7IGkgPCA4OyBpKyspCiAgICB7CiAgICAgICAgZmxvYXQgcG9zYWRkID0gZmxvYXQoaSk7CiAgICAgICAgZmxvYXQzIG5vcjIgPSBnZXROb3IoZ2J1ZmZlcjAuU2FtcGxlTGV2ZWwoX2didWZmZXIwX3NhbXBsZXIsIHRleENvb3JkICsgKGRpckludiAqIGZsb2F0KGkpKSwgMC4wZikueHkpOwogICAgICAgIGZsb2F0IGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzVmLCBkb3Qobm9yMiwgbm9yKSk7CiAgICAgICAgZmxvYXQgY29sID0gdGV4LlNhbXBsZUxldmVsKF90ZXhfc2FtcGxlciwgdGV4Q29vcmQgKyAoZGlySW52ICogcG9zYWRkKSwgMC4wZikueDsKICAgICAgICBmbG9hdCB3ID0gXzE0NFtpXSAqIGluZmx1ZW5jZUZhY3RvcjsKICAgICAgICBmcmFnQ29sb3IgKz0gKGNvbCAqIHcpOwogICAgICAgIHdlaWdodCArPSB3OwogICAgICAgIG5vcjIgPSBnZXROb3IoZ2J1ZmZlcjAuU2FtcGxlTGV2ZWwoX2didWZmZXIwX3NhbXBsZXIsIHRleENvb3JkIC0gKGRpckludiAqIGZsb2F0KGkpKSwgMC4wZikueHkpOwogICAgICAgIGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzVmLCBkb3Qobm9yMiwgbm9yKSk7CiAgICAgICAgY29sID0gdGV4LlNhbXBsZUxldmVsKF90ZXhfc2FtcGxlciwgdGV4Q29vcmQgLSAoZGlySW52ICogcG9zYWRkKSwgMC4wZikueDsKICAgICAgICB3ID0gXzE0NFtpXSAqIGluZmx1ZW5jZUZhY3RvcjsKICAgICAgICBmcmFnQ29sb3IgKz0gKGNvbCAqIHcpOwogICAgICAgIHdlaWdodCArPSB3OwogICAgfQogICAgZnJhZ0NvbG9yIC89IHdlaWdodDsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHRleENvb3JkID0gc3RhZ2VfaW5wdXQudGV4Q29vcmQ7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZnJhZ0NvbG9yID0gZnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAABBAAAAggAAAAAAAAABAAAAQgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAADEAAASAAAAAsA::8EAAAA::8DAAAAAAAMAAAADAAAAAgAAAAUAAAAAAAAABYAARYAAAAACRAAAGZyYWdfbWFpbgDy8RIAARYAAAAADRAAAGdldE5vcgDxGgABFgAAAAAPEAAAb2N0YWhlZHJvbldyzRFNIRFIAzAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAMAAAACAAAABQAAAAAAAAAFgABFgAAAAAJEAAAZnJhZ19tYWluAPLxEgABFgAAAAANEAAAZ2V0Tm9yAPEaAAEWAAAAAA8QAABvY3RhaGVkcm9uV3JhcADxxoJL:E4AAAAIAIAAHUAAAABAAAAtQAAAAEAAABdAAAAAQAAAAEAAAABAAAAFQAAAAEAAACZAAAAAQAAADUAAAABAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAAAEAbWFpbgAAHgBRERMQAAAHAP::::8AAP::::9nYnVmZmVyMAAAAAAmAFERFhAAAAYA::::::::AAD::19nYnVmZmVyMF9zYW1wbGVyAAAAFgBRERMQAAAHAP::::8BAP::::90ZXgAIgBRERYQAAAGAP:::::::wEA::9fdGV4X3NhbXBsZXIAAAAAGgBRERcQAAAIAAAAAAD:::::::9kaXJJbnYAAB4AUhFAAAAAAAAAAAwA::::::::ZnJhZ0NvbG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAzAgAACAAAGAAAAAAAAAAAAAAAAACAAkAWA0AAAAAAABYBgAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAMwIAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAADMCAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxibHVyX2VkZ2VfcGFzcy5mcmFnLmhsc2wA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAE7CZa5kIxdOkK62ObJKBDVtAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcYmx1cl9lZGdlX3Bhc3MuZnJhZy5obHNsAAQAAAAGAAAAAQAAABsAAAAAAAAAIgAAAAgAAAARAAAABwAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADJAAAA6AEAAFMBAACAAAAAAAAAAE4KAACAAAAAmwkAANATAABoAAAAFAAAACgAAABoAgAALAAAANQAAAADAAAAJgAAABkAAAAlAAAAHwAAAA0AAAAGAAAAGwAAABwAAAAdAAAAHgAAAA4AAAAIAAAACQAAAAoAAAALAAAADAAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAHAAAAGgAAACAAAAAhAAAAIgAAACQAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn
kha_Shaders.compositor_pass_fragData0 = "s22446:AAJfdGV4X3NhbXBsZXIAAHRleAAAAERYQkNZx7:MqFRFVI3KzVspmtikAQAAAKxBAAAGAAAAOAAAANgAAAAMAQAAQAEAACgDAACkAwAAUkRFRpgAAAAAAAAAAAAAAAIAAAAcAAAAAAT::wEBAABtAAAAXAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABpAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAF90ZXhfc2FtcGxlcgB0ZXgATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAKurq0lTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUuABAABAAAAAeAAAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAADMhAQAAAAAABlAAAD8iAQAAAAAABoAAACAwAAAEgAAAvyABAAAAAAAEYQEAAAAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMwAACnIAEAAAAAAARgIQAAAAAAACQAAAAOD:RgDg:0YA4P9GAAAAADYAAAWCIBAAAAAAADoAEAAAAAAAAAAACnIAEAAAAAAARgIQAAAAAAACQAAAbxKDu28Sg7tvEoO7AAAAADQAAApyABAAAAAAAEYCEAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAyAAAPcgAQAAEAAABGAhAAAAAAAAJAAABmZsZAZmbGQGZmxkAAAAAAAkAAAAAAAD8AAAA:AAAAPwAAAAA4AAAHcgAQAAEAAABGAhAAAAAAAEYCEAABAAAAMgAAD3IAEAACAAAARgIQAAAAAAACQAAAZmbGQGZmxkBmZsZAAAAAAAJAAACamdk:mpnZP5qZ2T8AAAAAMgAADHIAEAAAAAAARgIQAAAAAABGAhAAAgAAAAJAAACPwnU9j8J1PY:CdT0AAAAADgAAB3IgEAAAAAAARgIQAAEAAABGAhAAAAAAAD4AAAFTVEFUdAAAAAsAAAADAAAAAAAAAAIAAAAIAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA%AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAHwwwAAAAAAAAA:::::wlC4xAQdbYmQBAAAANgavZey52UyaycqqgI8bHQAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADci54eHgpOwogICAgcmV0dXJuICh4ICogKCh4ICogNi4xOTk5OTk4MDkyNjUxMzY3MTg3NWYpICsgMC41Zi54eHgpKSAvICgoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzVmKSArIDEuNzAwMDAwMDQ3NjgzNzE1ODIwMzEyNWYueHh4KSkgKyAwLjA1OTk5OTk5ODY1ODg5NTQ5MjU1MzcxMDkzNzVmLnh4eCk7Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQyIHRleENvID0gdGV4Q29vcmQ7CiAgICBmcmFnQ29sb3IgPSB0ZXguU2FtcGxlTGV2ZWwoX3RleF9zYW1wbGVyLCB0ZXhDbywgMC4wZik7CiAgICBmbG9hdDMgXzYxID0gbWluKGZyYWdDb2xvci54eXosIDMyNzUyLjBmLnh4eCk7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzYxLngsIF82MS55LCBfNjEueiwgZnJhZ0NvbG9yLncpOwogICAgZmxvYXQzIF82NiA9IHRvbmVtYXBGaWxtaWMoZnJhZ0NvbG9yLnh5eik7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzY2LngsIF82Ni55LCBfNjYueiwgZnJhZ0NvbG9yLncpOwp9CgpTUHWDAQCu%wEACGgAAB7CAgDGWgAABT0CAMHDAAAx%wMAircDAFCFAQDTYwAATOgDAFrtAgDBIQMAUpsDALYcAQDV:wAAYqMCALgcAwA%AwdHVyZTJEPGZsb2F0ND4gdGV4IDogcmVnaXN0ZXIodDApOwpTYW1wbGVyU3RhdGUgX3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwoKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCmZsb2F0MyB0b25lbWFwRmlsbWljKGZsb2F0MyBjb2xvcikKewogICAgZmxvYXQzIHggPSBtYXgoMC4wZi54eHgsIGNvbG9yIC0gMC4wMDQwMDAwMDAxODk5ODk4MDUyMjE1NTc2MTcxODc1Zi54eHgpOwogICAgcmV0dXJuICh4ICogKCh4ICogNi4xOTk5OTk4MDkyNjUxMzY3MTg3NWYpICsgMC41Zi54eHgpKSAvICgoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzVmKSArIDEuNzAwMDAwMDQ3NjgzNzE1ODIwMzEyNWYueHh4KSkgKyAwLjA1OTk5OTk5ODY1ODg5NTQ5MjU1MzcxMDkzNzVmLnh4eCk7Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQyIHRleENvID0gdGV4Q29vcmQ7CiAgICBmcmFnQ29sb3IgPSB0ZXguU2FtcGxlTGV2ZWwoX3RleF9zYW1wbGVyLCB0ZXhDbywgMC4wZik7CiAgICBmbG9hdDMgXzYxID0gbWluKGZyYWdDb2xvci54eXosIDMyNzUyLjBmLnh4eCk7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzYxLngsIF82MS55LCBfNjEueiwgZnJhZ0NvbG9yLncpOwogICAgZmxvYXQzIF82NiA9IHRvbmVtYXBGaWxtaWMoZnJhZ0NvbG9yLnh5eik7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzY2LngsIF82Ni55LCBfNjYueiwgZnJhZ0NvbG9yLncpOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9Cgu:%7wEAAADKBAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGNvbXBvc2l0b3JfcGFzcy5mcmFnLmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXGNvbXBvc2l0b3JfcGFzcy5mcmFnLmhsc2wAVGV4dHVyZTJEPGZsb2F0ND4gdGV4IDogcmVnaXN0ZXIodDApOwpTYW1wbGVyU3RhdGUgX3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwoKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCmZsb2F0MyB0b25lbWFwRmlsbWljKGZsb2F0MyBjb2xvcikKewogICAgZmxvYXQzIHggPSBtYXgoMC4wZi54eHgsIGNvbG9yIC0gMC4wMDQwMDAwMDAxODk5ODk4MDUyMjE1NTc2MTcxODcb4jABgAAAAF87EbRIh9kBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAABAAAAAgAAAAAAAABDAAAAKAAAABviMAEMM7sxRQQAAAEAAABCAAAAQwwREAEAAAABCgABAI0C8FUKAAEAjQLwVU1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQAAADYAPREBaGxzbEZsYWdzADB4MQBobHNsVGFyZ2V0AHBzXzRfMABobHNsRW50cnkAbWFpbgAAAAAAKgAQEQAAAABgBAAAAAAAAJwBAAAAAAAAnAEAAAgQAABEAAAAAQCgbWFpbgAyAD4RAhAAAAkAc3RhZ2VfaW5wdXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQEABQAAAAQARAAAAAEAnAEAAAAAFgBQEQEABQAEAAQARAAAAAEAnAEEAAAAOgA%EQcQAACIADxtYWluIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQIABQAAAAQARAAAAAEAnAEAAAAAFgBQEQIABQAEAAQARAAAAAEAnAEEAAAAFgBQEQIABQAIAAQARAAAAAEAnAEIAAAAFgBQEQIABQAMAAQARAAAAAEAnAEMAAAAMgA%EQQQAAAIAGZyYWdDb2xvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAHAAAAABACgAAAAAABYAUBEAAAUABAAEAHAAAAABACgABAAAABYAUBEAAAUACAAEAHAAAAABACgACAAAABYAUBEAAAUADAAEAHAAAAABAHABDAAAAEIATRGAAAAAXAQAAAAQAAAHAAkFDTsLQA0yBgIMKCwNLgYEDIEwPAgACRENOgFEC3AJEg0xBgIMKCwNLQYEDIEwPAAAKgA%EQsQAAAIAF82MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACYAAAAAQA8AAAAAAAWAFARAAAFAAQABACYAAAAAQA8AAQAAAAWAFARAAAFAAgABACYAAAAAQA8AAgAAAAyAD4RBBAAAAgAZnJhZ0NvbG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAcAAAAAEAKAAAAAAAFgBQEQAABQAEAAQAcAAAAAEAKAAEAAAAFgBQEQAABQAIAAQAcAAAAAEAKAAIAAAAFgBQEQAABQAMAAQAcAAAAAEAcAEMAAAAVgBNEUACAABYBAAAARAAAAcACQUNTQYCA2gNgKwGAgyA4FAIAAkeDUsBgKwLMAkQDUwDKAkSDTkGAgMoCQ0NOgM8CUYNgIIDHAlADYCqAzwJDA2AqwwcMCoAPhELEAAACAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA:AAAAAEAxAAAAAAAFgBQEQAABQAEAAQA:AAAAAEAxAAEAAAAFgBQEQAABQAIAAQA:AAAAAEAxAAIAAAAAgBOEQIAThECAAYAHgBSEQQQAAAAAAAAAAD:::::::9mcmFnQ29sb3IAAAD0AAAAGAAAAAEAAAAQAVj8ZDiW70irqvlKMZXo9kYAAPIAAAAgAQAAAAAAAAEAAQDgAQAAAAAAABYAAAAUAQAARAAAACQAAIBEAAAAJAAAAHAAAAAkAACAcAAAACQAAACYAAAAJwAAgJgAAAAnAAAArAAAACQAAICsAAAAJAAAANQAAAAkAACA1AAAACQAAAD8AAAAJAAAgPwAAAAkAAAAOAEAACQAAIA4AQAAJAAAAFQBAAAkAACAVAEAACQAAACQAQAAJAAAgJABAAAkAAAAwAEAACQAAIDAAQAAJAAAANwBAAAnAACA3AEAACcAAAAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgA9gAAABwoxATgAAAAAEAAAFRAAAIgBAAAKAP::BAAAAP::AwAAAAAAVAAAAFQAAAAIAAAAXAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEWAAMSDRUDAAAQAAAAAHRleENvb3JkAPEmAAUVAQAAAAEQAAAAAAAAAAAAAAgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAACEAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgADEg0VAwAEEAAAAABmcmFnQ29sb3IAKgAFFQEAAAAFEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBhAAAAEAAQAOAAgQBxAAABcAAQADEAAACgAYFQMAAAABAAEADgAIEAkQAAAXAAAAAwAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8QoAARIBAAAACxAAAAoAGBULEAAAAQABAA4ACBANEAAAFwABAAwQAAAOABcVBBAAAAMC8EMAAPLxCgAYFQ8QAAABAAEACgAYFRAQAAABAAACDgAXFQAAAAAKAvBDAADy8QoAGBUSEAAAAQABAAoAGBUTEAAAAQAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApSwAAC%klSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAQwAAAEIAAAAAAAAAAAAAAAAAAACEAAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAAhAAADQAAAALAP::BAAAAP::AwAAAAAACAAAAAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAoQAABmcmFnX21haW4A8vEaAAEWAAAAAA4QAAB0b25lbWFwRmlsbWljAPLxgAABgCAAAAAgAAAAQAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDy8RoAARYAAAAADhAAAHRvbmVtYXBGaWxtaWMA8vaCS:xIAAAABQCAAAthaW4AABYAUREREAAABwD:::::AAD:::::dGV4ACIAUREUEAAABgD:::::::8AAP::X3RleF9zYW1wbGVyAAAAAB4AUhEEEAAAAAAAAAAA::::::::ZnJhZ0NvbG9ygkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAAUAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAAOABAAAgAABgAAAAAAAAAAAAAAAAAgAJAIQEAAAAAAAAbAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAADgAQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAA4AEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcY29tcG9zaXRvcl9wYXNzLmZyYWcuaGxzbAAAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBB1tiZAEAAAA2Bq9l7LnZTJrJyqqAjxsdbgAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXGNvbXBvc2l0b3JfcGFzcy5mcmFnLmhsc2wABAAAAAYAAAABAAAAOgAAAAAAAAARAAAABwAAAAoAAAAGAAAAAAAAAAUAAAAiAAAACAAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAygAAAMABAABXAQAAbAAAAAAAAAD6BAAAgAAAAEUEAAAEBgAAXAAAABAAAAAoAAAARAIAACwAAABwAAAAAwAAABsAAAARAAAAGgAAABQAAAALAAAABgAAABMAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAAEAAAAAcAAAASAAAAFQAAABYAAAAXAAAAGQAAABg
kha_Shaders.compositor_pass_vertData0 = "s19211:AXBvcwAAAABEWEJD%xIG8V6uH0zRFaoseUHGRgEAAABAOAAABgAAADgAAACEAAAAuAAAABABAAC8AQAAOAIAAFJERUZEAAAAAAAAAAAAAAAAAAAAHAAAAAAE:v8BAQAAHAAAAE1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQBJU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAADAwAAVEVYQ09PUkQAq6urT1NHTlAAAAACAAAACAAAADgAAAAAAAAAAAAAAAMAAAAAAAAAAwwAAEEAAAAAAAAAAQAAAAMAAAABAAAADwAAAFRFWENPT1JEAFNWX1Bvc2l0aW9uAKurq1NIRFKkAAAAQAABACkAAABfAAADMhAQAAAAAABlAAADMiAQAAAAAABnAAAE8iAQAAEAAAABAAAAMgAADzIgEAAAAAAARhAQAAAAAAACQAAAAAAAPwAAAL8AAAAAAAAAAAJAAAAAAAA:AAAAPwAAAAAAAAAANgAABTIgEAABAAAARhAQAAAAAAA2AAAIwiAQAAEAAAACQAAAAAAAAAAAAAAAAAA:AACAPz4AAAFTVEFUdAAAAAQAAAAAAAAAAAAAAAMAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwAAAIwvwAAAAAAAAA:::::wlC4xAQdbYmQBAAAAfLwmt1LJxEKPLwA1lauu8wAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcwZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAQwAAAEIAAAAAAAAAAAAAAIQAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHWDAQDuMgEACGgAAB7CAgDGWgAAt9oDAMHDAAAx%wMAircc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHRleENvb3JkLnkgPSAxLjBmIC0gdGV4Q29vcmQueTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAALwMAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxjb21wb3NpdG9yX3Bhc3MudmVydC5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxjb21wb3NpdG9yX3Bhc3MudmVydC5obHNsAHN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgcG9zOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MiBwb3MgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiAwLjVmLnh4KSArIDAuNWYueHg7CiAgICB0ZXhDb29yZC55ID0gMS4wZiAtIHRleENvb3JkLnk7CiAgICBnbF9Qb3NpdGlvbiA9IGZsb2F0NChwb3MsIDAuMGYsIDEuG%IwAYAAAAAt%xy0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAAQwAAACgAAAAb4jAB5y7ksKoCAAABAAAAQggA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAA3AEAAAAAAAB0AAAAAAAAAHQAAAAIEAAAMAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADAAAAABAHQAAAAAABYAUBEBAAUABAAEADAAAAABAHQABAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUACAAEADAAAAABAHQAEAAAABYAUBECAAUADAAEADAAAAABAHQAFAAAABYAUBECAAUAEAAEADAAAAABAHQAGAAAABYAUBECAAUAFAAEADAAAAABAHQAHAAAABYAUBECAAUAAAAEADAAAAABAHQAAAAAABYAUBECAAUABAAEADAAAAABAHQABAAAAAIABgD0AAAAGAAAAAEAAAAQAZifI0JCvPjxuoKtEOrYW6QAAPIAAAB4AAAAAAAAAAEAAQCkAAAAAAAAAAgAAABsAAAAMAAAAB8AAIAwAAAAHwAAAGwAAAAfAACAbAAAAB8AAACAAAAAHwAAgIAAAAAfAAAAoAAAAB8AAICgAAAAHwAAAAUAGAAFABgABQAYAAUAGAAFABgABQAYAAUAGAAFABgA9goxATgAAAAAEAAACRAAAPAAAAAKAP::BAAAAP::AwAAAAAAJAAAACQAAAAIAAAALAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vESAAMSDRUDAAAQAAAAAHBvcwDy8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEuAAMSDRUDAAAQAAAAAHRleENvb3JkAPENFQMABBAAAAgAZ2xfUG9zaXRpb24A8vEqAAUVAgAAAAUQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAAEAAAAAAAAAszRFNIRFIApxoJL:EIAAAACAIAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAAAEAbWFpbgAAAAAAAAAAAAD:::::GgkvaCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABQAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAApAAAACAAAGAAAAAAAAAAAAAAAAACAAkA4AEAAAAAAACsAAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAKQAAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAACkAAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxjb21wb3NpdG9yX3Bhc3MudmVydC5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAHy8JrdSycRCjy8ANZWrrvNuAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcY29tcG9zaXRvcl9wYXNzLnZlcnQuaGxzbAAEAAAABgAAAAEAAAA6AAAAAAAAABEAAAAHAAAACgAAAAYAAAAAAAAABQAAACIAAAAIAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADKAAAAKAEAAFcBAAA4AAAAAAAAAF8DAACAAAAAqgIAAJQCAAAsAAAAAAAAACgAAAAgAgAALAAAABQAAAADAAAAFgAAAA4AAAAVAAAADwAAAAoAAAAGAAAACwAAAAg
kha_Shaders.deferred_light_fragData0 = "s76940:AA5fc2hhZG93TWFwUG9pbnRfc2FtcGxlcgAAX2didWZmZXIwX3NhbXBsZXIAAV9nYnVmZmVyMV9zYW1wbGVyAAJfZ2J1ZmZlckRfc2FtcGxlcgADX3NlbnZtYXBSYWRpYW5jZV9zYW1wbGVyAAVfc3Nhb3RleF9zYW1wbGVyAAZzaGFkb3dNYXBQb2ludAAAZ2J1ZmZlcjAAAWdidWZmZXIxAAJnYnVmZmVyRAADc2Vudm1hcEJyZGYABHNlbnZtYXBSYWRpYW5jZQAFc3Nhb3RleAAGJEdsb2JhbHMAAAtsaWdodFByb2oAAAAAAAgAAAACAWV5ZQAQAAAADAAAAAMBZXllTG9vawAgAAAADAAAAAMBY2FtZXJhUHJvagAwAAAACAAAAAIBc2hpcnIAQAAAAHAAAAAEAWVudm1hcE51bU1pcG1hcHMAsAAAAAQAAAABAWVudm1hcFN0cmVuZ3RoALQAAAAEAAAAAQFwb2ludFBvcwDAAAAADAAAAAMBcG9pbnRDb2wA0AAAAAwAAAADAXBvaW50QmlhcwDcAAAABAAAAAEBY2FzRGF0YQDgAAAAQAEAAAQBRFhCQ8kDKF3U960axEzSDvsxJxgBAAAAsN8AAAYAAAA4AAAACAUAAFQFAACIBQAALCEAAKghAABSREVGyAQAAAEAAACsAgAADgAAABwAAAAABP::AQEAAKAEAADcAQAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAPQBAAADAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAABgIAAAMAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAEAAAAYAgAAAwAAAAAAAAAAAAAAAAAAAAMAAAABAAAAAQAAACoCAAADAAAAAAAAAAAAAAAAAAAABQAAAAEAAAABAAAAQwIAAAMAAAAAAAAAAAAAAAAAAAAGAAAAAQAAAAEAAABUAgAAAgAAAAUAAAAJAAAA:::::wAAAAABAAAADQAAAGMCAAACAAAABQAAAAQAAAD:::::AQAAAAEAAAANAAAAbAIAAAIAAAAFAAAABAAAAP::::8CAAAAAQAAAA0AAAB1AgAAAgAAAAUAAAAEAAAA:::::wMAAAABAAAADQAAAH4CAAACAAAABQAAAAQAAAD:::::BAAAAAEAAAANAAAAigIAAAIAAAAFAAAABAAAAP::::8FAAAAAQAAAA0AAACaAgAAAgAAAAUAAAAEAAAA:::::wYAAAABAAAADQAAAKICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAX3NoYWRvd01hcFBvaW50X3NhbXBsZXIAX2didWZmZXIwX3NhbXBsZXIAX2didWZmZXIxX3NhbXBsZXIAX2didWZmZXJEX3NhbXBsZXIAX3NlbnZtYXBSYWRpYW5jZV9zYW1wbGVyAF9zc2FvdGV4X3NhbXBsZXIAc2hhZG93TWFwUG9pbnQAZ2J1ZmZlcjAAZ2J1ZmZlcjEAZ2J1ZmZlckQAc2Vudm1hcEJyZGYAc2Vudm1hcFJhZGlhbmNlAHNzYW90ZXgAJEdsb2JhbHMAq6ICAAALAAAAxAIAACACAAAAAAAAAAAAAMwDAAAAAAAACAAAAAIAAADYAwAAAAAAAOgDAAAQAAAADAAAAAIAAADsAwAAAAAAAPwDAAAgAAAADAAAAAIAAADsAwAAAAAAAAQEAAAwAAAACAAAAAIAAADYAwAAAAAAAA8EAABAAAAAcAAAAAIAAAAYBAAAAAAAACgEAACwAAAABAAAAAIAAAA8BAAAAAAAAEwEAAC0AAAABAAAAAIAAABcBAAAAAAAAGwEAADAAAAADAAAAAIAAADsAwAAAAAAAHUEAADQAAAADAAAAAIAAADsAwAAAAAAAH4EAADcAAAABAAAAAIAAABcBAAAAAAAAIgEAADgAAAAQAEAAAAAAACQBAAAAAAAAGxpZ2h0UHJvagCrqwEAAwABAAIAAAAAAAAAAABleWUAAQADAAEAAwAAAAAAAAAAAGV5ZUxvb2sAY2FtZXJhUHJvagBzaGlycgCrq6sBAAMAAQAEAAcAAAAAAAAAZW52bWFwTnVtTWlwbWFwcwCrq6sAAAIAAQABAAAAAAAAAAAAZW52bWFwU3RyZW5ndGgAqwAAAwABAAEAAAAAAAAAAABwb2ludFBvcwBwb2ludENvbABwb2ludEJpYXMAY2FzRGF0YQABAAMAAQAEABQAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAAMDAAA4AAAAAQAAAAAAAAADAAAAAQAAAAcHAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUpwbAABAAAAA5wYAAFkAAARGjiAAAAAAAA4AAABaCAADAGAQAAAAAABaAAADAGAQAAEAAABaAAADAGAQAAIAAABaAAADAGAQAAMAAABaAAADAGAQAAUAAABaAAADAGAQAAYAAABYMAAEAHAQAAAAAABVVQAAWBgABABwEAABAAAAVVUAAFgYAAQAcBAAAgAAAFVVAABYGAAEAHAQAAMAAABVVQAAWBgABABwEAAEAAAAVVUAAFgYAAQAcBAABQAAAFVVAABYGAAEAHAQAAYAAABVVQAAYhAAAzIQEAAAAAAAYhAAA3IQEAABAAAAZQAAA:IgEAAAAAAAaAAAAgsAAAA2AAAGMgAQAAAAAADmiiAAAAAAAAgAAAA2AAAGQgAQAAAAAAAKgCAAAAAAAAkAAAA4AAALcgAQAAEAAABGgiAAAAAAAAoAAAACQAAAhqvbPoar2z6Gq9s%AAAAAEgAAAvyABAAAgAAAEYQEAAAAAAARn4QAAEAAAAAYBAAAQAAAAFAAAAAAAAAHQAACjIAEAADAAAARgAQAAIAAAACQAAAAAAAAAAAAAAAAAAAAAAAADcAAA8yABAAAwAAAEYAEAADAAAAAkAAAAAAgD8AAIA:AAAAAAAAAAACQAAAAACAvwAAgL8AAAAAAAAAAAAAAAtyABAABAAAAEYAEIDBAAAAAgAAAAJAAAAAAIA:AACAPwAAgD8AAAAAOAAABzIAEAADAAAARgAQAAMAAACWBRAABAAAAAAAAAhCABAABAAAABoAEIDBAAAAAgAAAAoAEAAEAAAAHQAAB4IAEAAAAAAAKgAQAAQAAAABQAAAAAAAADcAAAkyABAABAAAAPYPEAAAAAAARgAQAAIAAABGABAAAwAAABAAAAeCABAAAAAAAEYCEAAEAAAARgIQAAQAAABEAAAFggAQAAAAAAA6ABAAAAAAADgAAAdyABAAAwAAAPYPEAAAAAAARgIQAAQAAAA4AAAHMgAQAAIAAAAmChAAAwAAACYKEAADAAAAOAAAB3IAEAAEAAAARgIQAAAAAABWBRAAAgAAADIAAAqCABAAAAAAABoAEAADAAAAGgAQAAMAAAAKABCAQQAAAAIAAAA4AAAKcgAQAAQAAABGAhAABAAAAAJAAABxPT4:cT0%P3E9Pj8AAAAAMgAACXIAEAABAAAARgIQAAEAAAD2DxAAAAAAAEYCEAAEAAAAMgAADXIAEAABAAAARoIgAAAAAAAEAAAAAkAAAMbfYj:G32I:xt9iPwAAAABGAhAAAQAAADIAAA1yABAAAAAAAEYCEIBBAAAAAAAAAAJAAAAqp30%Kqd9PiqnfT4AAAAARgIQAAEAAAA4AAAIcgAQAAEAAABWBRAAAwAAAEaCIAAAAAAABwAAADgAAApyABAAAQAAAEYCEAABAAAAAkAAAIarWz%Gq1s:hqtbPwAAAAAyAAAKcgAQAAAAAABGAhAAAQAAAKYKEIBBAAAAAwAAAEYCEAAAAAAAOAAACHIAEAABAAAAVgUQAAMAAACWhyAAAAAAAAkAAAA4AAAHcgAQAAEAAAAGABAAAwAAAEYCEAABAAAAMgAADHIAEAAAAAAARgIQAAEAAAACQAAAhqtbP4arWz%Gq1s:AAAAAEYCEAAAAAAAOAAACRIAEAABAAAAKgAQgEEAAAADAAAAOoAgAAAAAAAHAAAAOAAACWIAEAABAAAApgoQgEEAAAADAAAABoEgAAAAAAAIAAAAOAAAB3IAEAABAAAABgAQAAMAAABGAhAAAQAAADIAAAxyABAAAAAAAEYCEAABAAAAAkAAAIarWz%Gq1s:hqtbPwAAAABGAhAAAAAAADgAAAhyABAAAQAAAFYFEAADAAAAlocgAAAAAAAGAAAAMgAADHIAEAAAAAAARgIQAAEAAAACQAAAafyCP2n8gj9p:II:AAAAAEYCEAAAAAAAOAAACRIAEAABAAAAKgAQgEEAAAADAAAAOoAgAAAAAAAEAAAAOAAACWIAEAABAAAApgoQgEEAAAADAAAABoEgAAAAAAAFAAAAMgAADHIAEAAAAAAARgIQAAEAAAACQAAAafyCP2n8gj9p:II:AAAAAEYCEAAAAAAAOAAACDIAEAABAAAABgAQAAMAAADmiiAAAAAAAAUAAAA4AAAIQgAQAAEAAAAKABAAAwAAAAqAIAAAAAAABgAAADIAAAxyABAAAAAAAEYCEAABAAAAAkAAAGn8gj9p:II:afyCPwAAAABGAhAAAAAAABwAAAWCABAAAAAAADoAEAACAAAAAQAAB4IAEAAAAAAAOgAQAAAAAAABQAAA:w:::1YAAAWCABAAAAAAADoAEAAAAAAAOAAAB4IAEAAAAAAAOgAQAAAAAAABQAAAAQiAOUgAAAvyABAAAQAAAEYQEAAAAAAARn4QAAIAAAAAYBAAAgAAAAFAAAAAAAAAMgAACrIAEAACAAAA9g8QAAAAAABGCBCAQQAAAAEAAABGCBAAAQAAADgAAAdyABAAAAAAAEYCEAAAAAAARgMQAAIAAABIAAAL8gAQAAQAAABGEBAAAAAAAEZ%EAADAAAAAGAQAAMAAAABQAAAAAAAADIAAAmCABAAAwAAAAoAEAAEAAAAAUAAAAAAAEABQAAAAACAvzIAAAmCABAAAwAAADoAEAADAAAAAUAAAAAAAD8BQAAAAAAAPwAAAAmCABAAAwAAADoAEAADAAAACoAggEEAAAAAAAAAAwAAAA4AAAiCABAAAwAAABqAIAAAAAAAAwAAADoAEAADAAAAEAAABxIAEAAEAAAARhIQAAEAAABGEhAAAQAAAEQAAAUSABAABAAAAAoAEAAEAAAAOAAAB3IAEAAEAAAABgAQAAQAAABGEhAAAQAAABAAAAiCABAABAAAAEaCIAAAAAAAAgAAAEYCEAAEAAAADgAAB4IAEAADAAAAOgAQAAMAAAA6ABAABAAAADIAAApyABAABAAAAEYCEAAEAAAA9g8QAAMAAABGgiAAAAAAAAEAAAAAAAAJcgAQAAUAAABGAhCAQQAAAAQAAABGgiAAAAAAAAEAAAAQAAAHggAQAAMAAABGAhAABQAAAEYCEAAFAAAARAAABYIAEAADAAAAOgAQAAMAAAA4AAAHcgAQAAYAAAD2DxAAAwAAAEYCEAAFAAAAEAAACIIAEAAEAAAARgIQgEEAAAAGAAAARgIQAAMAAAAAAAAHggAQAAQAAAA6ABAABAAAADoAEAAEAAAAMgAAC3IAEAAHAAAAZggQAAMAAAD2DxCAQQAAAAQAAABmCBCAQQAAAAYAAAA0AAAJggAQAAQAAAAqABCAgQAAAAcAAAAaABCAgQAAAAcAAAAOAAAKggAQAAQAAAACQAAAAACAPwAAgD8AAIA:AACAPzoAEAAEAAAAMwAACYIAEAAFAAAAKgAQgIEAAAAHAAAAGgAQgIEAAAAHAAAAOAAAB4IAEAAEAAAAOgAQAAQAAAA6ABAABQAAADgAAAeCABAABQAAADoAEAAEAAAAOgAQAAQAAAAyAAAJggAQAAYAAAA6ABAABQAAAAFAAABfrqo8AUAAADZarr0yAAAJggAQAAYAAAA6ABAABQAAADoAEAAGAAAAAUAAAOJ2OD4yAAAJggAQAAYAAAA6ABAABQAAADoAEAAGAAAAAUAAAAQdqb4yAAAJggAQAAUAAAA6ABAABQAAADoAEAAGAAAAAUAAADj3fz84AAAHggAQAAYAAAA6ABAABAAAADoAEAAFAAAAMgAACYIAEAAGAAAAOgAQAAYAAAABQAAAAAAAwAFAAADbD8k:MQAACYIAEAAHAAAAKgAQgIEAAAAHAAAAGgAQgIEAAAAHAAAAAQAAB4IAEAAGAAAAOgAQAAYAAAA6ABAABwAAADIAAAmCABAABAAAADoAEAAEAAAAOgAQAAUAAAA6ABAABgAAADEAAAgyABAACAAAAIYAEAAHAAAAhgAQgEEAAAAHAAAAAQAAB4IAEAAFAAAAGgAQAAgAAAABQAAA2w9JwAAAAAeCABAABAAAADoAEAAEAAAAOgAQAAUAAAAzAAAIggAQAAUAAAAqABAABwAAABoAEIBBAAAABwAAADEAAAiCABAABQAAADoAEAAFAAAAOgAQgEEAAAAFAAAANAAACIIAEAAGAAAAKgAQAAcAAAAaABCAQQAAAAcAAAAdAAAIggAQAAYAAAA6ABAABgAAADoAEIBBAAAABgAAAAEAAAeCABAABQAAADoAEAAFAAAAOgAQAAYAAAA3AAAKggAQAAQAAAA6ABAABQAAADoAEIBBAAAABAAAADoAEAAEAAAAAAAAB4IAEAAEAAAAOgAQAAQAAAABQAAA2w9JQDgAAAcSABAACQAAADoAEAAEAAAAAUAAAIP5Ij4yAAAKggAQAAQAAAAKABCAgQAAAAcAAAABQAAAMG6ZvAFAAAAnFpg9MgAACoIAEAAEAAAAOgAQAAQAAAAKABCAgQAAAAcAAAABQAAAhDRZvjIAAAqCABAABAAAADoAEAAEAAAACgAQgIEAAAAHAAAAAUAAAKQNyT8AAAAIggAQAAUAAAAKABCAwQAAAAcAAAABQAAAAACAP0sAAAWCABAABQAAADoAEAAFAAAAOAAAB4IAEAAGAAAAOgAQAAQAAAA6ABAABQAAADIAAAmCABAABgAAADoAEAAGAAAAAUAAAAAAAMABQAAA2w9JQAEAAAeCABAABgAAAAoAEAAIAAAAOgAQAAYAAAAyAAAJggAQAAQAAAA6ABAABAAAADoAEAAFAAAAOgAQAAYAAAA4AAAHIgAQAAkAAAA6ABAABAAAAAFAAACD%aI%KwAABoIAEAAEAAAACoAgAAAAAAALAAAAOAAAB4IAEAAEAAAAKgAQAAIAAAA6ABAABAAAAEgAAAvyABAABwAAAEYAEAAJAAAARn4QAAUAAAAAYBAABQAAADoAEAAEAAAAEAAAB4IAEAAEAAAARgIQAAMAAABGAhAABgAAADQAAAciABAACAAAADoAEAAEAAAAAUAAAAAAAAAAAAAIQgAQAAgAAAAqABCAQQAAAAIAAAABQAAAAACAPzgAAApyABAACQAAAJYFEAAIAAAAAkAAAAAAgEMAAIBDAACAQAAAAAAbAAAFMgAQAAoAAABGABAACQAAADQAAAeCABAABAAAACoAEAAJAAAAAUAAAKzFJzc2AAAIwgAQAAoAAAACQAAAAAAAAAAAAAAAAAAAAAAAAC0AAAfyABAACQAAAEYOEAAKAAAARn4QAAQAAAAAAAAKcgAQAAEAAABGAhAAAQAAAAJAAAAK1yO9CtcjvQrXI70AAAAAMgAADHIAEAABAAAA9g8QAAAAAABGAhAAAQAAAAJAAAAK1yM9CtcjPQrXIz0AAAAAMgAACXIAEAAJAAAARgIQAAEAAAAGABAACQAAAFYFEAAJAAAAOAAAB3IAEAAHAAAARgIQAAcAAABGAhAACQAAAAAAAAtyABAACQAAAEYCEIBBAAAACQAAAAJAAAAAAIA:AACAPwAAgD8AAAAAMgAACXIAEAAAAAAARgIQAAAAAABGAhAACQAAAEYCEAAHAAAAQQAABYIAEAAAAAAAOgAQAAEAAAAaAAAFggAQAAEAAAA6ABAAAQAAADgAAAiCABAAAAAAADoAEAAAAAAAGoAgAAAAAAALAAAAOAAAB4IAEAAAAAAAOgAQAAAAAAABQAAAgYCAOzgAAAdyABAAAAAAAPYPEAAAAAAARgIQAAAAAAAAAAAJcgAQAAcAAABGAhCAQQAAAAQAAABGgiAAAAAAAAwAAAAAAAAJcgAQAAQAAABGAhAABAAAAEaCIIBBAAAAAAAAAAwAAAAQAAAHggAQAAAAAABGAhAABAAAAEYCEAAEAAAADgAACoIAEAAAAAAAAkAAAAAAgD8AAIA:AACAPwAAgD86ABAAAAAAABAAAAcSABAABAAAAEYCEAAHAAAARgIQAAcAAABEAAAFEgAQAAQAAAAKABAABAAAADgAAAdyABAABAAAAAYAEAAEAAAARgIQAAcAAAAyAAAJcgAQAAUAAABGAhAABQAAAPYPEAADAAAARgIQAAQAAAAQAAAHggAQAAMAAABGAhAABQAAAEYCEAAFAAAARAAABYIAEAADAAAAOgAQAAMAAAA4AAAHcgAQAAUAAAD2DxAAAwAAAEYCEAAFAAAAEAAAB4IAEAADAAAARgIQAAMAAABGAhAABQAAABAAAAcSABAABQAAAEYCEAAGAAAARgIQAAUAAAA0AAAHEgAQAAUAAAAKABAABQAAAAFAAAAAAAAANAAAB4IAEAADAAAAOgAQAAMAAAABQAAAAAAAADgAAAeCABAAAwAAADoAEAADAAAAOgAQAAMAAAA4AAAHIgAQAAUAAAAqABAAAgAAACoAEAACAAAAMgAACkIAEAACAAAAKgAQgEEAAAACAAAAKgAQAAIAAAABQAAAAAAAQDIAAAlCABAABQAAABoAEAAFAAAAGgAQAAUAAAABQAAAAACAvzIAAAmCABAAAwAAADoAEAADAAAAKgAQAAUAAAABQAAAAACAPzgAAAeCABAAAwAAADoAEAADAAAAOgAQAAMAAAA4AAAHQgAQAAUAAAAaABAABQAAABoAEAAFAAAAOAAAB0IAEAAFAAAAKgAQAAUAAAABQAAAg:miPg4AAAeCABAAAwAAACoAEAAFAAAAOgAQAAMAAAAQAAAHQgAQAAUAAABGAhAAAwAAAEYCEAAEAAAAOAAACHIAEAADAAAARgIQAAMAAAD2jyAAAAAAAA0AAAAyAAANcgAQAAYAAABGAhAAAwAAAAJAAAAAAKBBAACgQQAAoEEAAAAARgIQgEEAAAAEAAAANAAABxIAEAAIAAAAKgAQAAUAAAABQAAAAAAAADIAAAkyABAAAwAAAEYAEAAIAAAApgoQAAIAAABWBRAABQAAAAAAAAcyABAABAAAAEYAEAAIAAAARgAQAAgAAAAOAAAKMgAQAAMAAAACQAAAAACAPwAAgD8AAIA:AACAP0YAEAADAAAAOAAABzIAEAADAAAARgAQAAMAAABGABAABAAAADgAAAdCABAAAgAAABoAEAADAAAACgAQAAMAAAA0AAAHQgAQAAIAAAAqABAAAgAAAAFAAAAAAAAAOAAAB0IAEAACAAAAKgAQAAIAAAA6ABAAAwAAADIAAAkSABAAAwAAAAoAEAAFAAAAAUAAAFnAscABQAAADHbfwDgAAAcSABAAAwAAAAoAEAAFAAAACgAQAAMAAAAZAAAFEgAQAAMAAAAKABAAAwAAAAAAAAviABAAAwAAAAYJEIBBAAAAAQAAAAJAAAAAAAAAAACAPwAAgD8AAIA:MgAACXIAEAABAAAAlgcQAAMAAAAGABAAAwAAAEYCEAABAAAAOAAAB3IAEAABAAAApgoQAAIAAABGAhAAAQAAAA4AAAdyABAAAQAAAEYCEAABAAAA9g8QAAQAAAA4AAAHcgAQAAEAAAD2DxAAAQAAAEYCEAABAAAAMgAACXIAEAABAAAARgMQAAIAAAAGABAACAAAAEYCEAABAAAAOAAAB3IAEAABAAAA9g8QAAAAAABGAhAAAQAAADgAAAhyABAAAQAAAEYCEAABAAAARoIgAAAAAAANAAAANAAACYIAEAAAAAAAKgAQgIEAAAAHAAAAGgAQgIEAAAAHAAAANAAACIIAEAAAAAAAOgAQAAAAAAAKABCAgQAAAAcAAAAOAAAIggAQAAAAAAAagCAAAAAAAAAAAAA6ABAAAAAAAAAAAAmCABAAAAAAADoAEIBBAAAAAAAAAAqAIAAAAAAAAAAAADIAAAmCABAAAAAAADoAEAAAAAAAAUAAAAAAAD8BQAAAAAAAPzIAAAuCABAAAAAAADqAIIBBAAAAAAAAAA0AAAABQAAAAADAPzoAEAAAAAAANgAABoIAEAAGAAAAGgAQgEEAAAAGAAAAAAAACnIAEAACAAAAxgIQAAYAAAACQAAAbxKDOm8SgzpvEoM6AAAAAEYAAAuCABAAAQAAAEYCEAACAAAABnAQAAAAAAAAYBAAAAAAADoAEAAAAAAARgAACxIAEAACAAAAxgIQAAYAAAAGcBAAAAAAAABgEAAAAAAAOgAQAAAAAAAAAAAHggAQAAEAAAA6ABAAAQAAAAoAEAACAAAAAAAACnIAEAACAAAAxgIQAAYAAAACQAAAbxKDum8SgzpvEoM6AAAAAEYAAAsSABAAAgAAAEYCEAACAAAABnAQAAAAAAAAYBAAAAAAADoAEAAAAAAAAAAAB4IAEAABAAAAOgAQAAEAAAAKABAAAgAAAAAAAApyABAAAgAAAMYCEAAGAAAAAkAAAG8SgzpvEoO6bxKDOgAAAABGAAALEgAQAAIAAABGAhAAAgAAAAZwEAAAAAAAAGAQAAAAAAA6ABAAAAAAAAAAAAeCABAAAQAAADoAEAABAAAACgAQAAIAAAAAAAAKcgAQAAIAAADGAhAABgAAAAJAAABvEoM6bxKDOm8Sg7oAAAAARgAACxIAEAACAAAARgIQAAIAAAAGcBAAAAAAAABgEAAAAAAAOgAQAAAAAAAAAAAHggAQAAEAAAA6ABAAAQAAAAoAEAACAAAAAAAACnIAEAACAAAAxgIQAAYAAAACQAAAbxKDum8Sg7pvEoM6AAAAAEYAAAsSABAAAgAAAEYCEAACAAAABnAQAAAAAAAAYBAAAAAAADoAEAAAAAAAAAAAB4IAEAABAAAAOgAQAAEAAAAKABAAAgAAAAAAAApyABAAAgAAAMYCEAAGAAAAAkAAAG8SgzpvEoO6bxKDugAAAABGAAALEgAQAAIAAABGAhAAAgAAAAZwEAAAAAAAAGAQAAAAAAA6ABAAAAAAAAAAAAeCABAAAQAAADoAEAABAAAACgAQAAIAAAAAAAAKcgAQAAIAAADGAhAABgAAAAJAAABvEoO6bxKDOm8Sg7oAAAAAAAAACnIAEAADAAAAxgIQAAYAAAACQAAAbxKDum8Sg7pvEoO6AAAAAEYAAAuCABAAAgAAAEYCEAADAAAABnAQAAAAAAAAYBAAAAAAADoAEAAAAAAARgAAC4IAEAAAAAAARgIQAAIAAAAGcBAAAAAAAABgEAAAAAAAOgAQAAAAAAAAAAAHggAQAAAAAAA6ABAAAAAAADoAEAABAAAAAAAAB4IAEAAAAAAAOgAQAAIAAAA6ABAAAAAAADgAAAeCABAAAAAAADoAEAAAAAAAAUAAADmO4z04AAAHcgAQAAEAAAD2DxAAAAAAAEYCEAABAAAASAAAC:IAEAACAAAARhAQAAAAAABGfhAABgAAAABgEAAGAAAAAUAAAAAAAAAyAAAJciAQAAAAAABGAhAAAAAAAAYAEAACAAAARgIQAAEAAAA2AAAFgiAQAAAAAAABQAAAAACAPz4AAAFTVEFUdAAAAM0AAAALAAAAAAAAAAMAAACtAAAAAAAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAJAAAAAAAAAAAAAAAEAAAAAwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgC%AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAXwwAAAAAAAAA:::::wlC4xAQdbYmQBAAAA:mFVTaMVd0OL%fRyrbDvagAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADchbXBsZXJTdGF0ZSBfZ2J1ZmZlckRfc2FtcGxlciA6IHJlZ2lzdGVyKHMzKTsKdW5pZm9ybSBmbG9hdDMgZXllOwp1bmlmb3JtIGZsb2F0MyBleWVMb29rOwp1bmlmb3JtIGZsb2F0MiBjYW1lcmFQcm9qOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBzZW52bWFwQnJkZiA6IHJlZ2lzdGVyKHQ0KTsKU2FtcGxlclN0YXRlIF9zZW52bWFwQnJkZl9zYW1wbGVyIDogcmVnaXN0ZXIoczQpOwp1bmlmb3JtIGZsb2F0NCBzaGlycls3XTsKdW5pZm9ybSBpbnQgZW52bWFwTnVtTWlwbWFwczsKVGV4dHVyZTJEPGZsb2F0ND4gc2Vudm1hcFJhZGlhbmNlIDogcmVnaXN0ZXIodDUpOwpTYW1wbGVyU3RhdGUgX3NlbnZtYXBSYWRpYW5jZV9zYW1wbGVyIDogcmVnaXN0ZXIoczUpOwp1bmlmb3JtIGZsb2F0IGVudm1hcFN0cmVuZ3RoOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBzc2FvdGV4IDogcmVnaXN0ZXIodDYpOwpTYW1wbGVyU3RhdGUgX3NzYW90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHM2KTsKdW5pZm9ybSBmbG9hdDMgcG9pbnRQb3WDAQBM6AMAWtUCAAhoAAAm9wIAxloAAP70AgDBwwAA2SoCABIsAABQhQEAJhcDAE9cAwBlOAEA6fACAH7IAQAZYAMAQSQBAElQAgBrDgEAz4YBACGMAQCJ7AAA%YsDABVCAAAfaQMAjYACANwNAACS5gMAUugAAMADAQApEwAA9jwCAP3NAABlJgIAW94DACrlAQAafgAAbqcBADgsAQBMpwEAkgsDAKKyAwDrmQMAwV8DANa:AQAeTQEAAv4BADCMAQC:1gEAFRIBAGsUAgDKswAAwrsBAIPGAQD0AAAAuBwDAHPWAACQIQAANa4DAG0YAQCMjAAAV:gBAHYTAQB7CgEAOJkBAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVGV4dHVyZUN1YmU8ZmxvYXQ0PiBzaGFkb3dNYXBQb2ludFsxXSA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlckNvbXBhcmlzb25TdGF0ZSBfc2hhZG93TWFwUG9pbnRfc2FtcGxlclsxXSA6IHJlZ2lzdGVyKHMwKTsKdW5pZm9ybSBmbG9hdDIgbGlnaHRQcm9qOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyMCA6IHJlZ2lzdGVyKHQxKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyMF9zYW1wbGVyIDogcmVnaXN0ZXIoczEpOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyMSA6IHJlZ2lzdGVyKHQyKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyMV9zYW1wbGVyIDogcmVnaXN0ZXIoczIpOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyRCA6IHJlZ2lzdGVyKHQzKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyRF9zYW1wbGVyIDogcmVnaXN0ZXIoczMpOwp1bmlmb3JtIGZsb2F0MyBleWU7CnVuaWZvcm0gZmxvYXQzIGV5ZUxvb2s7CnVuaWZvcm0gZmxvYXQyIGNhbWVyYVByb2o7ClRleHR1cmUyRDxmbG9hdDQ%IHNlbnZtYXBCcmRmIDogcmVnaXN0ZXIodDQpOwpTYW1wbGVyU3RhdGUgX3NlbnZtYXBCcmRmX3NhbXBsZXIgOiByZWdpc3RlcihzNCk7CnVuaWZvcm0gZmxvYXQ0IHNoaXJyWzddOwp1bmlmb3JtIGludCBlbnZtYXBOdW1NaXBtYXBzOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBzZW52bWFwUmFkaWFuY2UgOiByZWdpc3Rlcih0NSk7ClNhbXBsZXJTdGF0ZSBfc2Vudm1hcFJhZGlhbmNlX3NhbXBsZXIgOiByZWdpc3RlcihzNSk7CnVuaWZvcm0gZmxvYXQgZW52bWFwU3RyZW5ndGg7ClRleHR1cmUyRDxmbG9hdDQ%IHNzYW90ZXggOiByZWdpc3Rlcih0Nik7ClNhbXBsZXJTdGF0ZSBfc3Nhb3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczYpOwp1bmlmb3JtIGZsb2F0MyBwb2ludFBvczsKdW5pZm9ybSBmbG9hdDMgcG9pbnRDb2w7CnVuaWZvcm0gZmxvYXQgcG9pbnRCaWFzOwp1bmlmb3JtIGZsb2F0NCBjYXNEYXRhWzIwXTsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDMgdmlld1JheTsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZpZXdSYXkgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKdm9pZCB1bnBhY2tGbG9hdEludDE2KGZsb2F0IHZhbCwgb3V0IGZsb2F0IGYsIG91dCB1aW50IGkpCnsKICAgIHVpbnQgYml0c1ZhbHVlID0gdWludCh2YWwpOwogICAgaSA9IGJpdHNWYWx1ZSA%u:%7wEAAADIKAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGRlZmVycmVkX2xpZ2h0LmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcZGVmZXJyZWRfbGlnaHQuZnJhZy5obHNsAFRleHR1cmVDdWJlPGZsb2F0ND4gc2hhZG93TWFwUG9pbnRbMV0gOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJDb21wYXJpc29uU3RhdGUgX3NoYWRvd01hcFBvaW50X3NhbXBsZXJbMV0gOiByZWdpc3RlcihzMCk7CnVuaWZvcm0gZmxvYXQyIGxpZ2h0UHJvajsKVGV4dHVyZTJEPGZsb2F0ND4gZ2J1ZmZlcjAgOiByZWdpc3Rlcih0MSk7ClNhbXBsZXJTdGF0ZSBfZ2J1ZmZlcjBfc2FtcGxlciA6IHJlZ2lzdGVyKHMxKTsKVGV4dHVyZTJEPGZsb2F0ND4gZ2J1ZmZlcjEgOiByZWdpc3Rlcih0Mik7ClNhbXBsZXJTdGF0ZSBfZ2J1ZmZlcjFfc2FtcGxlciA6IHJlZ2lzdGVyKHMyKTsKVGV4dHVyZTJEPGZsb2F0ND4gZ2J1ZmZlckQgOiByZWdpc3Rlcih0Myk7ClMb4jABgAAAAArrMbRIh9kBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAABAAAAAQAAAAAAAABCAAAAKAAAABviMAHt2kNzRSgAAAEAAABBAAAAQgwREAEAAAABCgABAI0C8FUKAAEAjQLwVU1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQAAADYAPREBaGxzbEZsYWdzADB4MQBobHNsVGFyZ2V0AHBzXzRfMABobHNsRW50cnkAbWFpbgAAAAAAKgAQEQAAAADYIgAAAAAAAKAaAAAAAAAAoBoAAAkQAAD8AAAAAQCgbWFpbgAyAD4RAxAAAAkAc3RhZ2VfaW5wdXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQEABQAAAAQA:AAAAAEAoBoAAAAAFgBQEQEABQAEAAQA:AAAAAEAoBoEAAAAFgBQEQEABQAIAAQA:AAAAAEAoBoQAAAAFgBQEQEABQAMAAQA:AAAAAEAoBoUAAAAFgBQEQEABQAQAAQA:AAAAAEAoBoYAAAAOgA%EQgQAACIADxtYWluIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQIABQAAAAQA:AAAAAEAoBoAAAAAFgBQEQIABQAEAAQA:AAAAAEAoBoEAAAAFgBQEQIABQAIAAQA:AAAAAEAoBoIAAAAFgBQEQIABQAMAAQA:AAAAAEAoBoMAAAAPgJNEYAAAADUIgAAABAAAAcACQUNKQY8AwANSAY7A1wJCQ0lBhQDLAkFDSkGEQOArA0UBgQDIA0FBg4DHA0VBgQDJA0pBiADTA0rBhkDg7wNSAYGA2ANNAYEAywNEwYWAygNXAYTAxwNSwYCA1ANIgYCA4EYDSwGCANwDX4GBANoDUgGAwOEeA1%BgIDNA0nBgsDLA1iBgIDOA2AjwYeAyANYgYfAygNgI8GHgMUDWIGHwMcDSwGCwM8DTwGFgNYDUQGAgMkDTwGAwMcDUQGAgMsDSgGHQMkDSkGHgNIDYCPBg4DOA1aBgsDimANgI8GCgwkLAgACRMNKAGA:AYdAwAJEQ1HBjsDXAkQDSQGFAMsCQsNKAYRA4CsCQkNEwYEAyAJBQ0FBg4DHAkJDRQGBAMkCRMNKAYgA0wJBQ0qBhkDg7wJEQ1HBgYDYAkVDTMGBAMsCQUNEgYWAygJFA1KBhMDHAkTDVsDLAkQDUoGAgMkCSUNNgNoCRANSgNMCRoNIAYCA2QJEA0hAyQJHg0rBggDTAlVDXMGBANoCTANRgYDA4R4CRENRwMYCR8NeQYCAxwJFw0fBgsDLAkTDSYDHAk:DU4GAgMcCSMNgI4GHgMgCSwNWQYfAygJIw2AjgYeAxQJFg1eBh8DHAkRDSsGCwM8CRoNOQYWA1gJDg1CBgIDJA06BgMDHAkFDUMGAgMsCRYNJwYdAyQJDgYeA0gJBQ0oAxwJIw2AjgYOAxwNVwYLA4pgCRMNgI4GCgwkLAAAKgA%EQUQAAAIAGcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACEAQAAAQB0ASAAAAAWAFARAAAFAAQABACEAQAAAQB0ASQAAAAWAFARAAAFAAgABACEAQAAAQBoESgAAAAWAFARAAAFAAwABACEAQAAAQDIBSwAAAAqAD4RARAAAAgAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAFACAAABAIwASAAAABYAUBEAAAUAAAAEANwCAAABAAQRMAAAABYAUBEAAAUABAAEANwCAAABAAQRNAAAABYAUBEAAAUACAAEANwCAAABAAQROAAAACoAPhEAEAAACABfNjU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAkAIAAAEAhABAAAAAFgBQEQAABQAEAAQAkAIAAAEAhABEAAAAKgA%EQUQAAAIAGcxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAkBwAAAQBwCBAAAAAWAFARAAAFAAQABAAkBwAAAQBwCBQAAAAWAFARAAAFAAgABAAkBwAAAQBwCBgAAAAWAFARAAAFAAwABAAkBwAAAQBYCRwAAAAuAD4RQAAAAAAAZGVwdGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAC4BwAAAQAkADwAAAAqAD4RARAAAAgAdgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEAJAAABANQKYAAAABYAUBEAAAUABAAEAEAJAAABANQKZAAAABYAUBEAAAUACAAEAEAJAAABANQKaAAAAC4APhFAAAAAAABkb3ROVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEALgOAAABAOAMhAAAAC4APhEAEAAACABlbnZCUkRGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAGwPAAABAHwAkAAAABYAUBEAAAUABAAEAGwPAAABAHwAlAAAACoAPhEBEAAACABlbnZsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAaAcAAAEAMBQAAAAAFgBQEQAABQAEAAQAaAcAAAEAMBQEAAAAFgBQEQAABQAIAAQAaAcAAAEAMBQIAAAANgA%EQEQAAAIAHJlZmxlY3Rpb25Xb3JsZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAgABACoCQAAAQDYBHAAAAAWAFARAAAFAAQABACoCQAAAQDYBHQAAAAWAFARAAAFAAAABACoCQAAAQDYBHgAAAA2AD4RARAAAAgAcHJlZmlsdGVyZWRDb2xvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIAOAAABAIQBcAAAABYAUBEAAAUABAAEAIAOAAABAIQBdAAAABYAUBEAAAUACAAEAIAOAAABAIQBeAAAANYATRH0AQAAcAoAAAEQAAAHAAkFDYJBBhQMXAAMg7yB4AgACWsNgJYBgPwDAAkWDTcMLDAJbA2AjQOBsAlrDYCWAxwJPQ1jAxwJag2AnwMoCRQNgKADKAkTDYDHAyQJEg2A8AM0CYD4DYEZAzQJgPcNgSIDIAkRDYEvAygJgTcNgVcDKAmBNg2BYAMgCRANgWoDHAmBcg2BkwMwCYFxDYGfA0gJDw2BqQMcCYGwDYHQAzAJDg2B2gMgCYHhDYICAzAJDQ2CDwNICYIWDYI2AzAJDA2CQAwwQEIAPhEOEAAAiAA8c2hJcnJhZGlhbmNlIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAmAYAAAEAFAAAAAAAFgBQEQAABQAEAAQAmAYAAAEAFAAEAAAAFgBQEQAABQAIAAQAmAYAAAEAFAAIAAAAAgBOEToATRH0AQAAKAsAAAIQAAAHAAkFDWoGAgyArICICAAJTA1WAYGEAwAJSw1oAygJDQ0fAzwJDA1pDBwsAEYAPhEREAAAiAA8b2N0YWhlZHJvbldyYXAgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEADACAAABACAAMAAAABYAUBEAAAUABAAEADACAAABACAANAAAAAIAThE%AE0R9AEAAPwLAAADEAAABwAJBQ0fBgIDhZwNMQYEDEwUCAAJFg0eAYaYC1AJDw0lBgQDFAkJDSYDHA0wDBwUKgA%EUAAAAABAGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAD4BgAAAQAsAAwAAAAyAD4RdQAAAAAAYml0c1ZhbHVlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQArAYAAAEAHAAMAAAAAgBOESYATRH0AQAAtAwAAAQQAAAHAAkFDTQGAgwohigIAAkMDTMBhyQMKABCAD4RDhAAAIgAPHN1cmZhY2VBbGJlZG8gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEwHAAABABwAIAAAABYAUBEAAAUABAAEAEwHAAABABwAJAAAABYAUBEAAAUACAAEAEwHAAABABwALAAAAAIAThFaAE0R9AEAAKQOAAAFEAAABwAJBQ1UBgIMaIa8DTAGAgOAtA1HBgIMRCAIAAksDUABh7gLUAkrDVIDJAkZDVMMICQJFw0vBgIDbAkuDUQGAgMgCRgNRgwoHAAAADIAPhEBEAAACQB2aWV3UmF5XzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABsCAAAAQBkAEAAAAAWAFARAAAFAAQABABsCAAAAQBkAEQAAAAWAFARAAAFAAgABABsCAAAAQBkAEgAAAAyAD4RQAAAAAAAbGluZWFyRGVwdGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAIAgAAAEAiAA8AAAAMgA%EUAAAAAAAHZpZXdaRGlzdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAIwIAAABAGgATAAAADIAPhEBEAAACAB3cG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADQCAAAAQAkAEAAAAAWAFARAAAFAAQABADQCAAAAQAkAEQAAAAWAFARAAAFAAgABADQCAAAAQAkAEgAAAACAE4RVgBNEfQBAAAEEAAABhAAAAcACQUNSQYEA4isDVUGAgODFA0fBgUDHA1VBgQMHIEsCAAJEw0sAYmoCzANSAOC%A0yBgIDHAkRDR4GBQMcCTUNUwYEDByBLEYAPhEREAAAiAA8ZW52TWFwRXF1aXJlY3QgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANgMAAABAGABkAAAABYAUBEAAAUABAAEACAOAAABABgAlAAAACoAPhFAAAAAAABwaGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQABA4AAAEANABMAAAALgA%EUAAAAAAAHRoZXRhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAvAwAAAEARABMAAAAAgBOESYATRH0AQAA4BAAAAcQAAAHAAkFDSIGAgwcjTwIAAkMDSEBjjgMHABKAD4RHBAAAIAAPGdldE1pcEZyb21Sb3VnaG5lc3MgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAVA4AAAEALABMAAAAMgA%EUAAAAABAG51bU1pcG1hcHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEADgOAAABABwATAAAAAIAThEuAU0R9AEAAIghAAAIEAAABwAJBQ11Bg4MKI3cDBw8DRcGDQOBwA0pBg4DJA0dBg0DaA0gBgIDTA0nBgIDcAYCAxwGAwM4DXUGBgMcDScGAwOBGAkJDWsGDgMcCQUNJwYPA1QNdQYCAxwNKQYCA4H0DRcGAgMcCQkNawYIAyANFwYCDByEuAgACToNbAGO2AYPDCgADBw8CRENFgYNA4HACRkNJwYOAyQJDw0oA0AJEA0cBg0DKAkaDR4GAgNMCRANHwMkCR0NJQYCA0wGAgMcCRMNJgMcBgMDHAk6DWwGBgMcCR0NJQYDA4EYCRYNagYOAxwJEw0mBg8DVAk6DWwGAgMcDXMDgbQJFQ10AxwJBQ0oBgIDJA0WBgIDHAkWDWoGCAMgCQkNFgYCDByEuAAAKgA%EQEQAAAIAGxkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAD4EAAAAQBoCnAAAAAWAFARAAAFAAQABAD4EAAAAQBoCnQAAAAWAFARAAAFAAgABAD4EAAAAQBoCngAAAAqAD4RARAAAAgAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKwRAAABAMQCQAAAABYAUBEAAAUABAAEAKwRAAABAMQCRAAAABYAUBEAAAUACAAEAKwRAAABALQJSAAAACoAPhEBEAAACABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAHBIAAAEAOABQAAAAFgBQEQAABQAEAAQAHBIAAAEAqABUAAAAFgBQEQAABQAIAAQAHBIAAAEA9ABYAAAALgA%EUAAAAAAAGRvdE5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAjBIAAAEAHAA8AAAALgA%EUAAAAAAAGRvdFZIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAcBIAAAEA8AhQAAAALgA%EUAAAAAAAGRvdE5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAMBQAAAEAMAeAAAAALgA%EQEQAAAIAGRpcmVjdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAJBYAAAEAPAUQAAAAFgBQEQAABQAEAAQAJBYAAAEAPAUUAAAAFgBQEQAABQAIAAQAJBYAAAEAPAUYAAAAhgBNEeQQAABIGQAACRAAAAcACQUNgIQGBAwojdwMHDwDg3gNJAYDAxwNgIQGAgyA4BwMgbSBbAgACU4NVgGO2AwoAAlKDX8MHDwJIg0tA4N4CQ8NIwYDAxwJMQ1EBgIDHAkiDS0MgLgoCTENRAOBRAkiA4C8CQ0NHQMcDUUDgKQJDA2AgwwcHEIAPhEOEAAAiAA8c3BlY3VsYXJCUkRGIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA5BUAAAEAHAAQAAAAFgBQEQAABQAEAAQA5BUAAAEAHAAUAAAAFgBQEQAABQAIAAQA5BUAAAEAHAAYAAAAKgA%EUAAAAAAAGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABADEEgAAAQA8A1QAAABiAE0RwBQAAFwXAAAKEAAABwAJBQ0%BgQMHJGQA2ANFQYDA2QNNwYEDDgcCAAJGQ0fAZKMCzAEHAklDS0DRAkXDTYDJAkTDT0DJAkQDRQGAwMcCQ0NLQYEAxwJDA02DBwcAAAAOgA%ERwQAACAADxkX2dneCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQApBMAAAEAHAA8AAAAKgA%EUAAAAAAAGEyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABsEwAAAQAcAFgAAAAuAD4RQAAAAAAAZGVub20AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABQEwAAAQBUADwAAAACAE4RWgBNEcAUAAB0GAAACxAAAAcACQUNdQYCDCiRyAOBbA0qBgIMOICECAAJWg1lAZLECzAEKAlBDXIDgUQJFg0wAyQJNg1zAxwJFQ10AygJEA0iBgIDHAkMDSkMHBw%AD4RHBAAAIAAPGcyX2FwcHJveCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA7BQAAAEAHAAoAAAALgA%EQAQAAAIAGhlbHBlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAtBQAAAEAVAAwAAAAFgBQEQAABQAEAAQAtBQAAAEAVAA0AAAAAgBOEUIATRHAFAAARBkAAAwQAAAHAAkFDW0GAgyApJQMCAAJKg1kAZUIAwAJKQ1qAyQJJA1rAxwJEw0fAxQJDA1sDCQsAAAAPgA%EQ4QAACIADxmX3NjaGxpY2sgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKwVAAABABwAEAAAABYAUBEAAAUABAAEAKwVAAABABwAFAAAABYAUBEAAAUACAAEAKwVAAABABwAGAAAAAIAThECAE4RJgBNEeQQAADMGQAADRAAAAcACQUNIAYCDCiQPAgACQwNHwGROAwoAD4APhEcEAAAgAA8YXR0ZW51YXRlIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABgEQAAAQAcAAwAAAACAE4RjgFNEeQQAACEIQAADhAAAAcACQUNHwYIDFSSxA0vBgUDgqANKQYCA4CsDVUGCAMsDVEGAgMYDVAGAgMoDVUGBQMsDVAGBAMsDYCiBgIDHA1QBgIDKA2AogYCA0gNUAYCAygNgKIGAgNIDVAGAgMoDYCjBgIDSA1QBgIDKA2AowYCA0gNUAYCAygNgKMGAgNIDVQGBAMoDVAGAgMoBgUDLAYEA0gNGQYCDBwcCAAJDQ0UAZPABikDAAkFDR4MNCAJEg0uBgUDgoAJFQ0oBgIDgKwJFA1UBggDLAkaDUYGAgMYCQ8NTwYCAygJFA1UBgUDLAkFDU8GBAMsCRoNgJcGAgMcCQ8NTwYCAygJBQMsCRoNgJcGAgMcCQ8NTwYCAygJBQMsCRoNgJcGAgMcCQ8NTwYCAygJBQMsCRoNgJgGAgMcCQ8NTwYCAygJBQMsCRoNgJgGAgMcCQ8NTwYCAygJBQMsCRoNgJgGAgMcDUkGBAMoCQ8NTwYCAygGBQMsCQUDLAYEAxwJDA0YBgIMHBwAAD4APhEcEAAAgAA8UENGQ3ViZSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAYGwAAAQAcAAwAAAAqAD4RARAAAAkAbWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABQUAAABACAHYAAAABYAUBEAAAUABAAEABQUAAABACAHZAAAABYAUBEAAAUACAAEABQUAAABACAHaAAAAC4APhFAAAAAAABjb21wYXJlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEADgXAAABAIwDDAAAAC4APhFAAAAAAAByZXN1bHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEANAXAAABABwAIAAAABYAUBEAAAEAAAAEAOwXAAABAPQCHAAAABYAUBEAAAEAAAAEAOAaAAABADgADAAAACoAPhEFEAAACABfNDcxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAeBcAAAEAWAAgAAAAFgBQEQAABQAEAAQAeBcAAAEAnAAkAAAAFgBQEQAABQAIAAQAeBcAAAEAnAAoAAAAKgA%EQUQAAAIAF80ODUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAUGAAAAQAsACAAAAAWAFARAAAFAAQABAAUGAAAAQBwACQAAAAWAFARAAAFAAgABAAUGAAAAQBwACgAAAAqAD4RBRAAAAgAXzQ5OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIQYAAABACwAIAAAABYAUBEAAAUABAAEAIQYAAABAHAAJAAAABYAUBEAAAUACAAEAIQYAAABAHAAKAAAACoAPhEFEAAACABfNTExAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA9BgAAAEALAAgAAAAFgBQEQAABQAEAAQA9BgAAAEAcAAkAAAAFgBQEQAABQAIAAQA9BgAAAEAcAAoAAAAKgA%EQUQAAAIAF81MjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABkGQAAAQAsACAAAAAWAFARAAAFAAQABABkGQAAAQBwACQAAAAWAFARAAAFAAgABABkGQAAAQBwACgAAAAqAD4RBRAAAAgAXzUzNwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANQZAAABACwAIAAAABYAUBEAAAUABAAEANQZAAABAHAAJAAAABYAUBEAAAUACAAEANQZAAABAHAAKAAAACoAPhEFEAAACABfNTUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQARBoAAAEA8AAgAAAAFgBQEQAABQAEAAQARBoAAAEA8AAkAAAAFgBQEQAABQAIAAQARBoAAAEA8AAoAAAAKgA%EQUQAAAIAF81NjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABsGgAAAQDIADAAAAAWAFARAAAFAAQABABsGgAAAQDIADQAAAAWAFARAAAFAAgABABsGgAAAQDIADgAAABOAE0R0BkAAIAhAAAPEAAABwAJBQ0tBgQDlWQNNAYCA0QNIQYCDCRECAAJHQ0rAZZgC1AJEw0sAyQJHg0yBgIDIAkNDTMDIAkMDSAGAgwkJD4APhEcEAAAgAA8bHBUb0RlcHRoIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAMFwAAAQAsAAwAAAAuAD4RQAAAAAAAemNvbXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAABAAAABACkFgAAAQBoACAAJAAMAAAAAgBOEQIAThECAE4RJgBNEfQBAAA8IgAAEBAAAAcACQUNTgYCDFiOcAgACQwNTQGPbAxYAD4APhEOEAAAiAA8c3VyZmFjZUYwIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADEDwAAAQAkABAAAAAWAFARAAAFAAQABADEDwAAAQAkABQAAAAWAFARAAAFAAgABADEDwAAAQAkABgAAAACAE4RMgBNEfQBAADQIgAAERAAAAcACQUNLgYCDEiPWAgACRMNGgGQVAMACSYNLAMUCRMNIwwgFEIAPhEREAAAiAA8dW5wYWNrRmxvYXQyIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAfBAAAAEAPAAcAAAAAgBOEQIAThECAAYA9AAAABgAAAABAAAAEAGRDllcy722YU9Se1JkckygAADyAAAAUBMAAAAAAAABAAEAnBsAAAAAAACaAQAARBMAAPwAAAD3AACA:AAAAPcAAAAUAQAA9wAAgBQBAAD3AAAALAEAAPcAAIAsAQAA9wAAAFgBAAD3AACAWAEAAPcAAACEAQAA9wAAgIQBAAD3AAAArAEAAPcAAICsAQAA9wAAAOgBAAD3AACA6AEAAPcAAAAUAgAA9wAAgBQCAAD3AAAAMAIAAPcAAIAwAgAA9wAAAFACAAD3AACAUAIAAPcAAABsAgAA9wAAgGwCAAD3AAAAkAIAAPcAAICQAgAA9wAAAKwCAAD3AACArAIAAPcAAADAAgAA9wAAgMACAAD3AAAA3AIAAPcAAIDcAgAA9wAAAPgCAAD3AACA%AIAAPcAAAAUAwAA9wAAgBQDAAD3AAAAPAMAAPcAAIA8AwAA9wAAAGQDAAD3AACAZAMAAPcAAACIAwAA9wAAgIgDAAD3AAAAvAMAAPcAAIC8AwAA9wAAAPADAAD3AACA8AMAAPcAAAAQBAAA9wAAgBAEAAD3AAAAOAQAAPcAAIA4BAAA9wAAAGAEAAD3AACAYAQAAPcAAACABAAA9wAAgIAEAAD3AAAAnAQAAPcAAICcBAAA9wAAAMwEAAD3AACAzAQAAPcAAADwBAAA9wAAgPAEAAD3AAAAFAUAAPcAAIAUBQAA9wAAADAFAAD3AACAMAUAAPcAAABgBQAA9wAAgGAFAAD3AAAAgAUAAPcAAICABQAA9wAAALAFAAD3AACAsAUAAPcAAADUBQAA9wAAgNQFAAD3AAAA%AUAAPcAAID4BQAA9wAAACgGAAD3AACAKAYAAPcAAABIBgAA9wAAgEgGAAD3AAAAaAYAAPcAAIBoBgAA9wAAAJgGAAD3AACAmAYAAPcAAACsBgAA9wAAgKwGAAD3AAAAyAYAAPcAAIDIBgAA9wAAANwGAAD3AACA3AYAAPcAAAD4BgAA9wAAgPgGAAD3AAAAJAcAAPcAAIAkBwAA9wAAAEwHAAD3AACATAcAAPcAAABoBwAA9wAAgGgHAAD3AAAAlAcAAPcAAICUBwAA9wAAALgHAAD3AACAuAcAAPcAAADcBwAA9wAAgNwHAAD3AAAAAAgAAPcAAIAACAAA9wAAACAIAAD3AACAIAgAAPcAAAA8CAAA9wAAgDwIAAD3AAAAUAgAAPcAAIBQCAAA9wAAAGwIAAD3AACAbAgAAPcAAACMCAAA9wAAgIwIAAD3AAAAqAgAAPcAAICoCAAA9wAAANAIAAD3AACA0AgAAPcAAAD0CAAA9wAAgPQIAAD3AAAAEAkAAPcAAIAQCQAA9wAAACQJAAD3AACAJAkAAPcAAABACQAA9wAAgEAJAAD3AAAAYAkAAPcAAIBgCQAA9wAAAHwJAAD3AACAfAkAAPcAAACoCQAA9wAAgKgJAAD3AAAAzAkAAPcAAIDMCQAA9wAAAPQJAAD3AACA9AkAAPcAAAAYCgAA9wAAgBgKAAD3AAAANAoAAPcAAIA0CgAA9wAAAFAKAAD3AACAUAoAAPcAAAB0CgAA9wAAgHQKAAD3AAAAmAoAAPcAAICYCgAA9wAAALwKAAD3AACAvAoAAPcAAADgCgAA9wAAgOAKAAD3AAAA:AoAAPcAAID8CgAA9wAAACALAAD3AACAIAsAAPcAAABECwAA9wAAgEQLAAD3AAAAYAsAAPcAAIBgCwAA9wAAAIQLAAD3AACAhAsAAPcAAACkCwAA9wAAgKQLAAD3AAAAwAsAAPcAAIDACwAA9wAAANwLAAD3AACA3AsAAPcAAAD8CwAA9wAAgPwLAAD3AAAAHAwAAPcAAIAcDAAA9wAAADwMAAD3AACAPAwAAPcAAABcDAAA9wAAgFwMAAD3AAAAeAwAAPcAAIB4DAAA9wAAAKAMAAD3AACAoAwAAPcAAAC8DAAA9wAAgLwMAAD3AAAA2AwAAPcAAIDYDAAA9wAAAAANAAD3AACAAA0AAPcAAAAoDQAA9wAAgCgNAAD3AAAAUA0AAPcAAIBQDQAA9wAAAHANAAD3AACAcA0AAPcAAACEDQAA9wAAgIQNAAD3AAAAoA0AAPcAAICgDQAA9wAAAMQNAAD3AACAxA0AAPcAAADgDQAA9wAAgOANAAD3AAAABA4AAPcAAIAEDgAA9wAAACAOAAD3AACAIA4AAPcAAAA4DgAA9wAAgDgOAAD3AAAAVA4AAPcAAIBUDgAA9wAAAIAOAAD3AACAgA4AAPcAAACcDgAA9wAAgJwOAAD3AAAAuA4AAPcAAIC4DgAA9wAAANgOAAD3AACA2A4AAPcAAAAADwAA9wAAgAAPAAD3AAAAFA8AAPcAAIAUDwAA9wAAADAPAAD3AACAMA8AAPcAAABQDwAA9wAAgFAPAAD3AAAAbA8AAPcAAIBsDwAA9wAAAJQPAAD3AACAlA8AAPcAAADEDwAA9wAAgMQPAAD3AAAA6A8AAPcAAIDoDwAA9wAAAAQQAAD3AACABBAAAPcAAAAwEAAA9wAAgDAQAAD3AAAAVBAAAPcAAIBUEAAA9wAAAGgQAAD3AACAaBAAAPcAAAB8EAAA9wAAgHwQAAD3AAAAnBAAAPcAAICcEAAA9wAAALgQAAD3AACAuBAAAPcAAADUEAAA9wAAgNQQAAD3AAAA%BAAAPcAAID4EAAA9wAAABwRAAD3AACAHBEAAPcAAAA4EQAA9wAAgDgRAAD3AAAAYBEAAPcAAIBgEQAA9wAAAHwRAAD3AACAfBEAAPcAAACQEQAA9wAAgJARAAD3AAAArBEAAPcAAICsEQAA9wAAANARAAD3AACA0BEAAPcAAADsEQAA9wAAgOwRAAD3AAAAABIAAPcAAIAAEgAA9wAAABwSAAD3AACAHBIAAPcAAAA4EgAA9wAAgDgSAAD3AAAAVBIAAPcAAIBUEgAA9wAAAHASAAD3AACAcBIAAPcAAACMEgAA9wAAgIwSAAD3AAAAqBIAAPcAAICoEgAA9wAAAMQSAAD3AACAxBIAAPcAAADsEgAA9wAAgOwSAAD3AAAAEBMAAPcAAIAQEwAA9wAAADQTAAD3AACANBMAAPcAAABQEwAA9wAAgFATAAD3AAAAbBMAAPcAAIBsEwAA9wAAAIgTAAD3AACAiBMAAPcAAACkEwAA9wAAgKQTAAD3AAAAwBMAAPcAAIDAEwAA9wAAAOATAAD3AACA4BMAAPcAAAAUFAAA9wAAgBQUAAD3AAAAMBQAAPcAAIAwFAAA9wAAAFQUAAD3AACAVBQAAPcAAABwFAAA9wAAgHAUAAD3AAAAmBQAAPcAAICYFAAA9wAAALQUAAD3AACAtBQAAPcAAADQFAAA9wAAgNAUAAD3AAAA7BQAAPcAAIDsFAAA9wAAAAgVAAD3AACACBUAAPcAAAAsFQAA9wAAgCwVAAD3AAAASBUAAPcAAIBIFQAA9wAAAFwVAAD3AACAXBUAAPcAAACIFQAA9wAAgIgVAAD3AAAArBUAAPcAAICsFQAA9wAAAMgVAAD3AACAyBUAAPcAAADkFQAA9wAAgOQVAAD3AAAAABYAAPcAAIAAFgAA9wAAACQWAAD3AACAJBYAAPcAAABAFgAA9wAAgEAWAAD3AAAAYBYAAPcAAIBgFgAA9wAAAIQWAAD3AACAhBYAAPcAAACkFgAA9wAAgKQWAAD3AAAAxBYAAPcAAIDEFgAA9wAAAOgWAAD3AACA6BYAAPcAAAAMFwAA9wAAgAwXAAD3AAAAOBcAAPcAAIA4FwAA9wAAAFAXAAD3AACAUBcAAPcAAAB4FwAA9wAAgHgXAAD3AAAApBcAAPcAAICkFwAA9wAAANAXAAD3AACA0BcAAPcAAADsFwAA9wAAgOwXAAD3AAAAFBgAAPcAAIAUGAAA9wAAAEAYAAD3AACAQBgAAPcAAABcGAAA9wAAgFwYAAD3AAAAhBgAAPcAAICEGAAA9wAAALAYAAD3AACAsBgAAPcAAADMGAAA9wAAgMwYAAD3AAAA9BgAAPcAAID0GAAA9wAAACAZAAD3AACAIBkAAPcAAAA8GQAA9wAAgDwZAAD3AAAAZBkAAPcAAIBkGQAA9wAAAJAZAAD3AACAkBkAAPcAAACsGQAA9wAAgKwZAAD3AAAA1BkAAPcAAIDUGQAA9wAAAAAaAAD3AACAABoAAPcAAAAcGgAA9wAAgBwaAAD3AAAARBoAAPcAAIBEGgAA9wAAAGwaAAD3AACAbBoAAPcAAACYGgAA9wAAgJgaAAD3AAAAxBoAAPcAAIDEGgAA9wAAAOAaAAD3AACA4BoAAPcAAAD8GgAA9wAAgPwaAAD3AAAAGBsAAPcAAIAYGwAA9wAAADQbAAD3AACANBsAAPcAAABgGwAA9wAAgGAbAAD3AAAAhBsAAPoAAICEGwAA%gAAAJgbAAD6AACAmBsAAPoAAAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABgABQAYAPYAAADcAAAAAAAAAAAQAAAAAAAAwgAAAAEQAAAAAAAATgAAAAIQAAAAAAAAKwAAAAMQAAAAAAAAMAAAAAQQAAAAAAAAPAAAAAUQAAAAAAAARgAAAAYQAAAAAAAAYQAAAAcQAAAAAAAAXAAAAAgQAAAAAAAArgAAAAkQAAAAAAAAfwAAAAoQAAAAAAAAbQAAAAsQAAAAAAAAdAAAAAwQAAAAAAAAegAAAA0QAAAAAAAAhQAAAA4QAAAAAAAAkgAAAA8QAAAAAAAAigAAABAQAAAAAAAAQQAAABEQAAAAAAAANwAAAGAAAAAAAAAAFAAAADgAAABkAAAAhAAAAKQAAADMAAAA7AAAABQBAAA0AQAAXAEAAHQBAACQAQAAsAEAANABAADsAQAAFAIAADgCAABoAgAAjAIAAKgCAADQAgAA8AIAABADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwACABUQAAAaAAESBQAAAAEQAAABEAAAARAAAEAAAAAAEAAADgAIEA4QAAAXAAUAFxAAAAoAARIBAAAAARAAAA4ACBAREAAAFwABABkQAAAOAAESAgAAAEAAAABAAAAACgAYFUAAAAABAAEADgAIEBwQAAAXAAIAGxAAADoAARINAAAAARAAAAEQAAABEAAAQAAAAAEQAAABEAAAARAAAEAAAABAAAAAARAAAHQAAABAAAAAYgAAAA4ACBAOEAAAFwANAB4QAAAeAAESBgAAAAEQAABAAAAAQAAAAEAAAABAAAAAQAAAAA4ACBAOEAAAFwAGACAQAAASAAESAwAAAEAAAABAAAAAQAAAAA4ACBAcEAAAFwADACIQAAAKAAESAQAAAEAAAAAOAAgQHBAAABcAAQAkEAAADgAXFQUQAAAGAvBDAADy8Q4AFxUAAAAACwLwQwAA8vEiAAESBwAAACYQAAAnEAAAARAAAAEQAABAAAAAABAAAAEQAAAOAAgQHBAAABcABwAoEAAADgABEgIAAAABEAAAABAAAA4ACBAcEAAAFwACACoQAAAOAAgQERAAABcAAQAkEAAACgAYFSYQAAABAAEAEgAWFS0QAAAiAAAAAQAAAAEAAPEKABgVLhAAAAEAAAIOABcVAAAAAAsCMLMAAPLxCgAYFTAQAAABAAEAEgAWFTEQAAAiAAAAAQAAAAEAAPEKABgVMhAAAAEAAAIKABgVERAAAAEAAAIOABcVBRAAAAMC8EMAAPLxCgAYFTUQAAABAAEACgAYFTYQAAABAAACDgAXFQAAAAAKAvBDAADy8QoAGBU4EAAAAQABAAoAGBU5EAAAAQAAAgoAGBUOEAAAAQAAAgoAGBUFEAAAAQABABIAFhU8EAAAIgAAABAAAABwAADxCgAYFT0QAAABAAACCgAYFXQAAAABAAEACgAYFT8QAAABAAACCgAYFRwQAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAEIQAACkBAAACgD::wQAAAD::wMAAAAAAAgBAAAIAQAACAAAABABAAAAAAAAFgAbFUAAAAACAAAACABmbG9hdDIA8:LxFgAbFUAAAAADAAAADABmbG9hdDMA8:LxKgADEg0VAwAAEAAAAAB0ZXhDb29yZADxDRUDAAEQAAAIAHZpZXdSYXkA8vEmAAUVAgAAAAIQAAAAAAAAAAAAABQAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAADEAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgADEg0VAwAFEAAAAABmcmFnQ29sb3IAKgAFFQEAAAAGEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBxAAAAEAAQAOAAgQCBAAABcAAQAEEAAACgAYFQMAAAABAAEADgAIEAoQAAAXAAAAAwAAABIAFhUFEAAAIgAAABAAAABwAADxDgABEgIAAAABEAAADBAAAAoAGBUBEAAAAQABAA4ACBAOEAAAFwACAA0QAAAKAAESAQAAAAAQAAAKABgVABAAAAEAAQAOAAgQERAAABcAAQAQEAAAEgABEgMAAABAAAAAQAAAAHUAAAAOAAgQChAAABcAAwATEAAADgABEgIAAAABEAAAQAAAAA4ACBAOEAAAFJYAAEKmAgCqgwAACPMDANBYAgBDxQEA8CYAAGdpAwBSQAAAAOADAIg0AgAQEQMAECoAAAsaAgBWFQMAdCwCAOsSAgCOkgzOwp1bmlmb3JtIGZsb2F0MyBwb2ludENvbDsKdW5pZm9ybSBmbG9hdCBwb2ludEJpYXM7CnVuaWZvcm0gZmxvYXQ0IGNhc0RhdGFbMjBdOwoKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MyB2aWV3UmF5OwpzdGF0aWMgZmxvYXQ0IGZyYWdDb2xvcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDA7CiAgICBmbG9hdDMgdmlld1JheSA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07CgpmbG9hdDIgb2N0YWhlZHJvbldyYXAoZmxvYXQyIHYpCnsKICAgIHJldHVybiAoMS4wZi54eCAtIGFicyh2Lnl4KSkgKiBmbG9hdDIoKHYueCA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpLCAodi55ID49IDAuMGYpID8gMS4wZiA6ICgtMS4wZikpOwp9Cgp2b2lkIHVucGFja0Zsb2F0SW50MTYoZmxvYXQgdmFsLCBvdXQgZmxvYXQgZiwgb3V0IHVpbnQgaSkKewogICAgdWludCBiaXRzVmFsdWUgPSB1aW50KHZhbCk7CiAgICBpID0gYml0c1ZhbHVlID4%IDEydTsKICAgIGYgPSBmbG9hdChiaXRzVmFsdWUgJiA0Mjk0OTA1ODU1dSkgLyA0MDk1LjBmOwp9CgpmbG9hdDIgdW5wYWNrRmxvYXQyKGZsb2F0IGYpCnsKICAgIHJldHVybiBmbG9hdDIoZmxvb3IoZikgLyAyNTUuMGYsIGZyYWMoZikpOwp9CgpmbG9hdDMgc3VyZmFjZUFsYmVkbyhmbG9hdDMgYmFzZUNvbG9yLCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBsZXJwKGJhc2VDb2xvciwgMC4wZi54eHgsIG1ldGFsbmVzcy54eHgpOwp9CgpmbG9hdDMgc3VyZmFjZUYwKGZsb2F0MyBiYXNlQ29sb3IsIGZsb2F0IG1ldGFsbmVzcykKewogICAgcmV0dXJuIGxlcnAoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjVmLnh4eCwgYmFzZUNvbG9yLCBtZXRhbG5lc3MueHh4KTsKfQoKZmxvYXQzIGdldFBvcyhmbG9hdDMgZXllXzEsIGZsb2F0MyBleWVMb29rXzEsIGZsb2F0MyB2aWV3UmF5XzEsIGZsb2F0IGRlcHRoLCBmbG9hdDIgY2FtZXJhUHJval8xKQp7CiAgICBmbG9hdCBsaW5lYXJEZXB0aCA9IGNhbWVyYVByb2pfMS55IC8gKCgoZGVwdGggKiAwLjVmKSArIDAuNWYpIC0gY2FtZXJhUHJval8xLngpOwogICAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMSwgdmlld1JheV8xKTsKICAgIGZsb2F0MyB3cG9zaXRpb24gPSBleWVfMSArICh2aWV3UmF5XzEgKiAobGluZWFyRGVwdGggLyB2aWV3WkRpc3QpKTsKICAgIHJldHVybiB3cG9zaXRpb247Cn0KCmZsb2F0MyBzaElycmFkaWFuY2UoZmxvYXQzIG5vciwgZmxvYXQ0IHNoaXJyXzFbN10pCnsKICAgIGZsb2F0MyBjbDAwID0gZmxvYXQzKHNoaXJyXzFbMF0ueCwgc2hpcnJfMVswXS55LCBzaGlycl8xWzBdLnopOwogICAgZmxvYXQzIGNsMW0xID0gZmxvYXQzKHNoaXJyXzFbMF0udywgc2hpcnJfMVsxXS54LCBzaGlycl8xWzFdLnkpOwogICAgZmxvYXQzIGNsMTAgPSBmbG9hdDMoc2hpcnJfMVsxXS56LCBzaGlycl8xWzFdLncsIHNoaXJyXzFbMl0ueCk7CiAgICBmbG9hdDMgY2wxMSA9IGZsb2F0MyhzaGlycl8xWzJdLnksIHNoaXJyXzFbMl0ueiwgc2hpcnJfMVsyXS53KTsKICAgIGZsb2F0MyBjbDJtMiA9IGZsb2F0MyhzaGlycl8xWzNdLngsIHNoaXJyXzFbM10ueSwgc2hpcnJfMVszXS56KTsKICAgIGZsb2F0MyBjbDJtMSA9IGZsb2F0MyhzaGlycl8xWzNdLncsIHNoaXJyXzFbNF0ueCwgc2hpcnJfMVs0XS55KTsKICAgIGZsb2F0MyBjbDIwID0gZmxvYXQzKHNoaXJyXzFbNF0ueiwgc2hpcnJfMVs0XS53LCBzaGlycl8xWzVdLngpOwogICAgZmxvYXQzIGNsMjEgPSBmbG9hdDMoc2hpcnJfMVs1XS55LCBzaGlycl8xWzVdLnosIHNoaXJyXzFbNV0udyk7CiAgICBmbG9hdDMgY2wyMiA9IGZsb2F0MyhzaGlycl8xWzZdLngsIHNoaXJyXzFbNl0ueSwgc2hpcnJfMVs2XS56KTsKICAgIHJldHVybiAoKCgoKCgoKCgoY2wyMiAqIDAuNDI5MDQyOTk0OTc2MDQzNzAxMTcxODc1ZikgKiAoKG5vci55ICogbm9yLnkpIC0gKCgtbm9yLnopICogKC1ub3IueikpKSkgKyAoKChjbDIwICogMC43NDMxMjUwMjE0NTc2NzIxMTkxNDA2MjVmKSAqIG5vci54KSAqIG5vci54KSkgKyAoY2wwMCAqIDAuODg2MjI3MDExNjgwNjAzMDI3MzQzNzVmKSkgLSAoY2wyMCAqIDAuMjQ3NzA3OTkyNzkyMTI5NTE2NjAxNTYyNWYpKSArICgoKGNsMm0yICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NWYpICogbm9yLnkpICogKC1ub3IueikpKSArICgoKGNsMjEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1ZikgKiBub3IueSkgKiBub3IueCkpICsgKCgoY2wybTEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1ZikgKiAoLW5vci56KSkgKiBub3IueCkpICsgKChjbDExICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNWYpICogbm9yLnkpKSArICgoY2wxbTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1ZikgKiAoLW5vci56KSkpICsgKChjbDEwICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNWYpICogbm9yLngpOwp9CgpmbG9hdCBnZXRNaXBGcm9tUm91Z2huZXNzKGZsb2F0IHJvdWdobmVzcywgZmxvYXQgbnVtTWlwbWFwcykKewogICAgcmV0dXJuIHJvdWdobmVzcyAqIG51bU1pcG1hcHM7Cn0KCmZsb2F0MiBlbnZNYXBFcXVpcmVjdChmbG9hdDMgbm9ybWFsKQp7CiAgICBmbG9hdCBwaGkgPSBhY29zKG5vcm1hbC56KTsKICAgIGZsb2F0IHRoZXRhID0gYXRhbjIoLW5vcm1hbC55LCBub3JtYWwueCkgKyAzLjE0MTU5Mjc0MTAxMjU3MzI0MjE4NzVmOwogICAgcmV0dXJuIGZsb2F0Mih0aGV0YSAvIDYuMjgzMTg1NDgyMDI1MTQ2NDg0Mzc1ZiwgcGhpIC8gMy4xNDE1OTI3NDEwMTI1NzMyNDIxODc1Zik7Cn0KCmZsb2F0MyBsYW1iZXJ0RGlmZnVzZUJSREYoZmxvYXQzIGFsYmVkbywgZmxvYXQgbmwpCnsKICAgIHJldHVybiBhbGJlZG8gKiBubDsKfQoKZmxvYXQgZF9nZ3goZmxvYXQgbmgsIGZsb2F0IGEpCnsKICAgIGZsb2F0IGEyID0gYSAqIGE7CiAgICBmbG9hdCBkZW5vbSA9IHBvdygoKG5oICogbmgpICogKGEyIC0gMS4wZikpICsgMS4wZiwgMi4wZik7CiAgICByZXR1cm4gKGEyICogMC4zMTgzMDk4NzMzNDI1MTQwMzgwODU5Mzc1ZikgLyBkZW5vbTsKfQoKZmxvYXQgZzJfYXBwcm94KGZsb2F0IE5kb3RMLCBmbG9hdCBOZG90ViwgZmxvYXQgYWxwaGEpCnsKICAgIGZsb2F0MiBoZWxwZXIgPSAoZmxvYXQyKE5kb3RMLCBOZG90VikgKiAyLjBmKSAqICgxLjBmLnh4IC8gKChmbG9hdDIoTmRvdEwsIE5kb3RWKSAqICgyLjBmIC0gYWxwaGEpKSArIGFscGhhLnh4KSk7CiAgICByZXR1cm4gbWF4KGhlbHBlci54ICogaGVscGVyLnksIDAuMGYpOwp9CgpmbG9hdDMgZl9zY2hsaWNrKGZsb2F0MyBmMCwgZmxvYXQgdmgpCnsKICAgIHJldHVybiBmMCArICgoMS4wZi54eHggLSBmMCkgKiBleHAyKCgoKC01LjU1NDcyOTkzODUwNzA4MDA3ODEyNWYpICogdmgpIC0gNi45ODMxNjAwMTg5MjA4OTg0Mzc1ZikgKiB2aCkpOwp9CgpmbG9hdDMgc3BlY3VsYXJCUkRGKGZsb2F0MyBmMCwgZmxvYXQgcm91Z2huZXNzLCBmbG9hdCBubCwgZmxvYXQgbmgsIGZsb2F0IG52LCBmbG9hdCB2aCkKewogICAgZmxvYXQgYSA9IHJvdWdobmVzcyAqIHJvdWdobmVzczsKICAgIHJldHVybiAoZl9zY2hsaWNrKGYwLCB2aCkgKiAoZF9nZ3gobmgsIGEpICogZzJfYXBwcm94KG5sLCBudiwgYSkpKSAvIG1heCg0LjBmICogbnYsIDkuOTk5OTk5NzQ3Mzc4NzUxNjM1NTUxNDUyNjM2NzE4OGUtMDZmKS54eHg7Cn0KCmZsb2F0IGF0dGVudWF0ZShmbG9hdCBkaXN0KQp7CiAgICByZXR1cm4gMS4wZiAvIChkaXN0ICogZGlzdCk7Cn0KCmZsb2F0IGxwVG9EZXB0aChpbm91dCBmbG9hdDMgbHAsIGZsb2F0MiBsaWdodFByb2pfMSkKewogICAgbHAgPSBhYnMobHApOwogICAgZmxvYXQgemNvbXAgPSBtYXgobHAueCwgbWF4KGxwLnksIGxwLnopKTsKICAgIHpjb21wID0gbGlnaHRQcm9qXzEueCAtIChsaWdodFByb2pfMS55IC8gemNvbXApOwogICAgcmV0dXJuICh6Y29tcCAqIDAuNWYpICsgMC41ZjsKfQoKZmxvYXQgUENGQ3ViZShUZXh0dXJlQ3ViZTxmbG9hdDQ%IHNoYWRvd01hcEN1YmUsIFNhbXBsZXJDb21wYXJpc29uU3RhdGUgX3NoYWRvd01hcEN1YmVfc2FtcGxlciwgZmxvYXQzIGxwLCBpbm91dCBmbG9hdDMgbWwsIGZsb2F0IGJpYXMsIGZsb2F0MiBsaWdodFByb2pfMSwgZmxvYXQzIG4pCnsKICAgIGZsb2F0MyBwYXJhbSA9IGxwOwogICAgZmxvYXQgXzQzOSA9IGxwVG9EZXB0aChwYXJhbSwgbGlnaHRQcm9qXzEpOwogICAgZmxvYXQgY29tcGFyZSA9IF80MzkgLSAoYmlhcyAqIDEuNWYpOwogICAgbWwgKz0gKChuICogYmlhcykgKiAyMC4wZik7CiAgICBtbC55ID0gLW1sLnk7CiAgICBmbG9hdDQgXzQ1OSA9IGZsb2F0NChtbCwgY29tcGFyZSk7CiAgICBmbG9hdCByZXN1bHQgPSBzaGFkb3dNYXBDdWJlLlNhbXBsZUNtcChfc2hhZG93TWFwQ3ViZV9zYW1wbGVyLCBfNDU5Lnh5eiwgXzQ1OS53KTsKICAgIGZsb2F0NCBfNDcxID0gZmxvYXQ0KG1sICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLnh4eCwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TWFwQ3ViZS5TYW1wbGVDbXAoX3NoYWRvd01hcEN1YmVfc2FtcGxlciwgXzQ3MS54eXosIF80NzEudyk7CiAgICBmbG9hdDQgXzQ4NSA9IGZsb2F0NChtbCArIGZsb2F0MygtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NWYsIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiksIGNvbXBhcmUpOwogICAgcmVzdWx0ICs9IHNoYWRvd01hcEN1YmUuU2FtcGxlQ21wKF9zaGFkb3dNYXBDdWJlX3NhbXBsZXIsIF80ODUueHl6LCBfNDg1LncpOwogICAgZmxvYXQ0IF80OTggPSBmbG9hdDQobWwgKyBmbG9hdDMoMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NWYpLCBjb21wYXJlKTsKICAgIHJlc3VsdCArPSBzaGFkb3dNYXBDdWJlLlNhbXBsZUNtcChfc2hhZG93TWFwQ3ViZV9zYW1wbGVyLCBfNDk4Lnh5eiwgXzQ5OC53KTsKICAgIGZsb2F0NCBfNTExID0gZmxvYXQ0KG1sICsgZmxvYXQzKDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiwgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TWFwQ3ViZS5TYW1wbGVDbXAoX3NoYWRvd01hcEN1YmVfc2FtcGxlciwgXzUxMS54eXosIF81MTEudyk7CiAgICBmbG9hdDQgXzUyNCA9IGZsb2F0NChtbCArIGZsb2F0MygtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NWYpLCBjb21wYXJlKTsKICAgIHJlc3VsdCArPSBzaGFkb3dNYXBDdWJlLlNhbXBsZUNtcChfc2hhZG93TWFwQ3ViZV9zYW1wbGVyLCBfNTI0Lnh5eiwgXzUyNC53KTsKICAgIGZsb2F0NCBfNTM3ID0gZmxvYXQ0KG1sICsgZmxvYXQzKDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiwgLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiwgLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiksIGNvbXBhcmUpOwogICAgcmVzdWx0ICs9IHNoYWRvd01hcEN1YmUuU2FtcGxlQ21wKF9zaGFkb3dNYXBDdWJlX3NhbXBsZXIsIF81MzcueHl6LCBfNTM3LncpOwogICAgZmxvYXQ0IF81NTAgPSBmbG9hdDQobWwgKyBmbG9hdDMoLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1ZiwgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmLCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TWFwQ3ViZS5TYW1wbGVDbXAoX3NoYWRvd01hcEN1YmVfc2FtcGxlciwgXzU1MC54eXosIF81NTAudyk7CiAgICBmbG9hdDQgXzU2MyA9IGZsb2F0NChtbCArICgtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzVmKS54eHgsIGNvbXBhcmUpOwogICAgcmVzdWx0ICs9IHNoYWRvd01hcEN1YmUuU2FtcGxlQ21wKF9zaGFkb3dNYXBDdWJlX3NhbXBsZXIsIF81NjMueHl6LCBfNTYzLncpOwogICAgcmV0dXJuIHJlc3VsdCAvIDkuMGY7Cn0KCmZsb2F0MyBzYW1wbGVMaWdodChmbG9hdDMgcCwgZmxvYXQzIG4sIGZsb2F0MyB2LCBmbG9hdCBkb3ROViwgZmxvYXQzIGxwLCBmbG9hdDMgbGlnaHRDb2wsIGZsb2F0MyBhbGJlZG8sIGZsb2F0IHJvdWdoLCBmbG9hdCBzcGVjLCBmbG9hdDMgZjAsIGludCBpbmRleCwgZmxvYXQgYmlhcywgYm9vbCByZWNlaXZlU2hhZG93KQp7CiAgICBmbG9hdDMgbGQgPSBscCAtIHA7CiAgICBmbG9hdDMgbCA9IG5vcm1hbGl6ZShsZCk7CiAgICBmbG9hdDMgaCA9IG5vcm1hbGl6ZSh2ICsgbCk7CiAgICBmbG9hdCBkb3ROSCA9IG1heCgwLjBmLCBkb3QobiwgaCkpOwogICAgZmxvYXQgZG90VkggPSBtYXgoMC4wZiwgZG90KHYsIGgpKTsKICAgIGZsb2F0IGRvdE5MID0gbWF4KDAuMGYsIGRvdChuLCBsKSk7CiAgICBmbG9hdDMgZGlyZWN0ID0gbGFtYmVydERpZmZ1c2VCUkRGKGFsYmVkbywgZG90TkwpICsgKHNwZWN1bGFyQlJERihmMCwgcm91Z2gsIGRvdE5MLCBkb3ROSCwgZG90TlYsIGRvdFZIKSAqIHNwZWMpOwogICAgZGlyZWN0ICo9IGF0dGVudWF0ZShkaXN0YW5jZShwLCBscCkpOwogICAgZGlyZWN0ICo9IGxpZ2h0Q29sOwogICAgaWYgKHJlY2VpdmVTaGFkb3cpCiAgICB7CiAgICAgICAgZmxvYXQzIHBhcmFtID0gLWw7CiAgICAgICAgZmxvYXQgXzYyNCA9IFBDRkN1YmUoc2hhZG93TWFwUG9pbnRbMF0sIF9zaGFkb3dNYXBQb2ludF9zYW1wbGVyWzBdLCBsZCwgcGFyYW0sIGJpYXMsIGxpZ2h0UHJvaiwgbik7CiAgICAgICAgZGlyZWN0ICo9IF82MjQ7CiAgICB9CiAgICByZXR1cm4gZGlyZWN0Owp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0NCBnMCA9IGdidWZmZXIwLlNhbXBsZUxldmVsKF9nYnVmZmVyMF9zYW1wbGVyLCB0ZXhDb29yZCwgMC4wZik7CiAgICBmbG9hdDMgbjsKICAgIG4ueiA9ICgxLjBmIC0gYWJzKGcwLngpKSAtIGFicyhnMC55KTsKICAgIGZsb2F0MiBfNjU0OwogICAgaWYgKG4ueiA%PSAwLjBmKQogICAgewogICAgICAgIF82NTQgPSBnMC54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNjU0ID0gb2N0YWhlZHJvbldyYXAoZzAueHkpOwogICAgfQogICAgbiA9IGZsb2F0MyhfNjU0LngsIF82NTQueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBmbG9hdCByb3VnaG5lc3MgPSBnMC56OwogICAgZmxvYXQgcGFyYW07CiAgICB1aW50IHBhcmFtXzE7CiAgICB1bnBhY2tGbG9hdEludDE2KGcwLncsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGZsb2F0IG1ldGFsbGljID0gcGFyYW07CiAgICB1aW50IG1hdGlkID0gcGFyYW1fMTsKICAgIGZsb2F0NCBnMSA9IGdidWZmZXIxLlNhbXBsZUxldmVsKF9nYnVmZmVyMV9zYW1wbGVyLCB0ZXhDb29yZCwgMC4wZik7CiAgICBmbG9hdDIgb2Njc3BlYyA9IHVucGFja0Zsb2F0MihnMS53KTsKICAgIGZsb2F0MyBhbGJlZG8gPSBzdXJmYWNlQWxiZWRvKGcxLnh5eiwgbWV0YWxsaWMpOwogICAgZmxvYXQzIGYwID0gc3VyZmFjZUYwKGcxLnh5eiwgbWV0YWxsaWMpOwogICAgZmxvYXQgZGVwdGggPSAoZ2J1ZmZlckQuU2FtcGxlTGV2ZWwoX2didWZmZXJEX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54ICogMi4wZikgLSAxLjBmOwogICAgZmxvYXQzIHAgPSBnZXRQb3MoZXllLCBleWVMb29rLCBub3JtYWxpemUodmlld1JheSksIGRlcHRoLCBjYW1lcmFQcm9qKTsKICAgIGZsb2F0MyB2ID0gbm9ybWFsaXplKGV5ZSAtIHApOwogICAgZmxvYXQgZG90TlYgPSBtYXgoZG90KG4sIHYpLCAwLjBmKTsKICAgIGZsb2F0MiBlbnZCUkRGID0gc2Vudm1hcEJyZGYuTG9hZChpbnQzKGludDIoZmxvYXQyKGRvdE5WLCAxLjBmIC0gcm91Z2huZXNzKSAqIDI1Ni4wZiksIDApKS54eTsKICAgIGZsb2F0MyBlbnZsID0gc2hJcnJhZGlhbmNlKG4sIHNoaXJyKTsKICAgIGZsb2F0MyByZWZsZWN0aW9uV29ybGQgPSByZWZsZWN0KC12LCBuKTsKICAgIGZsb2F0IGxvZCA9IGdldE1pcEZyb21Sb3VnaG5lc3Mocm91Z2huZXNzLCBmbG9hdChlbnZtYXBOdW1NaXBtYXBzKSk7CiAgICBmbG9hdDMgcHJlZmlsdGVyZWRDb2xvciA9IHNlbnZtYXBSYWRpYW5jZS5TYW1wbGVMZXZlbChfc2Vudm1hcFJhZGlhbmNlX3NhbXBsZXIsIGVudk1hcEVxdWlyZWN0KHJlZmxlY3Rpb25Xb3JsZCksIGxvZCkueHl6OwogICAgZW52bCAqPSBhbGJlZG87CiAgICBlbnZsICo9ICgxLjBmLnh4eCAtICgoZjAgKiBlbnZCUkRGLngpICsgZW52QlJERi55Lnh4eCkpOwogICAgZW52bCArPSAocHJlZmlsdGVyZWRDb2xvciAqICgoZjAgKiBlbnZCUkRGLngpICsgZW52QlJERi55Lnh4eCkpOwogICAgZW52bCAqPSAoZW52bWFwU3RyZW5ndGggKiBvY2NzcGVjLngpOwogICAgZnJhZ0NvbG9yID0gZmxvYXQ0KGVudmwueCwgZW52bC55LCBlbnZsLnosIGZyYWdDb2xvci53KTsKICAgIGZsb2F0MyBfODE4ID0gZnJhZ0NvbG9yLnh5eiAqIHNzYW90ZXguU2FtcGxlTGV2ZWwoX3NzYW90ZXhfc2FtcGxlciwgdGV4Q29vcmQsIDAuMGYpLng7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzgxOC54LCBfODE4LnksIF84MTgueiwgZnJhZ0NvbG9yLncpOwogICAgaW50IHBhcmFtXzIgPSAwOwogICAgZmxvYXQgcGFyYW1fMyA9IHBvaW50QmlhczsKICAgIGJvb2wgcGFyYW1fNCA9IHRydWU7CiAgICBmbG9hdDMgXzg0MyA9IGZyYWdDb2xvci54eXogKyBzYW1wbGVMaWdodChwLCBuLCB2LCBkb3ROViwgcG9pbnRQb3MsIHBvaW50Q29sLCBhbGJlZG8sIHJvdWdobmVzcywgb2Njc3BlYy55LCBmMCwgcGFyYW1fMiwgcGFyYW1fMywgcGFyYW1fNCk7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzg0My54LCBfODQzLnksIF84NDMueiwgZnJhZ0NvbG9yLncpOwogICAgZnJhZ0NvbG9yLncgPSAxLjBmOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIHZpZXdSYXkgPSBzdGFnZV9pbnB1dC52aWV3UmF5OwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAAQQAAAIIAAAABAAAAQgAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz8voxATgAAAAAEAAAEhAAAMwBAAALAP::BAAAAP::AwAAAAAASAAAAEgAAAAIAAAAUAAAAAAAAAAWAAEWAAAAAAsQAABmcmFnX21haW4A8vEaAAEWAAAAAA8QAABzaElycmFkaWFuY2UA8:LxGgABFgAAAAASEAAAb2N0YWhlZHJvbldyYXAA8R4AARYAAAAAFBAAAHVucGFja0Zsb2F0SW50MTYA8:LxGgABFgAAAAAWEAAAc3VyZmFjZUFsYmVkbwDy8RIAARYAAAAAGBAAAGdldFBvcwDxGgABFgAAAAAaEAAAZW52TWFwRXF1aXJlY3QA8R4AARYAAAAAHRAAAGdldE1pcEZyb21Sb3VnaG5lc3MAFgABFgAAAAAfEAAAc2FtcGxlTGlnaHQAGgABFgAAAAAhEAAAc3BlY3VsYXJCUkRGAPPy8RIAARYAAAAAHRAAAGRfZ2d4APLxFgABFgAAAAAjEAAAZzJfYXBwcm94APLxFgABFgAAAAAWEAAAZl9zY2hsaWNrAPLxFgABFgAAAAAlEAAAYXR0ZW51YXRlAPLxEgABFgAAAAApEAAAUENGQ3ViZQAWAAEWAAAAACsQAABscFRvRGVwdGgA8vEWAAEWAAAAABYQAABzdXJmYWNlRjAA8vEaAAEWAAAAACwQAAB1bnBhY2tGbG9hdDJEM0RTSERSAJwbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgSAAAAAgAAABQAAAAAAAAABYAARYAAAAACxAAAGZyYWdfbWFpbgDy8RoAARYAAAAADxAAAHNoSXJyYWRpYW5jZQDz8vEaAAEWAAAAABIQAABvY3RhaGVkcm9uV3JhcADxHgABFgAAAAAUEAAAdW5wYWNrRmxvYXRJbnQxNgDz8vEaAAEWAAAAABYQAABzdXJmYWNlQWxiZWRvAPLxEgABFgAAAAAYEAAAZ2V0UG9zAPEaAAEWAAAAABoQAABlbnZNYXBFcXVpcmVjdADxHgABFgAAAAAdEAAAZ2V0TWlwRnJvbVJvdWdobmVzcwAWAAEWAAAAAB8QAABzYW1wbGVMaWdodAAaAAEWAAAAACEQAABzcGVjdWxhckJSREYA8:LxEgABFgAAAAAdEAAAZF9nZ3gA8vEWAAEWAAAAACMQAABnMl9hcHByb3gA8vEWAAEWAAAAABYQAABmX3NjaGxpY2sA8vEWAAEWAAAAACUQAABhdHRlbnVhdGUA8vESAAEWAAAAACkQAABQQ0ZDdWJlABYAARYAAAAAKxAAAGxwVG9EZXB0aADy8RYAARYAAAAAFhAAAHN1cmZhY2VGMADy8RoAARYAAAAALBAAAHVucGFja0Zsb2F0Mv::::8aCS:xwAAAAGQCAABpAgAAAQAAABUBAAABAAAAAQAAAAEAAACxAQAAAQAAADkAAAABAAAAzQAAAAEAAACNAgAAAQAAAIUAAAABAAAAEQMAAAEAAAB1AQAAAQAAANECAAABAAAA0QEAAAEAAAA5AgAAAQAAAKkCAAABAAAAZQAAAAEAAAAVAgAAAQAAAO0AAAABAAAApQAAAAEAAAA1AQAAAQAAAPECAAABAAAAkQEAAAEAAAAVAAAAAQAAAF0BAAABAAAA7QEAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAEAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAgAAAAAAAAAAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAABAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAgAAAAAAQAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABgAAAAkAAAAMAAAADwAAABIAAAAVAAAAGAAAABsAAAAeAAAAIQAAACQAAAAnAAAAKgAAAC0AAAAwAAAAMwAAADYAAAA5AAAAPAAAAD8AAAACAEAABQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASACURAAAAAIAAAAABAG1haW4AACIAUREvEAAABwD:::::AAD:::::c2hhZG93TWFwUG9pbnQAACoAUREzEAAABgD:::::::8AAP::X3NoYWRvd01hcFBvaW50X3NhbXBsZXIAHgBRETQQAAAIAAAAAAD:::::::9saWdodFByb2oAAAAeAFERNxAAAAcA:::::wEA:::::2didWZmZXIwAAAAACYAURE6EAAABgD:::::::8BAP::X2didWZmZXIwX3NhbXBsZXIAAAAeAFERNxAAAAcA:::::wIA:::::2didWZmZXIxAAAAACYAURE6EAAABgD:::::::8CAP::X2didWZmZXIxX3NhbXBsZXIAAAAeAFERNxAAAAcA:::::wMA:::::2didWZmZXJEAAAAACYAURE6EAAABgD:::::::8DAP::X2didWZmZXJEX3NhbXBsZXIAAAAWAFEROxAAAAgAAAAQAP:::::::2V5ZQAaAFEROxAAAAgAAAAgAP:::::::2V5ZUxvb2sAHgBRETQQAAAIAAAAMAD:::::::9jYW1lcmFQcm9qAAAeAFERNxAAAAcA:::::wQA:::::3NlbnZtYXBCcmRmABoAURE%EAAACAAAAEAA::::::::c2hpcnIAAAAmAFERQBAAAAgAAACwAP:::::::xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::GgkvbWFwTnVtTWlwbWFwcwAAAAAiAFERNxAAAAcA:::::wUA:::::3NlbnZtYXBSYWRpYW5jZQAuAFEROhAAAAYA::::::::BQD::19zZW52bWFwUmFkaWFuY2Vfc2FtcGxlcgAAAAAiAFERQRAAAAgAAAC0AP:::::::2Vudm1hcFN0cmVuZ3RoAAAaAFERNxAAAAcA:::::wYA:::::3NzYW90ZXgAJgBREToQAAAGAP:::::::wYA::9fc3Nhb3RleF9zYW1wbGVyAAAAAB4AURE7EAAACAAAAMAA::::::::cG9pbnRQb3MAAAAAHgBRETsQAAAIAAAA0AD:::::::9wb2ludENvbAAAAAAeAFERQRAAAAgAAADcAP:::::::3BvaW50QmlhcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::dwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAnBsAACAAAGAAAAAAAAAAAAAAAAACAAkA3CIAAAAAAABcFAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAJwbAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAACcGwAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxkZWZlcnJlZF9saWdodC5mcmFnLmhsc2wA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAP5hVU2jFXdDi:n0cq2w72ptAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcZGVmZXJyZWRfbGlnaHQuZnJhZy5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADJAAAA3AQAAFMBAAAEAgAAAAAAAPgoAACAAAAARSgAAJw3AAAQAQAAUAAAACgAAAA0AwAALAAAADADAAADAAAAWwAAAD0AAAA7AAAAPAAAAFoAAABTAAAAUgAAAB0AAAAGAAAAPwAAAEAAAABBAAAAQgAAAEMAAABEAAAARQAAAEYAAABHAAAASAAAAEkAAABKAAAASwAAAEwAAABNAAAATgAAAE8AAABQAAAAUQAAAB4AAAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAGwAAABwAAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADkAAAA6AAAABwAAAD4AAABUAAAAVQAAAFYAAABYAAAAVwAAAFkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABc
kha_Shaders.line_deferred_fragData0 = "s19130:AAAARFhCQ6%TN8vYo5LFO8YzgQ3eNHABAAAACDgAAAYAAAA4AAAAhAAAALgAAAAEAQAAhAEAAAACAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAABwcAAFRFWENPT1JEAKurq09TR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8AAAA4AAAAAQAAAAAAAAADAAAAAQAAAA8AAABTVl9UYXJnZXQAq6tTSERSeAAAAEAAAAAeAAAAYhAAA3IQEAAAAAAAZQAAA:IgEAAAAAAAZQAAA:IgEAABAAAANgAACPIgEAAAAAAAAkAAAAAAgD8AAIA:AAAAAAAAgD82AAAFciAQAAEAAABGEhAAAAAAADYAAAWCIBAAAQAAAAFAAAAAAIA:PgAAAVNUQVR0AAAABAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCADYAAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAbAAAAiwwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwjEBB1tiZAEAAADPr5aHFmTjQ74DTYdOp4dsAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHV0LmNvbG9yOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcgDALDOAwAIaAAAHsICAMZaAADFqQIA:vQCAMHDAADZKgIAoEozdGF0aWMgZmxvYXQ0IGZyYWdDb2xvclsyXTsKc3RhdGljIGZsb2F0MyBjb2xvcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDMgY29sb3IgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3JbMl0gOiBTVl9UYXJnZXQwOwp9OwoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBmcmFnQ29sb3JbMF0gPSBmbG9hdDQoMS4wZiwgMS4wZiwgMC4wZiwgMS4wZik7CiAgICBmcmFnQ29sb3JbMV0gPSBmbG9hdDQoY29sb3IsIDEuMGYpOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgY29sb3IgPSBzdGFnZV9pbnB1dC5jb2xvcjsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAP7v:u8BAAAAeAIAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxsaW5lX2RlZmVycmVkLmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcbGluZV9kZWZlcnJlZC5mcmFnLmhsc2wAc3RhdGljIGZsb2F0NCBmcmFnQ29sb3JbMl07CnN0YXRpYyBmbG9hdDMgY29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIGNvbG9yIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yWzJdIDogU1ZfVGFyZ2V0MDsKfTsKCnZvaWQgZnJhZ19tYWluKCkKewogICAgZnJhZ0NvbG9yWzBdID0gZmxvYXQ0KDEuMGYsIDEuMGYsIDAuMGYsIDEuMGYpOwogICAgZnJhZ0NvbG9yWzFdID0gZmxvYXQ0KGNvbG9yLCAxLjBmKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIGNvbG9yID0gc3RhZ2VfaW5wG%IwAYAAAABeYGC0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAAQQAAACgAAAAb4jAB06n9VPcgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAJAIAAAAAAABMAAAAAAAAAEwAAAAJEAAALAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEACwAAAABAEwAAAAAABYAUBEBAAUABAAEACwAAAABAEwABAAAABYAUBEBAAUACAAEACwAAAABAEwACAAAADoAPhEIEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAEAAEACwAAAABAEwAEAAAABYAUBECAAUAFAAEACwAAAABAEwAFAAAABYAUBECAAUAGAAEACwAAAABAEwAGAAAABYAUBECAAUAHAAEACwAAAABAEwAHAAAABYAUBECAAUAAAAEACwAAAABAEwAAAAAABYAUBECAAUABAAEACwAAAABAEwABAAAABYAUBECAAUACAAEACwAAAABAEwACAAAABYAUBECAAUADAAEACwAAAABAEwADAAAAAIABgD0AAAAGAAAAAEAAAAQAQNUJslqiAqBQSSvbPdswF0AAPIAAAB4AAAAAAAAAAEAAQB4AAAAAAAAAAgAAABsAAAALAAAABoAAIAsAAAAGgAAAEwAAAAaAACATAAAABoAAABgAAAAGgAAgGAAAAAaAAAAdAAAABoAAIB0AAAAGgAAAAUAGAAFABgABQAYAAUAGAAFABgABQAYAAUAGAAFABgA9gAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAChAAAOwAAAAKAP::BAAAAP::AwAAAAAAKAAAACgAAAAIAAAAMAAAAAAAAAAWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vESAAMSDRUDAAAQAAAAAGNvbG9yACYABRUBAAAAARAAAAAAAAAAAAAADABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vESABYVBBAAACIAAAAQAAAAIAAA8RYAAxINFQMABRAAAAAAZnJhZ0NvbG9yACoABRUBAAAABhAAAAAAAAAAAAAAIABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQcQAAABAAEADgAIEAgQAAAXAAEAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAAEAAAAAAAAAszRFNIRFIAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::xoJL:EIAAAACAIAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAAAEAbWFpbgAAAAAAAAAAAAD:::::GgkvaCS:xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::dwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAeAAAACAAAGAAAAAAAAAAAAAAAAACAAkAKAIAAAAAAACsAAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAHgAAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAAB4AAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxsaW5lX2RlZmVycmVkLmZyYWcuaGxzbAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAM%vlocWZONDvgNNh06nh2xsAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcbGluZV9kZWZlcnJlZC5mcmFnLmhsc2wABAAAAAYAAAABAAAAHgAAAAAAAAARAAAABwAAACIAAAAIAAAACgAAAAYAAAAAAAAABQAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADIAAAAJAEAAFMBAAA4AAAAAAAAAKgCAACAAAAA9wEAANwCAAAwAAAAAAAAACgAAAAgAgAALAAAABQAAAADAAAAFQAAAA0AAAAUAAAADgAAAAkAAAAGAAAACgAAAAgAAAALAAAADAAAAAcAAAAPAAAAEAAAABEAAAATAAAAEg
kha_Shaders.line_vertData0 = "s19712:AmNvbAAAcG9zAAEBJEdsb2JhbHMAAAFWaWV3UHJvamVjdGlvbgAAAAAAQAAAAAQERFhCQzXd05CXw1jZeRT4HSvD5p0BAAAAkDkAAAYAAAA4AAAAAAEAAEwBAACkAQAADAMAAIgDAABSREVGwAAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAJgAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAABAAAAYAAAAEAAAAAAAAAAAAAAAHgAAAAAAAAAQAAAAAIAAACIAAAAAAAAAFZpZXdQcm9qZWN0aW9uAKsDAAMABAAEAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAAcHAAA4AAAAAQAAAAAAAAADAAAAAQAAAAcHAABURVhDT09SRACrq6tPU0dOUAAAAAIAAAAIAAAAOAAAAAAAAAAAAAAAAwAAAAAAAAAHCAAAQQAAAAAAAAABAAAAAwAAAAEAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUmABAABAAAEAWAAAAFkAAARGjiAAAAAAAAQAAABfAAADchAQAAAAAABfAAADchAQAAEAAABlAAADciAQAAAAAABnAAAE8iAQAAEAAAABAAAAaAAAAgIAAAA2AAAFciAQAAAAAABGEhAAAAAAADYAAAVyABAAAAAAAEYSEAABAAAANgAABYIAEAAAAAAAAUAAAAAAgD8RAAAIEgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAgAAABEAAAgiABAAAQAAAEYOEAAAAAAARo4gAAAAAAADAAAAAAAABxIAEAABAAAAGgAQAAEAAAAKABAAAQAAADYAAAWCIBAAAQAAABoAEAABAAAAOAAAB0IgEAABAAAACgAQAAEAAAABQAAAAAAAPxEAAAgSIBAAAQAAAEYOEAAAAAAARo4gAAAAAAAAAAAAEQAACCIgEAABAAAARg4QAAAAAABGjiAAAAAAAAEAAAA%AAABU1RBVHQAAAALAAAAAgAAAAAAAAAEAAAABgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACUAAAAAAAAABozgAAPjguMQEIW2JkAQAAAK%Cg:AKwB1IuMZzPcGd0OgAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzcm9qZWN0aW9uKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgY29sID0gc3RhZ2VfaW5wdXQuY29sOwogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQuY29sb3IgPSBjb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAANwAAAAAAAAABAAAAOAAAAG4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM6AMAtioDAAhoAAAewgIAxloAAP8AAQDBwwAAMfsDAIq3AwBQhQEA02MAAGefAQDBIQMAQbkuaWZvcm0gZmxvYXQ0eDQgVmlld1Byb2plY3Rpb247CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIGNvbG9yOwpzdGF0aWMgZmxvYXQzIGNvbDsKc3RhdGljIGZsb2F0MyBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIGNvbCA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyBwb3MgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0MyBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBjb2xvciA9IGNvbDsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKGZsb2F0NChwb3MsIDEuMGYpLCBWaWV3UHJvamVjdGlvbik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIGNvbCA9IHN0YWdlX2lucHV0LmNvbDsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LmNvbG9yID0gY29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAEsDAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcbGluZS52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXGxpbmUudmVydC5obHNsAHVuaWZvcm0gZmxvYXQ0eDQgVmlld1Byb2plY3Rpb247CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIGNvbG9yOwpzdGF0aWMgZmxvYXQzIGNvbDsKc3RhdGljIGZsb2F0MyBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQzIGNvbCA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyBwb3MgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0MyBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBjb2xvciA9IGNvbDsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKGZsb2F0NChwb3MsIDEuMGYpLCBWaWV3UBviMAGAAAAAE70LtUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAABAAAAAAAAADgAAAAoAAAAG%IwAfFguFncAgAAAQAAADcAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAEIAPBEQAQAAAAEKAAEAjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAGwDAAAAAAAADAEAAAAAAAAMAQAACBAAAFQAAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABUAAAAAQAMAQAAAAAWAFARAQAFAAQABABUAAAAAQAMAQQAAAAWAFARAQAFAAgABABUAAAAAQAMAQgAAAAWAFARAQAFAAwABABUAAAAAQAMARAAAAAWAFARAQAFABAABABUAAAAAQAMARQAAAAWAFARAQAFABQABABUAAAAAQAMARgAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAwABABUAAAAAQAMARAAAAAWAFARAgAFABAABABUAAAAAQAMARQAAAAWAFARAgAFABQABABUAAAAAQAMARgAAAAWAFARAgAFABgABABUAAAAAQAMARwAAAAWAFARAgAFAAAABABUAAAAAQAMAQAAAAAWAFARAgAFAAQABABUAAAAAQAMAQQAAAAWAFARAgAFAAgABABUAAAAAQAMAQgAAAAyAD4RBBAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAsAAAAAEAPAAQAAAAFgBQEQAABQAMAAQA0AAAAAEAkAAUAAAASgBNEYAAAABoAwAAABAAAAcACQUNOQYEAxQNOgYCDBxoAzANOQYDDEAcCAAJEw04AWgDAAkWDTIGAgwcaAkVDTkDMAkTDTgGAwxAHDIAPhEEEAAACABnbF9Qb3NpdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAgABACwAAAAAQA8ABAAAAAWAFARAAAFAAwABADQAAAAAQCQABQAAAACAE4RAgAGAB4AUhEEEAAAAAAAABAA::::::::Z2xfUG9zaXRpb24A9AAAABgAAAABAAAAEAEzxQuNZkmpYtpSfl0IznbtAADyAAAAIAEAAAAAAAABAAEAYAEAAAAAAAAWAAAAFAEAAFQAAAAjAACAVAAAACMAAABoAAAAHwAAgGgAAAAfAAAAfAAAAB8AAIB8AAAAHwAAAJAAAAAfAACAkAAAAB8AAACwAAAAHwAAgLAAAAAfAAAA0AAAAB8AAIDQAAAAHwAAAOwAAAAjAACA7AAAACMAAAAAAQAAHwAAgAABAAAfAAAAHAEAAB8AAIAcAQAAHwAAADwBAAAfAACAPAEAAB8AAABcAQAAIwAAgFwBAAAjAAAABQAYAAUAGAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAPYAAAAQAAAAAAAAAAAQAAAAAAAAFQAAAAwAAAAAAAAAFAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAADhAAAFABAAAKAP::BAAAAP::AwAAAAAAOAAAADgAAAAIAAAAQAAAAAAAAAAWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEiAAMSDRUDAAAQAAAAAGNvbADy8Q0VAwAAEAAADABwb3MA8vEmAAUVAgAAAAEQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAACEAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxKgADEg0VAwAAEAAAAABjb2xvcgANFQMABBAAAAwAZ2xfUG9zaXRpb24A8vEqAAUVAgAAAAUQAAAAAAAAAAAAABwAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAMQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAAHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVCxAAAAEAAQAKABgVDBAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAdmVydF9tYWluAPLxhEUgBgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAAB2ZXJ0X21haW4A8vgkv8RgAAAAQAgAAAQAAAAEAAAA5AAAAAQAAABUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwgAlEQAAAACAAAAAAQBtYWluAAAiAFERDRAAAAgAAAAAAP:::::::1ZpZXdQcm9qZWN0aW9uAAAeAFIRBBAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uxorDwABAEwAAAAgAAAALAAAAEQAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABgAQAAIAAAYAAAAAAAAAAAAAAAAAIACQCQAwAAAAAAAGABAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAYAEAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAGABAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXGxpbmUudmVydC5obHNsAAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQhbYmQBAAAAr4KD8ArAHUi4xnM9wZ3Q6GMAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxsaW5lLnZlcnQuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAL8AAACIAQAASwEAAFAAAAAAAAAAewMAAIAAAADcAgAAAAUAAEAAAAAMAAAAKAAAADgCAAAsAAAAWAAAAAMAAAAYAAAADwAAABcAAAARAAAACgAAAAYAAAALAAAACAAAAAkk
kha_Shaders.painter_colored_fragData0 = "s19012:AAAARFhCQ2XmUV0vgS81Y05%VH2QNMEBAAAAsDcAAAYAAAA4AAAAhAAAALgAAADsAAAALAEAAKgBAABSREVGRAAAAAAAAAAAAAAAAAAAABwAAAAABP::AQEAABwAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTiwAAAABAAAACAAAACAAAAAAAAAAAAAAAAMAAAAAAAAADw8AAFRFWENPT1JEAKurq09TR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAA8AAABTVl9UYXJnZXQAq6tTSERSOAAAAEAAAAAOAAAAYhAAA:IQEAAAAAAAZQAAA:IgEAAAAAAANgAABfIgEAAAAAAARh4QAAAAAAA%AAABU1RBVHQAAAACAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACIAAAAAAAAABczgguMQEIW2JkAQAAAMjLy3aDYz9GgTyh9RUkuugAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuRnJhZ0NvbG9yID0gRnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAABCAAAAhAAAAAEAAABDAAAAAAAAAAAAAAAEAAAALmhsc2wABAAAAAEAAABCAAAAQwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGWgAAn3wAAAhoAAAewgIAfZwCAMHDAABtGAEAztpYyBmbG9hdDQgRnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQ0IGZyYWdtZW50Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IGZyYWdtZW50Q29sb3IgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBGcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgZnJhZ21lbnRDb2xvciA9IHN0YWdlX2lucHV0LmZyYWdtZW50Q29sb3I7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuRnJhZ0NvbG9yID0gRnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:u:%7wEAAABaAgAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC5mcmFnLmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC5mcmFnLmhsc2wAc3RhdGljIGZsb2F0NCBGcmFnQ29sb3I7CnN0YXRpYyBmbG9hdDQgZnJhZ21lbnRDb2xvcjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgZnJhZ21lbnRDb2xvciA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIEZyYWdDb2xvciA9IGZyYWdtZW50Q29sb3I7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBmcmFnbWVudENvbG9yID0gc3RhZ2VfaW5wdXQuZnJhZ21lbnRDb2xvcjsKICAgIGZyYWdfbWFpbigpOwogICAb4jABgAAAAA7QF7VIh9kBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAABAAAAAgAAAAAAAABDAAAAKAAAABviMAENLw8o1QEAAAEAAABCAAAAQwwREAEAAAABCgABAI0C8FUKAAEAjQLwVU1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQAAADYAPREBaGxzbEZsYWdzADB4MQBobHNsVGFyZ2V0AHBzXzRfMABobHNsRW50cnkAbWFpbgAAAAAAKgAQEQAAAADcAQAAAAAAABgAAAAAAAAAGAAAAAcQAAAgAAAAAQCgbWFpbgAyAD4RAhAAAAkAc3RhZ2VfaW5wdXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQEABQAAAAQAIAAAAAEAGAAAAAAAFgBQEQEABQAEAAQAIAAAAAEAGAAEAAAAFgBQEQEABQAIAAQAIAAAAAEAGAAIAAAAFgBQEQEABQAMAAQAIAAAAAEAGAAMAAAAOgA%EQYQAACIADxtYWluIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQIABQAAAAQAIAAAAAEAGAAAAAAAFgBQEQIABQAEAAQAIAAAAAEAGAAEAAAAFgBQEQIABQAIAAQAIAAAAAEAGAAIAAAAFgBQEQIABQAMAAQAIAAAAAEAGAAMAAAAAgAGAPQAAAAYAAAAAQAAABAB2ftUuFdpJwzko9o7PFlD6gAA8gAAAEgAAAAAAAAAAQABADgAAAAAAAAABAAAADwAAAAgAAAAGQAAgCAAAAAZAAAANAAAABkAAIA0AAAAGQAAAAUAGAAFABgyjEBOAAAAAAQAAAIEAAAyAAAAAoA::8EAAAA::8DAAAAAAAgAAAAIAAAAAgAAAAoAAAAAAAAABYAGxVAAAAABAAAABAAZmxvYXQ0APPy8RoAAxINFQMAABAAAAAAZnJhZ21lbnRDb2xvcgAmAAUVAQAAAAEQAAAAAAAAAAAAABAAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAACEAAAFgADEg0VAwAAEAAAAABGcmFnQ29sb3IAKgAFFQEAAAAEEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBRAAAAEAAQAOAAgQBhAAABcAAQADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAAQAAAAAAAACwD::wQAAAD::whEUggkv8QgAAAAIAggAlEQAAAACAAAAAAQBtYWluAAAAAAAAAAAAAP::::8aCS:xxorDwABAEwAAAAgAAAALAAAAFAAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAA4AAAAIAAAYAAAAAAAAAAAAAAAAAIACQDgAQAAAAAAAHwAAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAOAAAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAADgAAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC5mcmFnLmhsc2wAAAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQhbYmQBAAAAyMvLdoNjP0aBPKH1FSS66G4AAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYWludGVyLWNvbG9yZWQuZnJhZy5obHNsAAQAAAAGAAAAAQAAADoAAAAAAAAAEQAAAAcAAAAKAAAABgAAAAAAAAAFAAAAIgAAAAgAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMoAAAAAAQAAVwEAADgAAAAAAAAAigIAAIAAAADVAQAAZAIAACgAAAAAAAAAKAAAACACAAAsAAAAFAAAAAMAAAAVAAAADQAAABQAAAAOAAAACQAAAAYAAAAKAAAACAAAAAsAAAAMAAAABw
kha_Shaders.painter_colored_vertData0 = "s22476:AnZlcnRleENvbG9yAAB2ZXJ0ZXhQb3NpdGlvbgABASRHbG9iYWxzAAABcHJvamVjdGlvbk1hdHJpeAAAAAAAQAAAAAQERFhCQ4WyzPn3NVI3dFOSM:CRJXUBAAAAlEEAAAYAAAA4AAAABAEAAFABAACoAQAAEAMAAIwDAABSREVGxAAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAJwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAABAAAAYAAAAEAAAAAAAAAAAAAAAHgAAAAAAAAAQAAAAAIAAACMAAAAAAAAAHByb2plY3Rpb25NYXRyaXgAq6urAwADAAQABAAAAAAAAAAAAE1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQBJU0dORAAAAAIAAAAIAAAAOAAAAAAAAAAAAAAAAwAAAAAAAAAPDwAAOAAAAAEAAAAAAAAAAwAAAAEAAAAHBwAAVEVYQ09PUkQAq6urT1NHTlAAAAACAAAACAAAADgAAAAAAAAAAAAAAAMAAAAAAAAADwAAAEEAAAAAAAAAAQAAAAMAAAABAAAADwAAAFRFWENPT1JEAFNWX1Bvc2l0aW9uAKurq1NIRFJgAQAAQAABAFgAAABZAAAERo4gAAAAAAAEAAAAXwAAA:IQEAAAAAAAXwAAA3IQEAABAAAAZQAAA:IgEAAAAAAAZwAABPIgEAABAAAAAQAAAGgAAAICAAAANgAABfIgEAAAAAAARh4QAAAAAAA2AAAFcgAQAAAAAABGEhAAAQAAADYAAAWCABAAAAAAAAFAAAAAAIA:EQAACBIAEAABAAAARg4QAAAAAABGjiAAAAAAAAIAAAARAAAIIgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAwAAAAAAAAcSABAAAQAAABoAEAABAAAACgAQAAEAAAA2AAAFgiAQAAEAAAAaABAAAQAAADgAAAdCIBAAAQAAAAoAEAABAAAAAUAAAAAAAD8RAAAIEiAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAAAAABEAAAgiIBAAAQAAAEYOEAAAAAAARo4gAAAAAAABAAAAPgAAAVNUQVR0AAAACwAAAAIAAAAAAAAABAAAAAYAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAD4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAfAAAAmAAAAAAAAAAbwwwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwjEBCVtiZAEAAAAjtrnJy43tQqg2dEwQm6VVAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwhaW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IG11bChmbG9hdDQodmVydGV4UG9zaXRpb24sIDEuMGYpLCBwcm9qZWN0aW9uTWF0cml4KTsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdmVydGV4UG9zaXRpb24gPSBzdGFnZV9pbnB1dC52ZXJ0ZXhQb3NpdGlvbjsKICAgIHZlcnRleENvbG9yID0gc3RhZ2VfaW5wdXQudmVydGV4Q29sb3I7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHN0YWdlX291dHB1dC5mcmFnbWVudENvbG9yID0gZnJhZ21lbnRDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAABAAAAxloAAEzoAwCxNQAACGgAACb3AgCQMQMAwcMAADH7AwCo0QAAUIUBANNjAABnnwEAwSEDAEG5Agbmlmb3JtIGZsb2F0NHg0IHByb2plY3Rpb25NYXRyaXg7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIHZlcnRleFBvc2l0aW9uOwpzdGF0aWMgZmxvYXQ0IGZyYWdtZW50Q29sb3I7CnN0YXRpYyBmbG9hdDQgdmVydGV4Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHZlcnRleENvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZlcnRleFBvc2l0aW9uIDogVEVYQ09PUkQxOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ21lbnRDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IG11bChmbG9hdDQodmVydGV4UG9zaXRpb24sIDEuMGYpLCBwcm9qZWN0aW9uTWF0cml4KTsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdmVydGV4UG9zaXRpb24gPSBzdGFnZV9pbnB1dC52ZXJ0ZXhQb3NpdGlvbjsKICAgIHZlcnRleENvbG9yID0gc3RhZ2VfaW5wdXQudmVydGV4Q29sb3I7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHN0YWdlX291dHB1dC5mcmFnbWVudENvbG9yID0gZnJhZ21lbnRDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:u:%7wEAAADsAwAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC52ZXJ0Lmhsc2wAdW5pZm9ybSBmbG9hdDR4NCBwcm9qZWN0aW9uTWF0cml4OwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MyB2ZXJ0ZXhQb3NpdGlvbjsKc3RhdGljIGZsb2F0NCBmcmFnbWVudENvbG9yOwpzdGF0aWMgZmxvYXQ0IHZlcnRleENvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCB2ZXJ0ZXhDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyB2ZXJ0ZXhQb3NpdGlvbiA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdtZW50Q29sb3IgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQb4jABgAAAABkoJLVIh9kBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAABAAAAAgAAAAAAAABDAAAAKAAAABviMAEy66M3ZwMAAAEAAABCAAAAQwwREAEAAAABCgABAI0C8FUKAAEAjQLwVU1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQAAADYAPREBaGxzbEZsYWdzADB4MQBobHNsVGFyZ2V0AHZzXzRfMABobHNsRW50cnkAbWFpbgAAAAAAKgAQEQAAAACcAwAAAAAAAAwBAAAAAAAADAEAAAgQAABUAAAAAQCgbWFpbgAyAD4RAxAAAAkAc3RhZ2VfaW5wdXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQEABQAAAAQAVAAAAAEADAEAAAAAFgBQEQEABQAEAAQAVAAAAAEADAEEAAAAFgBQEQEABQAIAAQAVAAAAAEADAEIAAAAFgBQEQEABQAMAAQAVAAAAAEADAEMAAAAFgBQEQEABQAQAAQAVAAAAAEADAEQAAAAFgBQEQEABQAUAAQAVAAAAAEADAEUAAAAFgBQEQEABQAYAAQAVAAAAAEADAEYAAAAOgA%EQcQAACIADxtYWluIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQIABQAQAAQAVAAAAAEADAEQAAAAFgBQEQIABQAUAAQAVAAAAAEADAEUAAAAFgBQEQIABQAYAAQAVAAAAAEADAEYAAAAFgBQEQIABQAcAAQAVAAAAAEADAEcAAAAFgBQEQIABQAAAAQAVAAAAAEADAEAAAAAFgBQEQIABQAEAAQAVAAAAAEADAEEAAAAFgBQEQIABQAIAAQAVAAAAAEADAEIAAAAFgBQEQIABQAMAAQAVAAAAAEADAEMAAAAMgA%EQAQAAAIAGdsX1Bvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEALAAAAABADwAEAAAABYAUBEAAAUADAAEANAAAAABAJAAFAAAAEoATRGAAAAAmAMAAAAQAAAHAAkFDUYGAgMUDToGBAwcaAMwDUYGBQxAHAgACRMNRQFoAwAJFg0yBgQMHGgJFQ05AzAJEw1FBgUMQBwyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQAsAAAAAEAPAAQAAAAFgBQEQAABQAMAAQA0AAAAAEAkAAUAAAAAgBOEQIABgAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uAPQAAAAYAAAAAQAAABABv:s6Oq5Biemvfl8jTdC7swAA8gAAACABAAAAAAAAAQABAGABAAAAAAAAFgAAABQBAABUAAAAIwAAgFQAAAAjAAAAaAAAAB8AAIBoAAAAHwAAAHwAAAAfAACAfAAAAB8AAACQAAAAHwAAgJAAAAAfAAAAsAAAAB8AAICwAAAAHwAAANAAAAAfAACA0AAAAB8AAADsAAAAIwAAgOwAAAAjAAAAAAEAAB8AAIAAAQAAHwAAABwBAAAfAACAHAEAAB8AAAA8AQAAHwAAgDwBAAAfAAAAXAEAACMAAIBcAQAAIwAAAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABUAAAAMAAAAAAAAABQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAA4QAABsAQAACgD::wQAAAD::wMAAAAAADgAAAA4AAAACAAAAEAAAAAAAAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgAbFUAAAAADAAAADABmbG9hdDMA8:LxNgADEg0VAwAAEAAAAAB2ZXJ0ZXhDb2xvcgDy8Q0VAwABEAAAEAB2ZXJ0ZXhQb3NpdGlvbgDz8vEmAAUVAgAAAAIQAAAAAAAAAAAAABwAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAADEAAAMgADEg0VAwAAEAAAAABmcmFnbWVudENvbG9yAA0VAwAAEAAAEABnbF9Qb3NpdGlvbgDy8SoABRUCAAAABRAAAAAAAAAAAAAAIABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQYQAAABAAEADgAIEAcQAAAXAAEABBAAAAoAGBUDAAAAAQABAA4ACBAJEAAAFwAAAAMAAAAeABwVQAAAAAQAAAAEAAAAEAAAAABAAGZsb2F0NHg0AAoAGBULEAAAAQABAAoAGBUMEAAAAQAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlwvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAdmVydF9tYWluAPLxhEUgBgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAAB2ZXJ0X21haW4A8vgkv8RgAAAAQAgAAFQAAAAEAAAABAAAAAQAAAD0AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwgAlEQAAAACAAAAAAQBtYWluAAAmAFERDRAAAAgAAAAAAP:::::::3Byb2plY3Rpb25NYXRyaXgAAAAAHgBSEQAQAAAAAAAAEAD:::::::9nbF9Qb3NpdGlvbgxorDwABAEwAAAAgAAAALAAAAFAAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABgAQAAIAAAYAAAAAAAAAAAAAAAAAIACQDAAwAAAAAAAGABAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAYAEAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAGABAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItY29sb3JlZC52ZXJ0Lmhsc2wAAAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQlbYmQBAAAAI7a5ycuN7UKoNnRMEJulVW4AAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYWludGVyLWNvbG9yZWQudmVydC5obHNsAAQAAAAGAAAAAQAAADoAAAAAAAAAEQAAAAcAAAAKAAAABgAAAAAAAAAFAAAAIgAAAAgAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMoAAACkAQAAVwEAAFAAAAAAAAAAHAQAAIAAAABnAwAAMAUAAEAAAAAMAAAAKAAAADgCAAAsAAAAXAAAAAMAAAAZAAAADwAAABgAAAASAAAACgAAAAYAAAARAAAACwAAAAgAAAAJAAAADAAAAA0AAAAOAAAABwAAABAAAAATAAAAFAAAABUAAAAXAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABo
kha_Shaders.painter_image_fragData0 = "s19368:AAJfdGV4X3NhbXBsZXIAAHRleAAAAERYQkMdQFxGTKOeyIEIwS9FvJvrAQAAAKg4AAAGAAAAOAAAANgAAAAkAQAAWAEAACQCAACgAgAAUkRFRpgAAAAAAAAAAAAAAAIAAAAcAAAAAAT::wEBAABtAAAAXAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABpAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAF90ZXhfc2FtcGxlcgB0ZXgATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAKurq0lTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8PAAA4AAAAAQAAAAAAAAADAAAAAQAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUsQAAABAAAAAMQAAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAAD8hAQAAAAAABiEAADMhAQAAEAAABlAAAD8iAQAAAAAABoAAACAQAAAEUAAAnyABAAAAAAAEYQEAABAAAARn4QAAAAAAAAYBAAAAAAADgAAAfyABAAAAAAAEYOEAAAAAAARh4QAAAAAAA4AAAHciAQAAAAAABGAhAAAAAAAPYfEAAAAAAANgAABYIgEAAAAAAAOgAQAAAAAAA%AAABU1RBVHQAAAAFAAAAAQAAAAAAAAADAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACQAAAAAAAAABkzgAAPzguMQEJW2JkAQAAANOx7qpJhp5GuKSU3%UChmsAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzbXBsZXIsIHRleENvb3JkKSAqIGNvbG9yOwogICAgZmxvYXQzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IGZsb2F0NChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGNvbG9yID0gc3RhZ2VfaW5wdXQuY29sb3I7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuRnJhZ0NvbG9yID0gRnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAQAAAEEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGWgAAdYMBAKO3AgAIaAAAJvcCAH2cAgDBwwAAMfsDAKjRAABQhQEA02MAAOoUAwDBIQMAQbkCALgcAwCVMQMAfdoleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgRnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0NCB0ZXhjb2xvciA9IHRleC5TYW1wbGUoX3RleF9zYW1wbGVyLCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGZsb2F0MyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSBmbG9hdDQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHRleENvb3JkID0gc3RhZ2VfaW5wdXQudGV4Q29vcmQ7CiAgICBjb2xvciA9IHN0YWdlX2lucHV0LmNvbG9yOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LkZyYWdDb2xvciA9IEZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAIMDAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci1pbWFnZS5mcmFnLmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItaW1hZ2UuZnJhZy5obHNsAFRleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgRnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0NCB0ZXhjb2xvciA9IHRleC5TYW1wbGUoX3RleF9zYRviMAGAAAAAx3wvtUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEEAAAAoAAAAG%IwAdSUo8cCAwAAAQAAAEAAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAEIAPBEQAQAAAAEKAAEAjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAANgCAAAAAAAAdAAAAAAAAAB0AAAACBAAAFAAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABQAAAAAQB0AAAAAAAWAFARAQAFAAQABABQAAAAAQB0AAQAAAAWAFARAQAFAAgABABQAAAAAQB0AAgAAAAWAFARAQAFAAwABABQAAAAAQB0AAwAAAAWAFARAQAFABAABABQAAAAAQB0ABAAAAAWAFARAQAFABQABABQAAAAAQB0ABQAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAAABABQAAAAAQB0AAAAAAAWAFARAgAFAAQABABQAAAAAQB0AAQAAAAWAFARAgAFAAgABABQAAAAAQB0AAgAAAAWAFARAgAFAAwABABQAAAAAQB0AAwAAAA2AE0RgAAAANQCAAAAEAAABwAJBQ1BCyANKAYCDBxACAAJFw04AVALMA1AAyQJEg0nBgIMHBwAAC4APhEAEAAACAB0ZXhjb2xvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJAAAAABADAAAAAAABYAUBEAAAUABAAEAJAAAAABADAABAAAABYAUBEAAAUACAAEAJAAAAABADAACAAAABYAUBEAAAUADAAEAJAAAAABADAADAAAAAIAThECAAYA9AAAABgAAAABAAAAEAFtf4l0lfswyEToZFt5QSBeAADyAAAAkAAAAAAAAAABAAEAxAAAAAAAAAAKAAAAhAAAAFAAAAAfAACAUAAAAB8AAAB0AAAAHwAAgHQAAAAfAAAAkAAAAB8AAICQAAAAHwAAAKwAAAAiAACArAAAACIAAADAAAAAIgAAgMAAAAAiAAAABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABgABQAYAPYAAAAQAAAAAAAAAAAQAAAAAAAAFAAAAAwAAAAAAAAAFAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAABEQAABYAQAACgD::wQAAAD::wMAAAAAAEQAAABEAAAACAAAAEwAAAAAAAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgAbFUAAAAACAAAACABmbG9hdDIA8:LxJgADEg0VAwAAEAAAAABjb2xvcgANFQMAARAAABAAdGV4Q29vcmQA8SYABRUCAAAAAhAAAAAAAAAAAAAAGABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAMQAAAWAAMSDRUDAAAQAAAAAEZyYWdDb2xvcgAqAAUVAQAAAAUQAAAAAAAAAAAAABAAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAQQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAADgAXFQAQAAADAvBDAADy8QoAGBULEAAAAQABAAoAGBUMEAAAAQAAAg4AFxUAAAAACgLwQwAA8vEKABgVDhAAAAEAAQAKABgVDxAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKUsyjEBOAAAAAAQAAABEAAAGAAAAAsA::8EAAAA::8DAAAAAAAEAAAABAAAAAgAAAAMAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDyzRFNIRFIAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxxogAAAAAEAbWFpbgAAFgBREQ0QAAAHAP::::8AAP::::90ZXgAIgBRERAQAAAGAP:::::::wAA::9fdGV4X3NhbXBsaCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAxAAAACAAAGAAAAAAAAAAAAAAAAACAAkA3AIAAAAAAADQAAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAMQAAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAADEAAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYWludGVyLWltYWdlLmZyYWcuaGxzbAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEJW2JkAQAAANOx7qpJhp5GuKSU3%UChmtsAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFpbnRlci1pbWFnZS5mcmFnLmhsc2wABAAAAAYAAAABAAAAHgAAAAAAAAARAAAABwAAACIAAAAIAAAACgAAAAYAAAAAAAAABQAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADIAAAAkAEAAFMBAABQAAAAAAAAALMDAACAAAAAAgMAALwDAABMAAAADAAAACgAAAA4AgAALAAAAFAAAAADAAAAFwAAAA4AAAAWAAAAEAAAAAoAAAAGAAAACwAAAAgAAAAJAAAADAAAAA0AAAAHAAAADwAAABEAAAASAAAAEw
kha_Shaders.painter_image_vertData0 = "s22612:A3ZlcnRleENvbG9yAAB2ZXJ0ZXhQb3NpdGlvbgABdmVydGV4VVYAAgEkR2xvYmFscwAAAXByb2plY3Rpb25NYXRyaXgAAAAAAEAAAAAEBERYQkOGTKC3JO2ufZDllZG7Jj91AQAAAPBBAAAGAAAAOAAAAAQBAABoAQAA2AEAAGwDAADoAwAAUkRFRsQAAAABAAAASAAAAAEAAAAcAAAAAAT%:wEBAACcAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkR2xvYmFscwCrq6s8AAAAAQAAAGAAAABAAAAAAAAAAAAAAAB4AAAAAAAAAEAAAAACAAAAjAAAAAAAAABwcm9qZWN0aW9uTWF0cml4AKurqwMAAwAEAAQAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTlwAAAADAAAACAAAAFAAAAAAAAAAAAAAAAMAAAAAAAAADw8AAFAAAAABAAAAAAAAAAMAAAABAAAABwcAAFAAAAACAAAAAAAAAAMAAAACAAAAAwMAAFRFWENPT1JEAKurq09TR05oAAAAAwAAAAgAAABQAAAAAAAAAAAAAAADAAAAAAAAAA8AAABQAAAAAQAAAAAAAAADAAAAAQAAAAMMAABZAAAAAAAAAAEAAAADAAAAAgAAAA8AAABURVhDT09SRABTVl9Qb3NpdGlvbgCrq6tTSERSjAEAAEAAAQBjAAAAWQAABEaOIAAAAAAABAAAAF8AAAPyEBAAAAAAAF8AAANyEBAAAQAAAF8AAAMyEBAAAgAAAGUAAAPyIBAAAAAAAGUAAAMyIBAAAQAAAGcAAATyIBAAAgAAAAEAAABoAAACAgAAADYAAAXyIBAAAAAAAEYeEAAAAAAANgAABTIgEAABAAAARhAQAAIAAAA2AAAFcgAQAAAAAABGEhAAAQAAADYAAAWCABAAAAAAAAFAAAAAAIA:EQAACBIAEAABAAAARg4QAAAAAABGjiAAAAAAAAIAAAARAAAIIgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAwAAAAAAAAcSABAAAQAAABoAEAABAAAACgAQAAEAAAA2AAAFgiAQAAIAAAAaABAAAQAAADgAAAdCIBAAAgAAAAoAEAABAAAAAUAAAAAAAD8RAAAIEiAQAAIAAABGDhAAAAAAAEaOIAAAAAAAAAAAABEAAAgiIBAAAgAAAEYOEAAAAAAARo4gAAAAAAABAAAAPgAAAVNUQVR0AAAADAAAAAIAAAAAAAAABgAAAAYAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAD4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAfAAAAnAAAAAAAAAAcwgwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCVtiZAEAAAARsmt%oToHRrSLYlW2jEtJAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwgOiBURVhDT09SRDA7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBtdWwoZmxvYXQ0KHZlcnRleFBvc2l0aW9uLCAxLjBmKSwgcHJvamVjdGlvbk1hdHJpeCk7CiAgICB0ZXhDb29yZCA9IHZlcnRleFVWOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdmVydGV4UG9zaXRpb24gPSBzdGFnZV9pbnB1dC52ZXJ0ZXhQb3NpdGlvbjsKICAgIHZlcnRleFVWID0gc3RhZ2VfaW5wdXQudmVydGV4VVY7CiAgICB2ZXJ0ZXhDb2xvciA9IHN0YWdlX2lucHV0LnZlcnRleENvbG9yOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PxloAAEzoAwB1gwEA8gwDAAhoAAAcEwIACvICAMHDAADZKgIAJmsAAFCFAQAmFwMAZ58BAFocAACxxbmlmb3JtIGZsb2F0NHg0IHByb2plY3Rpb25NYXRyaXg7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIHZlcnRleFBvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHZlcnRleFVWOwpzdGF0aWMgZmxvYXQ0IGNvbG9yOwpzdGF0aWMgZmxvYXQ0IHZlcnRleENvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCB2ZXJ0ZXhDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyB2ZXJ0ZXhQb3NpdGlvbiA6IFRFWENPT1JEMTsKICAgIGZsb2F0MiB2ZXJ0ZXhVViA6IFRFWENPT1JEMjsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGNvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKGZsb2F0NCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wZiksIHByb2plY3Rpb25NYXRyaXgpOwogICAgdGV4Q29vcmQgPSB2ZXJ0ZXhVVjsKICAgIGNvbG9yID0gdmVydGV4Q29sb3I7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHZlcnRleFBvc2l0aW9uID0gc3RhZ2VfaW5wdXQudmVydGV4UG9zaXRpb247CiAgICB2ZXJ0ZXhVViA9IHN0YWdlX2lucHV0LnZlcnRleFVWOwogICAgdmVydGV4Q29sb3IgPSBzdGFnZV9pbnB1dC52ZXJ0ZXhDb2xvcjsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQuY29sb3IgPSBjb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7CnvAQAAAJYEAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci1pbWFnZS52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItaW1hZ2UudmVydC5obHNsAHVuaWZvcm0gZmxvYXQ0eDQgcHJvamVjdGlvbk1hdHJpeDsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDMgdmVydGV4UG9zaXRpb247CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgdmVydGV4VVY7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgdmVydGV4Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHZlcnRleENvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZlcnRleFBvc2l0aW9uIDogVEVYQ09PUkQxOwogICAgZmxvYXQyIHZlcnRleFVWIDogVEVYQ09PUkQyOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgY29sbxviMAGAAAAAseI6tUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEEAAAAoAAAAG%IwAfw3gpjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAAAEAAAAAAAAIAEAAAAAAAAgAQAACRAAAGwAAAABAKBtYWluADIAPhEEEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABsAAAAAQAgAQAAAAAWAFARAQAFAAQABABsAAAAAQAgAQQAAAAWAFARAQAFAAgABABsAAAAAQAgAQgAAAAWAFARAQAFAAwABABsAAAAAQAgAQwAAAAWAFARAQAFABAABABsAAAAAQAgARAAAAAWAFARAQAFABQABABsAAAAAQAgARQAAAAWAFARAQAFABgABABsAAAAAQAgARgAAAAWAFARAQAFABwABABsAAAAAQAgASAAAAAWAFARAQAFACAABABsAAAAAQAgASQAAAA6AD4RCBAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFABgABABsAAAAAQAgASAAAAAWAFARAgAFABwABABsAAAAAQAgASQAAAAWAFARAgAFACAABABsAAAAAQAgASgAAAAWAFARAgAFACQABABsAAAAAQAgASwAAAAWAFARAgAFABAABABsAAAAAQAgARAAAAAWAFARAgAFABQABABsAAAAAQAgARQAAAAWAFARAgAFAAAABABsAAAAAQAgAQAAAAAWAFARAgAFAAQABABsAAAAAQAgAQQAAAAWAFARAgAFAAgABABsAAAAAQAgAQgAAAAWAFARAgAFAAwABABsAAAAAQAgAQwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAATgBNEYAAAAD8AwAAABAAAAcACQUNRgYCAygNOgYGDBxoAzANRgYHDEAcCAAJEw1FAYCUAwAJFg0yBgYMHGgJFQ05AzAJEw1FBgcMQBwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAAAgBOEQIABgAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uAPQAAAAYAAAAAQAAABABeu2:hg:6woDvH3bo0Bo%UQAA8gAAADgBAAAAAAAAAQABAIwBAAAAAAAAGAAAACwBAABsAAAAKgAAgGwAAAAqAAAAgAAAACoAAICAAAAAKgAAAJQAAAAlAACAlAAAACUAAACoAAAAJQAAgKgAAAAlAAAAvAAAACUAAIC8AAAAJQAAANwAAAAlAACA3AAAACUAAAD8AAAAJQAAgPwAAAAlAAAAGAEAACoAAIAYAQAAKgAAACwBAAAlAACALAEAACUAAABIAQAAJQAAgEgBAAAlAAAAaAEAACUAAIBoAQAAJQAAAIgBAAAqAACAiAEAACoAAAAFABgABQAYAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABkAAAAMAAAAAAAAABQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAADxAAAKQBAAAKAP::BAAAAP::AwAAAAAAPAAAADwAAAAIAAAARAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vFKAAMSDRUDAAAQAAAAAHZlcnRleENvbG9yAPLxDRUDAAEQAAAQAHZlcnRleFBvc2l0aW9uAPPy8Q0VAwACEAAAHAB2ZXJ0ZXhVVgDxJgAFFQMAAAADEAAAAAAAAAAAAAAkAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAABBAAAD4AAxINFQMAABAAAAAAY29sb3IADRUDAAIQAAAQAHRleENvb3JkAPENFQMAABAAABgAZ2xfUG9zaXRpb24A8vEqAAUVAwAAAAYQAAAAAAAAAAAAACgAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUHEAAAAQABAA4ACBAIEAAAFwABAAUQAAAKABgVAwAAAAEAAQAOAAgQChAAABcAAAADAAAAHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVDBAAAAEAAQAKABgcHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQuY29sb3IgPSBjb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAAQAAAAAAAAAABAAAAQQAAAIAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAsQAAB2ZXJ0X21haW4A8vwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAACxAAAHZlcnRfbWFpbgDyaCS:xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASACURAAAAAIAAAAABAG1haW4AACYAUREOEAAACAAAAAAA::::::::cHJvamVjdGlvbk1hdHJpeAAAAAAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9ugkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAATAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAAIwBAAAgAABgAAAAAAAAAAAAAAAAAgAJACQEAAAAAAAAeAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAACMAQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAjAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci1pbWFnZS52ZXJ0Lmhsc2wAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCVtiZAEAAAARsmt%oToHRrSLYlW2jEtJbAAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItaW1hZ2UudmVydC5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAyAAAANwBAABTAQAAUAAAAAAAAADGBAAAgAAAABUEAACsBQAARAAAAAwAAAAoAAAAOAIAACwAAABcAAAAAwAAABoAAAAQAAAAGQAAABMAAAALAAAABgAAABIAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAABwAAABEAAAAUAAAAFQAAABYAAAAYAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw
kha_Shaders.painter_text_fragData0 = "s19331:AAJfdGV4X3NhbXBsZXIAAHRleAAAAERYQkMqoLu9ylSjewa6JP:la7SoAQAAAIw4AAAGAAAAOAAAANgAAAAkAQAAWAEAAAgCAACEAgAAUkRFRpgAAAAAAAAAAAAAAAIAAAAcAAAAAAT::wEBAABtAAAAXAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABpAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAF90ZXhfc2FtcGxlcgB0ZXgATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAKurq0lTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8PAAA4AAAAAQAAAAAAAAADAAAAAQAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUqgAAABAAAAAKgAAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAAD8hAQAAAAAABiEAADMhAQAAEAAABlAAAD8iAQAAAAAABoAAACAQAAAEUAAAnyABAAAAAAAEYQEAABAAAARn4QAAAAAAAAYBAAAAAAADgAAAeCIBAAAAAAAAoAEAAAAAAAOhAQAAAAAAA2AAAFciAQAAAAAABGEhAAAAAAAD4AAAFTVEFUdAAAAAQAAAABAAAAAAAAAAMAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwwAAAAAAAAA:::::wlC4xAQlbYmQBAAAA4RwjOYj46U6g2kLNRy2O0QAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcnbWVudENvbG9yLnh5eiwgdGV4LlNhbXBsZShfdGV4X3NhbXBsZXIsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIGZyYWdtZW50Q29sb3IgPSBzdGFnZV9pbnB1dC5mcmFnbWVudENvbG9yOwogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5GcmFnQ29sb3IgPSBGcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAAAAAAD8AAAAAAAAAfgAAAAAAAAABAAAAQAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMZaAAB1gwEA0gwAAAhoAAAm9wIAfZwCAMHDAAAx%wMAqNEAAFCFAQDTYwAA6hQDAMEhAwBBuQIAuBwDAJUxAwB92gdHVyZTJEPGZsb2F0ND4gdGV4IDogcmVnaXN0ZXIodDApOwpTYW1wbGVyU3RhdGUgX3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwoKc3RhdGljIGZsb2F0NCBGcmFnQ29sb3I7CnN0YXRpYyBmbG9hdDQgZnJhZ21lbnRDb2xvcjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgZnJhZ21lbnRDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIEZyYWdDb2xvciA9IGZsb2F0NChmcmFnbWVudENvbG9yLnh5eiwgdGV4LlNhbXBsZShfdGV4X3NhbXBsZXIsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIGZyYWdtZW50Q29sb3IgPSBzdGFnZV9pbnB1dC5mcmFnbWVudENvbG9yOwogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5GcmFnQ29sb3IgPSBGcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAARwMAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYWludGVyLXRleHQuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYWludGVyLXRleHQuZnJhZy5obHNsAFRleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDQgRnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQ0IGZyYWdtZW50Q29sb3I7CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IGZyYWdtZW50Q29sb3IgOiBURVhDT09SRDA7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBGcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmbG9hdDQoZnJhG%IwAYAAAACq8Ea1SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAAQAAAACgAAAAb4jABQgaXG8gCAAABAAAAPwgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAPAIAAAAAAABYAAAAAAAAAFgAAAAIEAAAUAAAAAEAoG1haW4AMgA%EQMQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAFAAAAABAFgAAAAAABYAUBEBAAUABAAEAFAAAAABAFgABAAAABYAUBEBAAUACAAEAFAAAAABAFgACAAAABYAUBEBAAUADAAEAFAAAAABAFgADAAAABYAUBEBAAUAEAAEAFAAAAABAFgAEAAAABYAUBEBAAUAFAAEAFAAAAABAFgAFAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAAAAEAFAAAAABAFgAAAAAABYAUBECAAUABAAEAFAAAAABAFgABAAAABYAUBECAAUACAAEAFAAAAABAFgACAAAABYAUBECAAUADAAEAFAAAAABAFgADAAAACoATRGAAAAAOAIAAAAQAAAHAAkFDWILIARACAAJKw1MAVADAA1gDBwkAAAAAgBOEQIABgD0AAAAGAAAAAEAAAAQAW65CWhwr43MroyU7bD4S6kAAPIAAAB4AAAAAAAAAAEAAQCoAAAAAAAAAAgAAABsAAAAUAAAABwAAIBQAAAAHAAAAHQAAAAcAACAdAAAABwAAACQAAAAHwAAgJAAAAAfAAAApAAAAB8AAICkAAAAHwAAAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAGAAFABgA9gAAABAAAAAAAAAAABAAAAAAAAAUAAAADAAAAAAAAAAUAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAERAAAGABAAAKAP::BAAAAP::AwAAAAAARAAAAEQAAAAIAAAATAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEuAAMSDRUDAAAQAAAAAGZyYWdtZW50Q29sb3IADRUDAAEQAAAQAHRleENvb3JkAPEmAAUVAgAAAAIQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAADEAAAFgADEg0VAwAAEAAAAABGcmFnQ29sb3IAKgAFFQEAAAAFEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBhAAAAEAAQAOAAgQBxAAABcAAQAEEAAACgAYFQMAAAABAAEADgAIEAkQAAAXAAAAAwAAAA4AFxUAEAAAAwLwQwAA8vEKABgVCxAAAAEAAQAKABgVDBAAAAEAAAIOABcVAAAAAAoC8EMAAPLxCgAYFQ4QAAABAAEACgAYFQ8QAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApSwvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxhEUgCoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAABmcmFnX21haW4A8vgkv8RgAAAAQAgAALQAAAAEAAAAVAAAAAQAAAAEAAAABAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAlEQAAAACAAAAAAQBtYWluAAAWAFERDRAAAAcA:::::wAA:::::3RleAAiAFEREBAAAAYA::::::::AAD::190ZXhfc2FtcGxlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::xorDwABAEwAAAAgAAAALAAAAEwAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAACoAAAAIAAAYAAAAAAAAAAAAAAAAAIACQBAAgAAAAAAALgAAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAqAAAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAKgAAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItdGV4dC5mcmFnLmhsc2wAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQlbYmQBAAAA4RwjOYj46U6g2kLNRy2O0WsAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYWludGVyLXRleHQuZnJhZy5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMcAAACYAQAAUwEAAFAAAAAAAAAAdwMAAIAAAADIAgAACAMAAEwAAAAMAAAAKAAAADgCAAAsAAAAUAAAAAMAAAAXAAAADgAAABYAAAAQAAAACgAAAAYAAAALAAAACAAAAAkAAAAMAAAADQAAAAcg
kha_Shaders.painter_text_vertData0 = "s22612:A3ZlcnRleENvbG9yAAB2ZXJ0ZXhQb3NpdGlvbgABdmVydGV4VVYAAgEkR2xvYmFscwAAAXByb2plY3Rpb25NYXRyaXgAAAAAAEAAAAAEBERYQkNe1Nx0rFI03pmqjE5EYT6EAQAAAPBBAAAGAAAAOAAAAAQBAABoAQAA2AEAAGwDAADoAwAAUkRFRsQAAAABAAAASAAAAAEAAAAcAAAAAAT%:wEBAACcAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkR2xvYmFscwCrq6s8AAAAAQAAAGAAAABAAAAAAAAAAAAAAAB4AAAAAAAAAEAAAAACAAAAjAAAAAAAAABwcm9qZWN0aW9uTWF0cml4AKurqwMAAwAEAAQAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTlwAAAADAAAACAAAAFAAAAAAAAAAAAAAAAMAAAAAAAAADw8AAFAAAAABAAAAAAAAAAMAAAABAAAABwcAAFAAAAACAAAAAAAAAAMAAAACAAAAAwMAAFRFWENPT1JEAKurq09TR05oAAAAAwAAAAgAAABQAAAAAAAAAAAAAAADAAAAAAAAAA8AAABQAAAAAQAAAAAAAAADAAAAAQAAAAMMAABZAAAAAAAAAAEAAAADAAAAAgAAAA8AAABURVhDT09SRABTVl9Qb3NpdGlvbgCrq6tTSERSjAEAAEAAAQBjAAAAWQAABEaOIAAAAAAABAAAAF8AAAPyEBAAAAAAAF8AAANyEBAAAQAAAF8AAAMyEBAAAgAAAGUAAAPyIBAAAAAAAGUAAAMyIBAAAQAAAGcAAATyIBAAAgAAAAEAAABoAAACAgAAADYAAAXyIBAAAAAAAEYeEAAAAAAANgAABTIgEAABAAAARhAQAAIAAAA2AAAFcgAQAAAAAABGEhAAAQAAADYAAAWCABAAAAAAAAFAAAAAAIA:EQAACBIAEAABAAAARg4QAAAAAABGjiAAAAAAAAIAAAARAAAIIgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAwAAAAAAAAcSABAAAQAAABoAEAABAAAACgAQAAEAAAA2AAAFgiAQAAIAAAAaABAAAQAAADgAAAdCIBAAAgAAAAoAEAABAAAAAUAAAAAAAD8RAAAIEiAQAAIAAABGDhAAAAAAAEaOIAAAAAAAAAAAABEAAAgiIBAAAgAAAEYOEAAAAAAARo4gAAAAAAABAAAAPgAAAVNUQVR0AAAADAAAAAIAAAAAAAAABgAAAAYAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAD4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAfAAAAnAAAAAAAAAAcwgwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCVtiZAEAAADmJ:OQfPC7SJECF5nsqH0SAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwgZnJhZ21lbnRDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IG11bChmbG9hdDQodmVydGV4UG9zaXRpb24sIDEuMGYpLCBwcm9qZWN0aW9uTWF0cml4KTsKICAgIHRleENvb3JkID0gdmVydGV4VVY7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHZlcnRleFBvc2l0aW9uID0gc3RhZ2VfaW5wdXQudmVydGV4UG9zaXRpb247CiAgICB2ZXJ0ZXhVViA9IHN0YWdlX2lucHV0LnZlcnRleFVWOwogICAgdmVydGV4Q29sb3IgPSBzdGFnZV9pbnB1dC52ZXJ0ZXhDb2xvcjsKICAgIHZlcnRfbWFpxloAAEzoAwB1gwEA8gwDAAhoAAAcEwIAZrkCAMHDAADZKgIAJmsAAFCFAQAmFwMAZ58BAFocAACxxbmlmb3JtIGZsb2F0NHg0IHByb2plY3Rpb25NYXRyaXg7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIHZlcnRleFBvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHZlcnRleFVWOwpzdGF0aWMgZmxvYXQ0IGZyYWdtZW50Q29sb3I7CnN0YXRpYyBmbG9hdDQgdmVydGV4Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHZlcnRleENvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZlcnRleFBvc2l0aW9uIDogVEVYQ09PUkQxOwogICAgZmxvYXQyIHZlcnRleFVWIDogVEVYQ09PUkQyOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ21lbnRDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IG11bChmbG9hdDQodmVydGV4UG9zaXRpb24sIDEuMGYpLCBwcm9qZWN0aW9uTWF0cml4KTsKICAgIHRleENvb3JkID0gdmVydGV4VVY7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHZlcnRleFBvc2l0aW9uID0gc3RhZ2VfaW5wdXQudmVydGV4UG9zaXRpb247CiAgICB2ZXJ0ZXhVViA9IHN0YWdlX2lucHV0LnZlcnRleFVWOwogICAgdmVydGV4Q29sb3IgPSBzdGFnZV9pbnB1dC52ZXJ0ZXhDb2xvcjsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQuZnJhZ21lbnRDb2xvciA9IGZyYWdtZW50Q29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgvAQAAALwEAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci10ZXh0LnZlcnQuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFpbnRlci10ZXh0LnZlcnQuaGxzbAB1bmlmb3JtIGZsb2F0NHg0IHByb2plY3Rpb25NYXRyaXg7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIHZlcnRleFBvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHZlcnRleFVWOwpzdGF0aWMgZmxvYXQ0IGZyYWdtZW50Q29sb3I7CnN0YXRpYyBmbG9hdDQgdmVydGV4Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHZlcnRleENvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZlcnRleFBvc2l0aW9uIDogVEVYQ09PUkQxOwogICAgZmxvYXQyIHZlcnRleFVWIDogVEVYQ09PUkQyOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdBviMAGAAAAAMxNStUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAABAAAAAAAAAEAAAAAoAAAAG%IwAW:xtgjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAAAEAAAAAAAAIAEAAAAAAAAgAQAACRAAAGwAAAABAKBtYWluADIAPhEEEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABsAAAAAQAgAQAAAAAWAFARAQAFAAQABABsAAAAAQAgAQQAAAAWAFARAQAFAAgABABsAAAAAQAgAQgAAAAWAFARAQAFAAwABABsAAAAAQAgAQwAAAAWAFARAQAFABAABABsAAAAAQAgARAAAAAWAFARAQAFABQABABsAAAAAQAgARQAAAAWAFARAQAFABgABABsAAAAAQAgARgAAAAWAFARAQAFABwABABsAAAAAQAgASAAAAAWAFARAQAFACAABABsAAAAAQAgASQAAAA6AD4RCBAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFABgABABsAAAAAQAgASAAAAAWAFARAgAFABwABABsAAAAAQAgASQAAAAWAFARAgAFACAABABsAAAAAQAgASgAAAAWAFARAgAFACQABABsAAAAAQAgASwAAAAWAFARAgAFABAABABsAAAAAQAgARAAAAAWAFARAgAFABQABABsAAAAAQAgARQAAAAWAFARAgAFAAAABABsAAAAAQAgAQAAAAAWAFARAgAFAAQABABsAAAAAQAgAQQAAAAWAFARAgAFAAgABABsAAAAAQAgAQgAAAAWAFARAgAFAAwABABsAAAAAQAgAQwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAATgBNEYAAAAD8AwAAABAAAAcACQUNRgYCAygNOgYGDBxoAzANRgYHDEAcCAAJEw1FAYCUAwAJFg0yBgYMHGgJFQ05AzAJEw1FBgcMQBwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAAAgBOEQIABgAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uAPQAAAAYAAAAAQAAABABLMBRqgq:OCZZ:a:J3xZLhQAA8gAAADgBAAAAAAAAAQABAIwBAAAAAAAAGAAAACwBAABsAAAAKgAAgGwAAAAqAAAAgAAAACoAAICAAAAAKgAAAJQAAAAlAACAlAAAACUAAACoAAAAJQAAgKgAAAAlAAAAvAAAACUAAIC8AAAAJQAAANwAAAAlAACA3AAAACUAAAD8AAAAJQAAgPwAAAAlAAAAGAEAACoAAIAYAQAAKgAAACwBAAAlAACALAEAACUAAABIAQAAJQAAgEgBAAAlAAAAaAEAACUAAIBoAQAAJQAAAIgBAAAqAACAiAEAACoAAAAFABgABQAYAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABkAAAAMAAAAAAAAABQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAADxAAAKwBAAAKAP::BAAAAP::AwAAAAAAPAAAADwAAAAIAAAARAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vFKAAMSDRUDAAAQAAAAAHZlcnRleENvbG9yAPLxDRUDAAEQAAAQAHZlcnRleFBvc2l0aW9uAPPy8Q0VAwACEAAAHAB2ZXJ0ZXhVVgDxJgAFFQMAAAADEAAAAAAAAAAAAAAkAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAABBAAAEYAAxINFQMAABAAAAAAZnJhZ21lbnRDb2xvcgANFQMAAhAAABAAdGV4Q29vcmQA8Q0VAwAAEAAAGABnbF9Qb3NpdGlvbgDy8SoABRUDAAAABhAAAAAAAAAAAAAAKABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQcQAAABAAEADgAIEAgQAAAXAAEABRAAAAoAGBUDAAAAAQABAA4ACBAKEAAAFwAAAAMAAAAeABwVQAAAAAQAAAAEAAAAEAAAAABAAGZsb2F0NHg0AAoAGBUMEAAAAQABAAoAGBUNEAAAAQAAAgoKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHN0YWdlX291dHB1dC50ZXhDb29yZCA9IHRleENvb3JkOwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdtZW50Q29sb3IgPSBmcmFnbWVudENvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAAA:AAAAfgAAAAAAAAABAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAsQAAB2ZXJ0X21haW4A8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEM0RTSERSAIwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAACxAAAHZlcnRfbWFpbgDyaCS:xghaW4AACYAUREOEAAACAAAAAAA::::::::cHJvamVjdGlvbk1hdHJpeAAAAAAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9ugkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAATAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAAIwBAAAgAABgAAAAAAAAAAAAAAAAAgAJACQEAAAAAAAAeAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAACMAQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAjAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci10ZXh0LnZlcnQuaGxzbAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCVtiZAEAAADmJ:OQfPC7SJECF5nsqH0SawAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItdGV4dC52ZXJ0Lmhsc2wABAAAAAYAAAABAAAAHgAAAAAAAAARAAAABwAAACIAAAAIAAAACgAAAAYAAAAAAAAABQAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAxwAAAOQBAABTAQAAUAAAAAAAAADsBAAAgAAAAD0EAACsBQAARAAAAAwAAAAoAAAAOAIAACwAAABcAAAAAwAAABoAAAAQAAAAGQAAABMAAAALAAAABgAAABIAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAABwAAABEAAAAUAAAAFQAAABYAAAAYAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw
kha_Shaders.painter_video_fragData0 = "s19368:AAJfdGV4X3NhbXBsZXIAAHRleAAAAERYQkOhEUJf1GEOp1uZbGqXehcoAQAAAKg4AAAGAAAAOAAAANgAAAAkAQAAWAEAACQCAACgAgAAUkRFRpgAAAAAAAAAAAAAAAIAAAAcAAAAAAT::wEBAABtAAAAXAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABpAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAF90ZXhfc2FtcGxlcgB0ZXgATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAKurq0lTR05EAAAAAgAAAAgAAAA4AAAAAAAAAAAAAAADAAAAAAAAAA8PAAA4AAAAAQAAAAAAAAADAAAAAQAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUsQAAABAAAAAMQAAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAAD8hAQAAAAAABiEAADMhAQAAEAAABlAAAD8iAQAAAAAABoAAACAQAAAEUAAAnyABAAAAAAAEYQEAABAAAARn4QAAAAAAAAYBAAAAAAADgAAAfyABAAAAAAAEYOEAAAAAAARh4QAAAAAAA4AAAHciAQAAAAAABGAhAAAAAAAPYfEAAAAAAANgAABYIgEAAAAAAAOgAQAAAAAAA%AAABU1RBVHQAAAAFAAAAAQAAAAAAAAADAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIANgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAABsAAACQAAAAAAAAABkzgAAPzguMQEJW2JkAQAAALhQYXk6%ABJqxap814lj8AAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbXBsZXIsIHRleENvb3JkKSAqIGNvbG9yOwogICAgZmxvYXQzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IGZsb2F0NChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGNvbG9yID0gc3RhZ2VfaW5wdXQuY29sb3I7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuRnJhZ0NvbG9yID0gRnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAAAAAABAAAAAAAAAAAAAAAABAAAAQQAAAIAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGWgAAdYMBAKO3AgAIaAAAJvcCAH2cAgDBwwAAMfsDAKjRAABQhQEA02MAAOoUAwDBIQMAQbkCALgcAwCVMQMAfdoleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgRnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0NCB0ZXhjb2xvciA9IHRleC5TYW1wbGUoX3RleF9zYW1wbGVyLCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGZsb2F0MyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSBmbG9hdDQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHRleENvb3JkID0gc3RhZ2VfaW5wdXQudGV4Q29vcmQ7CiAgICBjb2xvciA9IHN0YWdlX2lucHV0LmNvbG9yOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LkZyYWdDb2xvciA9IEZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAIMDAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci12aWRlby5mcmFnLmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItdmlkZW8uZnJhZy5obHNsAFRleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgRnJhZ0NvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBjb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMTsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IEZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0NCB0ZXhjb2xvciA9IHRleC5TYW1wbGUoX3RleF9zYRviMAGAAAAAXo9dtUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEEAAAAoAAAAG%IwAdSUo8cCAwjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAANgCAAAAAAAAdAAAAAAAAAB0AAAACBAAAFAAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABQAAAAAQB0AAAAAAAWAFARAQAFAAQABABQAAAAAQB0AAQAAAAWAFARAQAFAAgABABQAAAAAQB0AAgAAAAWAFARAQAFAAwABABQAAAAAQB0AAwAAAAWAFARAQAFABAABABQAAAAAQB0ABAAAAAWAFARAQAFABQABABQAAAAAQB0ABQAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFAAAABABQAAAAAQB0AAAAAAAWAFARAgAFAAQABABQAAAAAQB0AAQAAAAWAFARAgAFAAgABABQAAAAAQB0AAgAAAAWAFARAgAFAAwABABQAAAAAQB0AAwAAAA2AE0RgAAAANQCAAAAEAAABwAJBQ1BCyANKAYCDBxACAAJFw04AVALMA1AAyQJEg0nBgIMHBwAAC4APhEAEAAACAB0ZXhjb2xvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJAAAAABADAAAAAAABYAUBEAAAUABAAEAJAAAAABADAABAAAABYAUBEAAAUACAAEAJAAAAABADAACAAAABYAUBEAAAUADAAEAJAAAAABADAADAAAAAIAThECAAYA9AAAABgAAAABAAAAEAFtf4l0lfswyEToZFt5QSBeAADyAAAAkAAAAAAAAAABAAEAxAAAAAAAAAAKAAAAhAAAAFAAAAAfAACAUAAAAB8AAAB0AAAAHwAAgHQAAAAfAAAAkAAAAB8AAICQAAAAHwAAAKwAAAAiAACArAAAACIAAADAAAAAIgAAgMAAAAAiAAAABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABgABQAYAPYAAAAQAAAAAAAAAAAQAAAAAAAAFAAAAAwAAAAAAAAAFAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAABEQAABYAQAACgD::wQAAAD::wMAAAAAAEQAAABEAAAACAAAAEwAAAAAAAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgAbFUAAAAACAAAACABmbG9hdDIA8:LxJgADEg0VAwAAEAAAAABjb2xvcgANFQMAARAAABAAdGV4Q29vcmQA8SYABRUCAAAAAhAAAAAAAAAAAAAAGABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAMQAAAWAAMSDRUDAAAQAAAAAEZyYWdDb2xvcgAqAAUVAQAAAAUQAAAAAAAAAAAAABAAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAQQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAADgAXFQAQAAADAvBDAADy8QoAGBULEAAAAQABAAoAGBUMEAAAAQAAAg4AFxUAAAAACgLwQwAA8vEKABgVDhAAAAEAAQAKABgVDxAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKUsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAABEAAAGAAAAAsA::8EAAAA::8DAAAAAAAEAAAABAAAAAgAAAAMAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDyzRFNIRFIAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxxogAAAAAEAbWFpbgAAFgBREQ0QAAAHAP::::8AAP::::90ZXgAIgBRERAQAAAGAP:::::::wAA::9fdGV4X3NhbXBsZXIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAxAAAACAAAGAAAAAAAAAAAAAAAAACAAkA3AIAAAAAAADQAAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAMQAAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAADEAAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYWludGVyLXZpZGVvLmZyYWcuaGxzbAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEJW2JkAQAAALhQYXk6%ABJqxap814lj8BsAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFpbnRlci12aWRlby5mcmFnLmhsc2wABAAAAAYAAAABAAAAOgAAAAAAAAARAAAABwAAAAoAAAAGAAAAAAAAAAUAAAAiAAAACAAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADIAAAAkAEAAFMBAABQAAAAAAAAALMDAACAAAAAAgMAALwDAABMAAAADAAAACgAAAA4AgAALAAAAFAAAAADAAAAFwAAAA4AAAAWAAAAEAAAAAoAAAAGAAAACwAAAAgAAAAJAAAADAAAAA0AAAAHAAAADwAAABEAAAASAAAAEw
kha_Shaders.painter_video_vertData0 = "s22612:A3ZlcnRleENvbG9yAAB2ZXJ0ZXhQb3NpdGlvbgABdmVydGV4VVYAAgEkR2xvYmFscwAAAXByb2plY3Rpb25NYXRyaXgAAAAAAEAAAAAEBERYQkO8R09dBfhedMgroeKVIKwNAQAAAPBBAAAGAAAAOAAAAAQBAABoAQAA2AEAAGwDAADoAwAAUkRFRsQAAAABAAAASAAAAAEAAAAcAAAAAAT%:wEBAACcAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAkR2xvYmFscwCrq6s8AAAAAQAAAGAAAABAAAAAAAAAAAAAAAB4AAAAAAAAAEAAAAACAAAAjAAAAAAAAABwcm9qZWN0aW9uTWF0cml4AKurqwMAAwAEAAQAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTlwAAAADAAAACAAAAFAAAAAAAAAAAAAAAAMAAAAAAAAADw8AAFAAAAABAAAAAAAAAAMAAAABAAAABwcAAFAAAAACAAAAAAAAAAMAAAACAAAAAwMAAFRFWENPT1JEAKurq09TR05oAAAAAwAAAAgAAABQAAAAAAAAAAAAAAADAAAAAAAAAA8AAABQAAAAAQAAAAAAAAADAAAAAQAAAAMMAABZAAAAAAAAAAEAAAADAAAAAgAAAA8AAABURVhDT09SRABTVl9Qb3NpdGlvbgCrq6tTSERSjAEAAEAAAQBjAAAAWQAABEaOIAAAAAAABAAAAF8AAAPyEBAAAAAAAF8AAANyEBAAAQAAAF8AAAMyEBAAAgAAAGUAAAPyIBAAAAAAAGUAAAMyIBAAAQAAAGcAAATyIBAAAgAAAAEAAABoAAACAgAAADYAAAXyIBAAAAAAAEYeEAAAAAAANgAABTIgEAABAAAARhAQAAIAAAA2AAAFcgAQAAAAAABGEhAAAQAAADYAAAWCABAAAAAAAAFAAAAAAIA:EQAACBIAEAABAAAARg4QAAAAAABGjiAAAAAAAAIAAAARAAAIIgAQAAEAAABGDhAAAAAAAEaOIAAAAAAAAwAAAAAAAAcSABAAAQAAABoAEAABAAAACgAQAAEAAAA2AAAFgiAQAAIAAAAaABAAAQAAADgAAAdCIBAAAgAAAAoAEAABAAAAAUAAAAAAAD8RAAAIEiAQAAIAAABGDhAAAAAAAEaOIAAAAAAAAAAAABEAAAgiIBAAAgAAAEYOEAAAAAAARo4gAAAAAAABAAAAPgAAAVNUQVR0AAAADAAAAAIAAAAAAAAABgAAAAYAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAD4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAfAAAAnAAAAAAAAAAcwg:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::wUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwjEBCVtiZAEAAACf:F35WqJKSYSuYjt8YjMtAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwgOiBURVhDT09SRDA7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBtdWwoZmxvYXQ0KHZlcnRleFBvc2l0aW9uLCAxLjBmKSwgcHJvamVjdGlvbk1hdHJpeCk7CiAgICB0ZXhDb29yZCA9IHZlcnRleFVWOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdmVydGV4UG9zaXRpb24gPSBzdGFnZV9pbnB1dC52ZXJ0ZXhQb3NpdGlvbjsKICAgIHZlcnRleFVWID0gc3RhZ2VfaW5wdXQudmVydGV4VVY7CiAgICB2ZXJ0ZXhDb2xvciA9IHN0YWdlX2lucHV0LnZlcnRleENvbG9yOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PxloAAEzoAwB1gwEA8gwDAAhoAAAcEwIACvICAMHDAADZKgIAJmsAAFCFAQAmFwMAZ58BAFocAACxxbmlmb3JtIGZsb2F0NHg0IHByb2plY3Rpb25NYXRyaXg7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQzIHZlcnRleFBvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHZlcnRleFVWOwpzdGF0aWMgZmxvYXQ0IGNvbG9yOwpzdGF0aWMgZmxvYXQ0IHZlcnRleENvbG9yOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCB2ZXJ0ZXhDb2xvciA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyB2ZXJ0ZXhQb3NpdGlvbiA6IFRFWENPT1JEMTsKICAgIGZsb2F0MiB2ZXJ0ZXhVViA6IFRFWENPT1JEMjsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGNvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gbXVsKGZsb2F0NCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wZiksIHByb2plY3Rpb25NYXRyaXgpOwogICAgdGV4Q29vcmQgPSB2ZXJ0ZXhVVjsKICAgIGNvbG9yID0gdmVydGV4Q29sb3I7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHZlcnRleFBvc2l0aW9uID0gc3RhZ2VfaW5wdXQudmVydGV4UG9zaXRpb247CiAgICB2ZXJ0ZXhVViA9IHN0YWdlX2lucHV0LnZlcnRleFVWOwogICAgdmVydGV4Q29sb3IgPSBzdGFnZV9pbnB1dC52ZXJ0ZXhDb2xvcjsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQuY29sb3IgPSBjb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7CnvAQAAAJYEAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci12aWRlby52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItdmlkZW8udmVydC5obHNsAHVuaWZvcm0gZmxvYXQ0eDQgcHJvamVjdGlvbk1hdHJpeDsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDMgdmVydGV4UG9zaXRpb247CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgdmVydGV4VVY7CnN0YXRpYyBmbG9hdDQgY29sb3I7CnN0YXRpYyBmbG9hdDQgdmVydGV4Q29sb3I7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IHZlcnRleENvbG9yIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZlcnRleFBvc2l0aW9uIDogVEVYQ09PUkQxOwogICAgZmxvYXQyIHZlcnRleFVWIDogVEVYQ09PUkQyOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgY29sbxviMAGAAAAAOQFptUiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEEAAAAoAAAAG%IwAfw3gpjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAAAEAAAAAAAAIAEAAAAAAAAgAQAACRAAAGwAAAABAKBtYWluADIAPhEEEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABsAAAAAQAgAQAAAAAWAFARAQAFAAQABABsAAAAAQAgAQQAAAAWAFARAQAFAAgABABsAAAAAQAgAQgAAAAWAFARAQAFAAwABABsAAAAAQAgAQwAAAAWAFARAQAFABAABABsAAAAAQAgARAAAAAWAFARAQAFABQABABsAAAAAQAgARQAAAAWAFARAQAFABgABABsAAAAAQAgARgAAAAWAFARAQAFABwABABsAAAAAQAgASAAAAAWAFARAQAFACAABABsAAAAAQAgASQAAAA6AD4RCBAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFABgABABsAAAAAQAgASAAAAAWAFARAgAFABwABABsAAAAAQAgASQAAAAWAFARAgAFACAABABsAAAAAQAgASgAAAAWAFARAgAFACQABABsAAAAAQAgASwAAAAWAFARAgAFABAABABsAAAAAQAgARAAAAAWAFARAgAFABQABABsAAAAAQAgARQAAAAWAFARAgAFAAAABABsAAAAAQAgAQAAAAAWAFARAgAFAAQABABsAAAAAQAgAQQAAAAWAFARAgAFAAgABABsAAAAAQAgAQgAAAAWAFARAgAFAAwABABsAAAAAQAgAQwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAATgBNEYAAAAD8AwAAABAAAAcACQUNRgYCAygNOgYGDBxoAzANRgYHDEAcCAAJEw1FAYCUAwAJFg0yBgYMHGgJFQ05AzAJEw1FBgcMQBwAAAAyAD4RABAAAAgAZ2xfUG9zaXRpb24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAIAAQA3AAAAAEAPAAQAAAAFgBQEQAABQAMAAQA:AAAAAEAkAAUAAAAAgBOEQIABgAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9uAPQAAAAYAAAAAQAAABABeu2:hg:6woDvH3bo0Bo%UQAA8gAAADgBAAAAAAAAAQABAIwBAAAAAAAAGAAAACwBAABsAAAAKgAAgGwAAAAqAAAAgAAAACoAAICAAAAAKgAAAJQAAAAlAACAlAAAACUAAACoAAAAJQAAgKgAAAAlAAAAvAAAACUAAIC8AAAAJQAAANwAAAAlAACA3AAAACUAAAD8AAAAJQAAgPwAAAAlAAAAGAEAACoAAIAYAQAAKgAAACwBAAAlAACALAEAACUAAABIAQAAJQAAgEgBAAAlAAAAaAEAACUAAIBoAQAAJQAAAIgBAAAqAACAiAEAACoAAAAFABgABQAYAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABkAAAAMAAAAAAAAABQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAADxAAAKQBAAAKAP::BAAAAP::AwAAAAAAPAAAADwAAAAIAAAARAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vFKAAMSDRUDAAAQAAAAAHZlcnRleENvbG9yAPLxDRUDAAEQAAAQAHZlcnRleFBvc2l0aW9uAPPy8Q0VAwACEAAAHAB2ZXJ0ZXhVVgDxJgAFFQMAAAADEAAAAAAAAAAAAAAkAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAABBAAAD4AAxINFQMAABAAAAAAY29sb3IADRUDAAIQAAAQAHRleENvb3JkAPENFQMAABAAABgAZ2xfUG9zaXRpb24A8vEqAAUVAwAAAAYQAAAAAAAAAAAAACgAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUHEAAAAQABAA4ACBAIEAAAFwABAAUQAAAKABgVAwAAAAEAAQAOAAgQChAAABcAAAADAAAAHgAcFUAAAAAEAAAABAAAABAAAAAAQABmbG9hdDR4NAAKABgVDBAAAAEAAQAKABgcHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQuY29sb3IgPSBjb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAAQAAAAAAAAAABAAAAQQAAAIAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAsQAAB2ZXJ0X21haW4A8vwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAACxAAAHZlcnRfbWFpbgDyaCS:xGAAAABACAAAVAAAAAQAAAAEAAAABAAAAPQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABghaW4AACYAUREOEAAACAAAAAAA::::::::cHJvamVjdGlvbk1hdHJpeAAAAAAeAFIRABAAAAAAAAAQAP:::::::2dsX1Bvc2l0aW9ugkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAATAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAAIwBAAAgAABgAAAAAAAAAAAAAAAAAgAJACQEAAAAAAAAeAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAACMAQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAjAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBccGFpbnRlci12aWRlby52ZXJ0Lmhsc2wAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCVtiZAEAAACf:F35WqJKSYSuYjt8YjMtbAAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHBhaW50ZXItdmlkZW8udmVydC5obHNsAAQAAAAGAAAAAQAAADoAAAAAAAAAEQAAAAcAAAAKAAAABgAAAAAAAAAFAAAAIgAAAAgAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAyAAAANwBAABTAQAAUAAAAAAAAADGBAAAgAAAABUEAACsBQAARAAAAAwAAAAoAAAAOAIAACwAAABcAAAAAwAAABoAAAAQAAAAGQAAABMAAAALAAAABgAAABIAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAABwAAABEAAAAUAAAAFQAAABYAAAAYAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw
kha_Shaders.pass_copy_fragData0 = "s19219:AAJfdGV4X3NhbXBsZXIAAHRleAAAAERYQkNhZ7hBE%nFS7u2XqvIEmnkAQAAADg4AAAGAAAAOAAAANgAAAAMAQAAQAEAALQBAAAwAgAAUkRFRpgAAAAAAAAAAAAAAAIAAAAcAAAAAAT::wEBAABtAAAAXAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAABpAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAF90ZXhfc2FtcGxlcgB0ZXgATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAKurq0lTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUmwAAABAAAAAGwAAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAADMhAQAAAAAABlAAAD8iAQAAAAAABIAAAL8iAQAAAAAABGEBAAAAAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAD4AAAFTVEFUdAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwwAAAAAAAAA:::::wlC4xAQdbYmQBAAAAkoZWVZF2okS0ef%hDHaIpgAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADczc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAAAAAADwAAAAAAAAAeAAAAAEAAAA9AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHWDAQCu%wEACGgAAB7CAgDGWgAABT0CAMHDAAAx%wMAircDAFCFAQDTYwAAthwBAMEhAwBBuQIAuBwDAJUxAwB92gdHVyZTJEPGZsb2F0ND4gdGV4IDogcmVnaXN0ZXIodDApOwpTYW1wbGVyU3RhdGUgX3RleF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwoKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCnZvaWQgZnJhZ19tYWluKCkKewogICAgZnJhZ0NvbG9yID0gdGV4LlNhbXBsZUxldmVsKF90ZXhfc2FtcGxlciwgdGV4Q29vcmQsIDAuMGYpOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9Cgv:u8BAAAAqwIAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYXNzX2NvcHkuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYXNzX2NvcHkuZnJhZy5obHNsAFRleHR1cmUyRDxmbG9hdDQ%IHRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDQgZnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZyYWdDb2xvciA9IHRleC5TYW1wbGVMZXZlbChfdGV4X3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3JvG%IwAYAAAAAzpne0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAAPQAAACgAAAAb4jABWxRLozgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAA2AEAAAAAAAAwAAAAAAAAADAAAAAIEAAAPAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADwAAAABADAAAAAAABYAUBEBAAUABAAEADwAAAABADAABAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAAAAEADwAAAABADAAAAAAABYAUBECAAUABAAEADwAAAABADAABAAAABYAUBECAAUACAAEADwAAAABADAACAAAABYAUBECAAUADAAEADwAAAABADAADAAAACYATRGAAAAA1AEAAAAQAAAHAAkFDT4LIAQsCAAJEQ09ATwMLAAAAAACAE4RAgAGAPQAAAAYAAAAAQAAABABaVEkvhL2bmOVEa7uf%3y9wAA8gAAAEgAAAAAAAAAAQABAGwAAAAAAAAABAAAADwAAAA8AAAAGQAAgDwAAAAZAAAAaAAAABwAAIBoAAAAHAAAAAUAEAAFAA8ABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABIAAAAMAAAAAAAAABQAAAAsoxATgAAAAAEAAAERAAAEgBAAAKAP::BAAAAP::AwAAAAAARAAAAEQAAAAIAAAATAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEWAAMSDRUDAAAQAAAAAHRleENvb3JkAPEmAAUVAQAAAAEQAAAAAAAAAAAAAAgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAACEAAAFgAbFUAAAAAEAAAAEABmbG9hdDQA8:LxFgADEg0VAwAEEAAAAABmcmFnQ29sb3IAKgAFFQEAAAAFEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBhAAAAEAAQAOAAgQBxAAABcAAQADEAAACgAYFQMAAAABAAEADgAIEAkQAAAXAAAAAwAAAA4AFxUEEAAAAwLwQwAA8vEKABgVCxAAAAEAAQAKABgVDBAAAAEAAAIOABcVAAAAAAoC8EMAAPLxCgAYFQ4QAAABAAEACgAYFQ8QAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApSwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAEQAAAYAAAACwD::wQAAAD::wMAAAAAAAQAAAAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARDNEU0hEUgBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAABmcmFnX21haW4A8vgkv8RgAAAAQAgAALQAAAAEAAAAVAAAAAQAAAAEAAAABAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwgAlEQAAAACAAAAAAQBtYWluAAAWAFERDRAAAAcA:::::wAA:::::3RleAAiAFEREBAAAAYA::::::::AAD::190ZXhfc2FtcGxlcgxorDwABAEwAAAAgAAAALAAAAEgAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABsAAAAIAAAYAAAAAAAAAAAAAAAAAIACQDcAQAAAAAAAIgAAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAbAAAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAGwAAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHBhc3NfY29weS5mcmFnLmhsc2wAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQdbYmQBAAAAkoZWVZF2okS0ef%hDHaIpmgAAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYXNzX2NvcHkuZnJhZy5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMQAAACAAQAATwEAAFAAAAAAAAAA2wIAAIAAAAAyAgAAdAIAAEwAAAAMAAAAKAAAADgCAAAsAAAAUAAAAAMAAAAXAAAADgAAABYAAAAQAAAACgAAAAYAAAALAAAACAAAAAkAAAAMAAAADQAAAAcAAAAPAAAAEQAAABIAAAATAAAAFQAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg
kha_Shaders.pass_vertData0 = "s19211:AXBvcwAAAABEWEJDdZa72FgfUoQcyGA1soyVFwEAAABAOAAABgAAADgAAACEAAAAuAAAABABAAC8AQAAOAIAAFJERUZEAAAAAAAAAAAAAAAAAAAAHAAAAAAE:v8BAQAAHAAAAE1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQBJU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAADAwAAVEVYQ09PUkQAq6urT1NHTlAAAAACAAAACAAAADgAAAAAAAAAAAAAAAMAAAAAAAAAAwwAAEEAAAAAAAAAAQAAAAMAAAABAAAADwAAAFRFWENPT1JEAFNWX1Bvc2l0aW9uAKurq1NIRFKkAAAAQAABACkAAABfAAADMhAQAAAAAABlAAADMiAQAAAAAABnAAAE8iAQAAEAAAABAAAAMgAADzIgEAAAAAAARhAQAAAAAAACQAAAAAAAPwAAAL8AAAAAAAAAAAJAAAAAAAA:AAAAPwAAAAAAAAAANgAABTIgEAABAAAARhAQAAAAAAA2AAAIwiAQAAEAAAACQAAAAAAAAAAAAAAAAAA:AACAPz4AAAFTVEFUdAAAAAQAAAAAAAAAAAAAAAMAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwAAAIwv::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::8FAAAAIAAAADwAAAAAAAAA:::::wlC4xAQdbYmQBAAAA5XjMJMPY:k2cg5QewbKxowAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQudGV4Q29vcmQgPSB0ZXhDb29yZDsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAAAAAAANwAAAAAAAAAAAAAAOAAAAG4AAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHWDAQDuMgEACGgAAB7CAgDGWgAAt9oDAMHDAAAx%wMAircc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHRleENvb3JkLnkgPSAxLjBmIC0gdGV4Q29vcmQueTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAAGQMAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYXNzLnZlcnQuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFzcy52ZXJ0Lmhsc2wAc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHRleENvb3JkLnkgPSAxLjBmIC0gdGV4Q29vcmQueTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56G%IwAYAAAAAMq2u0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAAOAAAACgAAAAb4jAB5y7ksKoCAAABAAAANwAAADggA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAA3AEAAAAAAAB0AAAAAAAAAHQAAAAIEAAAMAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEADAAAAABAHQAAAAAABYAUBEBAAUABAAEADAAAAABAHQABAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUACAAEADAAAAABAHQAEAAAABYAUBECAAUADAAEADAAAAABAHQAFAAAABYAUBECAAUAEAAEADAAAAABAHQAGAAAABYAUBECAAUAFAAEADAAAAABAHQAHAAAABYAUBECAAUAAAAEADAAAAABAHQAAAAAABYAUBECAAUABAAEADAAAAABAHQABAAAAAIABgD0AAAAGAAAAAEAAAAQAZifI0JCvPjxuoKtEOrYW6QAAPIAAAB4AAAAAAAAAAEAAQCkAAAAAAAAAAgAAABsAAAAMAAAAB8AAIAwAAAAHwAAAGwAAAAfAACAbAAAAB8AAACAAAAAHwAAgIAAAAAfAAAAoAAAAB8AAICgAAAAHwAAAAUAGAAFABgABQAYAAUAGAAFABgABQAYAAUAGAAFABgA9gAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAACRAAAPAAAAAKAP::BAAAAP::AwAAAAAAJAAAACQAAAAIAAAALAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vESAAMSDRUDAAAQAAAAAHBvcwDy8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEuAAMSDRUDAAAQAAAAAHRleENvb3JkAPENFQMABBAAAAgAZ2xfUG9zaXRpb24A8vEqAAUVAgAAAAUQAAAAAAAAAAAAABgAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAAEAAAAAAAAAszRFNIRFIApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::xoJL:EIAAAACAIAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAAAEAbWFpbgAAAAAAAAAAAAD:::::GgkvaCS:xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::dwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABEAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAApAAAACAAAGAAAAAAAAAAAAAAAAACAAkA4AEAAAAAAACsAAAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAKQAAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAACkAAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYXNzLnZlcnQuaGxzbAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEHW2JkAQAAAOV4zCTD2P5NnIOUHsGysaNjAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFzcy52ZXJ0Lmhsc2wABAAAAAYAAAABAAAAHgAAAAAAAAARAAAABwAAACIAAAAIAAAACgAAAAYAAAAAAAAABQAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAC:AAAAKAEAAEsBAAA4AAAAAAAAAEkDAACAAAAAqgIAAJQCAAAsAAAAAAAAACgAAAAgAgAALAAAABQAAAADAAAAFgAAAA4AAAAVAAAADwAAAAoAAAAGAAAACwAAAAg
kha_Shaders.pass_viewray_vertData0 = "s22614:AXBvcwAAASRHbG9iYWxzAAACaW52VlAAAAAAAEAAAAAEBGV5ZQBAAAAADAAAAAMBRFhCQzC9:7GcXx%aZ:QF:F7B5%QBAAAAEEIAAAYAAAA4AAAAJAEAAFgBAADIAQAAjAMAAAgEAABSREVG5AAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAALwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAACAAAAYAAAAFAAAAAAAAAAAAAAAJAAAAAAAAAAQAAAAAIAAACYAAAAAAAAAKgAAABAAAAADAAAAAIAAACsAAAAAAAAAGludlZQAKurAwADAAQABAAAAAAAAAAAAGV5ZQABAAMAAQADAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOaAAAAAMAAAAIAAAAUAAAAAAAAAAAAAAAAwAAAAAAAAADDAAAUAAAAAEAAAAAAAAAAwAAAAEAAAAHCAAAWQAAAAAAAAABAAAAAwAAAAIAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUrwBAABAAAEAbwAAAFkAAARGjiAAAAAAAAUAAABfAAADMhAQAAAAAABlAAADMiAQAAAAAABlAAADciAQAAEAAABnAAAE8iAQAAIAAAABAAAAaAAAAgIAAAAyAAAPMiAQAAAAAABGEBAAAAAAAAJAAAAAAAA:AAAAvwAAAAAAAAAAAkAAAAAAAD8AAAA:AAAAAAAAAAA2AAAFMgAQAAAAAABGEBAAAAAAADYAAAjCABAAAAAAAAJAAAAAAAAAAAAAAAAAgD8AAIA:EQAACBIAEAABAAAARg8QAAAAAABGjiAAAAAAAAAAAAARAAAIIgAQAAEAAABGDxAAAAAAAEaOIAAAAAAAAQAAABEAAAhCABAAAQAAAEYPEAAAAAAARo4gAAAAAAACAAAAEQAACBIAEAAAAAAARg4QAAAAAABGjiAAAAAAAAMAAAAOAAAHcgAQAAAAAABGAhAAAQAAAAYAEAAAAAAAAAAACXIgEAABAAAARgIQAAAAAABGgiCAQQAAAAAAAAAEAAAANgAABTIgEAACAAAARhAQAAAAAAA2AAAIwiAQAAIAAAACQAAAAAAAAAAAAAAAAAA:AACAPz4AAAFTVEFUdAAAAAwAAAACAAAAAAAAAAQAAAAHAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA%AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAHwAAAJgAAAAAAAAAGwwAAAAAAAAA:::::wlC4xAQhbYmQBAAAAzz8YE%zdk0aPDdEYBhToTgAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcwLjVmLnh4KSArIDAuNWYueHg7CiAgICB0ZXhDb29yZC55ID0gMS4wZiAtIHRleENvb3JkLnk7CiAgICBnbF9Qb3NpdGlvbiA9IGZsb2F0NChwb3MsIDAuMGYsIDEuMGYpOwogICAgZmxvYXQ0IHYgPSBmbG9hdDQocG9zLngsIHBvcy55LCAxLjBmLCAxLjBmKTsKICAgIHYgPSBmbG9hdDQobXVsKHYsIGludlZQKSk7CiAgICBmbG9hdDMgXzY3ID0gdi54eXogLyB2LncueHh4OwogICAgdiA9IGZsb2F0NChfNjcueCwgXzY3LnksIF82Ny56LCB2LncpOwogICAgdmlld1JheSA9IHYueHl6IC0gZXllOwogICAgZ2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56ICsgZ2xfUG9zaXRpb24udykgKiAwLjU7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBwb3MgPSBzdGFnZV9pbnB1dC5wb3M7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPXWDAQDuMgEACGgAAB7CAgBM6AMAxloAAEVCAQDBwwAA2SoCAKBKAwBQhQEAJhcDAGefAQBaHAAAscUAAN0IAwB92gdW5pZm9ybSBmbG9hdDR4NCBpbnZWUDsKdW5pZm9ybSBmbG9hdDMgZXllOwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CnN0YXRpYyBmbG9hdDMgdmlld1JheTsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgcG9zIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDA7CiAgICBmbG9hdDMgdmlld1JheSA6IFRFWENPT1JEMTsKICAgIGZsb2F0NCBnbF9Qb3NpdGlvbiA6IFNWX1Bvc2l0aW9uOwp9OwoKdm9pZCB2ZXJ0X21haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiAwLjVmLnh4KSArIDAuNWYueHg7CiAgICB0ZXhDb29yZC55ID0gMS4wZiAtIHRleENvb3JkLnk7CiAgICBnbF9Qb3NpdGlvbiA9IGZsb2F0NChwb3MsIDAuMGYsIDEuMGYpOwogICAgZmxvYXQ0IHYgPSBmbG9hdDQocG9zLngsIHBvcy55LCAxLjBmLCAxLjBmKTsKICAgIHYgPSBmbG9hdDQobXVsKHYsIGludlZQKSk7CiAgICBmbG9hdDMgXzY3ID0gdi54eXogLyB2LncueHh4OwogICAgdiA9IGZsb2F0NChfNjcueCwgXzY3LnksIF82Ny56LCB2LncpOwogICAgdmlld1JheSA9IHYueHl6IC0gZXllOwogICAgZ2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56ICsgZ2xfUG9zaXRpb24udykgKiAwLjU7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBwb3MgPSBzdGFnZV9pbnB1dC5wb3M7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHN0YWdlX291dHB1dC50ZXhDb29yZCA9IHRleENvb3JkOwogICAgc3RhZ2Vfb3V0cHV0LnZpZXdSYXkgPSB2aWV3UmF5OwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAAaAQAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYXNzX3ZpZXdyYXkudmVydC5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxwYXNzX3ZpZXdyYXkudmVydC5obHNsAHVuaWZvcm0gZmxvYXQ0eDQgaW52VlA7CnVuaWZvcm0gZmxvYXQzIGV5ZTsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgcG9zOwpzdGF0aWMgZmxvYXQzIHZpZXdSYXk7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQwOwogICAgZmxvYXQzIHZpZXdSYXkgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogG%IwAYAAAADu%IO0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAAQAAAACgAAAAb4jABR5z0kekDAAABAAAAPwgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAcAMAAAAAAABoAQAAAAAAAGgBAAAJEAAAVAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAFQAAAABAGgBAAAAABYAUBEBAAUABAAEAFQAAAABAGgBBAAAADoAPhEIEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAFAAEAFQAAAABAGgBIAAAABYAUBECAAUAGAAEAFQAAAABAGgBJAAAABYAUBECAAUAHAAEAFQAAAABAGgBKAAAABYAUBECAAUAIAAEAFQAAAABAGgBLAAAABYAUBECAAUACAAEAFQAAAABAGgBEAAAABYAUBECAAUADAAEAFQAAAABAGgBFAAAABYAUBECAAUAEAAEAFQAAAABAGgBGAAAABYAUBECAAUAAAAEAFQAAAABAGgBAAAAABYAUBECAAUABAAEAFQAAAABAGgBBAAAAEYATRGAAAAAbAMAAAAQAAAHAAkFDR4GCgM8DSEGAgOAtA0aBgQMJBwIAAkQDRwBgJALcAkSDSAGAgOAtAkPDRkGBAwkHAAAACoAPhEFEAAACAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA5AAAAAEAtAAQAAAAFgBQEQAABQAEAAQABAEAAAEAlAAUAAAAFgBQEQAABQAIAAQAJAEAAAEAdAAYAAAAFgBQEQAABQAMAAQARAEAAAEAHAAAAAAAKgA%EQQQAAAIAF82NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABgAQAAAQA4AAAAAAAWAFARAAAFAAQABABgAQAAAQA4AAQAAAAWAFARAAAFAAgABABgAQAAAQA4AAgAAAACAE4RAgAGAPQAAAAYAAAAAQAAABABXex3wY4NoAjWzSwNsuX5oAAA8gAAADgBAAAAAAAAAQABALwBAAAAAAAAGAAAACwBAABUAAAAKgAAgFQAAAAqAAAAkAAAACUAAICQAAAAJQAAAKQAAAAlAACApAAAACUAAADEAAAAJQAAgMQAAAAlAAAA5AAAACUAAIDkAAAAJQAAAAQBAAAlAACABAEAACUAAAAkAQAAJQAAgCQBAAAlAAAARAEAACUAAIBEAQAAJQAAAGABAAAlAACAYAEAACUAAACEAQAAKgAAgIQBAAAqAAAAmAEAACoAAICYAQAAKgAAALgBAAAqAACAuAEAACoAAAAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAGAAFABgABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABYAAAAMAAAAAAAAABQAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAREAAAiAEAAAoA::8EAAAA::8DAAAAAABEAAAARAAAAAgAAABMAAAAAAAAABYAGxVAAAAAAgAAAAgAZmxvYXQyAPPy8RIAAxINFQMAABAAAAAAcG9zAPLxJgAFFQEAAAABEAAAAAAAAAAAAAAIAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAAAhAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8RYAGxVAAAAABAAAABAAZmxvYXQ0APPy8UIAAxINFQMAABAAAAAAdGV4Q29vcmQA8Q0VAwAEEAAACAB2aWV3UmF5APLxDRUDAAUQAAAUAGdsX1Bvc2l0aW9uAPLxKgAFFQMAAAAGEAAAAAAAAAAAAAAkAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBxAAAAEAAQAOAAgQCBAAABcAAQADEAAACgAYFQMAAAABAAEADgAIEAoQAAAXAAAAAwAAAB4AHBVAAAAABAAAAAQAAAAQAAAAAEAAZmxvYXQ0eDQACgAYFQwQAAABAAEACgAYFQ0QAAABAAACCgAYFQQQAAABAAEACgAYFQ8QAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0pAgdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQudmlld1JheSA9IHZpZXdSYXk7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgyjEBOAAAAAAQAAABEAAAGAAAAAsA::8EAAAA::8DAAAAAAAEAAAABAAAAAgAAAAMAAAAAAAAABYAARYAAAAACxAAAHZlcnRfbWFpbgDyzRFNIRFIAvAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAALEAAAdmVydF9tYWluAPLxxoJL:EYAAAAEAIAAAEAAAABAAAAFQAAAAEAAAAxAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAAAEAbWFpbgAAGgBREQ4QAAAIAAAAAAD:::::::9pbnZWUAAAABYAUREQEAAACAAAAEAA::::::::ZXllaCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABMAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAvAEAACAAAGAAAAAAAAAAAAAAAAACAAkAdAMAAAAAAAB4AQAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAALwBAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAAC8AQAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxwYXNzX3ZpZXdyYXkudmVydC5obHNsAAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEIW2JkAQAAAM8:GBPs3ZNGjw3RGAYU6E5rAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBccGFzc192aWV3cmF5LnZlcnQuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADHAAAAwAEAAFMBAABQAAAAAAAAAJgEAACAAAAA6QMAAPwEAABMAAAADAAAACgAAAA4AgAALAAAAEgAAAADAAAAGQAAAA8AAAAYAAAAEgAAAAoAAAAGAAAAEQAAAAsAAAAIAAAACQAAAAwAAAANAAAADgAAAAcAAAAQAAAAEwAAABQAAAAVAAAAFwAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa
kha_Shaders.smaa_blend_weight_fragData0 = "s123484:AAdfZWRnZXNUZXhfc2FtcGxlcgAAX2FyZWFUZXhfc2FtcGxlcgABX3NlYXJjaFRleF9zYW1wbGVyAAJlZGdlc1RleAAAYXJlYVRleAABc2VhcmNoVGV4AAIkR2xvYmFscwAAAnNjcmVlblNpemVJbnYAAAAAAAgAAAACAXNjcmVlblNpemUACAAAAAgAAAACAURYQkMOd:yLB7921yNDj9oLtI5kAQAAADRpAQAGAAAAOAAAADQCAADIAgAA:AIAALAqAAAsKwAAUkRFRvQBAAABAAAAWAEAAAcAAAAcAAAAAAT::wEBAADLAQAA:AAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAOAQAAAwAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAB8BAAADAAAAAAAAAAAAAAAAAAAAAgAAAAEAAAABAAAAMgEAAAIAAAAFAAAABAAAAP::::8AAAAAAQAAAA0AAAA7AQAAAgAAAAUAAAAEAAAA:::::wEAAAABAAAADQAAAEMBAAACAAAABQAAAAQAAAD:::::AgAAAAEAAAANAAAATQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABfZWRnZXNUZXhfc2FtcGxlcgBfYXJlYVRleF9zYW1wbGVyAF9zZWFyY2hUZXhfc2FtcGxlcgBlZGdlc1RleABhcmVhVGV4AHNlYXJjaFRleAAkR2xvYmFscwCrq00BAAACAAAAcAEAABAAAAAAAAAAAAAAAKABAAAAAAAACAAAAAIAAACwAQAAAAAAAMABAAAIAAAACAAAAAIAAACwAQAAAAAAAHNjcmVlblNpemVJbnYAq6sBAAMAAQACAAAAAAAAAAAAc2NyZWVuU2l6ZQBNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAq0lTR06MAAAABQAAAAgAAACAAAAAAAAAAAAAAAADAAAAAAAAAA8PAACAAAAAAQAAAAAAAAADAAAAAQAAAA8PAACAAAAAAgAAAAAAAAADAAAAAgAAAA8PAACAAAAAAwAAAAAAAAADAAAAAwAAAAMDAACAAAAABAAAAAAAAAADAAAAAwAAAAwMAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUqwnAABAAAAA6wkAAFkAAARGjiAAAAAAAAEAAABaAAADAGAQAAAAAABaAAADAGAQAAEAAABaAAADAGAQAAIAAABYGAAEAHAQAAAAAABVVQAAWBgABABwEAABAAAAVVUAAFgYAAQAcBAAAgAAAFVVAABiEAAD8hAQAAAAAABiEAAD8hAQAAEAAABiEAAD8hAQAAIAAABiEAADMhAQAAMAAABiEAADwhAQAAMAAABlAAAD8iAQAAAAAABoAAACBwAAADIAAA8yABAAAAAAAOYaEAADAAAAAkAAAAAAgD8AAIC:AAAAAAAAAAACQAAAAAAAAAAAgD8AAAAAAAAAAEgAAAvyABAAAAAAAEYAEAAAAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMQAAByIAEAAAAAAAAUAAAAAAAAAaABAAAAAAAB8ABAMaABAAAAAAADEAAAciABAAAAAAAAFAAAAAAAAACgAQAAAAAAAfAAQDGgAQAAAAAAA4AAALMgAQAAEAAABGgCAAAAAAAAAAAAACQAAAAACAvwAAgD8AAAAAAAAAADYAAAVCABAAAQAAAAFAAAAAAIA:NgAABTIAEAACAAAA5hoQAAMAAAA2AAAFEgAQAAMAAAABQAAAAAAAADYAAAVCABAAAgAAAAFAAAAAAIC:NgAABSIAEAAAAAAAAUAAAAAAgD8wAAABMQAAB0IAEAAAAAAAKgAQAAIAAAABQAAAAADgQDEAAAeCABAAAAAAAAFAAABmZmY:GgAQAAAAAAABAAAHQgAQAAAAAAA6ABAAAAAAACoAEAAAAAAAAwAAAyoAEAAAAAAAAAAAB3IAEAACAAAARgIQAAEAAABGAhAAAgAAAAAAAAiCABAAAgAAABoAEIBBAAAAAgAAAAFAAAAAAIA:SAAAC:IAEAADAAAAxgAQAAIAAAAWfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAPAAAKIgAQAAAAAAAWBRAAAwAAAAJAAAAAAAA:AAAAPwAAAAAAAAAAFgAAATEAAAdCABAAAAAAAAFAAABmZmY:CgAQAAMAAAABAAAHQgAQAAAAAAAqABAAAAAAAAFAAAAAAIA:AAAABxIAEAABAAAAKgAQAAAAAAAqABAAAgAAABIAAAE2AAAFEgAQAAEAAAABQAAAAAAAADYAAAUiABAAAAAAAAFAAAAAAAAANgAABRIAEAADAAAAAUAAAAAAAAAVAAABOAAAC2IAEAACAAAABoEgAAAAAAAAAAAAAkAAAAAAAAAAAIA:AACAvwAAAAA2AAAFggAQAAIAAAABQAAAAACAPzYAAAUyABAABAAAAOYaEAADAAAANgAABRIAEAAFAAAACgAQAAMAAAA2AAAFQgAQAAQAAAABQAAAAACAvzYAAAVCABAAAAAAAAFAAAAAAIA:MAAAATEAAAeCABAAAAAAACoAEAAEAAAAAUAAAAAA4EAxAAAHEgAQAAIAAAABQAAAZmZmPyoAEAAAAAAAAQAAB4IAEAAAAAAAOgAQAAAAAAAKABAAAgAAAAMAAAM6ABAAAAAAAAAAAAdyABAABAAAAJYHEAACAAAARgIQAAQAAAAAAAAIggAQAAQAAAAaABCAQQAAAAQAAAABQAAAAACAP0gAAAvyABAABQAAAMYAEAAEAAAAFn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAADwAACkIAEAAAAAAAFgUQAAUAAAACQAAAAAAAPwAAAD8AAAAAAAAAABYAAAEAAAAHggAQAAAAAAAKABAAAQAAACoAEAAEAAAAMQAAB4IAEAAAAAAAAUAAAAAAAEA6ABAAAAAAAB8ABAM6ABAAAAAAAAAAAAgiABAAAQAAAAoAEIBBAAAAAQAAAAFAAAAAAIA%MgAAD8IAEAABAAAApgoQAAQAAAACQAAAAAAAAAAAAAAAAIA:AACAvwJAAAAAAAAAAAAAAAAAAAAAAIC%MgAACvIAEAACAAAAFg4QAAEAAABGhCAAAAAAAAAAAADmHhAAAwAAADIAAA3yABAAAgAAAEaEIAAAAAAAAAAAAAJAAAAAAIC:AAAAAAAAgD8AAAAARg4QAAIAAAAyAAAP8gAQAAIAAABGDhAAAgAAAAJAAAAAAIA:AACAvwAAgD8AAIC:AkAAAAAAAAAAAIA:AAAAAAAAgD9IAAAL8gAQAAMAAABGABAAAgAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAEgAAAvyABAAAgAAAOYKEAACAAAAhncQAAAAAAAAYBAAAAAAAAFAAAAAAAAANgAABUIAEAADAAAACgAQAAIAAAAyAAAPogAQAAEAAAAGCBAAAwAAAAJAAAAAAAAAAACgQAAAAAAAAKBAAkAAAAAAAAAAAHDAAAAAAAAAcMA4AAAIUgAQAAIAAABWBxCAgQAAAAEAAAAGAhAAAwAAADYAAAUiABAAAgAAABoAEAADAAAAAAAACvIAEAACAAAARg4QAAIAAAACQAAAAAAAPwAAAD8AAAA:AAAAP0EAAAXyABAAAgAAAEYOEAACAAAAMgAADKIAEAABAAAAVg0QAAIAAAACQAAAAAAAAAAAAEAAAAAAAAAAQAYIEAACAAAAHQAACmIAEAAAAAAAVgYQAAAAAAACQAAAAAAAAGZmZj9mZmY:AAAAADcAAAwyABAAAgAAAJYFEAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAADWBRAAAQAAADIAAAxiABAAAAAAAAYBEAACAAAAAkAAAAAAAAAAAKBBAACgQQAAAAAGAhAAAQAAADIAAA9iABAAAAAAAFYGEAAAAAAAAkAAAAAAAADNzMw7oQ7qOgAAAAACQAAAAAAAAM3MAD%hDmo6AAAAAEgAAAvyABAAAQAAAJYFEAAAAAAARn4QAAEAAAAAYBAAAQAAAAFAAAAAAAAAEgAAATYAAAgyABAAAQAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAFQAAATIAAAoiABAAAAAAAAqAIAAAAAAAAAAAAAFAAAAAAIA%KhAQAAMAAAA2AAAHMgAQAAIAAABGgCCAQQAAAAAAAAAAAAAANgAABUIAEAACAAAAAUAAAAAAgD82AAAFEgAQAAMAAAAaABAAAAAAADYAAAUiABAAAwAAADoQEAADAAAANgAABUIAEAAAAAAACgAQAAUAAAA2AAAFQgAQAAMAAAABQAAAAACAvzYAAAVCABAAAQAAAAFAAAAAAIA:MAAAATEAAAeCABAAAQAAACoAEAADAAAAAUAAAAAA4EAxAAAHggAQAAIAAAABQAAAZmZmPyoAEAABAAAAAQAAB4IAEAABAAAAOgAQAAEAAAA6ABAAAgAAAAMAAAM6ABAAAQAAAAAAAAdyABAAAwAAAEYCEAACAAAARgIQAAMAAAAAAAAIggAQAAMAAAAaABCAQQAAAAMAAAABQAAAAACAP0gAAAvyABAABAAAAMYAEAADAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMgAACYIAEAABAAAACgAQAAQAAAABQAAAAACgQAFAAAAAAHDAOAAACBIAEAAEAAAAOgAQgIEAAAABAAAACgAQAAQAAAAAAAAKMgAQAAQAAABGABAABAAAAAJAAAAAAAA:AAAAPwAAAAAAAAAAQQAABcIAEAAAAAAAVgEQAAQAAAAPAAAKQgAQAAEAAAC2DxAAAAAAAAJAAAAAAAA:AAAAPwAAAAAAAAAAFgAAATIAAA0yABAAAgAAAEaAIAAAAAAAAAAAAAJAAAAAAIA:AAAAAAAAAAAAAAAA5hoQAAMAAAAAAAAIQgAQAAIAAAAaABCAQQAAAAIAAAABQAAAAACAP0gAAAvyABAAAgAAAIYAEAACAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMQAAB4IAEAAAAAAAAUAAAAAAAAAKABAAAgAAAB8ABAM6ABAAAAAAADYAAAYyABAAAgAAAEaAIAAAAAAAAAAAADYAAAVCABAAAgAAAAFAAAAAAIA:NgAABRIAEAAEAAAAGgAQAAAAAAA2AAAFIgAQAAQAAAA6EBAAAwAAADYAAAUSABAABQAAACoAEAAAAAAANgAABUIAEAAEAAAAAUAAAAAAgL82AAAFggAQAAAAAAABQAAAAACAPzAAAAExAAAHggAQAAEAAAAqABAABAAAAAFAAAAAAOBAMQAAB4IAEAACAAAAAUAAAGZmZj86ABAAAAAAAAEAAAeCABAAAQAAADoAEAABAAAAOgAQAAIAAAADAAADOgAQAAEAAAAAAAAHcgAQAAQAAABGAhAAAgAAAEYCEAAEAAAAAAAACIIAEAAEAAAAGgAQgEEAAAAEAAAAAUAAAAAAgD9IAAAL8gAQAAYAAADGABAABAAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAADIAAAmCABAAAQAAAAoAEAAGAAAAAUAAAAAAoEABQAAAAABwwDgAAAgSABAABgAAADoAEICBAAAAAQAAAAoAEAAGAAAAAAAACsIAEAAFAAAABgQQAAYAAAACQAAAAAAAAAAAAAAAAAA:AAAAP0EAAAUyABAABQAAALYPEAAFAAAADwAACoIAEAAAAAAAFgUQAAUAAAACQAAAAAAAPwAAAD8AAAAAAAAAABYAAAExAAAHIgAQAAAAAAABQAAAZmZmPwoAEAAFAAAAAQAAByIAEAAAAAAAGgAQAAAAAAABQAAAAACAPwAAAAciABAAAwAAABoAEAAAAAAAKgAQAAQAAAASAAABNgAABSIAEAADAAAAAUAAAAAAAAA2AAAFggAQAAAAAAABQAAAAAAAABUAAAEAAAAHIgAQAAAAAAAaABAAAwAAACoAEAADAAAAMQAAByIAEAAAAAAAAUAAAAAAAEAaABAAAAAAAB8ABAMaABAAAAAAADYAAAYSABAAAwAAACoAEIBBAAAAAwAAADIAAAryABAAAgAAAAYFEAADAAAARoQgAAAAAAAAAAAA5h4QAAMAAAAyAAAN8gAQAAQAAABGhCAAAAAAAAAAAAACQAAAAACAvwAAAAAAAAAAAACAv0YEEAACAAAAMgAAD:IAEAAEAAAARg4QAAQAAAACQAAAAACAPwAAgL8AAIA:AACAvwJAAAAAAAAAAACAPwAAAAAAAIA:SAAAC:IAEAAFAAAARgAQAAQAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAABIAAAL8gAQAAQAAADmChAABAAAAJZ8EAAAAAAAAGAQAAAAAAABQAAAAAAAADIAAA0yABAAAgAAAEaAIAAAAAAAAAAAAAJAAAAAAIA:AAAAAAAAAAAAAAAA5goQAAIAAAAAAAAIQgAQAAIAAAAaABCAQQAAAAIAAAABQAAAAACAP0gAAAvyABAAAgAAAIYAEAACAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAANgAABRIAEAAEAAAAGgAQAAUAAAA2AAAFogAQAAQAAABWARAAAgAAADIAAAxiABAAAAAAAAYBEAAEAAAAAkAAAAAAAAAAAABAAAAAQAAAAACmCxAABAAAAB0AAAdCABAAAQAAACoAEAABAAAAAUAAAGZmZj8dAAAHggAQAAAAAAA6ABAAAAAAAAFAAABmZmY:NwAACRIAEAACAAAAKgAQAAEAAAABQAAAAAAAABoAEAAAAAAANwAACSIAEAACAAAAOgAQAAAAAAABQAAAAAAAACoAEAAAAAAAMgAADGIAEAAAAAAABgEQAAIAAAACQAAAAAAAAAAAoEEAAKBBAAAAAKYJEAADAAAAMgAAD2IAEAAAAAAAVgYQAAAAAAACQAAAAAAAAM3MzDuhDuo6AAAAAAJAAAAAAAAAzcwAP6EOajoAAAAASAAAC:IAEAACAAAAlgUQAAAAAABGfhAAAQAAAABgEAABAAAAAUAAAAAAAAAAAAAHMgAQAAEAAABGABAAAQAAABYFEAACAAAAFQAAARgAAAgiABAAAAAAABoAEIBBAAAAAQAAAAoAEAABAAAAHwAEAxoAEAAAAAAANgAABaIAEAAAAAAABhQQAAAAAAA2AAAFQgAQAAAAAAABQAAAAACAPzYAAAUSABAAAgAAAAFAAAAAAAAAMAAAATEAAAdCABAAAQAAAAoQEAACAAAAGgAQAAAAAAAxAAAHggAQAAEAAAABQAAAXf5TPyoAEAAAAAAAAQAAB0IAEAABAAAAOgAQAAEAAAAqABAAAQAAABgAAAeCABAAAQAAAAoAEAACAAAAAUAAAAAAAAABAAAHQgAQAAEAAAA6ABAAAQAAACoAEAABAAAAHwAEAyoAEAABAAAAMgAAD8IAEAABAAAAVg0QAAAAAAACQAAAAAAAAAAAAAAAAIA:AACAvwJAAAAAAAAAAAAAAAAAAAAAAIA:SAAAC:IAEAACAAAA5goQAAEAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyAAANMgAQAAMAAABGgCAAAAAAAAAAAAACQAAAAAAAwAAAAIAAAAAAAAAAANYFEAAAAAAANgAABUIAEAADAAAAGgAQAAIAAAA2AAAF4gAQAAAAAAAGBhAAAwAAAAcAAAESAAABAgAAARUAAAEWAAABNgAABcIAEAAAAAAApgYQAAAAAAA2AAAFIgAQAAAAAAAKABAAAgAAADIAAA9iABAAAAAAAFYGEAAAAAAAAkAAAAAAAAAAAAA:AAAAwAAAAAACQAAAAAAAAAAAADwAAAJAAAAAAEgAAAvyABAAAgAAAJYFEAAAAAAARn4QAAIAAAAAYBAAAgAAAAFAAAAAAAAAMgAACSIAEAAAAAAACgAQAAIAAAABQAAAAoEAwAFAAAAAAFBAMgAAChIAEAACAAAACoAgAAAAAAAAAAAAGgAQAAAAAAA6ABAAAAAAAAAAAAgiABAAAgAAABoQEIBBAAAAAQAAAAFAAAAAAIA:SAAAC:IAEAADAAAARgAQAAIAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAA2AAAFogAQAAAAAACmHhAAAAAAADYAAAVCABAAAAAAAAFAAAAAAIA:NgAABRIAEAAEAAAAAUAAAAAAAAAwAAABMQAAB0IAEAABAAAAGgAQAAAAAAAaEBAAAgAAADEAAAeCABAAAQAAAAFAAABd:lM:KgAQAAAAAAABAAAHQgAQAAEAAAA6ABAAAQAAACoAEAABAAAAGAAAB4IAEAABAAAACgAQAAQAAAABQAAAAAAAAAEAAAdCABAAAQAAADoAEAABAAAAKgAQAAEAAAAfAAQDKgAQAAEAAAAyAAAPwgAQAAEAAABWDRAAAAAAAAJAAAAAAAAAAAAAAAAAgD8AAIC:AkAAAAAAAAAAAAAAAAAAAAAAgD9IAAAL8gAQAAQAAADmChAAAQAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAADIAAA0yABAABQAAAEaAIAAAAAAAAAAAAAJAAAAAAABAAAAAAAAAAAAAAAAA1gUQAAAAAAA2AAAFQgAQAAUAAAAaABAABAAAADYAAAXiABAAAAAAAAYGEAAFAAAABwAAARIAAAECAAABFQAAARYAAAE2AAAFwgAQAAAAAACmBhAAAAAAADYAAAUiABAAAAAAAAoAEAAEAAAAMgAAD2IAEAAAAAAAVgYQAAAAAAACQAAAAAAAAAAAAD8AAADAAAAAAAJAAAAAAAAAAAAGPwAAAkAAAAAASAAAC:IAEAAEAAAAlgUQAAAAAABGfhAAAgAAAABgEAACAAAAAUAAAAAAAAAyAAAJIgAQAAAAAAAKABAABAAAAAFAAAACgQDAAUAAAAAAUEAyAAALQgAQAAIAAAAKgCCAQQAAAAAAAAAAAAAAGgAQAAAAAAA6ABAAAAAAADIAAAvyABAABAAAAKaKIAAAAAAAAAAAACYCEAACAAAABhAQgEEAAAADAAAAAAAACvIAEAAEAAAARg4QAAQAAAACQAAAAAAAPwAAAD8AAAA:AAAAP0EAAAXyABAABAAAAEYOEAAEAAAASwAABmIAEAAAAAAA9g4QgIEAAAAEAAAANgAABYIAEAACAAAAGhAQAAEAAAAyAAANMgAQAAUAAABGgCAAAAAAAAAAAAACQAAAAACAPwAAAAAAAAAAAAAAAOYKEAACAAAAAAAACEIAEAAFAAAAGgAQgEEAAAAFAAAAAUAAAAAAgD9IAAAL8gAQAAUAAACGABAABQAAABZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAADYAAAUSABAABQAAAAoAEAADAAAAMgAAD8IAEAABAAAABgQQAAUAAAACQAAAAAAAAAAAAAAAAIBAAACAQAJAAAAAAAAAAAAAAAAAAD8AAAA:QQAABcIAEAABAAAApg4QAAEAAAAyAAAMYgAQAAAAAACmCxAAAQAAAAJAAAAAAAAAAACAQQAAgEEAAAAAVgYQAAAAAAAyAAAPYgAQAAAAAABWBhAAAAAAAAJAAAAAAAAAzczMO6EO6joAAAAAAkAAAAAAAADNzEw7oQ5qOgAAAABIAAAL8gAQAAMAAACWBRAAAAAAAEZ%EAABAAAAAGAQAAEAAAABQAAAAAAAAB0AAAnyABAABAAAAEYOEICBAAAABAAAALYLEICBAAAABAAAAAEAAAryABAABAAAAEYOEAAEAAAAAkAAAAAAgD8AAIA:AABAPwAAQD8AAAAHIgAQAAAAAAAaABAABAAAAAoAEAAEAAAADgAAB2IAEAAAAAAApgsQAAQAAABWBRAAAAAAADYAAAWiABAAAgAAAPYfEAADAAAAMgAADTIAEAAEAAAARoAgAAAAAAAAAAAAAkAAAAAAAAAAAIA:AAAAAAAAAABGABAAAgAAAAAAAAhCABAABAAAABoAEIBBAAAABAAAAAFAAAAAAIA:SAAAC:IAEAAEAAAAhgAQAAQAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyAAAKggAQAAAAAAAaABCAQQAAAAAAAAAKABAABAAAAAFAAAAAAIA:AAAACDIAEAAEAAAA5goQAAIAAABGgCAAAAAAAAAAAAAAAAAIQgAQAAQAAAAaABCAQQAAAAQAAAABQAAAAACAP0gAAAvyABAABAAAAIYAEAAEAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMiAAChIAEAAEAAAAKgAQgEEAAAAAAAAACgAQAAQAAAA6ABAAAAAAADIAAA0yABAABQAAAEaAIAAAAAAAAAAAAAJAAAAAAAAAAAAAwAAAAAAAAAAARgAQAAIAAAAAAAAIQgAQAAUAAAAaABCAQQAAAAUAAAABQAAAAACAP0gAAAvyABAABQAAAIYAEAAFAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMgAACiIAEAAAAAAAGgAQgEEAAAAAAAAACgAQAAUAAAABQAAAAACAPzIAAA0yABAAAgAAAEaAIAAAAAAAAAAAAAJAAAAAAIA:AAAAwAAAAAAAAAAA5goQAAIAAAAAAAAIQgAQAAIAAAAaABCAQQAAAAIAAAABQAAAAACAP0gAAAvyABAAAgAAAIYAEAACAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMiAACiIAEAAEAAAAKgAQgEEAAAAAAAAACgAQAAIAAAAaABAAAAAAADgAAAcyIBAAAAAAAEYAEAADAAAARgAQAAQAAAASAAABNgAABTIgEAAAAAAARgAQAAEAAAA2AAAFEgAQAAAAAAABQAAAAAAAABUAAAESAAABNgAACDIgEAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAVAAABMQAABxIAEAAAAAAAAUAAAAAAAAAKABAAAAAAAB8ABAMKABAAAAAAADYAAAUyABAAAAAAABYVEAABAAAANgAABUIAEAAAAAAAAUAAAAAAgD82AAAFEgAQAAEAAAABQAAAAAAAADAAAAExAAAHggAQAAAAAAAqEBAAAgAAAAoAEAAAAAAAMQAABxIAEAACAAAAAUAAAF3%Uz8qABAAAAAAAAEAAAeCABAAAAAAADoAEAAAAAAACgAQAAIAAAAYAAAHEgAQAAIAAAAKABAAAQAAAAFAAAAAAAAAAQAAB4IAEAAAAAAAOgAQAAAAAAAKABAAAgAAAB8ABAM6ABAAAAAAADIAAA8yABAAAgAAABYFEAAAAAAAAkAAAAAAgD8AAIC:AAAAAAAAAAACQAAAAAAAAAAAgD8AAAAAAAAAAEgAAAvyABAAAQAAAEYAEAACAAAAFn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAMgAADTIAEAACAAAARoAgAAAAAAAAAAAAAkAAAAAAAIAAAADAAAAAAAAAAAAWBRAAAAAAADYAAAVCABAAAgAAABoAEAABAAAANgAABXIAEAAAAAAAFgYQAAIAAAAHAAABEgAAAQIAAAEVAAABFgAAATYAAAUiABAAAQAAACoAEAAAAAAAMgAAD2IAEAAAAAAABgEQAAEAAAACQAAAAAAAAAAAAD8AAADAAAAAAAJAAAAAAAAAAAAAPAAAAkAAAAAASAAAC:IAEAABAAAAlgUQAAAAAABGfhAAAgAAAABgEAACAAAAAUAAAAAAAAAyAAAJIgAQAAAAAAAKABAAAQAAAAFAAAACgQDAAUAAAAAAUEAyAAAKEgAQAAAAAAAagCAAAAAAAAAAAAAaABAAAAAAAAoAEAAAAAAAAAAACCIAEAABAAAACgAQgEEAAAAAAAAAAUAAAAAAgD82AAAFEgAQAAEAAAAKEBAAAAAAAEgAAAvyABAAAQAAAEYAEAABAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAANgAABVIAEAABAAAA9h4QAAEAAAA2AAAFggAQAAEAAAABQAAAAACAPzYAAAUSABAAAgAAAAFAAAAAAAAAMAAAATEAAAcSABAAAwAAAAoAEAABAAAAOhAQAAIAAAAxAAAHIgAQAAMAAAABQAAAXf5TPzoAEAABAAAAAQAABxIAEAADAAAAGgAQAAMAAAAKABAAAwAAABgAAAciABAAAwAAAAoAEAACAAAAAUAAAAAAAAABAAAHEgAQAAMAAAAaABAAAwAAAAoAEAADAAAAHwAEAwoAEAADAAAAMgAADzIAEAADAAAAJgoQAAEAAAACQAAAAACAPwAAgL8AAAAAAAAAAAJAAAAAAAAAAACAPwAAAAAAAAAASAAAC:IAEAACAAAARgAQAAMAAAAWfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyAAANMgAQAAMAAABGgCAAAAAAAAAAAAACQAAAAAAAAAAAAEAAAAAAAAAAACYKEAABAAAANgAABUIAEAADAAAAGgAQAAIAAAA2AAAF0gAQAAEAAABWCBAAAwAAAAcAAAESAAABAgAAARUAAAEWAAABNgAABSIAEAACAAAAOgAQAAEAAAAyAAAPwgAQAAEAAAAGBBAAAgAAAAJAAAAAAAAAAAAAAAAAAD8AAADAAkAAAAAAAAAAAAAAAAAGPwAAAkBIAAAL8gAQAAIAAADmChAAAQAAAEZ%EAACAAAAAGAQAAIAAAABQAAAAAAAADIAAAlCABAAAQAAAAoAEAACAAAAAUAAAAKBAMABQAAAAABQQDIAAAsiABAAAAAAABqAIIBBAAAAAAAAAAAAAAAqABAAAQAAAAoAEAABAAAAMgAAC:IAEAACAAAA9o8gAAAAAAAAAAAAFgEQAAAAAABWFRCAQQAAAAMAAAAAAAAK8gAQAAIAAABGDhAAAgAAAAJAAAAAAAA:AAAAPwAAAD8AAAA:QQAABfIAEAACAAAARg4QAAIAAABLAAAGUgAQAAEAAAD2DhCAgQAAAAIAAAA2AAAFQgAQAAAAAAAKEBAAAAAAADIAAA0yABAAAwAAAEaAIAAAAAAAAAAAAAJAAAAAAAAAAACAPwAAAAAAAAAAZgoQAAAAAAAAAAAIQgAQAAMAAAAaABCAQQAAAAMAAAABQAAAAACAP0gAAAvyABAAAwAAAIYAEAADAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAANgAABRIAEAADAAAAGgAQAAEAAAAyAAAPogAQAAEAAAAGBBAAAwAAAAJAAAAAAAAAAACAQAAAAAAAAIBAAkAAAAAAAAAAAAA:AAAAAAAAAD9BAAAFogAQAAEAAABWDRAAAQAAADIAAAwyABAAAQAAANYFEAABAAAAAkAAAAAAgEEAAIBBAAAAAAAAAACGABAAAQAAADIAAA8yABAAAQAAAEYAEAABAAAAAkAAAM3MzDuhDuo6AAAAAAAAAAACQAAAzcxMO6EOajoAAAAAAAAAAEgAAAvyABAAAQAAAEYAEAABAAAARn4QAAEAAAAAYBAAAQAAAAFAAAAAAAAAHQAACfIAEAACAAAARg4QgIEAAAACAAAAtgsQgIEAAAACAAAAAQAACvIAEAACAAAARg4QAAIAAAACQAAAAACAPwAAgD8AAEA:AABAPwAAAAdCABAAAAAAABoAEAACAAAACgAQAAIAAAAOAAAHwgAQAAEAAACmDhAAAgAAAKYKEAAAAAAANgAABYIAEAAAAAAAKhAQAAMAAAAyAAANMgAQAAIAAABGgCAAAAAAAAAAAAACQAAAAACAPwAAAAAAAAAAAAAAADYPEAAAAAAAAAAACEIAEAACAAAAGgAQgEEAAAACAAAAAUAAAAAAgD9IAAAL8gAQAAIAAACGABAAAgAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAADIAAApCABAAAAAAACoAEIBBAAAAAQAAABoAEAACAAAAAUAAAAAAgD8AAAAIMgAQAAIAAAB2DxAAAAAAAEaAIAAAAAAAAAAAAAAAAAhCABAAAgAAABoAEIBBAAAAAgAAAAFAAAAAAIA:SAAAC:IAEAACAAAAhgAQAAIAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyIAAKQgAQAAIAAAA6ABCAQQAAAAEAAAAaABAAAgAAACoAEAAAAAAAMgAADTIAEAADAAAARoAgAAAAAAAAAAAAAkAAAAAAAMAAAAAAAAAAAAAAAAA2DxAAAAAAAAAAAAhCABAAAwAAABoAEIBBAAAAAwAAAAFAAAAAAIA:SAAAC:IAEAADAAAAhgAQAAMAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyAAAKEgAQAAAAAAAqABCAQQAAAAEAAAAaABAAAwAAAAFAAAAAAIA:MgAADTIAEAADAAAARoAgAAAAAAAAAAAAAkAAAAAAAMAAAIA:AAAAAAAAAAB2DxAAAAAAAAAAAAhCABAAAwAAABoAEIBBAAAAAwAAAAFAAAAAAIA:SAAAC:IAEAADAAAAhgAQAAMAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyIAAKggAQAAIAAAA6ABCAQQAAAAEAAAAaABAAAwAAAAoAEAAAAAAAOAAAB8IgEAAAAAAABgQQAAEAAACmDhAAAgAAABIAAAE2AAAIwiAQAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAABUAAAE%AAABU1RBVHQAAABYAQAABwAAAAAAAAAGAAAAnwAAAAAAAAAQAAAAEwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAAAAAAAAAAAAAAAAARgAAAAMAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIAPgEATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAAJ8AAACUAgAAAAAAAJszgAAAAAAAAAAAAAAAAAAAAAAADwguMQEIW2JkAQAAAHIo3%7vQR9FgYjgY0vhVe8AAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzmZnNldDI7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MTsKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgcGl4Y29vcmQ7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQ0IG9mZnNldDAgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgb2Zmc2V0MSA6IFRFWENPT1JEMTsKICAgIGZsb2F0NCBvZmZzZXQyIDogVEVYQ09PUkQyOwogICAgZmxvYXQyIHBpeGNvb3JkIDogVEVYQ09PUkQzOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQ0Owp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCnN0YXRpYyBmbG9hdDIgY2R3X2VuZDsKCmZsb2F0NCB0ZXh0dXJlTG9kQShUZXh0dXJlMkQ8ZmxvYXQ0PiB0ZXgsIFNhbXBsZXJTdGF0ZSBfdGV4X3NhbXBsZXIsIGlub3V0IGZsb2F0MiBjb29yZCwgZmxvYXQgbG9kKQp7CiAgICBjb29yZC55ID0gMS4wZiDGWgAAdYMBAMQxAQAIaAAAJvcCAH6LAwDBwwAAMfsDAKjRAABQhQEA02MAAAONAgBBJAEA27cBAOoUAwC4HAMAqnMBAEJ1AADp8AIAs8sAABblAwDmBwIATOgDABlgAwAG%QIAfKUAAEsSAAAfaQMAW5UBACGMAQCS5gMA3RsAAO%mAwDBvQIA%TwAALV7AgCMkAMAlTEDAC8HAADV:wAAPB4DAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVuaWZvcm0gZmxvYXQyIHNjcmVlblNpemVJbnY7ClRleHR1cmUyRDxmbG9hdDQ%IGVkZ2VzVGV4IDogcmVnaXN0ZXIodDApOwpTYW1wbGVyU3RhdGUgX2VkZ2VzVGV4X3NhbXBsZXIgOiByZWdpc3RlcihzMCk7ClRleHR1cmUyRDxmbG9hdDQ%IGFyZWFUZXggOiByZWdpc3Rlcih0MSk7ClNhbXBsZXJTdGF0ZSBfYXJlYVRleF9zYW1wbGVyIDogcmVnaXN0ZXIoczEpOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBzZWFyY2hUZXggOiByZWdpc3Rlcih0Mik7ClNhbXBsZXJTdGF0ZSBfc2VhcmNoVGV4X3NhbXBsZXIgOiByZWdpc3RlcihzMik7CnVuaWZvcm0gZmxvYXQyIHNjcmVlblNpemU7CgpzdGF0aWMgZmxvYXQ0IG9mZnNldDA7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MjsKc3RhdGljIGZsb2F0NCBvZmZzZXQxOwpzdGF0aWMgZmxvYXQ0IGZyYWdDb2xvcjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwaXhjb29yZDsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgb2Zmc2V0MCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBvZmZzZXQxIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IG9mZnNldDIgOiBURVhDT09SRDI7CiAgICBmbG9hdDIgcGl4Y29vcmQgOiBURVhDT09SRDM7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDQ7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKc3RhdGljIGZsb2F0MiBjZHdfZW5kOwoKZmxvYXQ0IHRleHR1cmVMb2RBKFRleHR1cmUyRDxmbG9hdDQ%IHRleCwgU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciwgaW5vdXQgZmxvYXQyIGNvb3JkLCBmbG9hdCBsb2QpCnsKICAgIGNvb3JkLnkgPSAxLjBmIC0gY29vcmQueTsKICAgIHJldHVybiB0ZXguU2FtcGxlTGV2ZWwoX3RleF9zYW1wbGVyLCBjb29yZCwgbG9kKTsKfQoKZmxvYXQyIFNNQUFTZWFyY2hEaWFnMShmbG9hdDIgdGV4Y29vcmQsIGZsb2F0MiBkaXIpCnsKICAgIGZsb2F0NCBjb29yZCA9IGZsb2F0NCh0ZXhjb29yZCwgLTEuMGYsIDEuMGYpOwogICAgZmxvYXQzIHQgPSBmbG9hdDMoc2NyZWVuU2l6ZUludiwgMS4wZik7CiAgICBmbG9hdCBjdyA9IGNvb3JkLnc7CiAgICB3aGlsZSAoKGNvb3JkLnogPCA3LjBmKSAmJiAoY3cgPiAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1ZikpCiAgICB7CiAgICAgICAgZmxvYXQzIF8xODYgPSAodCAqIGZsb2F0MyhkaXIsIDEuMGYpKSArIGNvb3JkLnh5ejsKICAgICAgICBjb29yZCA9IGZsb2F0NChfMTg2LngsIF8xODYueSwgXzE4Ni56LCBjb29yZC53KTsKICAgICAgICBmbG9hdDIgcGFyYW0gPSBjb29yZC54eTsKICAgICAgICBmbG9hdCBwYXJhbV8xID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzE5NyA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGNkd19lbmQgPSBfMTk3Lnh5OwogICAgICAgIGN3ID0gZG90KGNkd19lbmQsIDAuNWYueHgpOwogICAgfQogICAgY29vcmQudyA9IGN3OwogICAgcmV0dXJuIGNvb3JkLnp3Owp9CgpmbG9hdDQgU01BQURlY29kZURpYWdCaWxpbmVhckFjY2Vzcyhpbm91dCBmbG9hdDQgZSkKewogICAgZmxvYXQyIF8xMzUgPSBlLnh6ICogYWJzKChlLnh6ICogNS4wZikgLSAzLjc1Zi54eCk7CiAgICBlID0gZmxvYXQ0KF8xMzUueCwgZS55LCBfMTM1LnksIGUudyk7CiAgICByZXR1cm4gZmxvb3IoZSArIDAuNWYueHh4eCk7Cn0KCmZsb2F0MiBTTUFBQXJlYURpYWcoZmxvYXQyIGRpc3QsIGZsb2F0MiBlLCBmbG9hdCBvZmZzZXQpCnsKICAgIGZsb2F0MiB0ZXhjb29yZCA9ICgyMC4wZi54eCAqIGUpICsgZGlzdDsKICAgIHRleGNvb3JkID0gKGZsb2F0MigwLjAwNjI1MDAwMDA5MzEzMjI1NzQ2MTU0Nzg1MTU2MjVmLCAwLjAwMTc4NTcxNDI5NTY5Mjc0MTg3MDg4MDEyNjk1MzEyNWYpICogdGV4Y29vcmQpICsgZmxvYXQyKDAuMDAzMTI1MDAwMDQ2NTY2MTI4NzMwNzczOTI1NzgxMjVmLCAwLjAwMDg5Mjg1NzE0Nzg0NjM3MDkzNTQ0MDA2MzQ3NjU2MjVmKTsKICAgIHRleGNvb3JkLnggKz0gMC41ZjsKICAgIHRleGNvb3JkLnkgKz0gKDAuMTQyODU3MTQ5MjQzMzU0Nzk3MzYzMjgxMjVmICogb2Zmc2V0KTsKICAgIHJldHVybiBhcmVhVGV4LlNhbXBsZUxldmVsKF9hcmVhVGV4X3NhbXBsZXIsIHRleGNvb3JkLCAwLjBmKS54eTsKfQoKZmxvYXQyIFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MoaW5vdXQgZmxvYXQyIGUpCnsKICAgIGUueCAqPSBhYnMoKDUuMGYgKiBlLngpIC0gMy43NWYpOwogICAgcmV0dXJuIGZsb29yKGUgKyAwLjVmLnh4KTsKfQoKZmxvYXQyIFNNQUFTZWFyY2hEaWFnMihmbG9hdDIgdGV4Y29vcmQsIGZsb2F0MiBkaXIpCnsKICAgIGZsb2F0NCBjb29yZCA9IGZsb2F0NCh0ZXhjb29yZCwgLTEuMGYsIDEuMGYpOwogICAgY29vcmQueCArPSAoMC4yNWYgKiBzY3JlZW5TaXplSW52LngpOwogICAgZmxvYXQzIHQgPSBmbG9hdDMoc2NyZWVuU2l6ZUludiwgMS4wZik7CiAgICBmbG9hdCBjdyA9IGNvb3JkLnc7CiAgICB3aGlsZSAoKGNvb3JkLnogPCA3LjBmKSAmJiAoY3cgPiAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1ZikpCiAgICB7CiAgICAgICAgZmxvYXQzIF8yNDkgPSAodCAqIGZsb2F0MyhkaXIsIDEuMGYpKSArIGNvb3JkLnh5ejsKICAgICAgICBjb29yZCA9IGZsb2F0NChfMjQ5LngsIF8yNDkueSwgXzI0OS56LCBjb29yZC53KTsKICAgICAgICBmbG9hdDIgcGFyYW0gPSBjb29yZC54eTsKICAgICAgICBmbG9hdCBwYXJhbV8xID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzI1NiA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGNkd19lbmQgPSBfMjU2Lnh5OwogICAgICAgIGZsb2F0MiBwYXJhbV8yID0gY2R3X2VuZDsKICAgICAgICBmbG9hdDIgXzI2MCA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fMik7CiAgICAgICAgY2R3X2VuZCA9IF8yNjA7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgMC41Zi54eCk7CiAgICB9CiAgICBjb29yZC53ID0gY3c7CiAgICByZXR1cm4gY29vcmQuenc7Cn0KCmZsb2F0MiBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMoZmxvYXQyIHRleGNvb3JkLCBmbG9hdDIgZSwgZmxvYXQ0IHN1YnNhbXBsZUluZGljZXMpCnsKICAgIGZsb2F0MiB3ZWlnaHRzID0gMC4wZi54eDsKICAgIGZsb2F0NCBkOwogICAgaWYgKGUueCA%IDAuMGYpCiAgICB7CiAgICAgICAgZmxvYXQyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgZmxvYXQyIHBhcmFtXzEgPSBmbG9hdDIoLTEuMGYsIDEuMGYpOwogICAgICAgIGZsb2F0MiBfMzE1ID0gU01BQVNlYXJjaERpYWcxKHBhcmFtLCBwYXJhbV8xKTsKICAgICAgICBkID0gZmxvYXQ0KF8zMTUueCwgZC55LCBfMzE1LnksIGQudyk7CiAgICAgICAgZmxvYXQgZGFkZCA9IGZsb2F0KGNkd19lbmQueSA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmKTsKICAgICAgICBkLnggKz0gZGFkZDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBkID0gZmxvYXQ0KDAuMGYueHgueCwgZC55LCAwLjBmLnh4LnksIGQudyk7CiAgICB9CiAgICBmbG9hdDIgcGFyYW1fMiA9IHRleGNvb3JkOwogICAgZmxvYXQyIHBhcmFtXzMgPSBmbG9hdDIoMS4wZiwgLTEuMGYpOwogICAgZmxvYXQyIF8zMzYgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW1fMiwgcGFyYW1fMyk7CiAgICBkID0gZmxvYXQ0KGQueCwgXzMzNi54LCBkLnosIF8zMzYueSk7CiAgICBpZiAoKGQueCArIGQueSkgPiAyLjBmKQogICAgewogICAgICAgIGZsb2F0NCBjb29yZHMgPSAoZmxvYXQ0KCgtZC54KSArIDAuMjVmLCBkLngsIGQueSwgKC1kLnkpIC0gMC4yNWYpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzQgPSBjb29yZHMueHkgKyAoZmxvYXQyKC0xLjBmLCAwLjBmKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGZsb2F0IHBhcmFtXzUgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfMzc3ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV80LCBwYXJhbV81KTsKICAgICAgICBmbG9hdDQgYzsKICAgICAgICBjID0gZmxvYXQ0KF8zNzcueHkueCwgXzM3Ny54eS55LCBjLnosIGMudyk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzYgPSBjb29yZHMuencgKyAoZmxvYXQyKDEuMGYsIDAuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICAgICAgZmxvYXQgcGFyYW1fNyA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF8zODkgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzYsIHBhcmFtXzcpOwogICAgICAgIGMgPSBmbG9hdDQoYy54LCBjLnksIF8zODkueHkueCwgXzM4OS54eS55KTsKICAgICAgICBmbG9hdDQgcGFyYW1fOCA9IGM7CiAgICAgICAgZmxvYXQ0IF8zOTUgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzgpOwogICAgICAgIGMgPSBmbG9hdDQoXzM5NS55LCBfMzk1LngsIF8zOTUudywgXzM5NS56KTsKICAgICAgICBmbG9hdDIgY2MgPSAoMi4wZi54eCAqIGMueHopICsgYy55dzsKICAgICAgICBmbG9hdCBhMWNvbmR4ID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1ZiwgZC56KTsKICAgICAgICBmbG9hdCBhMWNvbmR5ID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1ZiwgZC53KTsKICAgICAgICBpZiAoYTFjb25keCA9PSAxLjBmKQogICAgICAgIHsKICAgICAgICAgICAgY2MueCA9IDAuMGY7CiAgICAgICAgfQogICAgICAgIGlmIChhMWNvbmR5ID09IDEuMGYpCiAgICAgICAgewogICAgICAgICAgICBjYy55ID0gMC4wZjsKICAgICAgICB9CiAgICAgICAgZmxvYXQyIHBhcmFtXzkgPSBkLnh5OwogICAgICAgIGZsb2F0MiBwYXJhbV8xMCA9IGNjOwogICAgICAgIGZsb2F0IHBhcmFtXzExID0gc3Vic2FtcGxlSW5kaWNlcy56OwogICAgICAgIHdlaWdodHMgKz0gU01BQUFyZWFEaWFnKHBhcmFtXzksIHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICB9CiAgICBmbG9hdDIgcGFyYW1fMTIgPSB0ZXhjb29yZDsKICAgIGZsb2F0MiBwYXJhbV8xMyA9ICgtMS4wZikueHg7CiAgICBmbG9hdDIgXzQzOSA9IFNNQUFTZWFyY2hEaWFnMihwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgZCA9IGZsb2F0NChfNDM5LngsIGQueSwgXzQzOS55LCBkLncpOwogICAgZmxvYXQyIHBhcmFtXzE0ID0gdGV4Y29vcmQgKyAoZmxvYXQyKDEuMGYsIDAuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICBmbG9hdCBwYXJhbV8xNSA9IDAuMGY7CiAgICBmbG9hdDQgXzQ0OCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMTQsIHBhcmFtXzE1KTsKICAgIGlmIChfNDQ4LnggPiAwLjBmKQogICAgewogICAgICAgIGZsb2F0MiBwYXJhbV8xNiA9IHRleGNvb3JkOwogICAgICAgIGZsb2F0MiBwYXJhbV8xNyA9IDEuMGYueHg7CiAgICAgICAgZmxvYXQyIF80NTcgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fMTYsIHBhcmFtXzE3KTsKICAgICAgICBkID0gZmxvYXQ0KGQueCwgXzQ1Ny54LCBkLnosIF80NTcueSk7CiAgICAgICAgZmxvYXQgZGFkZF8xID0gZmxvYXQoY2R3X2VuZC55ID4gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NWYpOwogICAgICAgIGQueSArPSBkYWRkXzE7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZCA9IGZsb2F0NChkLngsIDAuMGYueHgueCwgZC56LCAwLjBmLnh4LnkpOwogICAgfQogICAgaWYgKChkLnggKyBkLnkpID4gMi4wZikKICAgIHsKICAgICAgICBmbG9hdDQgY29vcmRzXzEgPSAoZmxvYXQ0KC1kLngsIC1kLngsIGQueSwgZC55KSAqIHNjcmVlblNpemVJbnYueHl4eSkgKyB0ZXhjb29yZC54eXh5OwogICAgICAgIGZsb2F0MiBwYXJhbV8xOCA9IGNvb3Jkc18xLnh5ICsgKGZsb2F0MigtMS4wZiwgMC4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBmbG9hdCBwYXJhbV8xOSA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF81MDcgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzE4LCBwYXJhbV8xOSk7CiAgICAgICAgZmxvYXQ0IGNfMTsKICAgICAgICBjXzEueCA9IF81MDcueTsKICAgICAgICBmbG9hdDIgcGFyYW1fMjAgPSBjb29yZHNfMS54eSArIChmbG9hdDIoMC4wZiwgLTEuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICAgICAgZmxvYXQgcGFyYW1fMjEgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfNTE4ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV8yMCwgcGFyYW1fMjEpOwogICAgICAgIGNfMS55ID0gXzUxOC54OwogICAgICAgIGZsb2F0MiBwYXJhbV8yMiA9IGNvb3Jkc18xLnp3ICsgKGZsb2F0MigxLjBmLCAwLjBmKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGZsb2F0IHBhcmFtXzIzID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzUyOCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMjIsIHBhcmFtXzIzKTsKICAgICAgICBjXzEgPSBmbG9hdDQoY18xLngsIGNfMS55LCBfNTI4Lnl4LngsIF81MjgueXgueSk7CiAgICAgICAgZmxvYXQyIGNjXzEgPSAoMi4wZi54eCAqIGNfMS54eikgKyBjXzEueXc7CiAgICAgICAgZmxvYXQgYTFjb25keF8xID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1ZiwgZC56KTsKICAgICAgICBmbG9hdCBhMWNvbmR5XzEgPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmLCBkLncpOwogICAgICAgIGlmIChhMWNvbmR4XzEgPT0gMS4wZikKICAgICAgICB7CiAgICAgICAgICAgIGNjXzEueCA9IDAuMGY7CiAgICAgICAgfQogICAgICAgIGlmIChhMWNvbmR5XzEgPT0gMS4wZikKICAgICAgICB7CiAgICAgICAgICAgIGNjXzEueSA9IDAuMGY7CiAgICAgICAgfQogICAgICAgIGZsb2F0MiBwYXJhbV8yNCA9IGQueHk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzI1ID0gY2NfMTsKICAgICAgICBmbG9hdCBwYXJhbV8yNiA9IHN1YnNhbXBsZUluZGljZXMudzsKICAgICAgICB3ZWlnaHRzICs9IFNNQUFBcmVhRGlhZyhwYXJhbV8yNCwgcGFyYW1fMjUsIHBhcmFtXzI2KS55eDsKICAgIH0KICAgIHJldHVybiB3ZWlnaHRzOwp9CgpmbG9hdCBTTUFBU2VhcmNoTGVuZ3RoKGZsb2F0MiBlLCBmbG9hdCBvZmZzZXQpCnsKICAgIGZsb2F0MiBzY2FsZSA9IGZsb2F0MigzMy4wZiwgLTMzLjBmKTsKICAgIGZsb2F0MiBiaWFzID0gZmxvYXQyKDY2LjBmLCAzMy4wZikgKiBmbG9hdDIob2Zmc2V0LCAxLjBmKTsKICAgIHNjYWxlICs9IGZsb2F0MigtMS4wZiwgMS4wZik7CiAgICBiaWFzICs9IGZsb2F0MigwLjVmLCAtMC41Zik7CiAgICBzY2FsZSAqPSBmbG9hdDIoMC4wMTU2MjVmLCAwLjA2MjVmKTsKICAgIGJpYXMgKj0gZmxvYXQyKDAuMDE1NjI1ZiwgMC4wNjI1Zik7CiAgICBmbG9hdDIgY29vcmQgPSAoc2NhbGUgKiBlKSArIGJpYXM7CiAgICByZXR1cm4gc2VhcmNoVGV4LlNhbXBsZUxldmVsKF9zZWFyY2hUZXhfc2FtcGxlciwgY29vcmQsIDAuMGYpLng7Cn0KCmZsb2F0IFNNQUFTZWFyY2hYTGVmdChpbm91dCBmbG9hdDIgdGV4Y29vcmQsIGZsb2F0IGVuZCkKewogICAgZmxvYXQyIGUgPSBmbG9hdDIoMC4wZiwgMS4wZik7CiAgICBmb3IgKDs7KQogICAgewogICAgICAgIGJvb2wgXzYxOCA9IHRleGNvb3JkLnggPiBlbmQ7CiAgICAgICAgYm9vbCBfNjI1OwogICAgICAgIGlmIChfNjE4KQogICAgICAgIHsKICAgICAgICAgICAgXzYyNSA9IGUueSA%IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1ZjsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgXzYyNSA9IF82MTg7CiAgICAgICAgfQogICAgICAgIGJvb2wgXzYzMTsKICAgICAgICBpZiAoXzYyNSkKICAgICAgICB7CiAgICAgICAgICAgIF82MzEgPSBlLnggPT0gMC4wZjsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgXzYzMSA9IF82MjU7CiAgICAgICAgfQogICAgICAgIGlmIChfNjMxKQogICAgICAgIHsKICAgICAgICAgICAgZmxvYXQyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgICAgICAgICBmbG9hdDQgXzYzNSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW0sIHBhcmFtXzEpOwogICAgICAgICAgICBlID0gXzYzNS54eTsKICAgICAgICAgICAgdGV4Y29vcmQgPSAoZmxvYXQyKC0yLjBmLCAtMC4wZikgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQogICAgZmxvYXQyIHBhcmFtXzIgPSBlOwogICAgZmxvYXQgcGFyYW1fMyA9IDAuMGY7CiAgICBmbG9hdCBvZmZzZXQgPSAoKC0yLjAwNzg3NDAxMTk5MzQwODIwMzEyNWYpICogU01BQVNlYXJjaExlbmd0aChwYXJhbV8yLCBwYXJhbV8zKSkgKyAzLjI1ZjsKICAgIHJldHVybiAoc2NyZWVuU2l6ZUludi54ICogb2Zmc2V0KSArIHRleGNvb3JkLng7Cn0KCmZsb2F0IFNNQUFTZWFyY2hYUmlnaHQoaW5vdXQgZmxvYXQyIHRleGNvb3JkLCBmbG9hdCBlbmQpCnsKICAgIGZsb2F0MiBlID0gZmxvYXQyKDAuMGYsIDEuMGYpOwogICAgZm9yICg7OykKICAgIHsKICAgICAgICBib29sIF82NzEgPSB0ZXhjb29yZC54IDwgZW5kOwogICAgICAgIGJvb2wgXzY3NzsKICAgICAgICBpZiAoXzY3MSkKICAgICAgICB7CiAgICAgICAgICAgIF82NzcgPSBlLnkgPiAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNWY7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF82NzcgPSBfNjcxOwogICAgICAgIH0KICAgICAgICBib29sIF82ODM7CiAgICAgICAgaWYgKF82NzcpCiAgICAgICAgewogICAgICAgICAgICBfNjgzID0gZS54ID09IDAuMGY7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF82ODMgPSBfNjc3OwogICAgICAgIH0KICAgICAgICBpZiAoXzY4MykKICAgICAgICB7CiAgICAgICAgICAgIGZsb2F0MiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgICAgICBmbG9hdCBwYXJhbV8xID0gMC4wZjsKICAgICAgICAgICAgZmxvYXQ0IF82ODcgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtLCBwYXJhbV8xKTsKICAgICAgICAgICAgZSA9IF82ODcueHk7CiAgICAgICAgICAgIHRleGNvb3JkID0gKGZsb2F0MigyLjBmLCAwLjBmKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CiAgICBmbG9hdDIgcGFyYW1fMiA9IGU7CiAgICBmbG9hdCBwYXJhbV8zID0gMC41ZjsKICAgIGZsb2F0IG9mZnNldCA9ICgoLTIuMDA3ODc0MDExOTkzNDA4MjAzMTI1ZikgKiBTTUFBU2VhcmNoTGVuZ3RoKHBhcmFtXzIsIHBhcmFtXzMpKSArIDMuMjVmOwogICAgcmV0dXJuICgoLXNjcmVlblNpemVJbnYueCkgKiBvZmZzZXQpICsgdGV4Y29vcmQueDsKfQoKZmxvYXQyIFNNQUFBcmVhKGZsb2F0MiBkaXN0LCBmbG9hdCBlMSwgZmxvYXQgZTIsIGZsb2F0IG9mZnNldCkKewogICAgZmxvYXQyIHRleGNvb3JkID0gKDE2LjBmLnh4ICogZmxvb3IoKGZsb2F0MihlMSwgZTIpICogNC4wZikgKyAwLjVmLnh4KSkgKyBkaXN0OwogICAgdGV4Y29vcmQgPSAoZmxvYXQyKDAuMDA2MjUwMDAwMDkzMTMyMjU3NDYxNTQ3ODUxNTYyNWYsIDAuMDAxNzg1NzE0Mjk1NjkyNzQxODcwODgwMTI2OTUzMTI1ZikgKiB0ZXhjb29yZCkgKyBmbG9hdDIoMC4wMDMxMjUwMDAwNDY1NjYxMjg3MzA3NzM5MjU3ODEyNWYsIDAuMDAwODkyODU3MTQ3ODQ2MzcwOTM1NDQwMDYzNDc2NTYyNWYpOwogICAgdGV4Y29vcmQueSA9ICgwLjE0Mjg1NzE0OTI0MzM1NDc5NzM2MzI4MTI1ZiAqIG9mZnNldCkgKyB0ZXhjb29yZC55OwogICAgcmV0dXJuIGFyZWFUZXguU2FtcGxlTGV2ZWwoX2FyZWFUZXhfc2FtcGxlciwgdGV4Y29vcmQsIDAuMGYpLnh5Owp9CgpmbG9hdDIgU01BQURldGVjdEhvcml6b250YWxDb3JuZXJQYXR0ZXJuKGlub3V0IGZsb2F0MiB3ZWlnaHRzLCBmbG9hdDQgdGV4Y29vcmQsIGZsb2F0MiBkKQp7CiAgICBmbG9hdDIgbGVmdFJpZ2h0ID0gc3RlcChkLCBkLnl4KTsKICAgIGZsb2F0MiByb3VuZGluZyA9IGxlZnRSaWdodCAqIDAuNzVmOwogICAgcm91bmRpbmcgLz0gKGxlZnRSaWdodC54ICsgbGVmdFJpZ2h0LnkpLnh4OwogICAgZmxvYXQyIGZhY3RvciA9IDEuMGYueHg7CiAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZC54eSArIChmbG9hdDIoMC4wZiwgMS4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgZmxvYXQ0IF84NjYgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogXzg2Ni54KTsKICAgIGZsb2F0MiBwYXJhbV8yID0gdGV4Y29vcmQuencgKyAoMS4wZi54eCAqIHNjcmVlblNpemVJbnYpOwogICAgZmxvYXQgcGFyYW1fMyA9IDAuMGY7CiAgICBmbG9hdDQgXzg4MiA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMiwgcGFyYW1fMyk7CiAgICBmYWN0b3IueCAtPSAocm91bmRpbmcueSAqIF84ODIueCk7CiAgICBmbG9hdDIgcGFyYW1fNCA9IHRleGNvb3JkLnh5ICsgKGZsb2F0MigwLjBmLCAtMi4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgIGZsb2F0IHBhcmFtXzUgPSAwLjBmOwogICAgZmxvYXQ0IF84OTkgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzQsIHBhcmFtXzUpOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiBfODk5LngpOwogICAgZmxvYXQyIHBhcmFtXzYgPSB0ZXhjb29yZC56dyArIChmbG9hdDIoMS4wZiwgLTIuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICBmbG9hdCBwYXJhbV83ID0gMC4wZjsKICAgIGZsb2F0NCBfOTE2ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV82LCBwYXJhbV83KTsKICAgIGZhY3Rvci55IC09IChyb3VuZGluZy55ICogXzkxNi54KTsKICAgIHdlaWdodHMgKj0gY2xhbXAoZmFjdG9yLCAwLjBmLnh4LCAxLjBmLnh4KTsKICAgIHJldHVybiB3ZWlnaHRzOwp9CgpmbG9hdCBTTUFBU2VhcmNoWVVwKGlub3V0IGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQgZW5kKQp7CiAgICBmbG9hdDIgZSA9IGZsb2F0MigxLjBmLCAwLjBmKTsKICAgIGZvciAoOzspCiAgICB7CiAgICAgICAgYm9vbCBfNzIwID0gdGV4Y29vcmQueSA%IGVuZDsKICAgICAgICBib29sIF83MjY7CiAgICAgICAgaWYgKF83MjApCiAgICAgICAgewogICAgICAgICAgICBfNzI2ID0gZS54ID4gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjVmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzI2ID0gXzcyMDsKICAgICAgICB9CiAgICAgICAgYm9vbCBfNzMyOwogICAgICAgIGlmIChfNzI2KQogICAgICAgIHsKICAgICAgICAgICAgXzczMiA9IGUueSA9PSAwLjBmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzMyID0gXzcyNjsKICAgICAgICB9CiAgICAgICAgaWYgKF83MzIpCiAgICAgICAgewogICAgICAgICAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMSA9IDAuMGY7CiAgICAgICAgICAgIGZsb2F0NCBfNzM2ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgICAgIGUgPSBfNzM2Lnh5OwogICAgICAgICAgICB0ZXhjb29yZCA9IChmbG9hdDIoLTAuMGYsIC0yLjBmKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CiAgICBmbG9hdDIgcGFyYW1fMiA9IGUueXg7CiAgICBmbG9hdCBwYXJhbV8zID0gMC4wZjsKICAgIGZsb2F0IG9mZnNldCA9ICgoLTIuMDA3ODc0MDExOTkzNDA4MjAzMTI1ZikgKiBTTUFBU2VhcmNoTGVuZ3RoKHBhcmFtXzIsIHBhcmFtXzMpKSArIDMuMjVmOwogICAgcmV0dXJuIChzY3JlZW5TaXplSW52LnkgKiBvZmZzZXQpICsgdGV4Y29vcmQueTsKfQoKZmxvYXQgU01BQVNlYXJjaFlEb3duKGlub3V0IGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQgZW5kKQp7CiAgICBmbG9hdDIgZSA9IGZsb2F0MigxLjBmLCAwLjBmKTsKICAgIGZvciAoOzspCiAgICB7CiAgICAgICAgYm9vbCBfNzY5ID0gdGV4Y29vcmQueSA8IGVuZDsKICAgICAgICBib29sIF83NzU7CiAgICAgICAgaWYgKF83NjkpCiAgICAgICAgewogICAgICAgICAgICBfNzc1ID0gZS54ID4gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjVmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzc1ID0gXzc2OTsKICAgICAgICB9CiAgICAgICAgYm9vbCBfNzgxOwogICAgICAgIGlmIChfNzc1KQogICAgICAgIHsKICAgICAgICAgICAgXzc4MSA9IGUueSA9PSAwLjBmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzgxID0gXzc3NTsKICAgICAgICB9CiAgICAgICAgaWYgKF83ODEpCiAgICAgICAgewogICAgICAgICAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMSA9IDAuMGY7CiAgICAgICAgICAgIGZsb2F0NCBfNzg1ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgICAgIGUgPSBfNzg1Lnh5OwogICAgICAgICAgICB0ZXhjb29yZCA9IChmbG9hdDIoMC4wZiwgMi4wZikgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQogICAgZmxvYXQyIHBhcmFtXzIgPSBlLnl4OwogICAgZmxvYXQgcGFyYW1fMyA9IDAuNWY7CiAgICBmbG9hdCBvZmZzZXQgPSAoKC0yLjAwNzg3NDAxMTk5MzQwODIwMzEyNWYpICogU01BQVNlYXJjaExlbmd0aChwYXJhbV8yLCBwYXJhbV8zKSkgKyAzLjI1ZjsKICAgIHJldHVybiAoKC1zY3JlZW5TaXplSW52LnkpICogb2Zmc2V0KSArIHRleGNvb3JkLnk7Cn0KCmZsb2F0MiBTTUFBRGV0ZWN0VmVydGljYWxDb3JuZXJQYXR0ZXJuKGlub3V0IGZsb2F0MiB3ZWlnaHRzLCBmbG9hdDQgdGV4Y29vcmQsIGZsb2F0MiBkKQp7CiAgICBmbG9hdDIgbGVmdFJpZ2h0ID0gc3RlcChkLCBkLnl4KTsKICAgIGZsb2F0MiByb3VuZGluZyA9IGxlZnRSaWdodCAqIDAuNzVmOwogICAgcm91bmRpbmcgLz0gKGxlZnRSaWdodC54ICsgbGVmdFJpZ2h0LnkpLnh4OwogICAgZmxvYXQyIGZhY3RvciA9IDEuMGYueHg7CiAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZC54eSArIChmbG9hdDIoMS4wZiwgMC4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgZmxvYXQ0IF85NTggPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogXzk1OC55KTsKICAgIGZsb2F0MiBwYXJhbV8yID0gdGV4Y29vcmQuencgKyAoMS4wZi54eCAqIHNjcmVlblNpemVJbnYpOwogICAgZmxvYXQgcGFyYW1fMyA9IDAuMGY7CiAgICBmbG9hdDQgXzk3NCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMiwgcGFyYW1fMyk7CiAgICBmYWN0b3IueCAtPSAocm91bmRpbmcueSAqIF85NzQueSk7CiAgICBmbG9hdDIgcGFyYW1fNCA9IHRleGNvb3JkLnh5ICsgKGZsb2F0MigtMi4wZiwgMC4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgIGZsb2F0IHBhcmFtXzUgPSAwLjBmOwogICAgZmxvYXQ0IF85OTEgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzQsIHBhcmFtXzUpOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiBfOTkxLnkpOwogICAgZmxvYXQyIHBhcmFtXzYgPSB0ZXhjb29yZC56dyArIChmbG9hdDIoLTIuMGYsIDEuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICBmbG9hdCBwYXJhbV83ID0gMC4wZjsKICAgIGZsb2F0NCBfMTAwOCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fNiwgcGFyYW1fNyk7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueSAqIF8xMDA4LnkpOwogICAgd2VpZ2h0cyAqPSBjbGFtcChmYWN0b3IsIDAuMGYueHgsIDEuMGYueHgpOwogICAgcmV0dXJuIHdlaWdodHM7Cn0KCmZsb2F0NCBTTUFBQmxlbmRpbmdXZWlnaHRDYWxjdWxhdGlvblBTKGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQyIHBpeGNvb3JkXzEsIGZsb2F0NCBzdWJzYW1wbGVJbmRpY2VzKQp7CiAgICBmbG9hdDQgd2VpZ2h0cyA9IDAuMGYueHh4eDsKICAgIGZsb2F0MiBwYXJhbSA9IHRleGNvb3JkOwogICAgZmxvYXQgcGFyYW1fMSA9IDAuMGY7CiAgICBmbG9hdDQgXzEwMzAgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGZsb2F0MiBlID0gXzEwMzAueHk7CiAgICBpZiAoZS55ID4gMC4wZikKICAgIHsKICAgICAgICBmbG9hdDIgcGFyYW1fMiA9IHRleGNvb3JkOwogICAgICAgIGZsb2F0MiBwYXJhbV8zID0gZTsKICAgICAgICBmbG9hdDQgcGFyYW1fNCA9IHN1YnNhbXBsZUluZGljZXM7CiAgICAgICAgZmxvYXQyIF8xMDQzID0gU01BQUNhbGN1bGF0ZURpYWdXZWlnaHRzKHBhcmFtXzIsIHBhcmFtXzMsIHBhcmFtXzQpOwogICAgICAgIHdlaWdodHMgPSBmbG9hdDQoXzEwNDMueCwgXzEwNDMueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIGlmICh3ZWlnaHRzLnggPT0gKC13ZWlnaHRzLnkpKQogICAgICAgIHsKICAgICAgICAgICAgZmxvYXQyIHBhcmFtXzUgPSBvZmZzZXQwLnh5OwogICAgICAgICAgICBmbG9hdCBwYXJhbV82ID0gb2Zmc2V0Mi54OwogICAgICAgICAgICBmbG9hdCBfMTA2NSA9IFNNQUFTZWFyY2hYTGVmdChwYXJhbV81LCBwYXJhbV82KTsKICAgICAgICAgICAgZmxvYXQzIGNvb3JkczsKICAgICAgICAgICAgY29vcmRzLnggPSBfMTA2NTsKICAgICAgICAgICAgY29vcmRzLnkgPSBvZmZzZXQxLnk7CiAgICAgICAgICAgIGZsb2F0MiBkOwogICAgICAgICAgICBkLnggPSBjb29yZHMueDsKICAgICAgICAgICAgZmxvYXQyIHBhcmFtXzcgPSBjb29yZHMueHk7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzggPSAwLjBmOwogICAgICAgICAgICBmbG9hdDQgXzEwODAgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzcsIHBhcmFtXzgpOwogICAgICAgICAgICBmbG9hdCBlMSA9IF8xMDgwLng7CiAgICAgICAgICAgIGZsb2F0MiBwYXJhbV85ID0gb2Zmc2V0MC56dzsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMTAgPSBvZmZzZXQyLnk7CiAgICAgICAgICAgIGZsb2F0IF8xMDg4ID0gU01BQVNlYXJjaFhSaWdodChwYXJhbV85LCBwYXJhbV8xMCk7CiAgICAgICAgICAgIGNvb3Jkcy56ID0gXzEwODg7CiAgICAgICAgICAgIGQueSA9IGNvb3Jkcy56OwogICAgICAgICAgICBkID0gYWJzKGZsb29yKCgoc2NyZWVuU2l6ZS54eCAqIGQpICsgKC1waXhjb29yZF8xLnh4KSkgKyAwLjVmLnh4KSk7CiAgICAgICAgICAgIGZsb2F0MiBzcXJ0X2QgPSBzcXJ0KGQpOwogICAgICAgICAgICBmbG9hdDIgcGFyYW1fMTEgPSBjb29yZHMuenkgKyAoZmxvYXQyKDEuMGYsIDAuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzEyID0gMC4wZjsKICAgICAgICAgICAgZmxvYXQ0IF8xMTE3ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV8xMSwgcGFyYW1fMTIpOwogICAgICAgICAgICBmbG9hdCBlMiA9IF8xMTE3Lng7CiAgICAgICAgICAgIGZsb2F0MiBwYXJhbV8xMyA9IHNxcnRfZDsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMTQgPSBlMTsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMTUgPSBlMjsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMTYgPSBzdWJzYW1wbGVJbmRpY2VzLnk7CiAgICAgICAgICAgIGZsb2F0MiBfMTEyOCA9IFNNQUFBcmVhKHBhcmFtXzEzLCBwYXJhbV8xNCwgcGFyYW1fMTUsIHBhcmFtXzE2KTsKICAgICAgICAgICAgd2VpZ2h0cyA9IGZsb2F0NChfMTEyOC54LCBfMTEyOC55LCB3ZWlnaHRzLnosIHdlaWdodHMudyk7CiAgICAgICAgICAgIGNvb3Jkcy55ID0gdGV4Y29vcmQueTsKICAgICAgICAgICAgZmxvYXQyIHBhcmFtXzE3ID0gd2VpZ2h0cy54eTsKICAgICAgICAgICAgZmxvYXQ0IHBhcmFtXzE4ID0gY29vcmRzLnh5enk7CiAgICAgICAgICAgIGZsb2F0MiBwYXJhbV8xOSA9IGQ7CiAgICAgICAgICAgIGZsb2F0MiBfMTE0MiA9IFNNQUFEZXRlY3RIb3Jpem9udGFsQ29ybmVyUGF0dGVybihwYXJhbV8xNywgcGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgICAgICAgICAgd2VpZ2h0cyA9IGZsb2F0NChfMTE0Mi54LCBfMTE0Mi55LCB3ZWlnaHRzLnosIHdlaWdodHMudyk7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGUueCA9IDAuMGY7CiAgICAgICAgfQogICAgfQogICAgaWYgKGUueCA%IDAuMGYpCiAgICB7CiAgICAgICAgZmxvYXQyIHBhcmFtXzIwID0gb2Zmc2V0MS54eTsKICAgICAgICBmbG9hdCBwYXJhbV8yMSA9IG9mZnNldDIuejsKICAgICAgICBmbG9hdCBfMTE1OSA9IFNNQUFTZWFyY2hZVXAocGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgICAgICBmbG9hdDMgY29vcmRzXzE7CiAgICAgICAgY29vcmRzXzEueSA9IF8xMTU5OwogICAgICAgIGNvb3Jkc18xLnggPSBvZmZzZXQwLng7CiAgICAgICAgZmxvYXQyIGRfMTsKICAgICAgICBkXzEueCA9IGNvb3Jkc18xLnk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzIyID0gY29vcmRzXzEueHk7CiAgICAgICAgZmxvYXQgcGFyYW1fMjMgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfMTE3MyA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMjIsIHBhcmFtXzIzKTsKICAgICAgICBmbG9hdCBlMV8xID0gXzExNzMueTsKICAgICAgICBmbG9hdDIgcGFyYW1fMjQgPSBvZmZzZXQxLnp3OwogICAgICAgIGZsb2F0IHBhcmFtXzI1ID0gb2Zmc2V0Mi53OwogICAgICAgIGZsb2F0IF8xMTgxID0gU01BQVNlYXJjaFlEb3duKHBhcmFtXzI0LCBwYXJhbV8yNSk7CiAgICAgICAgY29vcmRzXzEueiA9IF8xMTgxOwogICAgICAgIGRfMS55ID0gY29vcmRzXzEuejsKICAgICAgICBkXzEgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnl5ICogZF8xKSArICgtcGl4Y29vcmRfMS55eSkpICsgMC41Zi54eCkpOwogICAgICAgIGZsb2F0MiBzcXJ0X2RfMSA9IHNxcnQoZF8xKTsKICAgICAgICBmbG9hdDIgcGFyYW1fMjYgPSBjb29yZHNfMS54eiArIChmbG9hdDIoMC4wZiwgMS4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBmbG9hdCBwYXJhbV8yNyA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF8xMjA5ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV8yNiwgcGFyYW1fMjcpOwogICAgICAgIGZsb2F0IGUyXzEgPSBfMTIwOS55OwogICAgICAgIGZsb2F0MiBwYXJhbV8yOCA9IHNxcnRfZF8xOwogICAgICAgIGZsb2F0IHBhcmFtXzI5ID0gZTFfMTsKICAgICAgICBmbG9hdCBwYXJhbV8zMCA9IGUyXzE7CiAgICAgICAgZmxvYXQgcGFyYW1fMzEgPSBzdWJzYW1wbGVJbmRpY2VzLng7CiAgICAgICAgZmxvYXQyIF8xMjIwID0gU01BQUFyZWEocGFyYW1fMjgsIHBhcmFtXzI5LCBwYXJhbV8zMCwgcGFyYW1fMzEpOwogICAgICAgIHdlaWdodHMgPSBmbG9hdDQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8xMjIwLngsIF8xMjIwLnkpOwogICAgICAgIGNvb3Jkc18xLnggPSB0ZXhjb29yZC54OwogICAgICAgIGZsb2F0MiBwYXJhbV8zMiA9IHdlaWdodHMuenc7CiAgICAgICAgZmxvYXQ0IHBhcmFtXzMzID0gY29vcmRzXzEueHl4ejsKICAgICAgICBmbG9hdDIgcGFyYW1fMzQgPSBkXzE7CiAgICAgICAgZmxvYXQyIF8xMjM0ID0gU01BQURldGVjdFZlcnRpY2FsQ29ybmVyUGF0dGVybihwYXJhbV8zMiwgcGFyYW1fMzMsIHBhcmFtXzM0KTsKICAgICAgICB3ZWlnaHRzID0gZmxvYXQ0KHdlaWdodHMueCwgd2VpZ2h0cy55LCBfMTIzNC54LCBfMTIzNC55KTsKICAgIH0KICAgIHJldHVybiB3ZWlnaHRzOwp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MiBwYXJhbSA9IHRleENvb3JkOwogICAgZmxvYXQyIHBhcmFtXzEgPSBwaXhjb29yZDsKICAgIGZsb2F0NCBwYXJhbV8yID0gMC4wZi54eHh4OwogICAgZmxvYXQ0IF8xMjUwID0gU01BQUJsZW5kaW5nV2VpZ2h0Q2FsY3VsYXRpb25QUyhwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICBmcmFnQ29sb3IgPSBfMTI1MDsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIG9mZnNldDAgPSBzdGFnZV9pbnB1dC5vZmZzZXQwOwogICAgb2Zmc2V0MiA9IHN0YWdlX2lucHV0Lm9mZnNldDI7CiAgICBvZmZzZXQxID0gc3RhZ2VfaW5wdXQub2Zmc2V0MTsKICAgIHRleENvb3JkID0gc3RhZ2VfaW5wdXQudGV4Q29vcmQ7CiAgICBwaXhjb29yZCA9IHN0YWdlX2lucHV0LnBpeGNvb3JkOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7CnvAQAAAP5KAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9ibGVuZF93ZWlnaHQuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxzbWFhX2JsZW5kX3dlaWdodC5mcmFnLmhsc2wAdW5pZm9ybSBmbG9hdDIgc2NyZWVuU2l6ZUludjsKVGV4dHVyZTJEPGZsb2F0ND4gZWRnZXNUZXggOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfZWRnZXNUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKVGV4dHVyZTJEPGZsb2F0ND4gYXJlYVRleCA6IHJlZ2lzdGVyKHQxKTsKU2FtcGxlclN0YXRlIF9hcmVhVGV4X3NhbXBsZXIgOiByZWdpc3RlcihzMSk7ClRleHR1cmUyRDxmbG9hdDQ%IHNlYXJjaFRleCA6IHJlZ2lzdGVyKHQyKTsKU2FtcGxlclN0YXRlIF9zZWFyY2hUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMyKTsKdW5pZm9ybSBmbG9hdDIgc2NyZWVuU2l6ZTsKCnN0YXRpYyBmbG9hdDQgb2Zmc2V0MDsKc3RhdGljIGZsb2F0NBviMAGAAAAA:ayftEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEUAAAAoAAAAG%IwAc7CunV1SgjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAACxOAAAAAAAA8CYAAAAAAADwJgAACBAAALwAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABAC8AAAAAQDwJgAAAAAWAFARAQAFAAQABAC8AAAAAQDwJgQAAAAWAFARAQAFAAgABAC8AAAAAQDwJggAAAAWAFARAQAFAAwABAC8AAAAAQDwJgwAAAAWAFARAQAFABAABAC8AAAAAQDwJhAAAAAWAFARAQAFABQABAC8AAAAAQDwJhQAAAAWAFARAQAFABgABAC8AAAAAQDwJhgAAAAWAFARAQAFABwABAC8AAAAAQDwJhwAAAAWAFARAQAFACAABAC8AAAAAQDwJiAAAAAWAFARAQAFACQABAC8AAAAAQDwJiQAAAAWAFARAQAFACgABAC8AAAAAQDwJigAAAAWAFARAQAFACwABAC8AAAAAQDwJiwAAAAWAFARAQAFADAABAC8AAAAAQDwJjAAAAAWAFARAQAFADQABAC8AAAAAQDwJjQAAAAWAFARAQAFADgABAC8AAAAAQDwJjgAAAAWAFARAQAFADwABAC8AAAAAQDwJjwAAAAuAD4RARAAAAgAY2R3X2VuZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAFARAAAFAAQABADcAQAAAQAgAvQALAB4ATwAMAAAACIAUBEAAAUABAAEAPwDAAABAPQJ9AAsAEwFsAJwCSwAUAAAAB4AUBEAAAUABAAEAEgJAAABANAEdAEsALAC%AEIAAAAKgBNEYAAAAAoTgAAABAAAAcACQUNTAYIDKbsAAgACRQNSwGAvAym7AAAAAAuAD4RARAAAAgAY2R3X2VuZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAFARAAAFAAQABADcAQAAAQAgAvQALAB4ATwAMAAAACIAUBEAAAUABAAEAPwDAAABAPQJ9AAsAEwFsAJwCSwAUAAAAB4AUBEAAAUABAAEAEgJAAABANAEdAEsALAC%AEIAAAAzgFNEfQCAAAkTgAAARAAAAcACQUNTAYIAwANEwYEA2gJCQ1LBgoDKA0mBgQDkCwJDQ08BggDLA1WBhADgowNPgYIA0wNTwYGA4KQDSQGAgNoDU8GAgMYDVgGBANIDUwGDANMDVsGDAOA:AkJDQkGBAODQAYIAwQJBQ0FBgIDLA0TBgIDKAkJDTgGCAMoDVQGEAOCeA06BggDYA1PBgYDgnwNJAYCA2gNTQYCAxgNVAYEA0gNSAYMA0wNVQYMA4D8CQUNBQYEDCiDQAgACRQNSwGAvAaAswMACQkNEgYEA2gJBQ0TAxwJGA1KBgoDDAkNDSUGBAOQLAkJDSYDIAkbDTsGCAMMCRwNVQYQA4KMCRsNPQYIA0wJHA1BBgYDgpAJGw1MAywJFQ1NAygJHQ0jBgIDFAkfDU4GAgMYCRwNVwYEA0gNSwYMA0wNWgYMA4D8CQkNCQYEA4NABggDBAkFDQUGAgMsCQkNEgYCAygJBQ0TAxwJFw03BggDDAkYDVMGEAOCeAkXDTkGCANgCRoNQQYGA4J8CRkNTAMsCRMNTQMoCRsNIwYCAxQNTAYCAxgJGA1TBgQDSA1HBgwDTA1UBgwDgPwJBQ0FBgQMKINAAAAuAD4RABAAAAgAd2VpZ2h0cwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAgAFAAgABAC8AAAAAQDwJsgmIAAIAAAAGgBQEQIABQAMAAQAvAAAAAEA8CbIJiAADAAAACIAUBECAAUAAAAEALwAAAABAOgmpBsUANQbIABgHGgKAAAAACIAUBECAAUABAAEALwAAAABAOgmpBsUANQbIABgHGgKBAAAAC4APhEBEAAACABzcXJ0X2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIwXAAABACgBBAAAABYAUBEAAAUABAAEAIwXAAABACgBCAAAAC4APhEBEAAACABwYXJhbV8xMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANQXAAABAGAAUAAAABYAUBEAAAUABAAEANQXAAABAEwAVAAAAC4APhEBEAAACABzcXJ0X2RfMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEALAiAAABACgBEAAAABYAUBEAAAUABAAEALAiAAABABQCGAAAAC4APhEBEAAACABwYXJhbV8yNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAPgiAAABAGAAMAAAABYAUBEAAAUABAAEAPgiAAABAEwANAAAAC4APhEBEAAACABjZHdfZW5kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AUBEAAAUABAAEANwBAAABACAC9AAsAHgBPAAwAAAAIgBQEQAABQAEAAQA:AMAAAEA9An0ACwATAWwAnAJLABQAAAAHgBQEQAABQAEAAQASAkAAAEA0AR0ASwAsAL4AQgAAAAmAE0RtAMAAOQIAAACEAAABwAJBQ01C0AEaAgACQwNNAGAvAxoAAAAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAkAQAAAQAcAAAAAAAWAFARAAAFAAQABAAkAQAAAQAcAAQAAAACAE4RpgJNEbQDAAAoJwAAAxAAAAcACQUNEwYGA4CQCQkNNgYIAygNQwYEA4GIDRQGAgM4CQUNBQYCAxwGCAMEDTQGBgNADRsGBAOBiAkJDXAGBANEDUoGDAOAhA1RBgQDNAYLAzwGCgMsDTwGBgMsDSwGBAOAwA0%BgIDMA0JBgoDKA09BhADMAkFDQUGAgOAmA02BgYDKA1GBgQDgjQNTwYEAzQNFgYCA0wJCQ06BggDKA1FBgQDgggNFgYCAzgJBQ0FBgIDHAYIAwQNGwYCAywJCQ1eBgQDRA1OBgwDQA1TBgQDNAYLAzwGCgMsDU0GBAMsDVMGBAM0DTIGBANMDUAGAgNYBgIDHA0JBggDHAYIAyQNQQYIAyQJBQ0FBgIMBIC0CAAJCQ0SAYFMBoDHAwAJBQ0TAxwJFw01BggDDAkcDUEGBAOBiAkWDUIDHAkJDRMGAgMcCQUNBQYCAxwGCAMECRMNMwYGA0AJCg0SBgQDgYgJCQ0aAxwJBQ0bAxwJGg1eC0wJGQ1vA1wJGg1JBgwDKAkXDVAGBAM0BgsDPAYKAywNOwYGAywJFQ0rBgQDgMAJGQ09BgIDMAkJDQkGCgMoCRQNPAYQAzAJBQ0FBgIDgJgJEw01BgYDKAkXDUUGBAOCNAkTDU4GBAM0CQkNFQYCA0wJBQ0WAxwJFw05BggDDAkeDUMGBAOCCAkYDUQDHAkJDRUGAgMcCQUNBQYCAxwGCAMECQoNEgYCAywJCQ0aAxwJBQ0bAxwJIw0mC0wJGw1dAxgNTQYMAygJFw1SBgQDNAYLAzwGCgMsCRsNTAYEAywJFw1SBgQDNAkYDScGBANMCRcNMQMUCRsNPwYCA0QGAgMcCQkNCQYIAxwGCAMkCRQNPQYIAyQJCQ1AA4CYCQUNBQYCDAQcAAAuAD4RARAAAAgAd2VpZ2h0cwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAB0EQAAAQAkABAAAAAWAFARAAAFAAQABAB0EQAAAQAkABQAAAAqAD4RABAAAAgAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AUBEAAAUAAAAEAFADAAABAGAFBAAUADwFBAAQAAAAGgBQEQAABQAIAAQAfAMAAAEANAVIBMwABAAAABoAUBEAAAUABAAEAOwNAAABAKwDBAAUADQAAAAqAD4RQAAAAAAAZGFkZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEADQDAAABACAACAAAAC4APhEAEAAACABjb29yZHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAOQFAAABADQAIAAAABYAUBEAAAUABAAEAOQFAAABADQAJAAAABYAUBEAAAUACAAEAOQFAAABADQAKAAAABYAUBEAAAUADAAEAOQFAAABADQALAAAAC4APhEBEAAACABwYXJhbV80AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABgGAAABADwAIAAAABYAUBEAAAUABAAEABgGAAABADwAJAAAAC4APhEBEAAACABwYXJhbV82AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABgGAAABADwAKAAAABYAUBEAAAUABAAEABgGAAABADwALAAAACoAPhEBEAAACABjYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAnAcAAAEAWAAUAAAAFgBQEQAABQAEAAQAnAcAAAEAWAAcAAAAFgBQEQAABQAAAAQA9AcAAAEAnAAgAAAAFgBQEQAABQAEAAQA9AcAAAEAnAAkAAAALgA%EQEQAAAIAHBhcmFtXzE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAHAsAAAEATAAgAAAAGgBQEQAABQAEAAQAHAsAAAEA:AKMAEgCJAAAAC4APhFAAAAAAABkYWRkXzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEANANAAABACAABAAAAC4APhEAEAAACABjb29yZHNfMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKAOAAABAPwAIAAAABYAUBEAAAUABAAEAKAOAAABAPwAJAAAABYAUBEAAAUACAAEAKAOAAABABwBKAAAABYAUBEAAAUADAAEAKAOAAABANgCLAAAAC4APhEBEAAACABwYXJhbV8xOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANQOAAABADwAQAAAABYAUBEAAAUABAAEANQOAAABADwARAAAAC4APhEBEAAACABwYXJhbV8yMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANQOAAABADwASAAAABYAUBEAAAUABAAEANQOAAABADwATAAAAC4APhEBEAAACABwYXJhbV8yMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJwPAAABAEwAIAAAABYAUBEAAAUABAAEAJwPAAABAEwAJAAAACoAPhEBEAAACABjY18xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAQBAAAAEAXAAEAAAAFgBQEQAABQAEAAQAQBAAAAEAgAAIAAAAFgBQEQAABQAAAAQAnBAAAAEAvAAgAAAAFgBQEQAABQAEAAQAwBAAAAEAmAAkAAAALgA%EQEQAAAIAGNkd19lbmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgBQEQAABQAEAAQA3AEAAAEAIAL0ACwAeAE8ADAAAAAiAFARAAAFAAQABAD8AwAAAQD0CfQALABMBbACcAksAFAAAAAeAFARAAAFAAQABABICQAAAQDQBHQBLACwAvgBCAAAAIYATRHoCAAAwBQAAAQQAAAHAAkJDToGDAOAuAkFDUEGBQNACQkNOgYEA4C0DU8GCAMcDSMGBANMCQUNBQYCDAQoCAAJFw05AYF0Bg8DAAkFDUEGBQNACQ0NGgNUCSENPwMcCQwNQAMcCRcNOQYEAygNTgYIAxwJDg0iBgQDTAkFDQUGAgwEKAAuAD4RABAAAAgAY29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAAFAAAABADIAQAAAQBQAbwAeAAgAAAAGgBQEQAABQAEAAQAyAEAAAEAUAG8AHgAJAAAABoAUBEAAAUACAAEAPABAAABACgBlAB4ACgAAAAqAD4RQAAAAAAAY3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAAQCAAABABQBBAAAACoAPhEWEAAACABfMTg2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAhAIAAAEAeAAgAAAAFgBQEQAABQAEAAQAhAIAAAEAeAAkAAAAFgBQEQAABQAIAAQAhAIAAAEAeAAoAAAALgA%EQEQAAAIAGNkd19lbmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgBQEQAABQAEAAQA3AEAAAEAPAH0ACwAMAAAACYATREQEgAAvBQAAAIQAAAHAAkFDTUGBAxMgcgIAAkMDTQBgoQMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANACAAABACgANAAAABYAUBEAAAUABAAEANACAAABACgAMAAAAAIAThECAE4RhgBNEegIAACMFwAABBAAAAcACQkNOgYMA4LYCQUNQQYFA0AJCQ06BgQDgLQNTwYIAxwNIwYEA0wJBQ0FBgIMBCgIAAkXDTkBg5QGDwMACQUNQQYFA0AJDQ0aA1QJIQ0:AxwJDA1AAxwJFw05BgQDKA1OBggDHAkODSIGBANMCQUNBQYCDAQoAC4APhEAEAAACABjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAUBEAAAUAAAAEAOgDAAABAFABvAB4AEAAAAAaAFARAAAFAAQABADoAwAAAQBQAbwAeABEAAAAGgBQEQAABQAIAAQAEAQAAAEAKAGUAHgASAAAACoAPhFAAAAAAABjdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAJAQAAAEAFAEIAAAAKgA%ERYQAAAIAF8xODYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACkBAAAAQB4AEAAAAAWAFARAAAFAAQABACkBAAAAQB4AEQAAAAWAFARAAAFAAgABACkBAAAAQB4AEgAAAAuAD4RARAAAAgAY2R3X2VuZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAQABACUAwAAAQBoADAAAAAaAFARAAAFAAQABAD8AwAAAQA8AfQALABQAAAAJgBNEcQUAACIFwAAAhAAAAcACQUNNQYEDEyD6AgACQwNNAGEpAxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA8AQAAAEAKABUAAAAFgBQEQAABQAEAAQA8AQAAAEAKABQAAAAAgBOEQIAThEuAE0R6AgAAGQYAAACEAAABwAJBQ01BgQMPIVcDCxoCAAJDA00AYYYDDwADCxoAABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIAGAAABACwAMAAAABYAUBEAAAUABAAEAIAGAAABACwANAAAABYAUBEAAAUAAAAEAKwGAAABABQAIAAAABYAUBEAAAUABAAEAKwGAAABABQALAAAAAIAThEmAE0R6AgAAAQZAAACEAAABwAJBQ01BgQMLIWYCAAJDA00AYZUDCwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACABgAAAQAsADAAAAAWAFARAAAFAAQABACABgAAAQAsADQAAAACAE4RRgBNEegIAABgGgAABRAAAAcACQUNNwYCA4XwDSAGBAxQcAgACR8NKQGGrAtQCR4NNQMUCRMNNgM8CRINHgYEAyAJDA0fDBQ8UgA%EQwQAACIADxTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAbAcAAAEAMAAgAAAAFgBQEQAABQAEAAQAbAcAAAEAMAAkAAAAFgBQEQAABQAIAAQAbAcAAAEAMAAoAAAAFgBQEQAABQAMAAQAbAcAAAEAMAAsAAAAKgA%EQEQAAAIAF8xMzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAcBwAAAQA8ACAAAAAWAFARAAAFAAQABAAcBwAAAQA8ACgAAAACAE4RRgBNEegIAACAGwAABhAAAAcACQUNLAYCA4c4DRcGBAMwDUQGBAwsPAgACRcNKwGH9AYJAwAJBQ0WBgQDMAkMDUAGBAwsPAAAQgA%ERIQAACIADxTTUFBQXJlYURpYWcgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACMCAAAAQAEABAAAAAWAFARAAAFAAQABACMCAAAAQAEABQAAAAuAD4RARAAAAgAdGV4Y29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAkCAAAAQBsAAQAAAAWAFARAAAFAAQABAAkCAAAAQBsAAgAAAACAE4RogBNEegIAACQHwAABxAAAAcACQUNKQYEA4f4CQkNOgYKAygJBQ1BBgUDMAkJDToGBAOAyA1PBggDHA08BgYDTA0jBgQDgIAJBQ0FBgIMBCgIAA0oAYi0Bh8DAAkXDTkGCgMoCQUNQQYFAzAJDQ0aA2gJIQ0:AxwJDA1AAxwJFw05BgQDKA1OBggDHA07BgYDTAkODSIGBAOAgAkFDQUGAgwEKAAuAD4RABAAAAgAY29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADcCAAAAQBEAAQAAAAaAFARAAAFAAAABAAgCQAAAQD8AdAA%AAwAAAAGgBQEQAABQAEAAQANAkAAAEA6AG8APgANAAAABoAUBEAAAUACAAEAFwJAAABAMABlAD4ADgAAAAqAD4RQAAAAAAAY3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAHAJAAABAKwBGAAAACoAPhEWEAAACABfMjQ5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA8AkAAAEA%AAwAAAAFgBQEQAABQAEAAQA8AkAAAEA%AA0AAAAFgBQEQAABQAIAAQA8AkAAAEA%AA4AAAALgA%EQEQAAAIAGNkd19lbmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAtAgAAAEAlABQAAAAGgBQEQAABQAEAAQASAkAAAEA1AF0ASwACAAAACYATRGEGwAAfB4AAAIQAAAHAAkFDTUGBAxMiTQIAAkMDTQBifAMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEADwKAAABACQAQAAAABYAUBEAAAUABAAEADwKAAABACQARAAAAAIAThFCAE0RhBsAAIwfAAAIEAAABwAJBQ0lBgIDiYANHgYCDDxECAAJEA0jAYo8CzAJBQ0kAyQJEg0cBgIDIAkMDR0MFCgAAFIAPhESEAAAiAA8U01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEALwKAAABACgACAAAABYAUBEAAAUAAAAEALwKAAABACgADAAAACoAPhEBEAAACQBlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAgAoAAAEAKABAAAAAAgBOEQIAThEmAE0R6AgAABggAAACEAAABwAJBQ01BgQMTIpgCAAJDA00AYscDEwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABoCwAAAQAcACAAAAACAE4RlgBNEegIAAAEJAAABxAAAAcACQkNOgYOA4rUCQUNQQYFAywJCQ06BgQDgMgNTwYIAxwNPAYGA0wNIwYEA4CACQUNBQYCDAQoCAAJFw05AYuQBhUDAAkFDUEGBQMsCQ0NGgNoCSENPwMcCQwNQAMcCRcNOQYEAygNTgYIAxwNOwYGA0wJDg0iBgQDgIAJBQ0FBgIMBCgAAAAuAD4RABAAAAgAY29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAAFAAAABADQCwAAAQDkAdAA%ABAAAAAGgBQEQAABQAEAAQA5AsAAAEA0AG8APgARAAAABoAUBEAAAUACAAEAAwMAAABAKgBlAD4AEgAAAAqAD4RQAAAAAAAY3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEACAMAAABAJQBDAAAACoAPhEWEAAACABfMjQ5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAoAwAAAEA%ABAAAAAFgBQEQAABQAEAAQAoAwAAAEA%ABEAAAAFgBQEQAABQAIAAQAoAwAAAEA%ABIAAAALgA%EQEQAAAIAGNkd19lbmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAkAsAAAEAaAAIAAAAGgBQEQAABQAEAAQA%AsAAAEAvAF0ASwAUAAAACYATREcIAAA8CIAAAIQAAAHAAkFDTUGBAxMi%QIAAkMDTQBjKAMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAOwMAAABACQAYAAAABYAUBEAAAUABAAEAOwMAAABACQAZAAAAAIAThFCAE0RHCAAAAAkAAAIEAAABwAJBQ0lBgIDjDANHgYCDDxECAAJEA0jAYzsCzAJBQ0kAyQJEg0cBgIDIAkMDR0MFCgAAFIAPhESEAAAiAA8U01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEAGwNAAABACgAUAAAABYAUBEAAAUAAAAEAGwNAAABACgAVAAAACoAPhEBEAAACQBlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAMA0AAAEAZABgAAAAAgBOEQIAThEuAE0R6AgAAKwkAAACEAAABwAJBQ01BgQMPI4YDCxoCAAJDA00AY7UDDwADCxoAABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEADwPAAABAGAAVAAAABYAUBEAAAUAAAAEAGgPAAABADQASAAAAAIAThEmAE0R6AgAADQlAAACEAAABwAJBQ01BgQMLI5UCAAJDA00AY8QDCwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAQABAA8DwAAAQAsAFQAAAACAE4RJgBNEegIAAAEJgAAAhAAAAcACQUNNQYEDEyO4AgACQwNNAGPnAxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAnA8AAAEATABUAAAAFgBQEQAABQAAAAQAnA8AAAEATABIAAAAFgBQEQAABQAAAAQA6A8AAAEAFAAgAAAAFgBQEQAABQAEAAQA6A8AAAEAFAAkAAAAAgBOEUYATRHoCAAAJCcAAAYQAAAHAAkFDSwGAgOQBA0XBgQDMA1EBgQMLDwIAAkXDSsBkMAGCQMACQUNFgYEAzAJDA1ABgQMLDwAAEIAPhESEAAAiAA8U01BQUFyZWFEaWFnIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAWBEAAAEAHAAgAAAAFgBQEQAABQAEAAQAWBEAAAEAHAAkAAAALgA%EQEQAAAIAHRleGNvb3JkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA8BAAAAEAhAAEAAAAFgBQEQAABQAEAAQA8BAAAAEAhAAIAAAAAgBOEQIAThEGAU0RtAMAAKQsAAAJEAAABwAJBQ0MBgQDkOgJCQ0lBgQDQAkNDTUGCAMcCQkNCQYKAxwJDQ0fBggDHAkJDQkGCgMcDREGAgMcCQ0NUwYIAwwNSQYEA2gNFQYCAzQJCQ0JBgIDLAkNDRILZAkJDQkLJAkFDQULJA1eBgYDLA0zBgIMKICMCAANDAGRpAZNAwAJFQ0kBgQDQAkUDTQGCAMcCQkNCQYKAxwJFA0eBggDHAkJDQkGCgMcDREGAgMcCRsNUgYIAwwJGA1IBgQDaAkNDRUGAgM0CQkNCQYCAywJDQ0SC2QJCQ0JCyQJBQ0FCyQJMw1UBgYDLAkUDV0DaAkMDTIGAgwoJABGAD4RHhAAAIAAPFNNQUFTZWFyY2hYTGVmdCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAwFAAAAQAgACAAAAAuAD4RARAAAAkAdGV4Y29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAAFAAAABAC4EQAAAQCwAWABKAAEAAAAGgBQEQAABQAEAAQAuBEAAAEAsAFgASgADAAAABYAUBEAAAUAAAAEABgTAAABACgAMAAAABYAUBEAAAUABAAEABgTAAABACgANAAAABYAUBEAAAUAAAAEAGgTAAABAOgADAAAACoAPhEBEAAACABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAzBEAAAEA7AEIAAAAGgBQEQAABQAAAAQA4BEAAAEAnAEEAWQAIAAAABYAUBEAAAUAAAAEAHwTAAABADwABAAAACoAPhFiAAAAAABfNjE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAABIAAAEAOAAYAAAAKgA%EWIAAAAAAF82MjUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAcEgAAAQAcABwAAAAWAFARAAABAAAABAA4EgAAAQA4ABgAAAAqAD4RYgAAAAAAXzYzMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAFQSAAABABwAHAAAAB4AUBEAAAEAAAAEAHASAAABAOABSACQANwAHAAYAAAALgA%EUAAAAAAAG9mZnNldAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQACBQAAAEASAAEAAAAJgBNESwnAACkKwAAAhAAAAcACQUNNQYEDGiRwAgACQwNNAGSfAxoAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA5BIAAAEANAAgAAAAFgBQEQAABQAEAAQA5BIAAAEANAAkAAAAAgBOETYATREsJwAAoCwAAAoQAAAHAAkFDSYGDgOSwA1EBgIMLDwIAAkUDSUBk3wLMAkMDUEGAgwsPAAARgA%ER4QAACAADxTTUFBU2VhcmNoTGVuZ3RoIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA5BMAAAEAJAAgAAAALgA%EQEQAAAIAGNvb3JkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAuBMAAAEAUAAEAAAAFgBQEQAABQAEAAQAuBMAAAEAUAAIAAAAAgBOEQIAThEmAE0RtAMAACwtAAACEAAABwAJBQ01BgQMTJN0CAAJDA00AZQwDEwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAB8FAAAAQAUADAAAAACAE4RBgFNEbQDAACoMgAACxAAAAcACQUNDAYEA5PACQkNJQYEA0AJDQ01BggDHAkJDQkGCgMcCQ0NHwYIAxwJCQ0JBgoDHA0RBgIDHAkNDVMGCAMMDUcGBANoDRUGAgM0CQkNCQYCAywJDQ0SC2QJCQ0JCyQJBQ0FCyQNXgYGAywNNgYCDCyAjAgADQwBlHwGTQMACRUNJAYEA0AJFA00BggDHAkJDQkGCgMcCRQNHgYIAxwJCQ0JBgoDHA0RBgIDHAkbDVIGCAMMCRgNRgYEA2gJDQ0VBgIDNAkJDQkGAgMsCQ0NEgtkCQkNCQskCQUNBQskCTMNVAYGAywJFA1dA2gJDA01BgIMLCQARgA%ER4QAACAADxTTUFBU2VhcmNoWFJpZ2h0IHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQADBcAAAEALAAoAAAALgA%EQEQAAAJAHRleGNvb3JkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgBQEQAABQAAAAQAkBQAAAEAsAFgASgABAAAABoAUBEAAAUABAAEAJAUAAABALABYAEoAAwAAAAWAFARAAAFAAAABADwFQAAAQAoAFAAAAAWAFARAAAFAAQABADwFQAAAQAoAFQAAAAWAFARAAAFAAAABABAFgAAAQD4AAwAAAAqAD4RARAAAAgAZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEAKQUAAABAOwBCAAAABoAUBEAAAUAAAAEALgUAAABAJwBBAFkAEAAAAAWAFARAAAFAAAABABUFgAAAQA8AAQAAAAqAD4RYgAAAAAAXzY3MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEANgUAAABADgAGAAAACoAPhFiAAAAAABfNjc3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA9BQAAAEAHAAcAAAAFgBQEQAAAQAAAAQAEBUAAAEAOAAYAAAAKgA%EWIAAAAAAF82ODMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAsFQAAAQAcABwAAAAeAFARAAABAAAABABIFQAAAQDwAUgAkADcABwAGAAAAC4APhFAAAAAAABvZmZzZXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAOAWAAABAFgABAAAACYATREwLQAAqDEAAAIQAAAHAAkFDTUGBAxolJgIAAkMDTQBlVQMaABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEALwVAAABADQAQAAAABYAUBEAAAUABAAEALwVAAABADQARAAAAAIAThE2AE0RMC0AAKQyAAAKEAAABwAJBQ0mBg4DlZgNRAYCDCw8CAAJFA0lAZZUCzAJDA1BBgIMLDwAAEYAPhEeEAAAgAA8U01BQVNlYXJjaExlbmd0aCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEALwWAAABACQAQAAAAC4APhEBEAAACABjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJAWAAABAFAABAAAABYAUBEAAAUABAAEAJAWAAABAFAACAAAAAIAThECAE4RJgBNEbQDAAAwMwAAAhAAAAcACQUNNQYEDEyXGAgACQwNNAGX1AxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAIBgAAAEAFABUAAAAAgBOEVoATRG0AwAAYDQAAAwQAAAHAAkFDVMGAgOXZA2AwgYCA4CUDUQGBAwsPAgACSoNPgGYIAtwCSkNSQMUCSMNSgM8CRcNUgMUCRANgMEGAgMwCQwNQAYEDCw8AAAAPgA%ERIQAACIADxTTUFBQXJlYSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABwZAAABACQAMAAAABYAUBEAAAUABAAEABwZAAABACQANAAAAC4APhEBEAAACAB0ZXhjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEALQYAAABAIwABAAAABYAUBEAAAUABAAEALQYAAABAIwACAAAAAIAThEOAU0RtAMAAJg6AAANEAAABwAJBQ0lBgIDmGANKAYCAyQNLwYCAygNPQYMAzgNRgYJAxQNSwYEAzQNJgYCA0wNPQYCAygNTQYEAyANJgYCA0wNSQYCAygNTQYEAzQNJgYCA0wNSQYCAygNTQYEAzQNJgYCA0wNLwYCDBwoCAAJGA0kAZkcBikDAAkXDScGAgMkCRINKgYCAygJBQ0uAxwJFg08BgwDHAkUDUUGCQMUCRMNSgYEAzQJBQ0lBgIDTAkWDTwGAgMoCRMNTAYEAyAJBQ0lBgIDTAkWDUgGAgMoCRMNTAYEAzQJBQ0lBgIDTAkWDUgGAgMoCRMNTAYEAzQJBQ0lBgIDTA0uBgIMHCgAADIAPhEBEAAACABsZWZ0UmlnaHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABoGQAAAQCAAEAAAAAWAFARAAAFAAQABABoGQAAAQCAAEQAAAAuAD4RARAAAAgAcm91bmRpbmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABoGQAAAQA4AEgAAAAWAFARAAAFAAQABABoGQAAAQA4AEwAAAAWAFARAAAFAAAABACgGQAAAQD4AQQAAAAWAFARAAAFAAQABACgGQAAAQDAAggAAAAuAD4RARAAAAgAZmFjdG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABcGgAAAQAEAgwAAAAWAFARAAAFAAQABACYGwAAAQDIAAQAAAAuAD4RARAAAAgAcGFyYW0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADoGQAAAQBMAEAAAAAWAFARAAAFAAQABADoGQAAAQCUAEQAAAAuAD4RARAAAAgAcGFyYW1fMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAB8GgAAAQBMAEAAAAAWAFARAAAFAAQABAB8GgAAAQDEAUQAAAAuAD4RARAAAAgAcGFyYW1fNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAkGwAAAQBMAFAAAAAWAFARAAAFAAQABAAkGwAAAQA8AVQAAAAuAD4RARAAAAgAcGFyYW1fNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADMGwAAAQBMACAAAAAWAFARAAAFAAQABADMGwAAAQCUACQAAAAmAE0RZDQAAOQ4AAACEAAABwAJBQ01BgQMTJksCAAJDA00AZnoDEwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADoGQAAAQBMAFQAAAAWAFARAAAFAAAABAA0GgAAAQAoAEAAAAACAE4RJgBNEWQ0AABsOQAAAhAAAAcACQUNNQYEDEyZwAgACQwNNAGafAxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAyBoAAAEAKABAAAAAAgBOESYATRFkNAAA9DkAAAIQAAAHAAkFDTUGBAxMmmgIAAkMDTQBmyQMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAHAbAAABACgAUAAAAAIAThEmAE0RZDQAAJQ6AAACEAAABwAJBQ01BgQMTJsQCAAJDA00AZvMDEwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADMGwAAAQBMAFAAAAAWAFARAAAFAAAABAAYHAAAAQAoACAAAAACAE4RAgBOEQYBTRG0AwAA%D8AAA4QAAAHAAkFDQwGBAOcIAkJDSUGBANACQ0NNQYIAxwJCQ0JBgoDHAkNDR8GCAMcCQkNCQYKAxwNEQYCAxwJDQ1TBggDDA1JBgQDaA0VBgIDNAkJDQkGAgMsCQ0NEgtkCQkNCQskCQUNBQskDV4GBgMYDTMGAgwogIwIAA0MAZzcBk0DAAkVDSQGBANACRQNNAYIAxwJCQ0JBgoDHAkUDR4GCAMcCQkNCQYKAxwNEQYCAxwJGw1SBggDDAkYDUgGBANoCQ0NFQYCAzQJCQ0JBgIDLAkNDRILZAkJDQkLJAkFDQULJAkzDVQGBgMYCRQNXQNoCQwNMgYCDCgkAEIAPhEeEAAAgAA8U01BQVNlYXJjaFlVcCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAVB8AAAEAIAAAAAAALgA%EQEQAAAJAHRleGNvb3JkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgBQEQAABQAEAAQA8BwAAAEAZAJgASgAAAAAAB4AUBEAAAUAAAAEAPAcAAABAOwBYAEoAJQBCAAEAAAAFgBQEQAABQAAAAQAUB4AAAEAKAAgAAAAFgBQEQAABQAEAAQAUB4AAAEAKAAkAAAAKgA%EQEQAAAIAGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAEHQAAAQCcAQgAAAAaAFARAAAFAAQABAAYHQAAAQDwAQQBZAAQAAAAFgBQEQAABQAAAAQAoB4AAAEA1AAUAAAAKgA%EWIAAAAAAF83MjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAA4HQAAAQA4AAwAAAAqAD4RYgAAAAAAXzcyNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAFQdAAABABwAIAAAABYAUBEAAAEAAAAEAHAdAAABADgADAAAACoAPhFiAAAAAABfNzMyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAjB0AAAEAHAAgAAAAGgBQEQAAAQAAAAQAqB0AAAEAzAHcAAgADAAAAC4APhFAAAAAAABvZmZzZXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEACwfAAABAEgABAAAACYATRGcOgAA%D4AAAIQAAAHAAkFDTUGBAxonPgIAAkMDTQBnbQMaABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABweAAABADQAFAAAABYAUBEAAAUABAAEABweAAABADQAEAAAAAIAThE2AE0RnDoAAPQ:AAAKEAAABwAJBQ0mBg4DneQNRAYCDCw8CAAJFA0lAZ6gCzAJDA1BBgIMLDwAAEYAPhEeEAAAgAA8U01BQVNlYXJjaExlbmd0aCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAAgfAAABACQAEAAAAC4APhEBEAAACABjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANweAAABAFAABAAAABYAUBEAAAUABAAEANweAAABAFAACAAAAAIAThECAE4RNgBNEbQDAADYQAAAAhAAAAcACQUNHQYCA56YDTUGAgxAIAgACQ8NHAGfVAswCQwNNAYCDEAgAABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEALQfAAABABQAFAAAAC4APhEBEAAACQBjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEAHQfAAABAEAAFAAAAAIAThEGAU0RtAMAAEBGAAAPEAAABwAJBQ0MBgQDnvgJCQ0lBgQDQAkNDTUGCAMcCQkNCQYKAxwJDQ0fBggDHAkJDQkGCgMcDREGAgMcCQ0NUwYIAwwNRwYEA2gNFQYCAzQJCQ0JBgIDLAkNDRILZAkJDQkLJAkFDQULJA1eBgYDGA02BgIMLICMCAANDAGftAZNAwAJFQ0kBgQDQAkUDTQGCAMcCQkNCQYKAxwJFA0eBggDHAkJDQkGCgMcDREGAgMcCRsNUgYIAwwJGA1GBgQDaAkNDRUGAgM0CQkNCQYCAywJDQ0SC2QJCQ0JCyQJBQ0FCyQJMw1UBgYDGAkUDV0DaAkMDTUGAgwsJABGAD4RHhAAAIAAPFNNQUFTZWFyY2hZRG93biByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAAwIgAAAQAsAAQAAAAuAD4RARAAAAkAdGV4Y29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAAFAAQABADIHwAAAQCUAmABKAAQAAAAHgBQEQAABQAAAAQAyB8AAAEA7AFgASgAlAEIABgAAAAWAFARAAAFAAAABAAoIQAAAQAoADAAAAAWAFARAAAFAAQABAAoIQAAAQAoADQAAAAqAD4RARAAAAgAZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANwfAAABAJwBHAAAABoAUBEAAAUABAAEAPAfAAABAPABBAFkACAAAAAWAFARAAAFAAAABAB4IQAAAQDkACQAAAAqAD4RYgAAAAAAXzc2OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEABAgAAABADgAMAAAACoAPhFiAAAAAABfNzc1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQALCAAAAEAHAA0AAAAFgBQEQAAAQAAAAQASCAAAAEAOAAwAAAAKgA%EWIAAAAAAF83ODEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABkIAAAAQAcADQAAAAeAFARAAABAAAABACAIAAAAQDcAUgAkADcAAgAMAAAAC4APhFAAAAAAABvZmZzZXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAAQiAAABAFgAGAAAACYATRHcQAAAQEUAAAIQAAAHAAkFDTUGBAxon9AIAAkMDTQBoIwMaABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAPQgAAABADQAJAAAABYAUBEAAAUABAAEAPQgAAABADQAIAAAAAIAThE2AE0R3EAAADxGAAAKEAAABwAJBQ0mBg4DoLwNRAYCDCw8CAAJFA0lAaF4CzAJDA1BBgIMLDwAAEYAPhEeEAAAgAA8U01BQVNlYXJjaExlbmd0aCByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAOAhAAABACQAIAAAAC4APhEBEAAACABjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEALQhAAABAFAAGAAAABYAUBEAAAUABAAEALQhAAABAFAAHAAAAAIAThECAE4RJgBNEbQDAADIRgAAAhAAAAcACQUNNQYEDEyiPAgACQwNNAGi%AxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQARCMAAAEAFAA0AAAAAgBOEVoATRG0AwAA%EcAAAwQAAAHAAkFDVMGAgOiiA2AwgYCA4CUDUQGBAwsPAgACSoNPgGjRAtwCSkNSQMUCSMNSgM8CRcNUgMUCRANgMEGAgMwCQwNQAYEDCw8AAAAPgA%ERIQAACIADxTTUFBQXJlYSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEAkAAABACQAEAAAABYAUBEAAAUABAAEAEAkAAABACQAFAAAAC4APhEBEAAACAB0ZXhjb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEANgjAAABAGgAEAAAABYAUBEAAAUABAAEANgjAAABAGgAFAAAAAIAThH%AE0RtAMAACBOAAAQEAAABwAJBQ0lBgIDo4QNKAYCAyQNLwYCAygNRgYEAzgNSwYEA0gNJgYCA0wNPQYCAygNTQYEAyANJgYCA0wNSQYCAygNTQYEAzQNJgYCA0wNSQYCAygNTgYEAzQNJwYCA0wNLwYCDBwoCAAJGA0kAaRABikDAAkXDScGAgMkCRINKgYCAygJBQ0uAxwJFA1FBgQDHAkTDUoGBANICQUNJQYCA0wJFg08BgIDKAkTDUwGBAMgCQUNJQYCA0wJFg1IBgIDKAkTDUwGBAM0CQUNJQYCA0wJFg1IBgIDKAkUDU0GBAM0CQUNJgYCA0wNLgYCDBwoMgA%EQEQAAAIAGxlZnRSaWdodAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIwkAAABAIAAIAAAABYAUBEAAAUABAAEAIwkAAABAIAAJAAAAC4APhEBEAAACAByb3VuZGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIwkAAABADgAKAAAABYAUBEAAAUABAAEAIwkAAABADgALAAAABYAUBEAAAUAAAAEAMQkAAABAMACGAAAABYAUBEAAAUABAAEAMQkAAABAMACHAAAAC4APhEBEAAACABmYWN0b3IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIAlAAABAAQCCAAAABYAUBEAAAUABAAEALwmAAABAMgAAAAAAC4APhEBEAAACABwYXJhbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAAwlAAABAJQAIAAAABYAUBEAAAUABAAEAAwlAAABAEwAJAAAAC4APhEBEAAACABwYXJhbV8yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKAlAAABAOQBIAAAABYAUBEAAAUABAAEAKAlAAABAEwAJAAAAC4APhEBEAAACABwYXJhbV80AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEgmAAABAKgAMAAAABYAUBEAAAUABAAEAEgmAAABAEwANAAAAC4APhEBEAAACABwYXJhbV82AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAPAmAAABAJQAMAAAABYAUBEAAAUABAAEAPAmAAABAEwANAAAACYATRH8RwAAbEwAAAIQAAAHAAkFDTUGBAxMpFAIAAkMDTQBpQwMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEAAwlAAABAEwANAAAABYAUBEAAAUABAAEAFglAAABACgAJAAAAAIAThEmAE0R:EcAAPRMAAACEAAABwAJBQ01BgQMTKTkCAAJDA00AaWgDEwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAQABADsJQAAAQAoACQAAAACAE4RJgBNEfxHAACUTQAAAhAAAAcACQUNNQYEDEyljAgACQwNNAGmSAxMAEIAPhEMEAAAiAA8dGV4dHVyZUxvZEEgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAlCYAAAEAKAA0AAAAFgBQEQAABQAEAAQASCYAAAEATAAkAAAAAgBOESYATRH8RwAAHE4AAAIQAAAHAAkFDTUGBAxMpjQIAAkMDTQBpvAMTABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEADwnAAABACgANAAAAAIAThECAE4RAgBOEQIAThECAAYAGgBSEQEQAAAAAAAAMAD:::::::9jZHdfZW5kAPQAAAAYAAAAAQAAABABCFi69ll8U9%xCYSBlxTOagAA8gAAAFggAAAAAAAAAQABAKwnAAAAAAAAsAIAAEwgAAC8AAAAPAIAgLwAAAA8AgAA%AAAADwCAID4AAAAPAIAACQBAAA8AgCAJAEAADwCAABAAQAAPAIAgEABAAA8AgAATAEAADwCAIBMAQAAPAIAAGgBAAA8AgCAaAEAADwCAAB0AQAAPAIAgHQBAAA8AgAAoAEAADwCAICgAQAAPAIAALQBAAA8AgCAtAEAADwCAADIAQAAPAIAgMgBAAA8AgAA3AEAADwCAIDcAQAAPAIAAPABAAA8AgCA8AEAADwCAAAEAgAAPAIAgAQCAAA8AgAACAIAADwCAIAIAgAAPAIAACQCAAA8AgCAJAIAADwCAABAAgAAPAIAgEACAAA8AgAAXAIAADwCAIBcAgAAPAIAAGgCAAA8AgCAaAIAADwCAACEAgAAPAIAgIQCAAA8AgAApAIAADwCAICkAgAAPAIAANACAAA8AgCA0AIAADwCAAD4AgAAPAIAgPgCAAA8AgAA:AIAADwCAID8AgAAPAIAABgDAAA8AgCAGAMAADwCAAA0AwAAPAIAgDQDAAA8AgAAUAMAADwCAIBQAwAAPAIAAFQDAAA8AgCAVAMAADwCAABoAwAAPAIAgGgDAAA8AgAAfAMAADwCAIB8AwAAPAIAAJADAAA8AgCAkAMAADwCAACUAwAAPAIAgJQDAAA8AgAAwAMAADwCAIDAAwAAPAIAANQDAAA8AgCA1AMAADwCAADoAwAAPAIAgOgDAAA8AgAA:AMAADwCAID8AwAAPAIAABAEAAA8AgCAEAQAADwCAAAkBAAAPAIAgCQEAAA8AgAAKAQAADwCAIAoBAAAPAIAAEQEAAA8AgCARAQAADwCAABgBAAAPAIAgGAEAAA8AgAAfAQAADwCAIB8BAAAPAIAAIgEAAA8AgCAiAQAADwCAACkBAAAPAIAgKQEAAA8AgAAxAQAADwCAIDEBAAAPAIAAPAEAAA8AgCA8AQAADwCAAAYBQAAPAIAgBgFAAA8AgAAHAUAADwCAIAcBQAAPAIAADgFAAA8AgCAOAUAADwCAABUBQAAPAIAgFQFAAA8AgAAYAUAADwCAIBgBQAAPAIAAIAFAAA8AgCAgAUAADwCAAC8BQAAPAIAgLwFAAA8AgAA5AUAADwCAIDkBQAAPAIAABgGAAA8AgCAGAYAADwCAABUBgAAPAIAgFQGAAA8AgAAgAYAADwCAICABgAAPAIAAKwGAAA8AgCArAYAADwCAADABgAAPAIAgMAGAAA8AgAA:AYAADwCAID8BgAAPAIAABwHAAA8AgCAHAcAADwCAAAwBwAAPAIAgDAHAAA8AgAAWAcAADwCAIBYBwAAPAIAAGwHAAA8AgCAbAcAADwCAACcBwAAPAIAgJwHAAA8AgAAxAcAADwCAIDEBwAAPAIAAPQHAAA8AgCA9AcAADwCAAAkCAAAPAIAgCQIAAA8AgAAYAgAADwCAIBgCAAAPAIAAIwIAAA8AgCAjAgAADwCAACQCAAAPAIAgJAIAAA8AgAAsAgAADwCAICwCAAAPAIAALQIAAA8AgCAtAgAADwCAADcCAAAPAIAgNwIAAA8AgAA%AgAADwCAID4CAAAPAIAAAwJAAA8AgCADAkAADwCAAAgCQAAPAIAgCAJAAA8AgAANAkAADwCAIA0CQAAPAIAAEgJAAA8AgCASAkAADwCAABcCQAAPAIAgFwJAAA8AgAAcAkAADwCAIBwCQAAPAIAAHQJAAA8AgCAdAkAADwCAACQCQAAPAIAgJAJAAA8AgAArAkAADwCAICsCQAAPAIAAMgJAAA8AgCAyAkAADwCAADUCQAAPAIAgNQJAAA8AgAA8AkAADwCAIDwCQAAPAIAABAKAAA8AgCAEAoAADwCAAA8CgAAPAIAgDwKAAA8AgAAYAoAADwCAIBgCgAAPAIAAIAKAAA8AgCAgAoAADwCAACoCgAAPAIAgKgKAAA8AgAAvAoAADwCAIC8CgAAPAIAAOQKAAA8AgCA5AoAADwCAADoCgAAPAIAgOgKAAA8AgAAHAsAADwCAIAcCwAAPAIAADwLAAA8AgCAPAsAADwCAABoCwAAPAIAgGgLAAA8AgAAhAsAADwCAICECwAAPAIAAJALAAA8AgCAkAsAADwCAACoCwAAPAIAgKgLAAA8AgAAvAsAADwCAIC8CwAAPAIAANALAAA8AgCA0AsAADwCAADkCwAAPAIAgOQLAAA8AgAA%AsAADwCAID4CwAAPAIAAAwMAAA8AgCADAwAADwCAAAgDAAAPAIAgCAMAAA8AgAAJAwAADwCAIAkDAAAPAIAAEAMAAA8AgCAQAwAADwCAABcDAAAPAIAgFwMAAA8AgAAeAwAADwCAIB4DAAAPAIAAIQMAAA8AgCAhAwAADwCAACgDAAAPAIAgKAMAAA8AgAAwAwAADwCAIDADAAAPAIAAOwMAAA8AgCA7AwAADwCAAAQDQAAPAIAgBANAAA8AgAAMA0AADwCAIAwDQAAPAIAAFgNAAA8AgCAWA0AADwCAABsDQAAPAIAgGwNAAA8AgAAlA0AADwCAICUDQAAPAIAAJgNAAA8AgCAmA0AADwCAAC0DQAAPAIAgLQNAAA8AgAA0A0AADwCAIDQDQAAPAIAAOwNAAA8AgCA7A0AADwCAADwDQAAPAIAgPANAAA8AgAABA4AADwCAIAEDgAAPAIAABgOAAA8AgCAGA4AADwCAAAcDgAAPAIAgBwOAAA8AgAAOA4AADwCAIA4DgAAPAIAAFQOAAA8AgCAVA4AADwCAABgDgAAPAIAgGAOAAA8AgAAeA4AADwCAIB4DgAAPAIAAKAOAAA8AgCAoA4AADwCAADUDgAAPAIAgNQOAAA8AgAAEA8AADwCAIAQDwAAPAIAADwPAAA8AgCAPA8AADwCAABoDwAAPAIAgGgPAAA8AgAAnA8AADwCAICcDwAAPAIAALwPAAA8AgCAvA8AADwCAADoDwAAPAIAgOgPAAA8AgAA:A8AADwCAID8DwAAPAIAABAQAAA8AgCAEBAAADwCAABAEAAAPAIAgEAQAAA8AgAAXBAAADwCAIBcEAAAPAIAAHgQAAA8AgCAeBAAADwCAACcEAAAPAIAgJwQAAA8AgAAwBAAADwCAIDAEAAAPAIAAPAQAAA8AgCA8BAAADwCAAAsEQAAPAIAgCwRAAA8AgAAWBEAADwCAIBYEQAAPAIAAHQRAAA8AgCAdBEAADwCAAB4EQAAPAIAgHgRAAA8AgAAmBEAADwCAICYEQAAPAIAAKQRAAA8AgCApBEAADwCAAC4EQAAPAIAgLgRAAA8AgAAzBEAADwCAIDMEQAAPAIAAOARAAA8AgCA4BEAADwCAADkEQAAPAIAgOQRAAA8AgAAABIAADwCAIAAEgAAPAIAABwSAAA8AgCAHBIAADwCAAA4EgAAPAIAgDgSAAA8AgAAVBIAADwCAIBUEgAAPAIAAHASAAA8AgCAcBIAADwCAAB8EgAAPAIAgHwSAAA8AgAAuBIAADwCAIC4EgAAPAIAAOQSAAA8AgCA5BIAADwCAAAYEwAAPAIAgBgTAAA8AgAALBMAADwCAIAsEwAAPAIAAEATAAA8AgCAQBMAADwCAABEEwAAPAIAgEQTAAA8AgAASBMAADwCAIBIEwAAPAIAAEwTAAA8AgCATBMAADwCAABQEwAAPAIAgFATAAA8AgAAVBMAADwCAIBUEwAAPAIAAGgTAAA8AgCAaBMAADwCAAB8EwAAPAIAgHwTAAA8AgAAuBMAADwCAIC4EwAAPAIAAOQTAAA8AgCA5BMAADwCAAAIFAAAPAIAgAgUAAA8AgAAMBQAADwCAIAwFAAAPAIAAFAUAAA8AgCAUBQAADwCAAB8FAAAPAIAgHwUAAA8AgAAkBQAADwCAICQFAAAPAIAAKQUAAA8AgCApBQAADwCAAC4FAAAPAIAgLgUAAA8AgAAvBQAADwCAIC8FAAAPAIAANgUAAA8AgCA2BQAADwCAAD0FAAAPAIAgPQUAAA8AgAAEBUAADwCAIAQFQAAPAIAACwVAAA8AgCALBUAADwCAABIFQAAPAIAgEgVAAA8AgAAVBUAADwCAIBUFQAAPAIAAJAVAAA8AgCAkBUAADwCAAC8FQAAPAIAgLwVAAA8AgAA8BUAADwCAIDwFQAAPAIAAAQWAAA8AgCABBYAADwCAAAYFgAAPAIAgBgWAAA8AgAAHBYAADwCAIAcFgAAPAIAACAWAAA8AgCAIBYAADwCAAAkFgAAPAIAgCQWAAA8AgAAKBYAADwCAIAoFgAAPAIAACwWAAA8AgCALBYAADwCAABAFgAAPAIAgEAWAAA8AgAAVBYAADwCAIBUFgAAPAIAAJAWAAA8AgCAkBYAADwCAAC8FgAAPAIAgLwWAAA8AgAA4BYAADwCAIDgFgAAPAIAAAwXAAA8AgCADBcAADwCAAA4FwAAPAIAgDgXAAA8AgAAYBcAADwCAIBgFwAAPAIAAHQXAAA8AgCAdBcAADwCAACMFwAAPAIAgIwXAAA8AgAAoBcAADwCAICgFwAAPAIAANQXAAA8AgCA1BcAADwCAAD0FwAAPAIAgPQXAAA8AgAAIBgAADwCAIAgGAAAPAIAADQYAAA8AgCANBgAADwCAABwGAAAPAIAgHAYAAA8AgAAhBgAADwCAICEGAAAPAIAALQYAAA8AgCAtBgAADwCAADwGAAAPAIAgPAYAAA8AgAAHBkAADwCAIAcGQAAPAIAAEAZAAA8AgCAQBkAADwCAABoGQAAPAIAgGgZAAA8AgAAhBkAADwCAICEGQAAPAIAAKAZAAA8AgCAoBkAADwCAAC0GQAAPAIAgLQZAAA8AgAA6BkAADwCAIDoGQAAPAIAAAgaAAA8AgCACBoAADwCAAA0GgAAPAIAgDQaAAA8AgAAXBoAADwCAIBcGgAAPAIAAHwaAAA8AgCAfBoAADwCAACcGgAAPAIAgJwaAAA8AgAAyBoAADwCAIDIGgAAPAIAAPAaAAA8AgCA8BoAADwCAAAkGwAAPAIAgCQbAAA8AgAARBsAADwCAIBEGwAAPAIAAHAbAAA8AgCAcBsAADwCAACYGwAAPAIAgJgbAAA8AgAAzBsAADwCAIDMGwAAPAIAAOwbAAA8AgCA7BsAADwCAAAYHAAAPAIAgBgcAAA8AgAAQBwAADwCAIBAHAAAPAIAAFwcAAA8AgCAXBwAADwCAABgHAAAPAIAgGAcAAA8AgAAdBwAADwCAIB0HAAAPAIAAIgcAAA8AgCAiBwAADwCAACMHAAAPAIAgIwcAAA8AgAAkBwAADwCAICQHAAAPAIAALAcAAA8AgCAsBwAADwCAAC0HAAAPAIAgLQcAAA8AgAA0BwAADwCAIDQHAAAPAIAANwcAAA8AgCA3BwAADwCAADwHAAAPAIAgPAcAAA8AgAABB0AADwCAIAEHQAAPAIAABgdAAA8AgCAGB0AADwCAAAcHQAAPAIAgBwdAAA8AgAAOB0AADwCAIA4HQAAPAIAAFQdAAA8AgCAVB0AADwCAABwHQAAPAIAgHAdAAA8AgAAjB0AADwCAICMHQAAPAIAAKgdAAA8AgCAqB0AADwCAAC0HQAAPAIAgLQdAAA8AgAA8B0AADwCAIDwHQAAPAIAABweAAA8AgCAHB4AADwCAABQHgAAPAIAgFAeAAA8AgAAZB4AADwCAIBkHgAAPAIAAHgeAAA8AgCAeB4AADwCAAB8HgAAPAIAgHweAAA8AgAAgB4AADwCAICAHgAAPAIAAIQeAAA8AgCAhB4AADwCAACIHgAAPAIAgIgeAAA8AgAAjB4AADwCAICMHgAAPAIAAKAeAAA8AgCAoB4AADwCAADcHgAAPAIAgNweAAA8AgAACB8AADwCAIAIHwAAPAIAACwfAAA8AgCALB8AADwCAABUHwAAPAIAgFQfAAA8AgAAdB8AADwCAIB0HwAAPAIAAIgfAAA8AgCAiB8AADwCAAC0HwAAPAIAgLQfAAA8AgAAyB8AADwCAIDIHwAAPAIAANwfAAA8AgCA3B8AADwCAADwHwAAPAIAgPAfAAA8AgAA9B8AADwCAID0HwAAPAIAABAgAAA8AgCAECAAADwCAAAsIAAAPAIAgCwgAAA8AgAASCAAADwCAIBIIAAAPAIAAGQgAAA8AgCAZCAAADwCAACAIAAAPAIAgIAgAAA8AgAAjCAAADwCAICMIAAAPAIAAMggAAA8AgCAyCAAADwCAAD0IAAAPAIAgPQgAAA8AgAAKCEAADwCAIAoIQAAPAIAADwhAAA8AgCAPCEAADwCAABQIQAAPAIAgFAhAAA8AgAAVCEAADwCAIBUIQAAPAIAAFghAAA8AgCAWCEAADwCAABcIQAAPAIAgFwhAAA8AgAAYCEAADwCAIBgIQAAPAIAAGQhAAA8AgCAZCEAADwCAAB4IQAAPAIAgHghAAA8AgAAtCEAADwCAIC0IQAAPAIAAOAhAAA8AgCA4CEAADwCAAAEIgAAPAIAgAQiAAA8AgAAMCIAADwCAIAwIgAAPAIAAFwiAAA8AgCAXCIAADwCAACEIgAAPAIAgIQiAAA8AgAAmCIAADwCAICYIgAAPAIAALAiAAA8AgCAsCIAADwCAADEIgAAPAIAgMQiAAA8AgAA%CIAADwCAID4IgAAPAIAABgjAAA8AgCAGCMAADwCAABEIwAAPAIAgEQjAAA8AgAAWCMAADwCAIBYIwAAPAIAAJQjAAA8AgCAlCMAADwCAACoIwAAPAIAgKgjAAA8AgAA2CMAADwCAIDYIwAAPAIAABQkAAA8AgCAFCQAADwCAABAJAAAPAIAgEAkAAA8AgAAZCQAADwCAIBkJAAAPAIAAIwkAAA8AgCAjCQAADwCAACoJAAAPAIAgKgkAAA8AgAAxCQAADwCAIDEJAAAPAIAANgkAAA8AgCA2CQAADwCAAAMJQAAPAIAgAwlAAA8AgAALCUAADwCAIAsJQAAPAIAAFglAAA8AgCAWCUAADwCAACAJQAAPAIAgIAlAAA8AgAAoCUAADwCAICgJQAAPAIAAMAlAAA8AgCAwCUAADwCAADsJQAAPAIAgOwlAAA8AgAAFCYAADwCAIAUJgAAPAIAAEgmAAA8AgCASCYAADwCAABoJgAAPAIAgGgmAAA8AgAAlCYAADwCAICUJgAAPAIAALwmAAA8AgCAvCYAADwCAADwJgAAPAIAgPAmAAA8AgAAECcAADwCAIAQJwAAPAIAADwnAAA8AgCAPCcAADwCAABkJwAAPAIAgGQnAAA8AgAAgCcAADwCAICAJwAAPAIAAIQnAAA8AgCAhCcAADwCAACkJwAAPAIAgKQnAAA8AgAAqCcAAD8CAICoJwAAPwIAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAD2AAAAaAIAAAAAAAAAEAAAAAAAAC0CAAABEAAAAAAAAMsBAAACEAAAAAAAACIAAAADEAAAAAAAAGgAAAAEEAAAAAAAACgAAAACEAAAAAAAACIAAAAEEAAAAAAAACgAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAAFEAAAAAAAADsAAAAGEAAAAAAAAEIAAAAHEAAAAAAAAFEAAAACEAAAAAAAACIAAAAIEAAAAAAAAEsAAAACEAAAAAAAACIAAAAHEAAAAAAAAFEAAAACEAAAAAAAACIAAAAIEAAAAAAAAEsAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAAGEAAAAAAAAEIAAAAJEAAAAAAAAN8AAAACEAAAAAAAACIAAAAKEAAAAAAAANMAAAACEAAAAAAAACIAAAALEAAAAAAAAAsBAAACEAAAAAAAACIAAAAKEAAAAAAAANMAAAACEAAAAAAAACIAAAAMEAAAAAAAADcBAAANEAAAAAAAAD8BAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAAOEAAAAAAAAFkBAAACEAAAAAAAACIAAAAKEAAAAAAAANMAAAACEAAAAAAAACIAAAAPEAAAAAAAAIUBAAACEAAAAAAAACIAAAAKEAAAAAAAANMAAAACEAAAAAAAACIAAAAMEAAAAAAAADcBAAAQEAAAAAAAALEBAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAACEAAAAAAAACIAAAAoAAAAAAAAABQAAAA4AAAAWAAAAIAAAACcAAAAxAAAAOQAAAAMAQAALAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAA4ACBASEAAAFwADAAsQAAAOAAESAgAAAAEQAAABEAAADgAIEBIQAAAXAAIAFBAAABYAGxVAAAAAAwAAAAwAZmxvYXQzAPPy8QoAARIBAAAAABAAAA4ACBAMEAAAFwABABcQAAASAAESAwAAAAEQAAABEAAAQAAAAA4ACBASEAAAFwADABkQAAAKAAESAQAAAAEQAAAOAAgQEhAAABcAAQAbEAAADgABEgIAAAABEAAAQAAAAAoAGBVAAAAAAQABAA4ACBAeEAAAFwACAB0QAAAWAAESBAAAAAEQAABAAAAAQAAAAEAAAAAOAAgQEhAAABcABAAgEAAAEgABEgMAAAABEAAAABAAAAEQAAAOAAgQEhAAABcAAwAiEAAACgAYFRIQAAABAAACCgAYFQ4QAAABAAEACgAYFSUQAAABAAACCgAYFQ8QAAABAAEACgAYFScQAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAApEAAAJAMAAAoA::8EAAAA::8DAAAAAACkAAAApAAAAAgAAACsAAAAAAAAABYAGxVAAAAABAAAABAAZmxvYXQ0APPy8RYAGxVAAAAAAgAAAAgAZmxvYXQyAPPy8WYAAxINFQMAABAAAAAAb2Zmc2V0MADy8Q0VAwAAEAAAEABvZmZzZXQxAPLxDRUDAAAQAAAgAG9mZnNldDIA8vENFQMAARAAADAAcGl4Y29vcmQA8Q0VAwABEAAAOAB0ZXhDb29yZADxJgAFFQUAAAACEAAAAAAAAAAAAABAAFNQSVJWX0Nyb3NzX0lucHV0AAoAARIBAAAAAxAAABYAAxINFQMAABAAAAAAZnJhZ0NvbG9yACoABRUBAAAABRAAAAAAAAAAAAAAEABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQYQAAABAAEADgAIEAcQAAAXAAEABBAAAAoAGBUDAAAAAQABAA4ACBAJEAAAFwAAAAMAAAASAAESAwAAAAEQAAABEAAAABAAAAoAGBUAEAAAAQABAA4ACBAMEAAAFwADAAsQAAAOABcVABAAAAMC8EMAAPLxDgAXFQAAAAAKAvBDAADy8RYAARIEAAAADhAAAA8QAAABEAAAQAAAAA4ACBAMEAAAFwAEABAQAAAKABgVARAAAClLAABy6QIAPWQAAOa0AQDZxgIARPgCALJhAQDloQMAu84CAMZVAAC%rQAAQsQAAHvXAwAccQMAZJQCAPQPAABgjb29yZC55OwogICAgcmV0dXJuIHRleC5TYW1wbGVMZXZlbChfdGV4X3NhbXBsZXIsIGNvb3JkLCBsb2QpOwp9CgpmbG9hdDIgU01BQVNlYXJjaERpYWcxKGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQyIGRpcikKewogICAgZmxvYXQ0IGNvb3JkID0gZmxvYXQ0KHRleGNvb3JkLCAtMS4wZiwgMS4wZik7CiAgICBmbG9hdDMgdCA9IGZsb2F0MyhzY3JlZW5TaXplSW52LCAxLjBmKTsKICAgIGZsb2F0IGN3ID0gY29vcmQudzsKICAgIHdoaWxlICgoY29vcmQueiA8IDcuMGYpICYmIChjdyA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmKSkKICAgIHsKICAgICAgICBmbG9hdDMgXzE4NiA9ICh0ICogZmxvYXQzKGRpciwgMS4wZikpICsgY29vcmQueHl6OwogICAgICAgIGNvb3JkID0gZmxvYXQ0KF8xODYueCwgXzE4Ni55LCBfMTg2LnosIGNvb3JkLncpOwogICAgICAgIGZsb2F0MiBwYXJhbSA9IGNvb3JkLnh5OwogICAgICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfMTk3ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgY2R3X2VuZCA9IF8xOTcueHk7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgMC41Zi54eCk7CiAgICB9CiAgICBjb29yZC53ID0gY3c7CiAgICByZXR1cm4gY29vcmQuenc7Cn0KCmZsb2F0NCBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKGlub3V0IGZsb2F0NCBlKQp7CiAgICBmbG9hdDIgXzEzNSA9IGUueHogKiBhYnMoKGUueHogKiA1LjBmKSAtIDMuNzVmLnh4KTsKICAgIGUgPSBmbG9hdDQoXzEzNS54LCBlLnksIF8xMzUueSwgZS53KTsKICAgIHJldHVybiBmbG9vcihlICsgMC41Zi54eHh4KTsKfQoKZmxvYXQyIFNNQUFBcmVhRGlhZyhmbG9hdDIgZGlzdCwgZmxvYXQyIGUsIGZsb2F0IG9mZnNldCkKewogICAgZmxvYXQyIHRleGNvb3JkID0gKDIwLjBmLnh4ICogZSkgKyBkaXN0OwogICAgdGV4Y29vcmQgPSAoZmxvYXQyKDAuMDA2MjUwMDAwMDkzMTMyMjU3NDYxNTQ3ODUxNTYyNWYsIDAuMDAxNzg1NzE0Mjk1NjkyNzQxODcwODgwMTI2OTUzMTI1ZikgKiB0ZXhjb29yZCkgKyBmbG9hdDIoMC4wMDMxMjUwMDAwNDY1NjYxMjg3MzA3NzM5MjU3ODEyNWYsIDAuMDAwODkyODU3MTQ3ODQ2MzcwOTM1NDQwMDYzNDc2NTYyNWYpOwogICAgdGV4Y29vcmQueCArPSAwLjVmOwogICAgdGV4Y29vcmQueSArPSAoMC4xNDI4NTcxNDkyNDMzNTQ3OTczNjMyODEyNWYgKiBvZmZzZXQpOwogICAgcmV0dXJuIGFyZWFUZXguU2FtcGxlTGV2ZWwoX2FyZWFUZXhfc2FtcGxlciwgdGV4Y29vcmQsIDAuMGYpLnh5Owp9CgpmbG9hdDIgU01BQURlY29kZURpYWdCaWxpbmVhckFjY2Vzcyhpbm91dCBmbG9hdDIgZSkKewogICAgZS54ICo9IGFicygoNS4wZiAqIGUueCkgLSAzLjc1Zik7CiAgICByZXR1cm4gZmxvb3IoZSArIDAuNWYueHgpOwp9CgpmbG9hdDIgU01BQVNlYXJjaERpYWcyKGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQyIGRpcikKewogICAgZmxvYXQ0IGNvb3JkID0gZmxvYXQ0KHRleGNvb3JkLCAtMS4wZiwgMS4wZik7CiAgICBjb29yZC54ICs9ICgwLjI1ZiAqIHNjcmVlblNpemVJbnYueCk7CiAgICBmbG9hdDMgdCA9IGZsb2F0MyhzY3JlZW5TaXplSW52LCAxLjBmKTsKICAgIGZsb2F0IGN3ID0gY29vcmQudzsKICAgIHdoaWxlICgoY29vcmQueiA8IDcuMGYpICYmIChjdyA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmKSkKICAgIHsKICAgICAgICBmbG9hdDMgXzI0OSA9ICh0ICogZmxvYXQzKGRpciwgMS4wZikpICsgY29vcmQueHl6OwogICAgICAgIGNvb3JkID0gZmxvYXQ0KF8yNDkueCwgXzI0OS55LCBfMjQ5LnosIGNvb3JkLncpOwogICAgICAgIGZsb2F0MiBwYXJhbSA9IGNvb3JkLnh5OwogICAgICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfMjU2ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgY2R3X2VuZCA9IF8yNTYueHk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzIgPSBjZHdfZW5kOwogICAgICAgIGZsb2F0MiBfMjYwID0gU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyhwYXJhbV8yKTsKICAgICAgICBjZHdfZW5kID0gXzI2MDsKICAgICAgICBjdyA9IGRvdChjZHdfZW5kLCAwLjVmLnh4KTsKICAgIH0KICAgIGNvb3JkLncgPSBjdzsKICAgIHJldHVybiBjb29yZC56dzsKfQoKZmxvYXQyIFNNQUFDYWxjdWxhdGVEaWFnV2VpZ2h0cyhmbG9hdDIgdGV4Y29vcmQsIGZsb2F0MiBlLCBmbG9hdDQgc3Vic2FtcGxlSW5kaWNlcykKewogICAgZmxvYXQyIHdlaWdodHMgPSAwLjBmLnh4OwogICAgZmxvYXQ0IGQ7CiAgICBpZiAoZS54ID4gMC4wZikKICAgIHsKICAgICAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICBmbG9hdDIgcGFyYW1fMSA9IGZsb2F0MigtMS4wZiwgMS4wZik7CiAgICAgICAgZmxvYXQyIF8zMTUgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGQgPSBmbG9hdDQoXzMxNS54LCBkLnksIF8zMTUueSwgZC53KTsKICAgICAgICBmbG9hdCBkYWRkID0gZmxvYXQoY2R3X2VuZC55ID4gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NWYpOwogICAgICAgIGQueCArPSBkYWRkOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGQgPSBmbG9hdDQoMC4wZi54eC54LCBkLnksIDAuMGYueHgueSwgZC53KTsKICAgIH0KICAgIGZsb2F0MiBwYXJhbV8yID0gdGV4Y29vcmQ7CiAgICBmbG9hdDIgcGFyYW1fMyA9IGZsb2F0MigxLjBmLCAtMS4wZik7CiAgICBmbG9hdDIgXzMzNiA9IFNNQUFTZWFyY2hEaWFnMShwYXJhbV8yLCBwYXJhbV8zKTsKICAgIGQgPSBmbG9hdDQoZC54LCBfMzM2LngsIGQueiwgXzMzNi55KTsKICAgIGlmICgoZC54ICsgZC55KSA%IDIuMGYpCiAgICB7CiAgICAgICAgZmxvYXQ0IGNvb3JkcyA9IChmbG9hdDQoKC1kLngpICsgMC4yNWYsIGQueCwgZC55LCAoLWQueSkgLSAwLjI1ZikgKiBzY3JlZW5TaXplSW52Lnh5eHkpICsgdGV4Y29vcmQueHl4eTsKICAgICAgICBmbG9hdDIgcGFyYW1fNCA9IGNvb3Jkcy54eSArIChmbG9hdDIoLTEuMGYsIDAuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICAgICAgZmxvYXQgcGFyYW1fNSA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF8zNzcgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzQsIHBhcmFtXzUpOwogICAgICAgIGZsb2F0NCBjOwogICAgICAgIGMgPSBmbG9hdDQoXzM3Ny54eS54LCBfMzc3Lnh5LnksIGMueiwgYy53KTsKICAgICAgICBmbG9hdDIgcGFyYW1fNiA9IGNvb3Jkcy56dyArIChmbG9hdDIoMS4wZiwgMC4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBmbG9hdCBwYXJhbV83ID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzM4OSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fNiwgcGFyYW1fNyk7CiAgICAgICAgYyA9IGZsb2F0NChjLngsIGMueSwgXzM4OS54eS54LCBfMzg5Lnh5LnkpOwogICAgICAgIGZsb2F0NCBwYXJhbV84ID0gYzsKICAgICAgICBmbG9hdDQgXzM5NSA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fOCk7CiAgICAgICAgYyA9IGZsb2F0NChfMzk1LnksIF8zOTUueCwgXzM5NS53LCBfMzk1LnopOwogICAgICAgIGZsb2F0MiBjYyA9ICgyLjBmLnh4ICogYy54eikgKyBjLnl3OwogICAgICAgIGZsb2F0IGExY29uZHggPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmLCBkLnopOwogICAgICAgIGZsb2F0IGExY29uZHkgPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmLCBkLncpOwogICAgICAgIGlmIChhMWNvbmR4ID09IDEuMGYpCiAgICAgICAgewogICAgICAgICAgICBjYy54ID0gMC4wZjsKICAgICAgICB9CiAgICAgICAgaWYgKGExY29uZHkgPT0gMS4wZikKICAgICAgICB7CiAgICAgICAgICAgIGNjLnkgPSAwLjBmOwogICAgICAgIH0KICAgICAgICBmbG9hdDIgcGFyYW1fOSA9IGQueHk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzEwID0gY2M7CiAgICAgICAgZmxvYXQgcGFyYW1fMTEgPSBzdWJzYW1wbGVJbmRpY2VzLno7CiAgICAgICAgd2VpZ2h0cyArPSBTTUFBQXJlYURpYWcocGFyYW1fOSwgcGFyYW1fMTAsIHBhcmFtXzExKTsKICAgIH0KICAgIGZsb2F0MiBwYXJhbV8xMiA9IHRleGNvb3JkOwogICAgZmxvYXQyIHBhcmFtXzEzID0gKC0xLjBmKS54eDsKICAgIGZsb2F0MiBfNDM5ID0gU01BQVNlYXJjaERpYWcyKHBhcmFtXzEyLCBwYXJhbV8xMyk7CiAgICBkID0gZmxvYXQ0KF80MzkueCwgZC55LCBfNDM5LnksIGQudyk7CiAgICBmbG9hdDIgcGFyYW1fMTQgPSB0ZXhjb29yZCArIChmbG9hdDIoMS4wZiwgMC4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgIGZsb2F0IHBhcmFtXzE1ID0gMC4wZjsKICAgIGZsb2F0NCBfNDQ4ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV8xNCwgcGFyYW1fMTUpOwogICAgaWYgKF80NDgueCA%IDAuMGYpCiAgICB7CiAgICAgICAgZmxvYXQyIHBhcmFtXzE2ID0gdGV4Y29vcmQ7CiAgICAgICAgZmxvYXQyIHBhcmFtXzE3ID0gMS4wZi54eDsKICAgICAgICBmbG9hdDIgXzQ1NyA9IFNNQUFTZWFyY2hEaWFnMihwYXJhbV8xNiwgcGFyYW1fMTcpOwogICAgICAgIGQgPSBmbG9hdDQoZC54LCBfNDU3LngsIGQueiwgXzQ1Ny55KTsKICAgICAgICBmbG9hdCBkYWRkXzEgPSBmbG9hdChjZHdfZW5kLnkgPiAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1Zik7CiAgICAgICAgZC55ICs9IGRhZGRfMTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBkID0gZmxvYXQ0KGQueCwgMC4wZi54eC54LCBkLnosIDAuMGYueHgueSk7CiAgICB9CiAgICBpZiAoKGQueCArIGQueSkgPiAyLjBmKQogICAgewogICAgICAgIGZsb2F0NCBjb29yZHNfMSA9IChmbG9hdDQoLWQueCwgLWQueCwgZC55LCBkLnkpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgZmxvYXQyIHBhcmFtXzE4ID0gY29vcmRzXzEueHkgKyAoZmxvYXQyKC0xLjBmLCAwLjBmKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGZsb2F0IHBhcmFtXzE5ID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzUwNyA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBfZWRnZXNUZXhfc2FtcGxlciwgcGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgICAgICBmbG9hdDQgY18xOwogICAgICAgIGNfMS54ID0gXzUwNy55OwogICAgICAgIGZsb2F0MiBwYXJhbV8yMCA9IGNvb3Jkc18xLnh5ICsgKGZsb2F0MigwLjBmLCAtMS4wZikgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBmbG9hdCBwYXJhbV8yMSA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF81MTggPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgX2VkZ2VzVGV4X3NhbXBsZXIsIHBhcmFtXzIwLCBwYXJhbV8yMSk7CiAgICAgICAgY18xLnkgPSBfNTE4Lng7CiAgICAgICAgZmxvYXQyIHBhcmFtXzIyID0gY29vcmRzXzEuencgKyAoZmxvYXQyKDEuMGYsIDAuMGYpICogc2NyZWVuU2l6ZUludik7CiAgICAgICAgZmxvYXQgcGFyYW1fMjMgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfNTI4ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbV8yMiwgcGFyYW1fMjMpOwogICAgICAgIGNfMSA9IGZsb2F0NChjXzEueCwgY18xLnksIF81MjgueXgueCwgXzUyOC55eC55KTsKICAgICAgICBmbG9hdDIgY2NfMSA9ICgyLjBmLnh4ICogY18xLnh6KSArIGNfMS55dzsKICAgICAgICBmbG9hdCBhMWNvbmR4XzEgPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzVmLCBkLnopOwogICAgICAgIGZsb2F0IGExY29uZHlfMSA9IHN0ZXAoMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NWYsIGQudyk7CiAgICAgICAgaWYgKGExY29uZHhfMSA9PSAxLjBmKQogICAgICAgIHsKICAgICAgICAgICAgY2NfMS54ID0gMC4wZjsKICAgICAgICB9CiAgICAgICAgaWYgKGExY29uZHlfMSA9PSAxLjBmKQogICAgICAgIHsKICAgICAgICAgICAgY2NfMS55ID0gMC4wZjsKICAgICAgICB9CiAgICAgICAgZmxvYXQyIHBhcmFtXzI0ID0gZC54eTsKICAgICAgICBmbG9hdDIgcGFyYW1fMjUgPSBjY18xOwogICAgICAgIGZsb2F0IHBhcmFtXzI2ID0gc3Vic2FtcGxlSW5kaWNlcy53OwogICAgICAgIHdlaWdodHMgKz0gU01BQUFyZWFEaWFnKHBhcmFtXzI0LCBwYXJhbV8yNSwgcGFyYW1fMjYpLnl4OwogICAgfQogICAgcmV0dXJuIHdlaWdodHM7Cn0KCmZsb2F0IFNNQUFTZWFyY2hMZW5ndGgoZmxvYXQyIGUsIGZsb2F0IG9mZnNldCkKewogICAgZmxvYXQyIHNjYWxlID0gZmxvYXQyKDMzLjBmLCAtMzMuMGYpOwogICAgZmxvYXQyIGJpYXMgPSBmbG9hdDIoNjYuMGYsIDMzLjBmKSAqIGZsb2F0MihvZmZzZXQsIDEuMGYpOwogICAgc2NhbGUgKz0gZmxvYXQyKC0xLjBmLCAxLjBmKTsKICAgIGJpYXMgKz0gZmxvYXQyKDAuNWYsIC0wLjVmKTsKICAgIHNjYWxlICo9IGZsb2F0MigwLjAxNTYyNWYsIDAuMDYyNWYpOwogICAgYmlhcyAqPSBmbG9hdDIoMC4wMTU2MjVmLCAwLjA2MjVmKTsKICAgIGZsb2F0MiBjb29yZCA9IChzY2FsZSAqIGUpICsgYmlhczsKICAgIHJldHVybiBzZWFyY2hUZXguU2FtcGxlTGV2ZWwoX3NlYXJjaFRleF9zYW1wbGVyLCBjb29yZCwgMC4wZikueDsKfQoKZmxvYXQgU01BQVNlYXJjaFhMZWZ0KGlub3V0IGZsb2F0MiB0ZXhjb29yZCwgZmxvYXQgZW5kKQp7CiAgICBmbG9hdDIgZSA9IGZsb2F0MigwLjBmLCAxLjBmKTsKICAgIGZvciAoOzspCiAgICB7CiAgICAgICAgYm9vbCBfNjE4ID0gdGV4Y29vcmQueCA%IGVuZDsKICAgICAgICBib29sIF82MjU7CiAgICAgICAgaWYgKF82MTgpCiAgICAgICAgewogICAgICAgICAgICBfNjI1ID0gZS55ID4gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjVmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNjI1ID0gXzYxODsKICAgICAgICB9CiAgICAgICAgYm9vbCBfNjMxOwogICAgICAgIGlmIChfNjI1KQogICAgICAgIHsKICAgICAgICAgICAgXzYzMSA9IGUueCA9PSAwLjBmOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNjMxID0gXzYyNTsKICAgICAgICB9CiAgICAgICAgaWYgKF82MzEpCiAgICAgICAgewogICAgICAgICAgICBmbG9hdDIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMSA9IDAuMGY7CiAgICAgICAgICAgIGZsb2F0NCBfNjM1ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIF9lZGdlc1RleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgICAgIGUgPSBfNjM1Lnh5OwogICAgICAgICAgICB0ZXhjb29yZCA9IChmbG9hdDIoLTIuMGYsIC0wLjBmKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CiAgICBmbG9hdDIgcGFyYW1fMiA9IGU7CiAgICBmbG9hdCBwYXJhbV8zID0gMC4wZjsKICAgIGZsb2F0IG9mZnNldCA9ICgoLTIuMDA3ODc0MDExOTkzNDA4MjAzMTI1ZikgKiBTTUFBU2VhcmNoTGVuZ3RoKHBhcmFtXzIsIHBhcmFtXzMpKSArIDMuMjVmOwogICAgcmV0dXJuIChzY3JlZW5TaXplSW52LnggKiBvZmZzZXQpICsgdGV4Y29vcmQueDsKfQoKZmxvYXQgU01BQVNlYXJjaFhSaWdodChpbm91dCBmbG9hdDIgdGV4Y29vcmQsIGZsb2F0IGVuZCkKewogICAgZmxvYXQyIGUgPSBmbG9hdDIoMC4wZiwgMS4wZik7CiAgICBmb3IgKDs7KQogICAgewogICAgICAgIGJvb2wgXzY3MSA9IHRleGNvb3JkLnggPCBlbmQ7CiAgICAgICAgYm9vbCBfNjc3OwogICAgICAgIGlmIChfNjcxKQogICAgICAgIHsKICAgICAgICAgICAgXzY3NyA9IGUueSA%::8EAAAA::8DAAAAAABEAAAARAAAAAgAAABMAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDy8SoAARYAAAAADRAAAFNNQUFCbGVuZGluZ1dlaWdodENhbGN1bGF0aW9uUFMAFgABFgAAAAAREAAAdGV4dHVyZUxvZEEAJgABFgAAAAATEAAAU01BQUNhbGN1bGF0ZURpYWdXZWlnaHRzAPPy8RoAARYAAAAAFRAAAFNNQUFTZWFyY2hEaWFnMQAqAAEWAAAAABgQAABTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzAPPy8RoAARYAAAAAGhAAAFNNQUFBcmVhRGlhZwDz8vEaAAEWAAAAABUQAABTTUFBU2VhcmNoRGlhZzIAKgABFgAAAAAcEAAAU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcwDz8vEaAAEWAAAAAB8QAABTTUFBU2VhcmNoWExlZnQAHgABFgAAAAAfEAAAU01BQVNlYXJjaExlbmd0aADz8vEeAAEWAAAAAB8QAABTTUFBU2VhcmNoWFJpZ2h0APPy8RYAARYAAAAAIRAAAFNNQUFBcmVhAPPy8S4AARYAAAAAIxAAAFNNQUFEZXRlY3RIb3Jpem9udGFsQ29ybkQzRFNIRFIArCcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGBEAAAACAAAAEwAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxKgABFgAAAAANEAAAU01BQUJsZW5kaW5nV2VpZ2h0Q2FsY3VsYXRpb25QUwAWAAEWAAAAABEQAAB0ZXh0dXJlTG9kQQAmAAEWAAAAABMQAABTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMA8:LxGgABFgAAAAAVEAAAU01BQVNlYXJjaERpYWcxACoAARYAAAAAGBAAAFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MA8:LxGgABFgAAAAAaEAAAU01BQUFyZWFEaWFnAPPy8RoAARYAAAAAFRAAAFNNQUFTZWFyY2hEaWFnMgAqAAEWAAAAABwQAABTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzAPPy8RoAARYAAAAAHxAAAFNNQUFTZWFyY2hYTGVmdAAeAAEWAAAAAB8QAABTTUFBU2VhcmNoTGVuZ3RoAPPy8R4AARYAAAAAHxAAAFNNQUFTZWFyY2hYUmlnaHQA8:LxFgABFgAAAAAhEAAAU01BQUFyZWEA8:LxLgABFgAAAAAjEAAAU01BQURldGVjdEhvcml6b250YWxDb3Ju:::::xoJL:FQAAAALAIAAA0BAAABAAAAAQAAAAEAAAAVAAAAAQAAAOUAAAABAAAAOQAAAAEAAACBAAAAAQAAAFkAAAABAAAALQEAAAEAAADFAAAAAQAAAJ0AAAABAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAYAAAAJAAAADAAAAA8AAAASAAAAFQAAABgAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAJREAAAAAgAAAAAEAbWFpbgAAIgBRESQQAAAIAAAAAAD:::::::9zY3JlZW5TaXplSW52AAAAHgBRESYQAAAHAP::::8AAP::::9lZGdlc1RleAAAAAAmAFERKBAAAAYA::::::::AAD::19lZGdlc1RleF9zYW1wbGVyAAAAGgBRESYQAAAHAP::::8BAP::::9hcmVhVGV4ACYAUREoEAAABgD:::::::8BAP::X2FyZWFUZXhfc2FtcGxlcgAAAAAeAFERJhAAAAcA:::::wIA:::::3NlYXJjaFRleAAAACYAUREoEAAABgD:::::::8CAP::X3NlYXJjaFRleF9zYW1wbGVyAAAeAFERJBAAAAgAAAAIAP:::::::3NjcmVlblNpemUAABoAUhEBEAAAAAAAADAA::::::::Y2R3X2VuZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABQAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAArCcAACAAAGAAAAAAAAAAAAAAAAACAAkATE4AAAAAAADwIgAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAKwnAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAACsJwAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzbWFhX2JsZW5kX3dlaWdodC5mcmFnLmhsc2wAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEIW2JkAQAAAHIo3%7vQR9FgYjgY0vhVe9wAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcc21hYV9ibGVuZF93ZWlnaHQuZnJhZy5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADMAAAAXAMAAFcBAABwAgAAAAAAAC5LAACAAAAAdUoAAGhxAACsAAAATAAAACgAAACMAgAALAAAAEgBAAADAAAAmAAAAGoAAABpAAAAlwAAAJEAAACQAAAALgAAAAYAAABsAAAAbQAAAG4AAABvAAAAcAAAAHEAAAByAAAAcwAAAHQAAAB1AAAAdgAAAHcAAAB4AAAAeQAAAHoAAAB7AAAAfAAAAH0AAAB%AAAAfwAAAIAAAACBAAAAggAAAIMAAACEAAAAhQAAAIYAAACHAAAAiAAAAIkAAACKAAAAiwAAAIwAAACNAAAAjgAAAI8AAAAvAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAwAAAAMQAAADIAAAAzAAAANAAAADUAAAA2AAAANwAAADgAAAA5AAAAOgAAADsAAAA8AAAAPQAAAD4AAAA:AAAAQAAAAEEAAABCAAAAQwAAAEQAAABFAAAARgAAAEcAAABIAAAASQAAAEoAAABLAAAATAAAAE0AAABOAAAATwAAAFAAAABRAAAAUgAAAFMAAABUAAAAVQAAAFYAAABXAAAAWAAAAFkAAABaAAAAWwAAAFwAAABdAAAAXgAAAF8AAABgAAAAYQAAAGIAAABjAAAAZAAAAGUAAABmAAAAZwAAAGgAAAAHAAAAawAAAJIAAACTAAAAlkAAACaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
kha_Shaders.smaa_blend_weight_vertData0 = "s25594:AXBvcwAAASRHbG9iYWxzAAACc2NyZWVuU2l6ZQAAAAAACAAAAAIBc2NyZWVuU2l6ZUludgAIAAAACAAAAAIBRFhCQ5YB24AA7Lt5TCRnriFtdf8BAAAAvEoAAAYAAAA4AAAAJAEAAFgBAAAQAgAAOAQAALQEAABSREVG5AAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAALoAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAACAAAAYAAAABAAAAAAAAAAAAAAAJAAAAAAAAAACAAAAAIAAACcAAAAAAAAAKwAAAAIAAAACAAAAAIAAACcAAAAAAAAAHNjcmVlblNpemUAqwEAAwABAAIAAAAAAAAAAABzY3JlZW5TaXplSW52AE1pY3Jvc29mdCAoUikgSExTTCBTaGFkZXIgQ29tcGlsZXIgMTAuMQCrq0lTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOsAAAAAYAAAAIAAAAmAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAmAAAAAEAAAAAAAAAAwAAAAEAAAAPAAAAmAAAAAIAAAAAAAAAAwAAAAIAAAAPAAAAmAAAAAMAAAAAAAAAAwAAAAMAAAADDAAAmAAAAAQAAAAAAAAAAwAAAAMAAAAMAwAAoQAAAAAAAAABAAAAAwAAAAQAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUiACAABAAAEAiAAAAFkAAARGjiAAAAAAAAEAAABfAAADMhAQAAAAAABlAAAD8iAQAAAAAABlAAAD8iAQAAEAAABlAAAD8iAQAAIAAABlAAADMiAQAAMAAABlAAADwiAQAAMAAABnAAAE8iAQAAQAAAABAAAAaAAAAgMAAAAyAAAP8gAQAAAAAABGFBAAAAAAAAJAAAAAAAA:AAAAPwAAAD8AAAA:AkAAAAAAAD8AAAA:AAAAPwAAAD8yAAAN8gAQAAEAAACmjyAAAAAAAAAAAAACQAAAAACAvgAAoD8AAAC%AAAAvoYNEAAAAAAANgAABfIgEAAAAAAAhg0QAAEAAAAyAAAN8gAQAAIAAADmjiAAAAAAAAAAAAACQAAAAAAAvgAAgL4AAAC%AACgP0YOEAAAAAAAOAAACDIgEAADAAAA5goQAAAAAABGgCAAAAAAAAAAAAA2AAAF8iAQAAEAAABGDhAAAgAAADYAAAXCABAAAQAAAFYNEAACAAAAMgAADfIgEAACAAAApo8gAAAAAAAAAAAAAkAAAAAAAMIAAABCAAAAwgAAAEJGDhAAAQAAADIAAA:CIBAAAwAAAAYUEAAAAAAAAkAAAAAAAAAAAAAAAAAAPwAAAD8CQAAAAAAAAAAAAAAAAAA:AAAAPzYAAAUyIBAABAAAAEYQEAAAAAAANgAACMIgEAAEAAAAAkAAAAAAAAAAAAAAAAAAPwAAgD8%AAABU1RBVHQAAAAMAAAAAwAAAAAAAAAHAAAABgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFNQREIARgAATWljcm9zb2Z0IEMvQysrIE1TRiA3LjAwDQoaRFMAAAAAAgAAAgAAACMAAACozggAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEIW2JkAQAAAKwsKTuUhqFNsD6jppQPpBwAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAA3FEzsKICAgIGZsb2F0NCBvZmZzZXQyIDogVEVYQ09PUkQyOwogICAgZmxvYXQyIHBpeGNvb3JkIDogVEVYQ09PUkQzOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQ0OwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHBpeGNvb3JkID0gdGV4Q29vcmQgKiBzY3JlZW5TaXplOwogICAgb2Zmc2V0MCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiBmbG9hdDQoLTAuMjVmLCAtMC4xMjVmLCAxLjI1ZiwgLTAuMTI1ZikpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogZmxvYXQ0KC0wLjEyNWYsIC0wLjI1ZiwgLTAuMTI1ZiwgMS4yNWYpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHh5eSAqIGZsb2F0NCgtMzIuMGYsIDMyLjBmLCAtMzIuMGYsIDMyLjBmKSkgKyB1gwEA7jIBAAhoAAAewgIAxloAANTcAADBwwAAMfsDAIq3AwBQhQEA02MAAEEkAQCZvuaWZvcm0gZmxvYXQyIHNjcmVlblNpemU7CnVuaWZvcm0gZmxvYXQyIHNjcmVlblNpemVJbnY7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHBvczsKc3RhdGljIGZsb2F0MiBwaXhjb29yZDsKc3RhdGljIGZsb2F0NCBvZmZzZXQwOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDE7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgcG9zIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgb2Zmc2V0MCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBvZmZzZXQxIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IG9mZnNldDIgOiBURVhDT09SRDI7CiAgICBmbG9hdDIgcGl4Y29vcmQgOiBURVhDT09SRDM7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDQ7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogMC41Zi54eCkgKyAwLjVmLnh4OwogICAgcGl4Y29vcmQgPSB0ZXhDb29yZCAqIHNjcmVlblNpemU7CiAgICBvZmZzZXQwID0gKHNjcmVlblNpemVJbnYueHl4eSAqIGZsb2F0NCgtMC4yNWYsIC0wLjEyNWYsIDEuMjVmLCAtMC4xMjVmKSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MSA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiBmbG9hdDQoLTAuMTI1ZiwgLTAuMjVmLCAtMC4xMjVmLCAxLjI1ZikpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDIgPSAoc2NyZWVuU2l6ZUludi54eHl5ICogZmxvYXQ0KC0zMi4wZiwgMzIuMGYsIC0zMi4wZiwgMzIuMGYpKSArIGZsb2F0NChvZmZzZXQwLnh6LCBvZmZzZXQxLnl3KTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQucGl4Y29vcmQgPSBwaXhjb29yZDsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQwID0gb2Zmc2V0MDsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQxID0gb2Zmc2V0MTsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQyID0gb2Zmc2V0MjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAABwYAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzbWFhX2JsZW5kX3dlaWdodC52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfYmxlbmRfd2VpZ2h0LnZlcnQuaGxzbAB1bmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplOwp1bmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplSW52OwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CnN0YXRpYyBmbG9hdDIgcGl4Y29vcmQ7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MDsKc3RhdGljIGZsb2F0NCBvZmZzZXQxOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDI7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IG9mZnNldDAgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgb2Zmc2V0MSA6IFRFG%IwAYAAAADu4au0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAARQAAACgAAAAb4jAB8gegA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAALAYAAAAAAACoAQAAAAAAAKgBAAAIEAAAeAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAHgAAAABAKgBAAAAABYAUBEBAAUABAAEAHgAAAABAKgBBAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAQAAEAHgAAAABAKgBQAAAABYAUBECAAUARAAEAHgAAAABAKgBRAAAABYAUBECAAUASAAEAHgAAAABAKgBSAAAABYAUBECAAUATAAEAHgAAAABAKgBTAAAABYAUBECAAUAMAAEAHgAAAABAKgBMAAAABYAUBECAAUANAAEAHgAAAABAKgBNAAAABYAUBECAAUAOAAEAHgAAAABAKgBOAAAABYAUBECAAUAPAAEAHgAAAABAKgBPAAAABYAUBECAAUAIAAEAHgAAAABAKgBIAAAABYAUBECAAUAJAAEAHgAAAABAKgBJAAAABYAUBECAAUAKAAEAHgAAAABAKgBKAAAABYAUBECAAUALAAEAHgAAAABAKgBLAAAABYAUBECAAUAEAAEAHgAAAABAKgBEAAAABYAUBECAAUAFAAEAHgAAAABAKgBFAAAABYAUBECAAUAGAAEAHgAAAABAKgBGAAAABYAUBECAAUAHAAEAHgAAAABAKgBHAAAABYAUBECAAUAAAAEAHgAAAABAKgBAAAAABYAUBECAAUABAAEAHgAAAABAKgBBAAAABYAUBECAAUACAAEAHgAAAABAKgBCAAAABYAUBECAAUADAAEAHgAAAABAKgBDAAAAC4APhEAEAAACAB0ZXhDb29yZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEALQAAAABAGwBCAAAABYAUBEAAAUABAAEALQAAAABAGwBDAAAAC4APhEEEAAACABvZmZzZXQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAOgAAAABADgBEAAAABYAUBEAAAUACAAEAOgAAAABADgBFAAAABYAUBEAAAUABAAEAOgAAAABAJAAHAAAAC4APhEEEAAACABvZmZzZXQxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUABAAEADABAAABAPAAJAAAABYAUBEAAAUAAAAEADABAAABAPAAKAAAABYAUBEAAAUADAAEADABAAABAPAALAAAAFoATRGAAAAAKAYAAAAQAAAHAAkFDSkLIA1dBgQMNDwGAgNIDSUGBQwgNA1rBgYMSDQIAAkQDSgBeAYJAwAJDw1cBgQMNDwGAgNICRANJAYFDCA0CQ8NagYGDEg0LgA%EQAQAAAIAHRleENvb3JkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAtAAAAAEANAEIAAAAFgBQEQAABQAEAAQAtAAAAAEANAEMAAAALgA%EQQQAAAIAG9mZnNldDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQA6AAAAAEAAAEQAAAAFgBQEQAABQAIAAQA6AAAAAEAAAEUAAAAFgBQEQAABQAEAAQA6AAAAAEAkAAcAAAALgA%EQQQAAAIAG9mZnNldDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAEAAQAMAEAAAEAuAAkAAAAFgBQEQAABQAAAAQAMAEAAAEAuAAoAAAAFgBQEQAABQAMAAQAMAEAAAEAuAAsAAAAAgBOEQIABgAeAFIRABAAAAAAAAAAAP:::::::3RleENvb3JkAAAAABoAUhEEEAAAAAAAABAA::::::::b2Zmc2V0MAAaAFIRBBAAAAAAAAAgAP:::::::29mZnNldDEA9AAAABgAAAABAAAAEAFOcvYLviqmT0M2gFM7xJbFAADyAAAAOAEAAAAAAAABAAEAIAIAAAAAAAAYAAAALAEAAHgAAAApAACAeAAAACkAAAC0AAAAKQAAgLQAAAApAAAA6AAAADEAAIDoAAAAMQAAAPwAAAApAACA:AAAACkAAAAwAQAAKQAAgDABAAApAAAAUAEAADEAAIBQAQAAMQAAAGQBAAApAACAZAEAACkAAAB4AQAAKQAAgHgBAAApAAAArAEAADEAAICsAQAAMQAAAOgBAAAxAACA6AEAADEAAAD8AQAAMQAAgPwBAAAxAAAAHAIAADEAAIAcAgAAMQAAAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAAUAGAAFABgABQAYAAUAGAAFABgABQAYAPYAAAAQAAAAAAAAAAAQAAAAAAAAHAAAABgAAAAAAAAAFAAAADQAAABYAAAAeoxATgAAAAAEAAADRAAAHQBAAAKAP::BAAAAP::AwAAAAAANAAAADQAAAAIAAAAPAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vESAAMSDRUDAAAQAAAAAHBvcwDy8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vF%AAMSDRUDAAQQAAAAAG9mZnNldDAA8vENFQMABBAAABAAb2Zmc2V0MQDy8Q0VAwAEEAAAIABvZmZzZXQyAPLxDRUDAAAQAAAwAHBpeGNvb3JkAPENFQMAABAAADgAdGV4Q29vcmQA8Q0VAwAEEAAAQABnbF9Qb3NpdGlvbgDy8SoABRUGAAAABRAAAAAAAAAAAAAAUABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQYQAAABAAEADgAIEAcQAAAXAAEAAxAAAAoAGBUDAAAAAQABAA4ACBAJEAAAFwAAAAMAAAAKABgVABAAAAEAAQAKABgVCxAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgsb2F0NChvZmZzZXQwLnh6LCBvZmZzZXQxLnl3KTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQucGl4Y29vcmQgPSBwaXhjb29yZDsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQwID0gb2Zmc2V0MDsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQxID0gb2Zmc2V0MTsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQyID0gb2Zmc2V0MjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAABAAAARAAAAAAAAAAAAAAAiyjEBOAAAAAAQAAABEAAAGAAAAAsA::8EAAAA::8DAAAAAAAEAAAABAAAAAgAAAAMAAAAAAAAABYAARYAAAAAChAAAHZlcnRfbWFpbgDyzRFNIRFIAIAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAEAAAACAAAAAwAAAAAAAAAFgABFgAAAAAKEAAAdmVydF9tYWluAPLxxoJL:EwAAAAHAIAABUAAAABAAAAAQAAAAEAAAA1AAAAAQAAAFkAAAABAAAAeQAAAAEAAACVAAAAAQAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAGAAAACQAAAAwgAAAAAEAbWFpbgAAHgBREQwQAAAIAAAAAAD:::::::9zY3JlZW5TaXplAAAiAFERDBAAAAgAAAAIAP:::::::3NjcmVlblNpemVJbnYAAAAeAFIRABAAAAAAAAAAAP:::::::3RleENvb3JkAAAAABoAUhEEEAAAAAAAABAA::::::::b2Zmc2V0MAAaAFIRBBAAAAAAAAAgAP:::::::29mZnNldDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::dwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABQAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIAIAACAAAGAAAAAAAAAAAAAAAAACAAkAiAYAAAAAAAB4AQAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAACACAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAAAgAgAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzbWFhX2JsZW5kX3dlaWdodC52ZXJ0Lmhsc2wAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEIW2JkAQAAAKwsKTuUhqFNsD6jppQPpBxwAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcc21hYV9ibGVuZF93ZWlnaHQudmVydC5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADMAAAArAEAAFcBAABQAAAAAAAAADcGAACAAAAAfgUAABwIAAA8AAAADAAAACgAAABcAgAALAAAALAAAAADAAAAHQAAABIAAAAcAAAAFgAAAAsAAAAGAAAAFAAAABUAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAAEAAAABEAAAAHAAAAEwAAABcAAAAYAAAAGQAAABsAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe
kha_Shaders.smaa_edge_detect_fragData0 = "s29275:AAJfY29sb3JUZXhfc2FtcGxlcgAAY29sb3JUZXgAAABEWEJDh3xtz5BkhqMicPiAhA0CRAEAAACkVQAABgAAADgAAADgAAAAXAEAAJABAAAgBwAAnAcAAFJERUagAAAAAAAAAAAAAAACAAAAHAAAAAAE::8BAQAAdwAAAFwAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAbgAAAAIAAAAFAAAABAAAAP::::8AAAAAAQAAAA0AAABfY29sb3JUZXhfc2FtcGxlcgBjb2xvclRleABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAq0lTR050AAAABAAAAAgAAABoAAAAAAAAAAAAAAADAAAAAAAAAA8PAABoAAAAAQAAAAAAAAADAAAAAQAAAA8PAABoAAAAAgAAAAAAAAADAAAAAgAAAA8PAABoAAAAAwAAAAAAAAADAAAAAwAAAAMDAABURVhDT09SRACrq6tPU0dOLAAAAAEAAAAIAAAAIAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAU1ZfVGFyZ2V0AKurU0hEUogFAABAAAAAYgEAAFoAAAMAYBAAAAAAAFgYAAQAcBAAAAAAAFVVAABiEAAD8hAQAAAAAABiEAAD8hAQAAEAAABiEAAD8hAQAAIAAABiEAADMhAQAAMAAABlAAAD8iAQAAAAAABoAAACBQAAAEgAAAvyABAAAAAAAEYQEAADAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAASAAAC:IAEAABAAAARhAQAAAAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAAAAAIcgAQAAEAAABGAhAAAAAAAEYCEIBBAAAAAQAAADQAAAmCABAAAAAAABoAEICBAAAAAQAAAAoAEICBAAAAAQAAADQAAAgSABAAAQAAACoAEICBAAAAAQAAADoAEAAAAAAASAAAC:IAEAACAAAA5hoQAAAAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAAAAAIcgAQAAIAAABGAhAAAAAAAEYCEIBBAAAAAgAAADQAAAmCABAAAAAAABoAEICBAAAAAgAAAAoAEICBAAAAAgAAADQAAAgiABAAAQAAACoAEICBAAAAAgAAADoAEAAAAAAAHQAACsIAEAABAAAABgQQAAEAAAACQAAAAAAAAAAAAADNzMw9zczMPQEAAArCABAAAQAAAKYOEAABAAAAAkAAAAAAAAAAAAAAAACAPwAAgD8PAAAKggAQAAAAAADmChAAAQAAAAJAAAAAAIA:AACAPwAAAAAAAAAAGAAAB4IAEAAAAAAAOgAQAAAAAAABQAAAAAAAAA0ABAM6ABAAAAAAAEgAAAvyABAAAgAAAEYQEAABAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAAAAACHIAEAACAAAARgIQAAAAAABGAhCAQQAAAAIAAAA0AAAJggAQAAAAAAAaABCAgQAAAAIAAAAKABCAgQAAAAIAAAA0AAAIEgAQAAIAAAAqABCAgQAAAAIAAAA6ABAAAAAAAEgAAAvyABAAAwAAAOYaEAABAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAAAAAACHIAEAADAAAARgIQAAAAAABGAhCAQQAAAAMAAAA0AAAJggAQAAAAAAAaABCAgQAAAAMAAAAKABCAgQAAAAMAAAA0AAAIIgAQAAIAAAAqABCAgQAAAAMAAAA6ABAAAAAAADQAAAcyABAAAgAAAEYAEAABAAAARgAQAAIAAABIAAAL8gAQAAMAAABGEBAAAgAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAAAAAAhyABAAAwAAAEYCEAAAAAAARgIQgEEAAAADAAAANAAACYIAEAAAAAAAGgAQgIEAAAADAAAACgAQgIEAAAADAAAANAAACBIAEAADAAAAKgAQgIEAAAADAAAAOgAQAAAAAABIAAAL8gAQAAQAAADmGhAAAgAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAAAAAAhyABAAAAAAAEYCEAAAAAAARgIQgEEAAAAEAAAANAAACRIAEAAAAAAAGgAQgIEAAAAAAAAACgAQgIEAAAAAAAAANAAACCIAEAADAAAAKgAQgIEAAAAAAAAACgAQAAAAAAA0AAAHMgAQAAAAAABGABAAAgAAAEYAEAADAAAANAAABxIAEAAAAAAAGgAQAAAAAAAKABAAAAAAAAAAAAdiABAAAAAAAAYBEAABAAAABgEQAAEAAAAdAAAHMgAQAAAAAACWBRAAAAAAAAYAEAAAAAAAAQAACjIAEAAAAAAARgAQAAAAAAACQAAAAACAPwAAgD8AAAAAAAAAADgAAAcyIBAAAAAAAEYAEAAAAAAA5goQAAEAAAA2AAAIwiAQAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAD4AAAFTVEFUdAAAACcAAAAFAAAAAAAAAAUAAAAbAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgBOAABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAJwwAAAAAAAAA:::::wlC4xAQhbYmQBAAAAzV:hJhPP3kmaZFup8uDt6wAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCmZsb2F0MiBTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFMoZmxvYXQyIHRleGNvb3JkKQp7CiAgICBmbG9hdDIgdGhyZXNob2xkID0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjVmLnh4OwogICAgZmxvYXQzIEMgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgdGV4Y29vcmQsIDAuMGYpLnh5ejsKICAgIGZsb2F0MyBDbGVmdCA9IGNvbG9yVGV4LlNhbXBsZUxldmVsKF9jb2xvclRleF9zYW1wbGVyLCBvZmZzZXQwLnh5LCAwLjBmKS54eXo7CiAgICBmbG9hdDMgdCA9IGFicyhDIC0gQ2xlZnQpOwogICAgZmxvYXQ0IGRlbHRhOwogICAgZGVsdGEueCA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgZmxvYXQzIEN0b3AgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgb2Zmc2V0MC56dywgMC4wZikueHl6OwogICAgdMZaAAB1gwEAj3cBAAhoAAAm9wIAfosDAMHDAAAx%wMAqNEAAFCFAQDTYwAAH2kDAOnwAgB0JwEATOgDAOoUAwDV:wAAYqMCALgcAwA%AwdHVyZTJEPGZsb2F0ND4gY29sb3JUZXggOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfY29sb3JUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDQgb2Zmc2V0MDsKc3RhdGljIGZsb2F0NCBvZmZzZXQxOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDI7CnN0YXRpYyBmbG9hdDQgZnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBvZmZzZXQwIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IG9mZnNldDEgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgb2Zmc2V0MiA6IFRFWENPT1JEMjsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMzsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IGZyYWdDb2xvciA6IFNWX1RhcmdldDA7Cn07CgpmbG9hdDIgU01BQUNvbG9yRWRnZURldGVjdGlvblBTKGZsb2F0MiB0ZXhjb29yZCkKewogICAgZmxvYXQyIHRocmVzaG9sZCA9IDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1Zi54eDsKICAgIGZsb2F0MyBDID0gY29sb3JUZXguU2FtcGxlTGV2ZWwoX2NvbG9yVGV4X3NhbXBsZXIsIHRleGNvb3JkLCAwLjBmKS54eXo7CiAgICBmbG9hdDMgQ2xlZnQgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgb2Zmc2V0MC54eSwgMC4wZikueHl6OwogICAgZmxvYXQzIHQgPSBhYnMoQyAtIENsZWZ0KTsKICAgIGZsb2F0NCBkZWx0YTsKICAgIGRlbHRhLnggPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGZsb2F0MyBDdG9wID0gY29sb3JUZXguU2FtcGxlTGV2ZWwoX2NvbG9yVGV4X3NhbXBsZXIsIG9mZnNldDAuencsIDAuMGYpLnh5ejsKICAgIHQgPSBhYnMoQyAtIEN0b3ApOwogICAgZGVsdGEueSA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgZmxvYXQyIGVkZ2VzID0gc3RlcCh0aHJlc2hvbGQsIGRlbHRhLnh5KTsKICAgIGlmIChkb3QoZWRnZXMsIDEuMGYueHgpID09IDAuMGYpCiAgICB7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZsb2F0MyBDcmlnaHQgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgb2Zmc2V0MS54eSwgMC4wZikueHl6OwogICAgdCA9IGFicyhDIC0gQ3JpZ2h0KTsKICAgIGRlbHRhLnogPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGZsb2F0MyBDYm90dG9tID0gY29sb3JUZXguU2FtcGxlTGV2ZWwoX2NvbG9yVGV4X3NhbXBsZXIsIG9mZnNldDEuencsIDAuMGYpLnh5ejsKICAgIHQgPSBhYnMoQyAtIENib3R0b20pOwogICAgZGVsdGEudyA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgZmxvYXQyIG1heERlbHRhID0gbWF4KGRlbHRhLnh5LCBkZWx0YS56dyk7CiAgICBmbG9hdDMgQ2xlZnRsZWZ0ID0gY29sb3JUZXguU2FtcGxlTGV2ZWwoX2NvbG9yVGV4X3NhbXBsZXIsIG9mZnNldDIueHksIDAuMGYpLnh5ejsKICAgIHQgPSBhYnMoQyAtIENsZWZ0bGVmdCk7CiAgICBkZWx0YS56ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICBmbG9hdDMgQ3RvcHRvcCA9IGNvbG9yVGV4LlNhbXBsZUxldmVsKF9jb2xvclRleF9zYW1wbGVyLCBvZmZzZXQyLnp3LCAwLjBmKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wdG9wKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIG1heERlbHRhID0gbWF4KG1heERlbHRhLCBkZWx0YS56dyk7CiAgICBmbG9hdCBmaW5hbERlbHRhID0gbWF4KG1heERlbHRhLngsIG1heERlbHRhLnkpOwogICAgZWRnZXMgKj0gc3RlcChmaW5hbERlbHRhLnh4LCBkZWx0YS54eSAqIDIuMGYpOwogICAgcmV0dXJuIGVkZ2VzOwp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MiBwYXJhbSA9IHRleENvb3JkOwogICAgZmxvYXQyIF8yMDQgPSBTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFMocGFyYW0pOwogICAgZnJhZ0NvbG9yID0gZmxvYXQ0KF8yMDQueCwgXzIwNC55LCBmcmFnQ29sb3IueiwgZnJhZ0NvbG9yLncpOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgb2Zmc2V0MCA9IHN0YWdlX2lucHV0Lm9mZnNldDA7CiAgICBvZmZzZXQxID0gc3RhZ2VfaW5wdXQub2Zmc2V0MTsKICAgIG9mZnNldDIgPSBzdGFnZV9pbnB1dC5vZmZzZXQyOwogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAArwkAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzbWFhX2VkZ2VfZGV0ZWN0LmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcc21hYV9lZGdlX2RldGVjdC5mcmFnLmhsc2wAVGV4dHVyZTJEPGZsb2F0ND4gY29sb3JUZXggOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfY29sb3JUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKCnN0YXRpYyBmbG9hdDQgb2Zmc2V0MDsKc3RhdGljIGZsb2F0NCBvZmZzZXQxOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDI7CnN0YXRpYyBmbG9hdDQgZnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBvZmZzZXQwIDogVEVYQ09PUkQwOwogICAgZmxvYXQ0IG9mZnNldDEgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgb2Zmc2V0MiA6IFRFWENPT1JEMjsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMzsKG%IwAYAAAABhY7i0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAEAAAAAAAAARAAAACgAAAAb4jABQEGAgygJAAABAAAAQwgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldABwc180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAA8AkAAAAAAAAgBQAAAAAAACAFAAAIEAAAaAAAAAEAoG1haW4AMgA%EQMQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAGgAAAABACAFAAAAABYAUBEBAAUABAAEAGgAAAABACAFBAAAABYAUBEBAAUACAAEAGgAAAABACAFCAAAABYAUBEBAAUADAAEAGgAAAABACAFDAAAABYAUBEBAAUAEAAEAGgAAAABACAFEAAAABYAUBEBAAUAFAAEAGgAAAABACAFFAAAABYAUBEBAAUAGAAEAGgAAAABACAFGAAAABYAUBEBAAUAHAAEAGgAAAABACAFHAAAABYAUBEBAAUAIAAEAGgAAAABACAFIAAAABYAUBEBAAUAJAAEAGgAAAABACAFJAAAABYAUBEBAAUAKAAEAGgAAAABACAFKAAAABYAUBEBAAUALAAEAGgAAAABACAFLAAAABYAUBEBAAUAMAAEAGgAAAABACAFMAAAABYAUBEBAAUANAAEAGgAAAABACAFNAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAAAAEAGgAAAABACAFAAAAABYAUBECAAUABAAEAGgAAAABACAFBAAAABYAUBECAAUACAAEAGgAAAABACAFCAAAABYAUBECAAUADAAEAGgAAAABACAFDAAAACYATRGAAAAA7AkAAAAQAAAHAAkFDTILQASE:AgACRMNMQFoDIT8AACyAU0RzAIAAOgJAAABEAAABwAJBQ1LC0ANUQYCAywNHgYCAywNJgYEAyANUAYCA0QNFgYCAywNJgYCAyANLQYCA0QNJAYCA1AJCQ0QBgQDRAkFDVILTA0YBgIDLA0mBgIDIA1TBgIDRA0ZBgIDLA0mBgIDIA0uBgIDRA1VBgIDHA0bBgIDLA0mBgIDIA1TBgIDRA0ZBgIDLA0mBgIDIA0nBgIDRA0zBgIDHA0yBgIMfBwIAAkQDUYBaAY5AwAJFA1MBgIDLA0cBgIDLAkTDR8GBAMgCQ8NJQMkCRMNSwYCAyAJDQ0UBgIDLAkTDR8GAgMgCQ8NJQMkCRQNLAYCAyAJCQ0bBgIDUA0jAygNEAYEAxwJFQ1NC0wJDQ0WBgIDLAkTDR8GAgMgCQ8NJQMkCRYNTgYCAyAJDQ0XBgIDLAkTDR8GAgMgCQ8NJQMkCRcNLQYCAyAJGA1QBgIDHAkNDRkGAgMsCRMNHwYCAyAJDw0lAyQJFg1OBgIDIAkNDRcGAgMsCRMNHwYCAyAJDw0lAyQJEA0mBgIDIAkYDTIGAgMcCSINMAYCAxwJDg0xAxwJBQwcRAAAKgA%EQ4QAAAIAEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACUAAAAAQDYAwAAAAAWAFARAAAFAAQABACUAAAAAQDYAwQAAAAWAFARAAAFAAgABACUAAAAAQDYAwgAAAAuAD4RDhAAAAgAQ2xlZnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADAAAAAAQAgABAAAAAWAFARAAAFAAQABADAAAAAAQAgABQAAAAWAFARAAAFAAgABADAAAAAAQAgABgAAAAuAD4RABAAAAgAZGVsdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAkAQAAAQBgBBAAAAAWAFARAAAFAAQABAC0AQAAAQDQAxQAAAAWAFARAAAFAAgABADkAgAAAQCsACAAAAAWAFARAAAFAAwABAB0AwAAAQAcACQAAAAWAFARAAAFAAgABAAgBAAAAQBkATAAAAAWAFARAAAFAAwABACwBAAAAQDUADQAAAAqAD4RDhAAAAgAQ3RvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAFABAAABACAAIAAAABYAUBEAAAUABAAEAFABAAABACAAJAAAABYAUBEAAAUACAAEAFABAAABACAAKAAAAC4APhEBEAAACABlZGdlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAAQCAAABAIADGAAAABYAUBEAAAUABAAEAAQCAAABAIADHAAAAC4APhEOEAAACABDcmlnaHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAIACAAABACAAIAAAABYAUBEAAAUABAAEAIACAAABACAAJAAAABYAUBEAAAUACAAEAIACAAABACAAKAAAAC4APhEOEAAACABDYm90dG9tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEABADAAABACAAMAAAABYAUBEAAAUABAAEABADAAABACAANAAAABYAUBEAAAUACAAEABADAAABACAAOAAAAC4APhEBEAAACABtYXhEZWx0YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAJADAAABADwBIAAAABYAUBEAAAUABAAEAJADAAABADwBJAAAABYAUBEAAAUAAAAEAMwEAAABABwAAAAAABYAUBEAAAUABAAEAMwEAAABADgABAAAADIAPhEOEAAACABDbGVmdGxlZnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAC8AwAAAQAgADAAAAAWAFARAAAFAAQABAC8AwAAAQAgADQAAAAWAFARAAAFAAgABAC8AwAAAQAgADgAAAAuAD4RDhAAAAgAQ3RvcHRvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABMBAAAAQA4AUAAAAAWAFARAAAFAAQABABMBAAAAQA4AUQAAAAWAFARAAAFAAgABABMBAAAAQA4AUgAAAAyAD4RQAAAAAAAZmluYWxEZWx0YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA6AQAAAEAOAAAAAAAAgBOEQIAThECAAYA9AAAABgAAAABAAAAEAHl3bzxNWrhgb38FNOe7Fv5AADyAAAAwAMAAAAAAAABAAEAiAUAAAAAAABOAAAAtAMAAGgAAABHAACAaAAAAEcAAACUAAAARwAAgJQAAABHAAAAwAAAAEcAAIDAAAAARwAAAOAAAABHAACA4AAAAEcAAAAEAQAARwAAgAQBAABHAAAAJAEAAEcAAIAkAQAARwAAAFABAABHAACAUAEAAEcAAABwAQAARwAAgHABAABHAAAAlAEAAEcAAICUAQAARwAAALQBAABHAACAtAEAAEcAAADcAQAARwAAgNwBAABHAAAABAIAAEcAAIAEAgAARwAAACwCAABHAACALAIAAEcAAABIAgAARwAAgEgCAABHAAAAVAIAAEcAAIBUAgAARwAAAIACAABHAACAgAIAAEcAAACgAgAARwAAgKACAABHAAAAxAIAAEcAAIDEAgAARwAAAOQCAABHAACA5AIAAEcAAAAQAwAARwAAgBADAABHAAAAMAMAAEcAAIAwAwAARwAAAFQDAABHAACAVAMAAEcAAAB0AwAARwAAgHQDAABHAAAAkAMAAEcAAICQAwAARwAAALwDAABHAACAvAMAAEcAAADcAwAARwAAgNwDAABHAAAAAAQAAEcAAIAABAAARwAAACAEAABHAACAIAQAAEcAAABMBAAARwAAgEwEAABHAAAAbAQAAEcAAIBsBAAARwAAAJAEAABHAACAkAQAAEcAAACwBAAARwAAgLAEAABHAAAAzAQAAEcAAIDMBAAARwAAAOgEAABHAACA6AQAAEcAAAAEBQAARwAAgAQFAABHAAAAIAUAAEcAAIAgBQAARwAAAEgFAABHAACASAUAAEcAAABkBQAASgAAgGQFAABKAAAAhAUAAEoAAICEBQAASgAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABgABQAYAPYAAAAcAAAAAAAAAAAQAAAAAAAAOwAAAAEQAAAAAAAAGAAAAAwoxATgAAAAAEAAAFRAAAMQBAAAKAP::BAAAAP::AwAAAAAAVAAAAFQAAAAIAAAAXAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vFSAAMSDRUDAAAQAAAAAG9mZnNldDAA8vENFQMAABAAABAAb2Zmc2V0MQDy8Q0VAwAAEAAAIABvZmZzZXQyAPLxDRUDAAEQAAAwAHRleENvb3JkAPEmAAUVBAAAAAIQAAAAAAAAAAAAADgAU1BJUlZfQ3Jvc3NfSW5wdXQACgABEgEAAAADEAAAFgADEg0VAwAAEAAAAABmcmFnQ29sb3IAKgAFFQEAAAAFEAAAAAAAAAAAAAAQAFNQSVJWX0Nyb3NzX091dHB1dADz8vEKABgVBhAAAAEAAQAOAAgQBxAAABcAAQAEEAAACgAYFQMAAAABAAEADgAIEAkQAAAXAAAAAwAAAAoAARIBAAAAARAAAAoAGBUBEAAAAQABAA4ACBAMEAAAFwABAAsQAAAWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEOABcVABAAAAMC8EMAAPLxCgAYFQ8QAAABAAEACgAYFRAQAAABAAACDgAXFQAAAAAKAvBDAADy8QoAGBUSEAAAAQABAAoAGBUTEAAAAQAAAgAAAAApSwAAmcicyhDIC0gQ3RvcCk7CiAgICBkZWx0YS55ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICBmbG9hdDIgZWRnZXMgPSBzdGVwKHRocmVzaG9sZCwgZGVsdGEueHkpOwogICAgaWYgKGRvdChlZGdlcywgMS4wZi54eCkgPT0gMC4wZikKICAgIHsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZmxvYXQzIENyaWdodCA9IGNvbG9yVGV4LlNhbXBsZUxldmVsKF9jb2xvclRleF9zYW1wbGVyLCBvZmZzZXQxLnh5LCAwLjBmKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDcmlnaHQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgZmxvYXQzIENib3R0b20gPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgb2Zmc2V0MS56dywgMC4wZikueHl6OwogICAgdCA9IGFicyhDIC0gQ2JvdHRvbSk7CiAgICBkZWx0YS53ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICBmbG9hdDIgbWF4RGVsdGEgPSBtYXgoZGVsdGEueHksIGRlbHRhLnp3KTsKICAgIGZsb2F0MyBDbGVmdGxlZnQgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgb2Zmc2V0Mi54eSwgMC4wZikueHl6OwogICAgdCA9IGFicyhDIC0gQ2xlZnRsZWZ0KTsKICAgIGRlbHRhLnogPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGZsb2F0MyBDdG9wdG9wID0gY29sb3JUZXguU2FtcGxlTGV2ZWwoX2NvbG9yVGV4X3NhbXBsZXIsIG9mZnNldDIuencsIDAuMGYpLnh5ejsKICAgIHQgPSBhYnMoQyAtIEN0b3B0b3ApOwogICAgZGVsdGEudyA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgbWF4RGVsdGEgPSBtYXgobWF4RGVsdGEsIGRlbHRhLnp3KTsKICAgIGZsb2F0IGZpbmFsRGVsdGEgPSBtYXgobWF4RGVsdGEueCwgbWF4RGVsdGEueSk7CiAgICBlZGdlcyAqPSBzdGVwKGZpbmFsRGVsdGEueHgsIGRlbHRhLnh5ICogMi4wZik7CiAgICByZXR1cm4gZWRnZXM7Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICBmbG9hdDIgXzIwNCA9IFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhwYXJhbSk7CiAgICBmcmFnQ29sb3IgPSBmbG9hdDQoXzIwNC54LCBfMjA0LnksIGZyYWdDb2xvci56LCBmcmFnQ29sb3Iudyk7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBvZmZzZXQwID0gc3RhZ2VfaW5wdXQub2Zmc2V0MDsKICAgIG9mZnNldDEgPSBzdGFnZV9pbnB1dC5vZmZzZXQxOwogICAgb2Zmc2V0MiA9IHN0YWdlX2lucHV0Lm9mZnNldDI7CiAgICB0ZXhDb29yZCA9IHN0YWdlX2lucHV0LnRleENvb3JkOwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAAABAAAAQwAAAEQAAACGAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvKMQE4AAAAABAAAAIQAABAAAAACwD::wQAAAD::wMAAAAAAAgAAAAIAAAACAAAABAAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxJgABFgAAAAANEAAAU01BQUNvbG9yRWRnZURldGVjdGlvblBTAPPyhEUgCIBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYAgAAAAIAAAAEAAAAAAAAAAWAAEWAAAAAAoQAABmcmFnX21haW4A8vEmAAEWAAAAAA0QAABTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFMA8:Lxgkv8RgAAAAQAgAAAQAAAAEAAAA1AAAAAQAAABUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwgAlEQAAAACAAAAAAQBtYWluAAAeAFERERAAAAcA:::::wAA:::::2NvbG9yVGV4AAAAACYAUREUEAAABgD:::::::8AAP::X2NvbG9yVGV4X3NhbXBsxorDwABAEwAAAAgAAAALAAAAFAAAAAAAAAAAAAAABYAAAAZAAAAAAAAAAAAAAAAAAAAAQAAAAAAAACIBQAAIAAAYAAAAAAAAAAAAAAAAAIACQD0CQAAAAAAAAwEAAABAAAAAAAAAAAAAAAAAAAAbWFpbgBub25lAAAALbou8QEAAAAAAAAAiAUAACAAAGAAAAAAAAAAAAAAAAACAAIABwAAAAAAAQD:::::AAAAAIgFAAAIAgAAAAAAAP::::8AAAAA:::::wEAAQAAAAEAAAAAAEM6XFdvcmtzcGFjZVxTdGVlbFNvdWxcR2FtZVxidWlsZFx0ZW1wXHNtYWFfZWRnZV9kZXRlY3QuZnJhZy5obHNsAAAA:u:%7wEAAAABAAAAAAEAAAAAAAAAAAAAAP::::::::::::8MAP::::::::::::8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlC4xAQhbYmQBAAAAzV:hJhPP3kmaZFup8uDt628AAAAvTGlua0luZm8AL25hbWVzAC9zcmMvaGVhZGVyYmxvY2sAL3NyYy9maWxlcy9jOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxzbWFhX2VkZ2VfZGV0ZWN0LmZyYWcuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAMsAAAD8AQAAVwEAAHgAAAAAAAAA3wkAAIAAAAAoCQAAEA4AAFwAAAAQAAAAKAAAADgCAAAsAAAAXAAAAAMAAAAjAAAAFwAAACIAAAAcAAAADQAAAAYAAAAZAAAAGgAAABsAAAAOAAAACAAAAAkAAAAKAAAACwAAAAwAAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAAFgAAAAcAAAAYAAAAHQAAAB4AAAAf
kha_Shaders.smaa_edge_detect_vertData0 = "s22616:AXBvcwAAASRHbG9iYWxzAAABc2NyZWVuU2l6ZUludgAAAAAACAAAAAIBRFhCQxhTl2z%ZLTNvwKm0zGGCnIBAAAAGEIAAAYAAAA4AAAAAAEAADQBAADUAQAAlAMAABAEAABSREVGwAAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAJgAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAABAAAAYAAAABAAAAAAAAAAAAAAAHgAAAAAAAAACAAAAAIAAACIAAAAAAAAAHNjcmVlblNpemVJbnYAq6sBAAMAAQACAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOmAAAAAUAAAAIAAAAgAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAgAAAAAEAAAAAAAAAAwAAAAEAAAAPAAAAgAAAAAIAAAAAAAAAAwAAAAIAAAAPAAAAgAAAAAMAAAAAAAAAAwAAAAMAAAADDAAAiQAAAAAAAAABAAAAAwAAAAQAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUrgBAABAAAEAbgAAAFkAAARGjiAAAAAAAAEAAABfAAADMhAQAAAAAABlAAAD8iAQAAAAAABlAAAD8iAQAAEAAABlAAAD8iAQAAIAAABlAAADMiAQAAMAAABnAAAE8iAQAAQAAAABAAAAaAAAAgEAAAAyAAAP8gAQAAAAAABGFBAAAAAAAAJAAAAAAAA:AAAAvwAAAD8AAAC:AkAAAAAAAD8AAAA:AAAAPwAAAD8yAAAN8iAQAAAAAABGhCAAAAAAAAAAAAACQAAAAACAvwAAAAAAAAAAAACAP0YOEAAAAAAAMgAADfIgEAABAAAARoQgAAAAAAAAAAAAAkAAAAAAgD8AAAAAAAAAAAAAgL9GDhAAAAAAADIAAA3yIBAAAgAAAEaEIAAAAAAAAAAAAAJAAAAAAADAAAAAAAAAAAAAAABARg4QAAAAAAAyAAAPMiAQAAMAAABGEBAAAAAAAAJAAAAAAAA:AAAAvwAAAAAAAAAAAkAAAAAAAD8AAAA:AAAAAAAAAAA2AAAFMiAQAAQAAABGEBAAAAAAADYAAAjCIBAABAAAAAJAAAAAAAAAAAAAAAAAAD8AAIA:PgAAAVNUQVR0AAAACAAAAAEAAAAAAAAABgAAAAUAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAD4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAfAAAAnAAAAAAAAAAcwgwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwjEBCFtiZAEAAABZpSPrwrxmTb3itSJNAzPPAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwvcmQgOiBURVhDT09SRDM7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogMC41Zi54eCkgKyAwLjVmLnh4OwogICAgdGV4Q29vcmQueSA9IDEuMGYgLSB0ZXhDb29yZC55OwogICAgb2Zmc2V0MCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiBmbG9hdDQoLTEuMGYsIDAuMGYsIDAuMGYsIDEuMGYpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIGZsb2F0NCgxLjBmLCAwLjBmLCAwLjBmLCAtMS4wZikpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDIgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogZmxvYXQ0KC0yLjBmLCAwLjBmLCAwLjBmLCAyLjBmKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSBmbG9hdDQocG9zLCAwLjBmLCAxLjBmKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpdYMBAO4yAQAIaAAAHsICAMZaAAACaQIAwcMAADH7AwCKtwMAUIUBANNjAABBJAEAmbbmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplSW52OwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MDsKc3RhdGljIGZsb2F0NCBvZmZzZXQxOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDI7CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfSW5wdXQKewogICAgZmxvYXQyIHBvcyA6IFRFWENPT1JEMDsKfTsKCnN0cnVjdCBTUElSVl9Dcm9zc19PdXRwdXQKewogICAgZmxvYXQ0IG9mZnNldDAgOiBURVhDT09SRDA7CiAgICBmbG9hdDQgb2Zmc2V0MSA6IFRFWENPT1JEMTsKICAgIGZsb2F0NCBvZmZzZXQyIDogVEVYQ09PUkQyOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQzOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHRleENvb3JkLnkgPSAxLjBmIC0gdGV4Q29vcmQueTsKICAgIG9mZnNldDAgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogZmxvYXQ0KC0xLjBmLCAwLjBmLCAwLjBmLCAxLjBmKSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MSA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiBmbG9hdDQoMS4wZiwgMC4wZiwgMC4wZiwgLTEuMGYpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHl4eSAqIGZsb2F0NCgtMi4wZiwgMC4wZiwgMC4wZiwgMi4wZikpICsgdGV4Q29vcmQueHl4eTsKICAgIGdsX1Bvc2l0aW9uID0gZmxvYXQ0KHBvcywgMC4wZiwgMS4wZik7CiAgICBnbF9Qb3NpdGlvbi56ID0gKGdsX1Bvc2l0aW9uLnogKyBnbF9Qb3NpdGlvbi53KSAqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MCA9IG9mZnNldDA7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MSA9IG9mZnNldDE7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MiA9IG9mZnNldDI7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%7:7vAQAAAGMFAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9lZGdlX2RldGVjdC52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfZWRnZV9kZXRlY3QudmVydC5obHNsAHVuaWZvcm0gZmxvYXQyIHNjcmVlblNpemVJbnY7CgpzdGF0aWMgZmxvYXQ0IGdsX1Bvc2l0aW9uOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQyIHBvczsKc3RhdGljIGZsb2F0NCBvZmZzZXQwOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDE7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0MjsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgcG9zIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgb2Zmc2V0MCA6IFRFWENPT1JEMDsKICAgIGZsb2F0NCBvZmZzZXQxIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IG9mZnNldDIgOiBURVhDT09SRDI7CiAgICBmbG9hdDIgdBviMAGAAAAAwyrEtEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAABAAAAAAAAAEQAAAAoAAAAG%IwAXZ3Xu3cjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAdnNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAADQDAAAAAAAATAEAAAAAAABMAQAACBAAAGwAAAABAKBtYWluADIAPhECEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABABsAAAAAQBMAQAAAAAWAFARAQAFAAQABABsAAAAAQBMAQQAAAA6AD4RBxAAAIgAPG1haW4gcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAgAFADgABABsAAAAAQBMAUAAAAAWAFARAgAFADwABABsAAAAAQBMAUQAAAAWAFARAgAFAEAABABsAAAAAQBMAUgAAAAWAFARAgAFAEQABABsAAAAAQBMAUwAAAAWAFARAgAFADAABABsAAAAAQBMATAAAAAWAFARAgAFADQABABsAAAAAQBMATQAAAAWAFARAgAFACAABABsAAAAAQBMASAAAAAWAFARAgAFACQABABsAAAAAQBMASQAAAAWAFARAgAFACgABABsAAAAAQBMASgAAAAWAFARAgAFACwABABsAAAAAQBMASwAAAAWAFARAgAFABAABABsAAAAAQBMARAAAAAWAFARAgAFABQABABsAAAAAQBMARQAAAAWAFARAgAFABgABABsAAAAAQBMARgAAAAWAFARAgAFABwABABsAAAAAQBMARwAAAAWAFARAgAFAAAABABsAAAAAQBMAQAAAAAWAFARAgAFAAQABABsAAAAAQBMAQQAAAAWAFARAgAFAAgABABsAAAAAQBMAQgAAAAWAFARAgAFAAwABABsAAAAAQBMAQwAAAAyAE0RgAAAADADAAAAEAAABwAJBQ1VC2AGAgNwBgIMNDQIAAkPDVQBbAtQBgIDcAYCDDQ0AgBOEQIABgD0AAAAGAAAAAEAAAAQAbIWkjZl6K20JKxCD8Cg:DEAAPIAAADYAAAAAAAAAAEAAQC4AQAAAAAAABAAAADMAAAAbAAAACYAAIBsAAAAJgAAAKgAAAAmAACAqAAAACYAAADcAAAAJgAAgNwAAAAmAAAAEAEAACYAAIAQAQAAJgAAAEQBAAAtAACARAEAAC0AAACAAQAALQAAgIABAAAtAAAAlAEAAC0AAICUAQAALQAAALQBAAAtAACAtAEAAC0AAAAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAGAAFABgABQAYAAUAGAAFABgABQAYAAUAGAAFABgA9goxATgAAAAAEAAADRAAAGABAAAKAP::BAAAAP::AwAAAAAANAAAADQAAAAIAAAAPAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vESAAMSDRUDAAAQAAAAAHBvcwDy8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vFqAAMSDRUDAAQQAAAAAG9mZnNldDAA8vENFQMABBAAABAAb2Zmc2V0MQDy8Q0VAwAEEAAAIABvZmZzZXQyAPLxDRUDAAAQAAAwAHRleENvb3JkAPENFQMABBAAADgAZ2xfUG9zaXRpb24A8vEqAAUVBQAAAAUQAAAAAAAAAAAAAEgAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAMQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAACgAYFQAQAAABAAEACgAYFQsQAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgqIDAuNTsKfQoKU1BJUlZfQ3Jvc3NfT3V0cHV0IG1haW4oU1BJUlZfQ3Jvc3NfSW5wdXQgc3RhZ2VfaW5wdXQpCnsKICAgIHBvcyA9IHN0YWdlX2lucHV0LnBvczsKICAgIHZlcnRfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5nbF9Qb3NpdGlvbiA9IGdsX1Bvc2l0aW9uOwogICAgc3RhZ2Vfb3V0cHV0LnRleENvb3JkID0gdGV4Q29vcmQ7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MCA9IG9mZnNldDA7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MSA9IG9mZnNldDE7CiAgICBzdGFnZV9vdXRwdXQub2Zmc2V0MiA9IG9mZnNldDI7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAAAAAAEMAAAAAAAAAAAAAAEQAAACGAAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAAB2ZXJ0X21haW4A8vgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAAChAAAHZlcnRfbWFpbgDyaCS:xEAAAAAwCAAABAAAAAQAAABUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwhaW4AACIAUREMEAAACAAAAAAA::::::::c2NyZWVuU2l6ZUludggkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAAUAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAALgBAAAgAABgAAAAAAAAAAAAAAAAAgAJADgDAAAAAAAAGAEAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAAC4AQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAuAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9lZGdlX2RldGVjdC52ZXJ0Lmhsc2wAAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCFtiZAEAAABZpSPrwrxmTb3itSJNAzPPbwAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfZWRnZV9kZXRlY3QudmVydC5obHNsAAQAAAAGAAAAAQAAAB4AAAAAAAAAEQAAAAcAAAAiAAAACAAAAAoAAAAGAAAAAAAAAAUAAAAAAAAA3FEzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAywAAAJgBAABXAQAAUAAAAAAAAACTBQAAgAAAANwEAABcBAAAPAAAAAwAAAAoAAAALAIAACwAAAA4AAAAAwAAABoAAAAQAAAAGQAAABMAAAALAAAABgAAABIAAAAMAAAACAAAAAkAAAAKAAAADQAAAA4AAAAPAAAABwAAABEAAAAUAAAAFQAAABYAAAAYAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw
kha_Shaders.smaa_neighborhood_blend_fragData0 = "s29130:AAVfYmxlbmRUZXhfc2FtcGxlcgAAX2NvbG9yVGV4X3NhbXBsZXIAAWJsZW5kVGV4AABjb2xvclRleAABJEdsb2JhbHMAAAFzY3JlZW5TaXplSW52AAAAAAAIAAAAAgFEWEJDy:a1ZvAgtATBU3Gh0wsrngEAAAD4VAAABgAAADgAAAC0AQAAAAIAADQCAAB0BgAA8AYAAFJERUZ0AQAAAQAAAPwAAAAFAAAAHAAAAAAE::8BAQAATAEAALwAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAzgAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAADgAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAOkAAAACAAAABQAAAAQAAAD:::::AQAAAAEAAAANAAAA8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABfYmxlbmRUZXhfc2FtcGxlcgBfY29sb3JUZXhfc2FtcGxlcgBibGVuZFRleABjb2xvclRleAAkR2xvYmFscwCr8gAAAAEAAAAUAQAAEAAAAAAAAAAAAAAALAEAAAAAAAAIAAAAAgAAADwBAAAAAAAAc2NyZWVuU2l6ZUludgCrqwEAAwABAAIAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTkQAAAACAAAACAAAADgAAAAAAAAAAAAAAAMAAAAAAAAADw8AADgAAAABAAAAAAAAAAMAAAABAAAAAwMAAFRFWENPT1JEAKurq09TR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAA8AAABTVl9UYXJnZXQAq6tTSERSOAQAAEAAAAAOAQAAWQAABEaOIAAAAAAAAQAAAFoAAAMAYBAAAAAAAFoAAAMAYBAAAQAAAFgYAAQAcBAAAAAAAFVVAABYGAAEAHAQAAEAAABVVQAAYhAAA:IQEAAAAAAAYhAAAzIQEAABAAAAZQAAA:IgEAAAAAAAaAAAAgQAAABIAAAL8gAQAAAAAABGEBAAAAAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAAEgAAAvyABAAAQAAAOYaEAAAAAAARn4QAAAAAAAAYBAAAAAAAAFAAAAAAAAASAAAC:IAEAACAAAARhAQAAEAAADWchAAAAAAAABgEAAAAAAAAUAAAAAAAAA2AAAFEgAQAAIAAAA6ABAAAAAAADYAAAUiABAAAgAAABoAEAABAAAAEQAAChIAEAAAAAAARg4QAAIAAAACQAAAAACAPwAAgD8AAIA:AACAPzEAAAcSABAAAAAAAAoAEAAAAAAAAUAAAKzFJzcfAAQDCgAQAAAAAABIAAAL8iAQAAAAAABGEBAAAQAAAEZ%EAABAAAAAGAQAAEAAAABQAAAAAAAABIAAAE0AAAHEgAQAAAAAAA6ABAAAAAAACoAEAACAAAANAAAByIAEAAAAAAAOgAQAAIAAAAaABAAAgAAADEAAAcSABAAAAAAABoAEAAAAAAACgAQAAAAAAA2AAAFUgAQAAEAAAAGAhAAAgAAADYAAAiiABAAAQAAAAJAAAAAAAAAAAAAAAAAAAAAAAAANgAABRIAEAACAAAAAUAAAAAAAAA3AAAJ8gAQAAMAAAAGABAAAAAAAEYOEAABAAAARgwQAAIAAAA3AAAJMgAQAAAAAAAGABAAAAAAAIYAEAABAAAA1gUQAAIAAAAPAAAKQgAQAAAAAABGABAAAAAAAAJAAAAAAIA:AACAPwAAAAAAAAAADgAABzIAEAAAAAAARgAQAAAAAACmChAAAAAAADgAAAvyABAAAQAAAEaEIAAAAAAAAAAAAAJAAAAAAIA:AACAPwAAgL8AAIC:MgAAD:IAEAACAAAARhQQAAEAAAACQAAAAACAPwAAgL8AAIA:AACAvwJAAAAAAAAAAACAPwAAAAAAAIA:MgAACfIAEAABAAAARg4QAAMAAABGDhAAAQAAAEYOEAACAAAAMgAAD:IAEAABAAAARg4QAAEAAAACQAAAAACAPwAAgL8AAIA:AACAvwJAAAAAAAAAAACAPwAAAAAAAIA:SAAAC:IAEAACAAAARgAQAAEAAABGfhAAAQAAAABgEAABAAAAAUAAAAAAAABIAAAL8gAQAAEAAADmChAAAQAAAEZ%EAABAAAAAGAQAAEAAAABQAAAAAAAADgAAAfyABAAAQAAAFYFEAAAAAAARg4QAAEAAAAyAAAJ8iAQAAAAAABGDhAAAgAAAAYAEAAAAAAARg4QAAEAAAAVAAABPgAAAVNUQVR0AAAAHgAAAAQAAAAAAAAAAwAAAA0AAAAAAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAAAAAAAAAAAAAAAAAUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTUERCAE4AAE1pY3Jvc29mdCBDL0MrKyBNU0YgNy4wMA0KGkRTAAAAAAIAAAIAAAAnAAAAwAAAAAAAAAAlwwwUAAAAgAAAAPAAAAAAAAAD:::::AAAAAAYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwjEBCFtiZAEAAACbcUICIDEGQJJMCRKC9ysKAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAANxRMwleENvb3JkIDogVEVYQ09PUkQxOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgZnJhZ0NvbG9yIDogU1ZfVGFyZ2V0MDsKfTsKCmZsb2F0NCB0ZXh0dXJlTG9kQShUZXh0dXJlMkQ8ZmxvYXQ0PiB0ZXgsIFNhbXBsZXJTdGF0ZSBfdGV4X3NhbXBsZXIsIGlub3V0IGZsb2F0MiBjb29yZHMsIGZsb2F0IGxvZCkKewogICAgY29vcmRzLnkgPSAxLjBmIC0gY29vcmRzLnk7CiAgICByZXR1cm4gdGV4LlNhbXBsZUxldmVsKF90ZXhfc2FtcGxlciwgY29vcmRzLCBsb2QpOwp9CgpmbG9hdDQgU01BQU5laWdoYm9yaG9vZEJsZW5kaW5nUFMoZmxvYXQyIHRleGNvb3JkLCBmbG9hdDQgb2Zmc2V0XzEpCnsKICAgIGZsb2F0NCBhOwogICAgYS54ID0gYmxlbmRUZXguU2FtcGxlTGV2ZWwoX2JsZW5kVGV4X3NhbXBsZXIsIG9mZnNldF8xLnh5LCAwLjBmKS53OwogICAgYS55ID0gYmxlbmRUZXguU2FtcGxlTGV2ZWwoX2JsZW5kVGV4X3NhbXBsZXIsIG9mZnNldF8xLnp3LCAwLjBmKS55xloAAHWDAQCyNAIACGgAACb3AgB%iwMAwcMAADH7AwCo0QAAUIUBANNjAACisgMAQSQBAHG5AQDqFAMAuBwDAKpzAQBCdQAAlTEDAIyQAwDV:wAAdscAAOnwAgBQuh0dXJlMkQ8ZmxvYXQ0PiBibGVuZFRleCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF9ibGVuZFRleF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBjb2xvclRleCA6IHJlZ2lzdGVyKHQxKTsKU2FtcGxlclN0YXRlIF9jb2xvclRleF9zYW1wbGVyIDogcmVnaXN0ZXIoczEpOwp1bmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplSW52OwoKc3RhdGljIGZsb2F0NCBmcmFnQ29sb3I7CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0OwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0NCBvZmZzZXQgOiBURVhDT09SRDA7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDE7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQ0IHRleHR1cmVMb2RBKFRleHR1cmUyRDxmbG9hdDQ%IHRleCwgU2FtcGxlclN0YXRlIF90ZXhfc2FtcGxlciwgaW5vdXQgZmxvYXQyIGNvb3JkcywgZmxvYXQgbG9kKQp7CiAgICBjb29yZHMueSA9IDEuMGYgLSBjb29yZHMueTsKICAgIHJldHVybiB0ZXguU2FtcGxlTGV2ZWwoX3RleF9zYW1wbGVyLCBjb29yZHMsIGxvZCk7Cn0KCmZsb2F0NCBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhmbG9hdDIgdGV4Y29vcmQsIGZsb2F0NCBvZmZzZXRfMSkKewogICAgZmxvYXQ0IGE7CiAgICBhLnggPSBibGVuZFRleC5TYW1wbGVMZXZlbChfYmxlbmRUZXhfc2FtcGxlciwgb2Zmc2V0XzEueHksIDAuMGYpLnc7CiAgICBhLnkgPSBibGVuZFRleC5TYW1wbGVMZXZlbChfYmxlbmRUZXhfc2FtcGxlciwgb2Zmc2V0XzEuencsIDAuMGYpLnk7CiAgICBmbG9hdDIgXzU5ID0gYmxlbmRUZXguU2FtcGxlTGV2ZWwoX2JsZW5kVGV4X3NhbXBsZXIsIHRleGNvb3JkLCAwLjBmKS54ejsKICAgIGEgPSBmbG9hdDQoYS54LCBhLnksIF81OS55LCBfNTkueCk7CiAgICBpZiAoZG90KGEsIDEuMGYueHh4eCkgPCA5Ljk5OTk5OTc0NzM3ODc1MTYzNTU1MTQ1MjYzNjcxODhlLTA2ZikKICAgIHsKICAgICAgICBmbG9hdDQgY29sb3IgPSBjb2xvclRleC5TYW1wbGVMZXZlbChfY29sb3JUZXhfc2FtcGxlciwgdGV4Y29vcmQsIDAuMGYpOwogICAgICAgIHJldHVybiBjb2xvcjsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBib29sIGggPSBtYXgoYS54LCBhLnopID4gbWF4KGEueSwgYS53KTsKICAgICAgICBmbG9hdDQgYmxlbmRpbmdPZmZzZXQgPSBmbG9hdDQoMC4wZiwgYS55LCAwLjBmLCBhLncpOwogICAgICAgIGZsb2F0MiBibGVuZGluZ1dlaWdodCA9IGEueXc7CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC54ID0gYS54OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC55ID0gMC4wZjsKICAgICAgICAgICAgYmxlbmRpbmdPZmZzZXQueiA9IGEuejsKICAgICAgICAgICAgYmxlbmRpbmdPZmZzZXQudyA9IDAuMGY7CiAgICAgICAgICAgIGJsZW5kaW5nV2VpZ2h0LnggPSBhLng7CiAgICAgICAgICAgIGJsZW5kaW5nV2VpZ2h0LnkgPSBhLno7CiAgICAgICAgfQogICAgICAgIGJsZW5kaW5nV2VpZ2h0IC89IGRvdChibGVuZGluZ1dlaWdodCwgMS4wZi54eCkueHg7CiAgICAgICAgZmxvYXQyIHRjID0gZmxvYXQyKHRleGNvb3JkLngsIDEuMGYgLSB0ZXhjb29yZC55KTsKICAgICAgICBmbG9hdDQgYmxlbmRpbmdDb29yZCA9IChibGVuZGluZ09mZnNldCAqIGZsb2F0NChzY3JlZW5TaXplSW52LCAtc2NyZWVuU2l6ZUludikpICsgdGMueHl4eTsKICAgICAgICBmbG9hdDIgcGFyYW0gPSBibGVuZGluZ0Nvb3JkLnh5OwogICAgICAgIGZsb2F0IHBhcmFtXzEgPSAwLjBmOwogICAgICAgIGZsb2F0NCBfMTU0ID0gdGV4dHVyZUxvZEEoY29sb3JUZXgsIF9jb2xvclRleF9zYW1wbGVyLCBwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgZmxvYXQ0IGNvbG9yXzEgPSBfMTU0ICogYmxlbmRpbmdXZWlnaHQueDsKICAgICAgICBmbG9hdDIgcGFyYW1fMiA9IGJsZW5kaW5nQ29vcmQuenc7CiAgICAgICAgZmxvYXQgcGFyYW1fMyA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF8xNjIgPSB0ZXh0dXJlTG9kQShjb2xvclRleCwgX2NvbG9yVGV4X3NhbXBsZXIsIHBhcmFtXzIsIHBhcmFtXzMpOwogICAgICAgIGNvbG9yXzEgKz0gKF8xNjIgKiBibGVuZGluZ1dlaWdodC55KTsKICAgICAgICByZXR1cm4gY29sb3JfMTsKICAgIH0KfQoKdm9pZCBmcmFnX21haW4oKQp7CiAgICBmbG9hdDIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGZsb2F0NCBwYXJhbV8xID0gb2Zmc2V0OwogICAgZnJhZ0NvbG9yID0gU01BQU5laWdoYm9yaG9vZEJsZW5kaW5nUFMocGFyYW0sIHBhcmFtXzEpOwp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgdGV4Q29vcmQgPSBzdGFnZV9pbnB1dC50ZXhDb29yZDsKICAgIG9mZnNldCA9IHN0YWdlX2lucHV0Lm9mZnNldDsKICAgIGZyYWdfbWFpbigpOwogICAgU1BJUlZfQ3Jvc3NfT3V0cHV0IHN0YWdlX291dHB1dDsKICAgIHN0YWdlX291dHB1dC5mcmFnQ29sb3IgPSBmcmFnQ29sb3I7CiAgICByZXR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgvAQAAANIKAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9uZWlnaGJvcmhvb2RfYmxlbmQuZnJhZy5obHNsAABjOlx3b3Jrc3BhY2Vcc3RlZWxzb3VsXGdhbWVcYnVpbGRcdGVtcFxzbWFhX25laWdoYm9yaG9vZF9ibGVuZC5mcmFnLmhsc2wAVGV4dHVyZTJEPGZsb2F0ND4gYmxlbmRUZXggOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfYmxlbmRUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKVGV4dHVyZTJEPGZsb2F0ND4gY29sb3JUZXggOiByZWdpc3Rlcih0MSk7ClNhbXBsZXJTdGF0ZSBfY29sb3JUZXhfc2FtcGxlciA6IHJlZ2lzdGVyKHMxKTsKdW5pZm9ybSBmbG9hdDIgc2NyZWVuU2l6ZUludjsKCnN0YXRpYyBmbG9hdDQgZnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDQgb2Zmc2V0IDogVEVYQ09PUkQwOwogICAgZmxvYXQyIBviMAGAAAAAlpXPtEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAEsAAAAoAAAAG%IwAdx2WYc9CgAAAQAAAEojQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAAAwIAAAAAAAAvAMAAAAAAAC8AwAACBAAAHwAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABAB8AAAAAQC8AwAAAAAWAFARAQAFAAQABAB8AAAAAQC8AwQAAAAWAFARAQAFAAgABAB8AAAAAQC8AwgAAAAWAFARAQAFAAwABAB8AAAAAQC8AwwAAAAWAFARAQAFABAABAB8AAAAAQC8AxAAAAAWAFARAQAFABQABAB8AAAAAQC8AxQAAAAmAE0RgAAAAAgIAAAAEAAABwAJBQ07C2AEg7gIAAkRDToBfAyDuAAACgFNEXABAAAECAAAARAAAAcACQUNRwtABgIDLA1MBgIDLA1DBgQDLAkJDU8GBAN4CQUNBQYEAywJCQ0vC2QNCQYWA1QNOgYCA4CQDWIGBANEDVEGDgOAjA1PBgkDPA1RBggDLA0tBgIDLAkFDQUGBAwEQAgACQsNRAF8BkcDAAYCAywJEg1IBgIDLAkJDRkGBAMsDUIDUAkFDUMDHAkYDU4LTAkFDQUGBAMsCRINHgtkCSINLgMcCRIDHAkJDQkGFgMcCRsNNgYCA4CQCQkNOQMoCSENVgYEAxwJIA1hAywJFw1QBg4DYA1OBgkDPA1QBggDLAkVDSsGAgMsCQkNLAMcCQUNBQYEDAQkAFIAPhEMEAAAiAA8U01BQU5laWdoYm9yaG9vZEJsZW5kaW5nUFMgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAUBECAAUAAAAEAHwAAAABALwDLAGIAgAAAAAaAFARAgAFAAQABAB8AAAAAQC8AywBiAIEAAAAGgBQEQIABQAIAAQAfAAAAAEAvAMsAYgCCAAAABoAUBECAAUADAAEAHwAAAABALwDLAGIAgwAAAAqAD4RABAAAAgAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAKgAAAABAJADDAAAABYAUBEAAAUABAAEANQAAAABAFwBFAAAACoAPhEBEAAACABfNTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAAAEAAAEAOAIsAAAAFgBQEQAABQAEAAQAAAEAAAEAOAIoAAAAKgA%EWIAAAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABAD8AQAAAQCQAAAAAAA2AD4RABAAAAgAYmxlbmRpbmdPZmZzZXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAGgCAAABAMgBMAAAABYAUBEAAAUABAAEAGgCAAABAMgBNAAAABYAUBEAAAUACAAEAGgCAAABAMgBOAAAABYAUBEAAAUADAAEAGgCAAABAMgBPAAAADYAPhEBEAAACABibGVuZGluZ1dlaWdodAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAjAIAAAEApAEAAAAAFgBQEQAABQAEAAQAjAIAAAEApAEEAAAANgA%EQAQAAAIAGJsZW5kaW5nQ29vcmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABcAwAAAQA8ABAAAAAWAFARAAAFAAQABABcAwAAAQA8ABQAAAAWAFARAAAFAAgABABcAwAAAQA8ABgAAAAWAFARAAAFAAwABABcAwAAAQA8ABwAAAAuAE0RmAEAADAHAAACEAAABwAJBQ02BgQMPILgDCxoCAAJDA01AYNcDDwADCxoAABCAD4RDBAAAIgAPHRleHR1cmVMb2RBIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAMQDAAABACwAIAAAABYAUBEAAAUABAAEAMQDAAABACwAJAAAABYAUBEAAAUACAAEAMQDAAABACwAKAAAABYAUBEAAAUADAAEAMQDAAABACwALAAAABYAUBEAAAUAAAAEAPADAAABABwAEAAAABYAUBEAAAUABAAEAPADAAABABwAFAAAABYAUBEAAAUACAAEAPADAAABABwAGAAAABYAUBEAAAUADAAEAPADAAABABwAHAAAAAIAThEmAE0RmAEAAAAIAAACEAAABwAJBQ02BgQMLIMcCAAJDA01AYOYDCwAQgA%EQwQAACIADx0ZXh0dXJlTG9kQSByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADEAwAAAQAsACAAAAAWAFARAAAFAAQABADEAwAAAQAsACQAAAAWAFARAAAFAAgABADEAwAAAQAsACgAAAAWAFARAAAFAAwABADEAwAAAQAsACwAAAACAE4RAgBOEQIAThECAAYA9AAAABgAAAABAAAAEAEJmZClA77Qx2Z5jaYZ%yDRAADyAAAA6AIAAAAAAAABAAEAOAQAAAAAAAA8AAAA3AIAAHwAAABQAACAfAAAAFAAAACoAAAAUAAAgKgAAABQAAAA1AAAAFAAAIDUAAAAUAAAAAABAABQAACAAAEAAFAAAAAUAQAAUAAAgBQBAABQAAAAKAEAAFAAAIAoAQAAUAAAAFABAABQAACAUAEAAFAAAABsAQAAUAAAgGwBAABQAAAAeAEAAFAAAIB4AQAAUAAAAKQBAABQAACApAEAAFAAAACoAQAAUAAAgKgBAABQAAAAxAEAAFAAAIDEAQAAUAAAAOABAABQAACA4AEAAFAAAAD8AQAAUAAAgPwBAABQAAAAEAIAAFAAAIAQAgAAUAAAADACAABQAACAMAIAAFAAAABEAgAAUAAAgEQCAABQAAAAaAIAAFAAAIBoAgAAUAAAAIwCAABQAACAjAIAAFAAAAC0AgAAUAAAgLQCAABQAAAA0AIAAFAAAIDQAgAAUAAAAPwCAABQAACA:AIAAFAAAAA4AwAAUAAAgDgDAABQAAAAXAMAAFAAAIBcAwAAUAAAAJgDAABQAACAmAMAAFAAAADEAwAAUAAAgMQDAABQAAAA8AMAAFAAAIDwAwAAUAAAAAwEAABQAACADAQAAFAAAAAwBAAAUAAAgDAEAABQAAAANAQAAFMAAIA0BAAAUwAAAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAPYAAAA0AAAAAAAAAAAQAAAAAAAARgAAAAEQAAAAAAAAHQAAAAIQAAAAAAAAFwAAAAIQAAAAAAAAFwAAABgAAAAAAAAAFAAAADQAAABcAAAAfAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAGBAAAMgBAAAKAP::BAAAAP::AwAAAAAAYAAAAGAAAAAIAAAAaAAAAAAAAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vEWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEqAAMSDRUDAAAQAAAAAG9mZnNldADz8vENFQMAARAAABAAdGV4Q29vcmQA8SYABRUCAAAAAhAAAAAAAAAAAAAAGABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAMQAAAWAAMSDRUDAAAQAAAAAGZyYWdDb2xvcgAqAAUVAQAAAAUQAAAAAAAAAAAAABAAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAQQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAADgABEgIAAAABEAAAABAAAAoAGBUAEAAAAQABAA4ACBAMEAAAFwACAAsQAAAOABcVABAAAAMC8EMAAPLxDgAXFQAAAAAKAvBDAADy8RYAARIEAAAADhAAAA8QAAABEAAAQAAAAA4ACBAMEAAAFwAEABAQAAAKABgVDhAAAAEAAQAKABgVEhAAAAEAAAIKABgVDxAAAAEAAQAKABgVFBAAAAEAAAIKABgVARAAAAEAAQAKABgVFhAAAAEAAAIpSwAApsUCAD1ksKICAgIGZsb2F0MiBfNTkgPSBibGVuZFRleC5TYW1wbGVMZXZlbChfYmxlbmRUZXhfc2FtcGxlciwgdGV4Y29vcmQsIDAuMGYpLnh6OwogICAgYSA9IGZsb2F0NChhLngsIGEueSwgXzU5LnksIF81OS54KTsKICAgIGlmIChkb3QoYSwgMS4wZi54eHh4KSA8IDkuOTk5OTk5NzQ3Mzc4NzUxNjM1NTUxNDUyNjM2NzE4OGUtMDZmKQogICAgewogICAgICAgIGZsb2F0NCBjb2xvciA9IGNvbG9yVGV4LlNhbXBsZUxldmVsKF9jb2xvclRleF9zYW1wbGVyLCB0ZXhjb29yZCwgMC4wZik7CiAgICAgICAgcmV0dXJuIGNvbG9yOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGJvb2wgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGZsb2F0NCBibGVuZGluZ09mZnNldCA9IGZsb2F0NCgwLjBmLCBhLnksIDAuMGYsIGEudyk7CiAgICAgICAgZmxvYXQyIGJsZW5kaW5nV2VpZ2h0ID0gYS55dzsKICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LnggPSBhLng7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LnkgPSAwLjBmOwogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC53ID0gMC4wZjsKICAgICAgICAgICAgYmxlbmRpbmdXZWlnaHQueCA9IGEueDsKICAgICAgICAgICAgYmxlbmRpbmdXZWlnaHQueSA9IGEuejsKICAgICAgICB9CiAgICAgICAgYmxlbmRpbmdXZWlnaHQgLz0gZG90KGJsZW5kaW5nV2VpZ2h0LCAxLjBmLnh4KS54eDsKICAgICAgICBmbG9hdDIgdGMgPSBmbG9hdDIodGV4Y29vcmQueCwgMS4wZiAtIHRleGNvb3JkLnkpOwogICAgICAgIGZsb2F0NCBibGVuZGluZ0Nvb3JkID0gKGJsZW5kaW5nT2Zmc2V0ICogZmxvYXQ0KHNjcmVlblNpemVJbnYsIC1zY3JlZW5TaXplSW52KSkgKyB0Yy54eXh5OwogICAgICAgIGZsb2F0MiBwYXJhbSA9IGJsZW5kaW5nQ29vcmQueHk7CiAgICAgICAgZmxvYXQgcGFyYW1fMSA9IDAuMGY7CiAgICAgICAgZmxvYXQ0IF8xNTQgPSB0ZXh0dXJlTG9kQShjb2xvclRleCwgX2NvbG9yVGV4X3NhbXBsZXIsIHBhcmFtLCBwYXJhbV8xKTsKICAgICAgICBmbG9hdDQgY29sb3JfMSA9IF8xNTQgKiBibGVuZGluZ1dlaWdodC54OwogICAgICAgIGZsb2F0MiBwYXJhbV8yID0gYmxlbmRpbmdDb29yZC56dzsKICAgICAgICBmbG9hdCBwYXJhbV8zID0gMC4wZjsKICAgICAgICBmbG9hdDQgXzE2MiA9IHRleHR1cmVMb2RBKGNvbG9yVGV4LCBfY29sb3JUZXhfc2FtcGxlciwgcGFyYW1fMiwgcGFyYW1fMyk7CiAgICAgICAgY29sb3JfMSArPSAoXzE2MiAqIGJsZW5kaW5nV2VpZ2h0LnkpOwogICAgICAgIHJldHVybiBjb2xvcl8xOwogICAgfQp9Cgp2b2lkIGZyYWdfbWFpbigpCnsKICAgIGZsb2F0MiBwYXJhbSA9IHRleENvb3JkOwogICAgZmxvYXQ0IHBhcmFtXzEgPSBvZmZzZXQ7CiAgICBmcmFnQ29sb3IgPSBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhwYXJhbSwgcGFyYW1fMSk7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICB0ZXhDb29yZCA9IHN0YWdlX2lucHV0LnRleENvb3JkOwogICAgb2Zmc2V0ID0gc3RhZ2VfaW5wdXQub2Zmc2V0OwogICAgZnJhZ19tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmZyYWdDb2xvciA9IGZyYWdDb2xvcjsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAcAAACUAAAASgAAAAEAAABLAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAAxAAAFgAAAALAP::BAAAAP::AwAAAAAADAAAAAwAAAAIAAAAFAAAAAAAAAAWAAEWAAAAAAoQAABmcmFnX21haW4A8vEmAAEWAAAAAA0QAABTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUwDxFgABFgAAAAAREAAAdGV4dHVyZUxvgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgDAAAAAgAAAAUAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDy8SYAARYAAAAADRAAAFNNQUFOZWlnaGJvcmhvb2RCbGVuZGluZ1BTAPEWAAEWAAAAABEQAAB0ZXh0dXJlTG9kQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xMAAAABwCAAABAAAAAQAAAKUAAAABAAAAfQAAAAEAAABdAAAAAQAAADUAAAABAAAAFQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABgAAAAkAAAAMAAAADwhaW4AAB4AURETEAAABwD:::::AAD:::::YmxlbmRUZXgAAAAAJgBRERUQAAAGAP:::::::wAA::9fYmxlbmRUZXhfc2FtcGxlcgAAAB4AURETEAAABwD:::::AQD:::::Y29sb3JUZXgAAAAAJgBRERUQAAAGAP:::::::wEA::9fY29sb3JUZXhfc2FtcGxlcgAAACIAUREXEAAACAAAAAAA::::::::c2NyZWVuU2l6ZUludgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD:::::Ggkv8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::3cJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAAWAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAADgEAAAgAABgAAAAAAAAAAAAAAAAAgAJABAIAAAAAAAATAMAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAAA4BAAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAOAQAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9uZWlnaGJvcmhvb2RfYmxlbmQuZnJhZy5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCFtiZAEAAACbcUICIDEGQJJMCRKC9ysKdgAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfbmVpZ2hib3Job29kX2JsZW5kLmZyYWcuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAA0gAAAAACAABfAQAAkAAAAAAAAAACCwAAgAAAAD0KAAB4CwAAaAAAABQAAAAoAAAAXAIAACwAAADIAAAAAwAAACMAAAAWAAAAIgAAABwAAAAOAAAABgAAABgAAAAZAAAAGgAAABsAAAAPAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAABwAAABcAAAAdAAAAHgAAAB8AAAAh
kha_Shaders.smaa_neighborhood_blend_vertData0 = "s19651:AXBvcwAAASRHbG9iYWxzAAABc2NyZWVuU2l6ZUludgAAAAAACAAAAAIBRFhCQxR7rKanZtbj52dn1oDAagkBAAAAaDkAAAYAAAA4AAAAAAEAADQBAACkAQAA5AIAAGADAABSREVGwAAAAAEAAABIAAAAAQAAABwAAAAABP7:AQEAAJgAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACRHbG9iYWxzAKurqzwAAAABAAAAYAAAABAAAAAAAAAAAAAAAHgAAAAAAAAACAAAAAIAAACIAAAAAAAAAHNjcmVlblNpemVJbnYAq6sBAAMAAQACAAAAAAAAAAAATWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAElTR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAMDAABURVhDT09SRACrq6tPU0dOaAAAAAMAAAAIAAAAUAAAAAAAAAAAAAAAAwAAAAAAAAAPAAAAUAAAAAEAAAAAAAAAAwAAAAEAAAADDAAAWQAAAAAAAAABAAAAAwAAAAIAAAAPAAAAVEVYQ09PUkQAU1ZfUG9zaXRpb24Aq6urU0hEUjgBAABAAAEATgAAAFkAAARGjiAAAAAAAAEAAABfAAADMhAQAAAAAABlAAAD8iAQAAAAAABlAAADMiAQAAEAAABnAAAE8iAQAAIAAAABAAAAaAAAAgEAAAAyAAAP8gAQAAAAAABGFBAAAAAAAAJAAAAAAAA:AAAAvwAAAD8AAAC:AkAAAAAAAD8AAAA:AAAAPwAAAD8yAAAN8iAQAAAAAABGhCAAAAAAAAAAAAACQAAAAACAPwAAAAAAAAAAAACAv0YOEAAAAAAAMgAADzIgEAABAAAARhAQAAAAAAACQAAAAAAAPwAAAL8AAAAAAAAAAAJAAAAAAAA:AAAAPwAAAAAAAAAANgAABTIgEAACAAAARhAQAAAAAAA2AAAIwiAQAAIAAAACQAAAAAAAAAAAAAAAAAA:AACAPz4AAAFTVEFUdAAAAAYAAAABAAAAAAAAAAQAAAADAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgA2AABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAAGwAAAJQAAAAAAAAAGgwAAAAAAAAA:::::wlC4xAQhbYmQBAAAAB6UW1zolykeo7DV57xACbwAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcUTMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwb3MgKiAwLjVmLnh4KSArIDAuNWYueHg7CiAgICB0ZXhDb29yZC55ID0gMS4wZiAtIHRleENvb3JkLnk7CiAgICBvZmZzZXQgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogZmxvYXQ0KDEuMGYsIDAuMGYsIDAuMGYsIC0xLjBmKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSBmbG9hdDQocG9zLCAwLjBmLCAxLjBmKTsKICAgIGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiArIGdsX1Bvc2l0aW9uLncpICogMC41Owp9CgpTUElSVl9Dcm9zc19PdXRwdXQgbWFpbihTUElSVl9Dcm9zc19JbnB1dCBzdGFnZV9pbnB1dCkKewogICAgcG9zID0gc3RhZ2VfaW5wdXQucG9zOwogICAgdmVydF9tYWluKCk7CiAgICBTUElSVl9Dcm9zc19PdXRwdXQgc3RhZ2Vfb3V0cHV0OwogICAgc3RhZ2Vfb3V0cHV0LmdsX1Bvc2l0aW9uID0gZ2xfUG9zaXRpb247CiAgICBzdGFnZV9vdXRwdXQudGV4Q29vcmQgPSB0ZXhDb29yZDsKICAgIHN0YWdlX291dHB1dC5vZmZzZXQgPSBvZmZzZXQ7CiAgICByZXWDAQDuMgEACGgAAB7CAgDGWgAA%R4DAMHDAAAx%wMAircDAFCFAQDTYwAAQSQBAJm9AwdW5pZm9ybSBmbG9hdDIgc2NyZWVuU2l6ZUludjsKCnN0YXRpYyBmbG9hdDQgZ2xfUG9zaXRpb247CnN0YXRpYyBmbG9hdDIgdGV4Q29vcmQ7CnN0YXRpYyBmbG9hdDIgcG9zOwpzdGF0aWMgZmxvYXQ0IG9mZnNldDsKCnN0cnVjdCBTUElSVl9Dcm9zc19JbnB1dAp7CiAgICBmbG9hdDIgcG9zIDogVEVYQ09PUkQwOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdDQgb2Zmc2V0IDogVEVYQ09PUkQwOwogICAgZmxvYXQyIHRleENvb3JkIDogVEVYQ09PUkQxOwogICAgZmxvYXQ0IGdsX1Bvc2l0aW9uIDogU1ZfUG9zaXRpb247Cn07Cgp2b2lkIHZlcnRfbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIDAuNWYueHgpICsgMC41Zi54eDsKICAgIHRleENvb3JkLnkgPSAxLjBmIC0gdGV4Q29vcmQueTsKICAgIG9mZnNldCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiBmbG9hdDQoMS4wZiwgMC4wZiwgMC4wZiwgLTEuMGYpKSArIHRleENvb3JkLnh5eHk7CiAgICBnbF9Qb3NpdGlvbiA9IGZsb2F0NChwb3MsIDAuMGYsIDEuMGYpOwogICAgZ2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56ICsgZ2xfUG9zaXRpb24udykgKiAwLjU7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICBwb3MgPSBzdGFnZV9pbnB1dC5wb3M7CiAgICB2ZXJ0X21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZ2xfUG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKICAgIHN0YWdlX291dHB1dC50ZXhDb29yZCA9IHRleENvb3JkOwogICAgc3RhZ2Vfb3V0cHV0Lm9mZnNldCA9IG9mZnNldDsKICAgIHJldHVybiBzdGFnZV9vdXRwdXQ7Cn0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7v:u8BAAAACgQAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzbWFhX25laWdoYm9yaG9vZF9ibGVuZC52ZXJ0Lmhsc2wAAGM6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfbmVpZ2hib3Job29kX2JsZW5kLnZlcnQuaGxzbAB1bmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplSW52OwoKc3RhdGljIGZsb2F0NCBnbF9Qb3NpdGlvbjsKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0MiBwb3M7CnN0YXRpYyBmbG9hdDQgb2Zmc2V0OwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MiBwb3MgOiBURVhDT09SRDA7Cn07CgpzdHJ1Y3QgU1BJUlZfQ3Jvc3NfT3V0cHV0CnsKICAgIGZsb2F0NCBvZmZzZXQgOiBURVhDT09SRDA7CiAgICBmbG9hdDIgdGV4Q29vcmQgOiBURVhDT09SRDE7CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gOiBTVl9Qb3NpdGlvbjsKfTsKCnZvaWQgdmVydF9tYWluKCkKewogICAgdGV4Q29vcmQgPSAoG%IwAYAAAAA5Ltu0SIfZAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAASwAAACgAAAAb4jABXXxb9XUDAAABAAAASgAAAEsgA8ERABAAAAAQoAAQCNAvBVCgABAI0C8FVNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEAAAA2AD0RAWhsc2xGbGFncwAweDEAaGxzbFRhcmdldAB2c180XzAAaGxzbEVudHJ5AG1haW4AAAAAACoAEBEAAAAAaAIAAAAAAADkAAAAAAAAAOQAAAAIEAAAVAAAAAEAoG1haW4AMgA%EQIQAAAJAHN0YWdlX2lucHV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEBAAUAAAAEAFQAAAABAOQAAAAAABYAUBEBAAUABAAEAFQAAAABAOQABAAAADoAPhEHEAAAiAA8bWFpbiByZXR1cm4gdmFsdWU%AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBECAAUAGAAEAFQAAAABAOQAIAAAABYAUBECAAUAHAAEAFQAAAABAOQAJAAAABYAUBECAAUAIAAEAFQAAAABAOQAKAAAABYAUBECAAUAJAAEAFQAAAABAOQALAAAABYAUBECAAUAEAAEAFQAAAABAOQAEAAAABYAUBECAAUAFAAEAFQAAAABAOQAFAAAABYAUBECAAUAAAAEAFQAAAABAOQAAAAAABYAUBECAAUABAAEAFQAAAABAOQABAAAABYAUBECAAUACAAEAFQAAAABAOQACAAAABYAUBECAAUADAAEAFQAAAABAOQADAAAACYATRGAAAAAZAIAAAAQAAAHAAkFDVQLYARwCAAJDg1TAVQMcAAAAAACAE4RAgAGAPQAAAAYAAAAAQAAABABccFlLUYEcfpT3:2DWMiNbAAA8gAAAKgAAAAAAAAAAQABADgBAAAAAAAADAAAAJwAAABUAAAAIAAAgFQAAAAgAAAAkAAAACAAAICQAAAAIAAAAMQAAAAlAACAxAAAACUAAAAAAQAAJQAAgAABAAAlAAAAFAEAACUAAIAUAQAAJQAAADQBAAAlAACANAEAACUAAAAFABAABQAPAAUAEAAFAA8ABQAYAAUAGAAFABgABQAYAAUAGAAFABgABQAYAAUAGAD2AAAAEAAAAAAAAAAAEAAAAAAAABUAAAAIAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAADRAAADgBAAAKAP::BAAAAP::AwAAAAAANAAAADQAAAAIAAAAPAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vESAAMSDRUDAAAQAAAAAHBvcwDy8SYABRUBAAAAARAAAAAAAAAAAAAACABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAIQAAAWABsVQAAAAAQAAAAQAGZsb2F0NADz8vFCAAMSDRUDAAQQAAAAAG9mZnNldADz8vENFQMAABAAABAAdGV4Q29vcmQA8Q0VAwAEEAAAGABnbF9Qb3NpdGlvbgDy8SoABRUDAAAABRAAAAAAAAAAAAAAKABTUElSVl9Dcm9zc19PdXRwdXQA8:LxCgAYFQYQAAABAAEADgAIEAcQAAAXAAEAAxAAAAoAGBUDAAAAAQABAA4ACBAJEAAAFwAAAAMAAAAKABgVABAAAAEAAQAKABgVCxAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgAEAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHR1cm4gc3RhZ2Vfb3V0cHV0Owp9CgAHAAAAlAAAAEooxATgAAAAAEAAAARAAABgAAAALAP::BAAAAP::AwAAAAAABAAAAAQAAAAIAAAADAAAAAAAAAAWAAEWAAAAAAoQAAB2ZXJ0X21haW4A8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEM0RTSERSADgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABgBAAAAAgAAAAMAAAAAAAAABYAARYAAAAAChAAAHZlcnRfbWFpbgDy8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xEAAAAAwCAAABAAAAAQAAABUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwhaW4AACIAUREMEAAACAAAAAAA::::::::c2NyZWVuU2l6ZUludggkvcJMQEBAAAADQAUjg4AFGsPAAEATAAAACAAAAAsAAAAWAAAAAAAAAAAAAAAFgAAABkAAAAAAAAAAAAAAAAAAAABAAAAAAAAADgBAAAgAABgAAAAAAAAAAAAAAAAAgAJAGwCAAAAAAAA6AAAAAEAAAAAAAAAAAAAAAAAAABtYWluAG5vbmUAAAAtui7xAQAAAAAAAAA4AQAAIAAAYAAAAAAAAAAAAAAAAAIAAgAHAAAAAAABAP::::8AAAAAOAEAAAgCAAAAAAAA:::::wAAAAD:::::AQABAAAAAQAAAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc21hYV9uZWlnaGJvcmhvb2RfYmxlbmQudmVydC5obHNsAAAAAP7v:u8BAAAAAQAAAAABAAAAAAAAAAAAAAD:::::::::::::DAD:::::::::::::AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACULjEBCFtiZAEAAAAHpRbXOiXKR6jsNXnvEAJvdgAAAC9MaW5rSW5mbwAvbmFtZXMAL3NyYy9oZWFkZXJibG9jawAvc3JjL2ZpbGVzL2M6XHdvcmtzcGFjZVxzdGVlbHNvdWxcZ2FtZVxidWlsZFx0ZW1wXHNtYWFfbmVpZ2hib3Job29kX2JsZW5kLnZlcnQuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAA0gAAAHABAABfAQAAUAAAAAAAAAA6BAAAgAAAAHUDAABgAwAAPAAAAAwAAAAoAAAALAIAACwAAAA4AAAAAwAAABgAAAAOAAAAFwAAABEAAAAKAAAABgAAABAAAAALAAAACAAAAAkAAAAMAAAADQAAAAcAAAAPAAAAEgAAABMAAAAUAAAAFg
kha_Shaders.ssao_pass_fragData0 = "s36348:AAVfZ2J1ZmZlckRfc2FtcGxlcgAAX2didWZmZXIwX3NhbXBsZXIAAWdidWZmZXJEAABnYnVmZmVyMAABJEdsb2JhbHMAAAVleWVMb29rAAAAAAAMAAAAAwFjYW1lcmFQcm9qABAAAAAIAAAAAgFzY3JlZW5TaXplABgAAAAIAAAAAgFleWUAIAAAAAwAAAADAWludlZQADAAAABAAAAABAREWEJDXQE7KjTkqEx9xWllyCeMlgEAAADcaQAABgAAADgAAABQAgAAnAIAANACAABYCwAA1AsAAFJERUYQAgAAAQAAAPwAAAAFAAAAHAAAAAAE::8BAQAA6AEAALwAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAzgAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAADgAAAAAgAAAAUAAAAEAAAA:::::wAAAAABAAAADQAAAOkAAAACAAAABQAAAAQAAAD:::::AQAAAAEAAAANAAAA8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABfZ2J1ZmZlckRfc2FtcGxlcgBfZ2J1ZmZlcjBfc2FtcGxlcgBnYnVmZmVyRABnYnVmZmVyMAAkR2xvYmFscwCr8gAAAAUAAAAUAQAAcAAAAAAAAAAAAAAAjAEAAAAAAAAMAAAAAgAAAJQBAAAAAAAApAEAABAAAAAIAAAAAgAAALABAAAAAAAAwAEAABgAAAAIAAAAAgAAALABAAAAAAAAywEAACAAAAAMAAAAAgAAAJQBAAAAAAAAzwEAADAAAABAAAAAAgAAANgBAAAAAAAAZXllTG9vawABAAMAAQADAAAAAAAAAAAAY2FtZXJhUHJvagCrAQADAAEAAgAAAAAAAAAAAHNjcmVlblNpemUAZXllAGludlZQAKurqwMAAwAEAAQAAAAAAAAAAABNaWNyb3NvZnQgKFIpIEhMU0wgU2hhZGVyIENvbXBpbGVyIDEwLjEASVNHTkQAAAACAAAACAAAADgAAAAAAAAAAAAAAAMAAAAAAAAAAwMAADgAAAABAAAAAAAAAAMAAAABAAAABwcAAFRFWENPT1JEAKurq09TR04sAAAAAQAAAAgAAAAgAAAAAAAAAAAAAAADAAAAAAAAAAEOAABTVl9UYXJnZXQAq6tTSERSgAgAAEAAAAAgAgAAWQAABEaOIAAAAAAABwAAAFoAAAMAYBAAAAAAAFoAAAMAYBAAAQAAAFgYAAQAcBAAAAAAAFVVAABYGAAEAHAQAAEAAABVVQAAYhAAAzIQEAAAAAAAYhAAA3IQEAABAAAAZQAAAxIgEAAAAAAAaAAAAgYAAABIAAAL8gAQAAAAAABGEBAAAAAAAEZ%EAAAAAAAAGAQAAAAAAABQAAAAAAAADIAAAkSABAAAAAAAAoAEAAAAAAAAUAAAAAAAEABQAAAAACAvzkAAAciABAAAAAAAAoAEAAAAAAAAUAAAAAAgD8fAAQDGgAQAAAAAABIAAAL8gAQAAEAAABGEBAAAAAAAEZ%EAABAAAAAGAQAAEAAAABQAAAAAAAAAAAAAviABAAAAAAAAYBEIDBAAAAAQAAAAJAAAAAAAAAAACAPwAAgD8AAIA:AAAACEIAEAACAAAAGgAQgMEAAAABAAAAGgAQAAAAAAAdAAAHIgAQAAAAAAAqABAAAgAAAAFAAAAAAAAAHQAACsIAEAABAAAABgQQAAEAAAACQAAAAAAAAAAAAAAAAAAAAAAAADcAAA:CABAAAQAAAKYOEAABAAAAAkAAAAAAAAAAAAAAAACAPwAAgD8CQAAAAAAAAAAAAAAAAIC:AACAvzgAAAfCABAAAAAAAKYOEAAAAAAApg4QAAEAAAA3AAAJMgAQAAIAAABWBRAAAAAAAEYAEAABAAAA5goQAAAAAAAQAAAHIgAQAAAAAABGAhAAAgAAAEYCEAACAAAARAAABSIAEAAAAAAAGgAQAAAAAAA4AAAH4gAQAAAAAABWBRAAAAAAAAYJEAACAAAAEAAABxIAEAABAAAARhIQAAEAAABGEhAAAQAAAEQAAAUSABAAAQAAAAoAEAABAAAAOAAAB3IAEAABAAAABgAQAAEAAABGEhAAAQAAADIAAAkSABAAAAAAAAoAEAAAAAAAAUAAAAAAAD8BQAAAAAAAPwAAAAkSABAAAAAAAAoAEAAAAAAACoAggEEAAAAAAAAAAQAAAA4AAAgSABAAAAAAABqAIAAAAAAAAQAAAAoAEAAAAAAAEAAACIIAEAABAAAARoIgAAAAAAAAAAAARgIQAAEAAAAOAAAHEgAQAAAAAAAKABAAAAAAADoAEAABAAAAOAAAB3IAEAACAAAABgAQAAAAAABGAhAAAQAAABAAAAeCABAAAQAAAEYCEAACAAAARgIQAAIAAABLAAAFggAQAAEAAAA6ABAAAQAAADgAAAcSABAAAgAAADoAEAABAAAAAUAAAAAAoEE4AAAIYgAQAAIAAAAGERAAAAAAAKaLIAAAAAAAAQAAABsAAAViABAAAgAAAFYGEAACAAAAJgAACADQAACCABAAAgAAABoAEAACAAAAAUAAAAMAAAAjAAAJIgAQAAIAAAAaABAAAgAAACoAEAACAAAAKgAQAAIAAABXAAAHIgAQAAIAAAAaABAAAgAAADoAEAACAAAAJgAACADQAAAiABAAAgAAABoAEAACAAAAAUAAAAoAAAArAAAFIgAQAAIAAAAaABAAAgAAADYAAAWCABAAAwAAAAFAAAAAAIA:NgAACMIAEAACAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAwAAABIQAABxIAEAAEAAAAOgAQAAIAAAABQAAACAAAAAMABAMKABAABAAAACsAAAUSABAABAAAADoAEAACAAAAAAAABxIAEAAEAAAACgAQAAQAAAABQAAAAAAAPzIAAAkSABAABAAAAAoAEAAEAAAAAUAAANsPST8aABAAAgAAAE0AAAcSABAABAAAABIAEAAFAAAACgAQAAQAAAA2AAAFIgAQAAUAAAAKABAABAAAAA4AAAcyABAABAAAAEYAEAAFAAAABgAQAAIAAAAAAAAHMgAQAAQAAABGABAABAAAAEYQEAAAAAAASAAAC:IAEAAFAAAARgAQAAQAAABGfhAAAAAAAABgEAAAAAAAAUAAAAAAAAAyAAAJQgAQAAMAAAAKABAABQAAAAFAAAAAAABAAUAAAAAAgL8AAAAIQgAQAAQAAAAaABCAQQAAAAQAAAABQAAAAACAPzIAAA8yABAAAwAAAIYAEAAEAAAAAkAAAAAAAEAAAABAAAAAAAAAAAACQAAAAACAvwAAgL8AAAAAAAAAABEAAAgSABAABAAAAEYOEAADAAAARo4gAAAAAAADAAAAEQAACCIAEAAEAAAARg4QAAMAAABGjiAAAAAAAAQAAAARAAAIQgAQAAQAAABGDhAAAwAAAEaOIAAAAAAABQAAABEAAAgSABAAAwAAAEYOEAADAAAARo4gAAAAAAAGAAAADgAAB3IAEAADAAAARgIQAAQAAAAGABAAAwAAAAAAAAlyABAAAwAAAEYCEAADAAAARoIggEEAAAAAAAAAAgAAADIAAApyABAAAwAAAEYCEIBBAAAAAQAAAAYAEAAAAAAARgIQAAMAAAAQAAAHEgAQAAQAAABGAhAAAwAAAJYHEAAAAAAAMgAAChIAEAAEAAAAOgAQgEEAAAABAAAAAUAAAG8SAzoKABAABAAAADQAAAcSABAABAAAAAoAEAAEAAAAAUAAAAAAAAAQAAAHEgAQAAMAAABGAhAAAwAAAEYCEAADAAAAAAAABxIAEAADAAAACgAQAAMAAAABQAAAj8J1PA4AAAcSABAAAwAAAAoAEAAEAAAACgAQAAMAAAAAAAAHQgAQAAIAAAAqABAAAgAAAAoAEAADAAAAHgAAB4IAEAACAAAAOgAQAAIAAAABQAAAAQAAABYAAAEyAAAKEiAQAAAAAAAqABCAQQAAAAIAAAABQAAAmpkZPQFAAAAAAIA:EgAAATYAAAUSIBAAAAAAAAFAAAAAAIA:FQAAAT4AAAFTVEFUdAAAAEcAAAAGAAAAAAAAAAMAAAAtAAAABQAAAAEAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAEAAAAAgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU1BEQgBeAABNaWNyb3NvZnQgQy9DKysgTVNGIDcuMDANChpEUwAAAAACAAACAAAALwwAAAAAAAAA:::::wlC4xAQhbYmQBAAAA8tMR7J0To0WULnOCkw%83QAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAADcyb3NzX0lucHV0CnsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyB2aWV3UmF5IDogVEVYQ09PUkQxOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKZmxvYXQzIGdldFBvc05vRXllKGZsb2F0MyBleWVMb29rXzEsIGZsb2F0MyB2aWV3UmF5XzEsIGZsb2F0IGRlcHRoLCBmbG9hdDIgY2FtZXJhUHJval8xKQp7CiAgICBmbG9hdCBsaW5lYXJEZXB0aCA9IGNhbWVyYVByb2pfMS55IC8gKCgoZGVwdGggKiAwLjVmKSArIDAuNWYpIC0gY2FtZXJhUHJval8xLngpOwogICAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMXWDAQBM6AMAWtUCAAhoAAAm9wIAcj0DAMHDAAAx%wMAqNEAAFCFAQDTYwAAWboDABlgAwBBJAEAUpsDAFaLAQDp8AIAmNkAAGefAQDDkwMA6nMDAMZaAAD0WgEAMu0AALisAwC4HAMADvYAACrSAgBiowIAscUAAD4DAwDurwdHVyZTJEPGZsb2F0ND4gZ2J1ZmZlckQgOiByZWdpc3Rlcih0MCk7ClNhbXBsZXJTdGF0ZSBfZ2J1ZmZlckRfc2FtcGxlciA6IHJlZ2lzdGVyKHMwKTsKVGV4dHVyZTJEPGZsb2F0ND4gZ2J1ZmZlcjAgOiByZWdpc3Rlcih0MSk7ClNhbXBsZXJTdGF0ZSBfZ2J1ZmZlcjBfc2FtcGxlciA6IHJlZ2lzdGVyKHMxKTsKdW5pZm9ybSBmbG9hdDMgZXllTG9vazsKdW5pZm9ybSBmbG9hdDIgY2FtZXJhUHJvajsKdW5pZm9ybSBmbG9hdDIgc2NyZWVuU2l6ZTsKdW5pZm9ybSBmbG9hdDMgZXllOwp1bmlmb3JtIGZsb2F0NHg0IGludlZQOwoKc3RhdGljIGZsb2F0MiB0ZXhDb29yZDsKc3RhdGljIGZsb2F0IGZyYWdDb2xvcjsKc3RhdGljIGZsb2F0MyB2aWV3UmF5OwoKc3RydWN0IFNQSVJWX0Nyb3NzX0lucHV0CnsKICAgIGZsb2F0MiB0ZXhDb29yZCA6IFRFWENPT1JEMDsKICAgIGZsb2F0MyB2aWV3UmF5IDogVEVYQ09PUkQxOwp9OwoKc3RydWN0IFNQSVJWX0Nyb3NzX091dHB1dAp7CiAgICBmbG9hdCBmcmFnQ29sb3IgOiBTVl9UYXJnZXQwOwp9OwoKZmxvYXQyIG9jdGFoZWRyb25XcmFwKGZsb2F0MiB2KQp7CiAgICByZXR1cm4gKDEuMGYueHggLSBhYnModi55eCkpICogZmxvYXQyKCh2LnggPj0gMC4wZikgPyAxLjBmIDogKC0xLjBmKSwgKHYueSA%PSAwLjBmKSA:IDEuMGYgOiAoLTEuMGYpKTsKfQoKZmxvYXQzIGdldFBvc05vRXllKGZsb2F0MyBleWVMb29rXzEsIGZsb2F0MyB2aWV3UmF5XzEsIGZsb2F0IGRlcHRoLCBmbG9hdDIgY2FtZXJhUHJval8xKQp7CiAgICBmbG9hdCBsaW5lYXJEZXB0aCA9IGNhbWVyYVByb2pfMS55IC8gKCgoZGVwdGggKiAwLjVmKSArIDAuNWYpIC0gY2FtZXJhUHJval8xLngpOwogICAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMSwgdmlld1JheV8xKTsKICAgIGZsb2F0MyB3cG9zaXRpb24gPSB2aWV3UmF5XzEgKiAobGluZWFyRGVwdGggLyB2aWV3WkRpc3QpOwogICAgcmV0dXJuIHdwb3NpdGlvbjsKfQoKZmxvYXQzIGdldFBvczJOb0V5ZShmbG9hdDMgZXllXzEsIGZsb2F0NHg0IGludlZQXzEsIGZsb2F0IGRlcHRoLCBpbm91dCBmbG9hdDIgY29vcmQpCnsKICAgIGNvb3JkLnkgPSAxLjBmIC0gY29vcmQueTsKICAgIGZsb2F0NCBwb3MgPSBmbG9hdDQoKGNvb3JkICogMi4wZikgLSAxLjBmLnh4LCBkZXB0aCwgMS4wZik7CiAgICBwb3MgPSBtdWwocG9zLCBpbnZWUF8xKTsKICAgIGZsb2F0MyBfOTMgPSBwb3MueHl6IC8gcG9zLncueHh4OwogICAgcG9zID0gZmxvYXQ0KF85My54LCBfOTMueSwgXzkzLnosIHBvcy53KTsKICAgIHJldHVybiBwb3MueHl6IC0gZXllXzE7Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQgZGVwdGggPSAoZ2J1ZmZlckQuU2FtcGxlTGV2ZWwoX2didWZmZXJEX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54ICogMi4wZikgLSAxLjBmOwogICAgaWYgKGRlcHRoID09IDEuMGYpCiAgICB7CiAgICAgICAgZnJhZ0NvbG9yID0gMS4wZjsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBmbG9hdDIgZW5jID0gZ2J1ZmZlcjAuU2FtcGxlTGV2ZWwoX2didWZmZXIwX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54eTsKICAgIGZsb2F0MyBuOwogICAgbi56ID0gKDEuMGYgLSBhYnMoZW5jLngpKSAtIGFicyhlbmMueSk7CiAgICBmbG9hdDIgXzE0MTsKICAgIGlmIChuLnogPj0gMC4wZikKICAgIHsKICAgICAgICBfMTQxID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xNDEgPSBvY3RhaGVkcm9uV3JhcChlbmMpOwogICAgfQogICAgbiA9IGZsb2F0MyhfMTQxLngsIF8xNDEueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBmbG9hdDMgdnJheSA9IG5vcm1hbGl6ZSh2aWV3UmF5KTsKICAgIGZsb2F0MyBjdXJyZW50UG9zID0gZ2V0UG9zTm9FeWUoZXllTG9vaywgdnJheSwgZGVwdGgsIGNhbWVyYVByb2opOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlID0gbGVuZ3RoKGN1cnJlbnRQb3MpOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlQSA9IChjdXJyZW50RGlzdGFuY2UgKiAyMC4wZikgKiAxLjBmOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlQiA9IGN1cnJlbnREaXN0YW5jZSAqIDAuMDAwNTAwMDAwMDIzNzQ4NzI1NjUyNjk0NzAyMTQ4NDM3NWY7CiAgICBpbnQyIHB4ID0gaW50Mih0ZXhDb29yZCAqIHNjcmVlblNpemUpOwogICAgZmxvYXQgcGhpID0gZmxvYXQoKCgzICogcHgueCkgXiAocHgueSArIChweC54ICogcHgueSkpKSAqIDEwKTsKICAgIGZyYWdDb2xvciA9IDAuMGY7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IDg7IGkrKykKICAgIHsKICAgICAgICBmbG9hdCB0aGV0YSA9ICgwLjc4NTM5ODE4NTI1MzE0MzMxMDU0Njg3NWYgKiAoZmxvYXQoaSkgKyAwLjVmKSkgKyBwaGk7CiAgICAgICAgZmxvYXQyIGsgPSBmbG9hdDIoY29zKHRoZXRhKSwgc2luKHRoZXRhKSkgLyBjdXJyZW50RGlzdGFuY2VBLnh4OwogICAgICAgIGRlcHRoID0gKGdidWZmZXJELlNhbXBsZUxldmVsKF9nYnVmZmVyRF9zYW1wbGVyLCB0ZXhDb29yZCArIGssIDAuMGYpLnggKiAyLjBmKSAtIDEuMGY7CiAgICAgICAgZmxvYXQyIHBhcmFtID0gdGV4Q29vcmQgKyBrOwogICAgICAgIGZsb2F0MyBfMjUzID0gZ2V0UG9zMk5vRXllKGV5ZSwgaW52VlAsIGRlcHRoLCBwYXJhbSk7CiAgICAgICAgZmxvYXQzIHBvcyA9IF8yNTMgLSBjdXJyZW50UG9zOwogICAgICAgIGZyYWdDb2xvciArPSAobWF4KDAuMGYsIGRvdChwb3MsIG4pIC0gY3VycmVudERpc3RhbmNlQikgLyAoZG90KHBvcywgcG9zKSArIDAuMDE0OTk5OTk5NjY0NzIzODczMTM4NDI3NzM0Mzc1ZikpOwogICAgfQogICAgZnJhZ0NvbG9yICo9IDAuMDM3NTAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1ZjsKICAgIGZyYWdDb2xvciA9IDEuMGYgLSBmcmFnQ29sb3I7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICB0ZXhDb29yZCA9IHN0YWdlX2lucHV0LnRleENvb3JkOwogICAgdmlld1JheSA9IHN0YWdlX2lucHV0LnZpZXdSYXk7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZnJhZ0NvbG9yID0gZnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQovAQAAAMkMAAAAQzpcV29ya3NwYWNlXFN0ZWVsU291bFxHYW1lXGJ1aWxkXHRlbXBcc3Nhb19wYXNzLmZyYWcuaGxzbAAAYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcc3Nhb19wYXNzLmZyYWcuaGxzbABUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyRCA6IHJlZ2lzdGVyKHQwKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyRF9zYW1wbGVyIDogcmVnaXN0ZXIoczApOwpUZXh0dXJlMkQ8ZmxvYXQ0PiBnYnVmZmVyMCA6IHJlZ2lzdGVyKHQxKTsKU2FtcGxlclN0YXRlIF9nYnVmZmVyMF9zYW1wbGVyIDogcmVnaXN0ZXIoczEpOwp1bmlmb3JtIGZsb2F0MyBleWVMb29rOwp1bmlmb3JtIGZsb2F0MiBjYW1lcmFQcm9qOwp1bmlmb3JtIGZsb2F0MiBzY3JlZW5TaXplOwp1bmlmb3JtIGZsb2F0MyBleWU7CnVuaWZvcm0gZmxvYXQ0eDQgaW52VlA7CgpzdGF0aWMgZmxvYXQyIHRleENvb3JkOwpzdGF0aWMgZmxvYXQgZnJhZ0NvbG9yOwpzdGF0aWMgZmxvYXQzIHZpZXdSYXk7CgpzdHJ1YxviMAGAAAAADKXotEiH2QEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAD0AAAAoAAAAG%IwAcbju3tQDAAAAQAAADwjQLwVQoAAQCNAvBVTWljcm9zb2Z0IChSKSBITFNMIFNoYWRlciBDb21waWxlciAxMC4xAAAANgA9EQFobHNsRmxhZ3MAMHgxAGhsc2xUYXJnZXQAcHNfNF8wAGhsc2xFbnRyeQBtYWluAAAAAAAqABARAAAAADgNAAAAAAAABAgAAAAAAAAECAAACBAAAHwAAAABAKBtYWluADIAPhEDEAAACQBzdGFnZV9pbnB1dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAQAFAAAABAB8AAAAAQAECAAAAAAWAFARAQAFAAQABAB8AAAAAQAECAQAAAAWAFARAQAFAAgABAB8AAAAAQAECBAAAAAWAFARAQAFAAwABAB8AAAAAQAECBQAAAAWAFARAQAFABAABAB8AAAAAQAECBgAAAAyAD4RQAAAAAAAZnJhZ0NvbG9yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgBQEQIAAQAAAAQAfAAAAAEABAjoBxQAAAAAABYAUBEAAAEAAAAEAMwEAAABAJQDKAAAAPoBTRGAAAAANA0AAAAQAAAHAAkFDVwLIA1MBgwDUAkJDSMGFANUCQUNKwYRAywNFAYEAyAJCQ0jBgwDHAkFDQUGAgOAgA0VBgQDJA0lBgIDTA1GBgIDTA0vBgIDgMANVQYEAzANKgYCAxwNQgYCAzQJCQ09BhADgJQJBQ0fBg0DFAkJDU4GBANMDUgGAgNUDV4GAgNMDT0GBANsDScGAgOBHA13BgIDKAkFDQUGAgOA0A0hBgQDIAkhDBwoCAAJFA1KAXwGTwMACRMNWwMsCQUNTAYMAyQJEg1IAygJEA0iBhQDLAkLDSoGEQMsCQkNEwYEAyAJEA0iBgwDHAkFDQUGAgOAgAkJDRQGBAMkCRMNJAYCA0wJGQ1FBgIDTAkdDS4GAgOAwAkeDVQGBAMwCRQNKAYCAxwJDw0pAyAJGQ0gBgIDFAkmDTkDIAkYDToDJAkXDUADHAkRDUEDIAkXDTwGEAMUCQUNHwYNAxQJFQ0ZAyQJNw0%BgQDKA1FAxQJFw1NAxwJGw0kBgIDJAkUDUcDHAk6DUUGAgMwCRINTAMcCRENXQMsCRcNPAYEAyQJFg0mBgIDgRwJIQ0rBgIDKA0%AxwJFw0:AygJRA1QAxwNdAMcCRcNdQMcCQkNdgMcCRwNHgYRAxwJBQ0FBhIDHAkRDSALRAkhDSEMHCguAD4RQAAAAAAAZGVwdGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAAABAAAABADMAAAAAQCsBxwCfAUAAAAAFgBQEQAAAQAAAAQABAYAAAEA%AA4AAAAKgA%EQAQAAAIAGVuYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAgAQAAAQB0ARAAAAAWAFARAAAFAAQABAAgAQAAAQCkARQAAAAqAD4RARAAAAgAbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUACAAEAGwBAAABAAwBKAAAABYAUBEAAAUAAAAEAHgCAAABAOwFBAAAABYAUBEAAAUABAAEAHgCAAABAOwFCAAAABYAUBEAAAUACAAEAHgCAAABAOwFDAAAACoAPhEAEAAACABfMTQxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQALAIAAAEAWAEgAAAAFgBQEQAABQAEAAQALAIAAAEAWAEkAAAAKgA%EQEQAAAIAHZyYXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABADEAgAAAQCgBRAAAAAWAFARAAAFAAQABADEAgAAAQCgBRQAAAAWAFARAAAFAAgABADEAgAAAQCgBRgAAAA2AD4RQAAAAAAAY3VycmVudERpc3RhbmNlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEALQDAAABALAEHAAAADYAPhFAAAAAAABjdXJyZW50RGlzdGFuY2VBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQA0AMAAAEAlAQgAAAAKgA%EQsQAAAIAHB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABAAEBAAAAQBEACQAAAAWAFARAAAFAAQABAAEBAAAAQDIACgAAAAqAD4RQAAAAAAAcGhpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEAJgEAAABAMwDJAAAACoAPhF0AAAAAABpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQAzAQAAAEAmAMsAAAALgA%EUAAAAAAAHRoZXRhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAAAQAAAAQATAUAAAEAHABAAAAAKgA%EQAQAAAIAGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABACYBQAAAQAcAEAAAAAWAFARAAAFAAQABACYBQAAAQAcAEQAAAAqAD4RARAAAAgAcG9zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAEgHAAABAHwAMAAAABYAUBEAAAUABAAEAEgHAAABAPAANAAAABYAUBEAAAUACAAEAEgHAAABAPAAOAAAADIAPhFAAAAAAABmcmFnQ29sb3IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAFARAgABAAAABAB8AAAAAQAECOgHFAAAAAAAFgBQEQAAAQAAAAQAzAQAAAEAlAMoAAAAPgBNEcABAACUCQAAARAAAAcACQUNagYCDCyApAyAgGgIAAkNDR8BgSAMLAAJTA1WA2gJSw1oAygJDA1pDBw8AEYAPhENEAAAiAA8b2N0YWhlZHJvbldyYXAgcmV0dXJuIHZhbHVlPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAAgCAAABACQACAAAABYAUBEAAAUABAAEAAgCAAABACQADAAAAAIAThFWAE0RwAEAAAQLAAACEAAABwAJBQ1UBgIDgkgNMAYCA2gNPQYCDDggCAAJLA1AAYLEC1AJKw1SAyQJGQ1TAyQJFw0vBgIDIAklDTsGAgMgCRgNPAwcHAAAMgA%EUAAAAAAAGxpbmVhckRlcHRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAEAAAAEACwDAAABADwAAAAAADIAPhFAAAAAAAB2aWV3WkRpc3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAABAAAABABMAwAAAQBUABwAAAAyAD4RARAAAAgAd3Bvc2l0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAhAMAAAEAHAAgAAAAFgBQEQAABQAEAAQAhAMAAAEAHAAkAAAAFgBQEQAABQAIAAQAhAMAAAEAHAAoAAAAAgBOEWoATRHAAQAAMA0AAAMQAAAHAAkFDRwGBgwUhBwNPwYDA4FsDRwGAgNcDSUGAgOAgA0bBgQMJBwIAAkLAYSYC3AEFAkaDSUGAwOBWAkZDTADIAkLDRsGAgM8CRINJAYCA4CACQwNGgYEDCQcAEIAPhEQEAAAiAA8Z2V0UG9zMk5vRXllIHJldHVybiB2YWx1ZT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgBQEQAABQAAAAQAIAcAAAEAKAAwAAAAFgBQEQAABQAEAAQAIAcAAAEAKAA0AAAAFgBQEQAABQAIAAQAIAcAAAEAKAA4AAAAKgA%ERUQAAAIAHBvcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAFARAAAFAAAABABgBgAAAQAgADAAAAAWAFARAAAFAAQABABgBgAAAQBAADQAAAAWAFARAAAFAAAABACABgAAAQDIAEAAAAAWAFARAAAFAAQABACgBgAAAQCoAEQAAAAWAFARAAAFAAgABADABgAAAQCIAEgAAAAWAFARAAAFAAwABADgBgAAAQAcADAAAAAqAD4RARAAAAgAXzkzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAUBEAAAUAAAAEAPwGAAABACQAMAAAABYAUBEAAAUABAAEAPwGAAABACQANAAAABYAUBEAAAUACAAEAPwGAAABACQAOAAAAAIAThECAE4RAgAGAB4AUhFAAAAAAAAAACgA::::::::ZnJhZ0NvbG9yAAAA9AAAABgAAAABAAAAEAFcqSf:ZT37TY7MzjnP3XoGAADyAAAAwAYAAAAAAAABAAEAgAgAAAAAAACOAAAAtAYAAHwAAABhAACAfAAAAGEAAACoAAAAYQAAgKgAAABhAAAAzAAAAGEAAIDMAAAAYQAAAOgAAABhAACA6AAAAGEAAAD0AAAAYQAAgPQAAABhAAAAIAEAAGEAAIAgAQAAYQAAAEwBAABhAACATAEAAGEAAABsAQAAYQAAgGwBAABhAAAAiAEAAGEAAICIAQAAYQAAALABAABhAACAsAEAAGEAAADsAQAAYQAAgOwBAABhAAAACAIAAGEAAIAIAgAAYQAAACwCAABhAACALAIAAGEAAABIAgAAYQAAgEgCAABhAAAAXAIAAGEAAIBcAgAAYQAAAHgCAABhAACAeAIAAGEAAACUAgAAYQAAgJQCAABhAAAAqAIAAGEAAICoAgAAYQAAAMQCAABhAACAxAIAAGEAAADoAgAAYQAAgOgCAABhAAAADAMAAGEAAIAMAwAAYQAAACwDAABhAACALAMAAGEAAABMAwAAYQAAgEwDAABhAAAAaAMAAGEAAIBoAwAAYQAAAIQDAABhAACAhAMAAGEAAACgAwAAYQAAgKADAABhAAAAtAMAAGEAAIC0AwAAYQAAANADAABhAACA0AMAAGEAAADwAwAAYQAAgPADAABhAAAABAQAAGEAAIAEBAAAYQAAACQEAABhAACAJAQAAGEAAABIBAAAYQAAgEgEAABhAAAAZAQAAGEAAIBkBAAAYQAAAIQEAABhAACAhAQAAGEAAACYBAAAYQAAgJgEAABhAAAArAQAAGEAAICsBAAAYQAAAMwEAABhAACAzAQAAGEAAADQBAAAYQAAgNAEAABhAAAA7AQAAGEAAIDsBAAAYQAAAPgEAABhAACA%AQAAGEAAAAMBQAAYQAAgAwFAABhAAAAKAUAAGEAAIAoBQAAYQAAAEwFAABhAACATAUAAGEAAABoBQAAYQAAgGgFAABhAAAAfAUAAGEAAIB8BQAAYQAAAJgFAABhAACAmAUAAGEAAAC0BQAAYQAAgLQFAABhAAAA4AUAAGEAAIDgBQAAYQAAAAQGAABhAACABAYAAGEAAAAkBgAAYQAAgCQGAABhAAAAYAYAAGEAAIBgBgAAYQAAAIAGAABhAACAgAYAAGEAAACgBgAAYQAAgKAGAABhAAAAwAYAAGEAAIDABgAAYQAAAOAGAABhAACA4AYAAGEAAAD8BgAAYQAAgPwGAABhAAAAIAcAAGEAAIAgBwAAYQAAAEgHAABhAACASAcAAGEAAABkBwAAYQAAgGQHAABhAAAAjAcAAGEAAICMBwAAYQAAAKgHAABhAACAqAcAAGEAAADEBwAAYQAAgMQHAABhAAAA4AcAAGEAAIDgBwAAYQAAAPwHAABhAACA:AcAAGEAAAAYCAAAYQAAgBgIAABhAAAANAgAAGEAAIA0CAAAYQAAADgIAABhAACAOAgAAGEAAABgCAAAYQAAgGAIAABhAAAAZAgAAGEAAIBkCAAAYQAAAHgIAABhAACAeAgAAGEAAAB8CAAAZAAAgHwIAABkAAAABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABAABQAPAAUAEAAFAA8ABQAQAAUADwAFABgABQAYAPYAAAA0AAAAAAAAAAAQAAAAAAAAMgAAAAEQAAAAAAAAGwAAAAIQAAAAAAAAIAAAAAMQAAAAAAAAKAAAACwAAAAAAAAAFAAAADQAAABcAAAAfAAAAKQAAADAAAAA4AAAAAABAAAYAQAANAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAEABmbG9hdDQA8:LxDgAXFRUQAAADAvBDAADy8QoAGBUWEAAAAQABAAoAGBUXEAAAAQAAAg4AFxUAAAAACgLwQwAA8vEKABgVGRAAAAEAAQAKABgVGhAAAAEAAAIKABgVEBAAAAEAAAIKABgVDRAAAAEAAAIKABgVEhAAAAEAAQAKABgVHhAAAAEAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8oxATgAAAAAEAAAIBAAAFwCAAAKAP::BAAAAP::AwAAAAAAgAAAAIAAAAAIAAAAiAAAAAAAAAAWABsVQAAAAAIAAAAIAGZsb2F0MgDz8vEWABsVQAAAAAMAAAAMAGZsb2F0MwDz8vEqAAMSDRUDAAAQAAAAAHRleENvb3JkAPENFQMAARAAAAgAdmlld1JheQDy8SYABRUCAAAAAhAAAAAAAAAAAAAAFABTUElSVl9Dcm9zc19JbnB1dAAKAAESAQAAAAMQAAAWAAMSDRUDAEAAAAAAAGZyYWdDb2xvcgAqAAUVAQAAAAUQAAAAAAAAAAAAAAQAU1BJUlZfQ3Jvc3NfT3V0cHV0APPy8QoAGBUGEAAAAQABAA4ACBAHEAAAFwABAAQQAAAKABgVAwAAAAEAAQAOAAgQCRAAABcAAAADAAAAEgAbFXQAAAACAAAACABpbnQyAPEKAAESAQAAAAAQAAAKABgVABAAAAEAAQAOAAgQDRAAABcAAQAMEAAAFgABEgQAAAABEAAAARAAAEAAAAAAEAAACgAYFQEQAAABAAEADgAIEBAQAAAXAAQADxAAAB4AHBVAAAAABAAAAAQAAAAQAAAAAEAAZmxvYXQ0eDQAFgABEgQAAAABEAAAEhAAAEAAAAAAEAAADgAIEBAQAAAXAAQAExAAABYAGxUpSwAAgBYBAMdFAACncwgdmlld1JheV8xKTsKICAgIGZsb2F0MyB3cG9zaXRpb24gPSB2aWV3UmF5XzEgKiAobGluZWFyRGVwdGggLyB2aWV3WkRpc3QpOwogICAgcmV0dXJuIHdwb3NpdGlvbjsKfQoKZmxvYXQzIGdldFBvczJOb0V5ZShmbG9hdDMgZXllXzEsIGZsb2F0NHg0IGludlZQXzEsIGZsb2F0IGRlcHRoLCBpbm91dCBmbG9hdDIgY29vcmQpCnsKICAgIGNvb3JkLnkgPSAxLjBmIC0gY29vcmQueTsKICAgIGZsb2F0NCBwb3MgPSBmbG9hdDQoKGNvb3JkICogMi4wZikgLSAxLjBmLnh4LCBkZXB0aCwgMS4wZik7CiAgICBwb3MgPSBtdWwocG9zLCBpbnZWUF8xKTsKICAgIGZsb2F0MyBfOTMgPSBwb3MueHl6IC8gcG9zLncueHh4OwogICAgcG9zID0gZmxvYXQ0KF85My54LCBfOTMueSwgXzkzLnosIHBvcy53KTsKICAgIHJldHVybiBwb3MueHl6IC0gZXllXzE7Cn0KCnZvaWQgZnJhZ19tYWluKCkKewogICAgZmxvYXQgZGVwdGggPSAoZ2J1ZmZlckQuU2FtcGxlTGV2ZWwoX2didWZmZXJEX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54ICogMi4wZikgLSAxLjBmOwogICAgaWYgKGRlcHRoID09IDEuMGYpCiAgICB7CiAgICAgICAgZnJhZ0NvbG9yID0gMS4wZjsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBmbG9hdDIgZW5jID0gZ2J1ZmZlcjAuU2FtcGxlTGV2ZWwoX2didWZmZXIwX3NhbXBsZXIsIHRleENvb3JkLCAwLjBmKS54eTsKICAgIGZsb2F0MyBuOwogICAgbi56ID0gKDEuMGYgLSBhYnMoZW5jLngpKSAtIGFicyhlbmMueSk7CiAgICBmbG9hdDIgXzE0MTsKICAgIGlmIChuLnogPj0gMC4wZikKICAgIHsKICAgICAgICBfMTQxID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xNDEgPSBvY3RhaGVkcm9uV3JhcChlbmMpOwogICAgfQogICAgbiA9IGZsb2F0MyhfMTQxLngsIF8xNDEueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBmbG9hdDMgdnJheSA9IG5vcm1hbGl6ZSh2aWV3UmF5KTsKICAgIGZsb2F0MyBjdXJyZW50UG9zID0gZ2V0UG9zTm9FeWUoZXllTG9vaywgdnJheSwgZGVwdGgsIGNhbWVyYVByb2opOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlID0gbGVuZ3RoKGN1cnJlbnRQb3MpOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlQSA9IChjdXJyZW50RGlzdGFuY2UgKiAyMC4wZikgKiAxLjBmOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlQiA9IGN1cnJlbnREaXN0YW5jZSAqIDAuMDAwNTAwMDAwMDIzNzQ4NzI1NjUyNjk0NzAyMTQ4NDM3NWY7CiAgICBpbnQyIHB4ID0gaW50Mih0ZXhDb29yZCAqIHNjcmVlblNpemUpOwogICAgZmxvYXQgcGhpID0gZmxvYXQoKCgzICogcHgueCkgXiAocHgueSArIChweC54ICogcHgueSkpKSAqIDEwKTsKICAgIGZyYWdDb2xvciA9IDAuMGY7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IDg7IGkrKykKICAgIHsKICAgICAgICBmbG9hdCB0aGV0YSA9ICgwLjc4NTM5ODE4NTI1MzE0MzMxMDU0Njg3NWYgKiAoZmxvYXQoaSkgKyAwLjVmKSkgKyBwaGk7CiAgICAgICAgZmxvYXQyIGsgPSBmbG9hdDIoY29zKHRoZXRhKSwgc2luKHRoZXRhKSkgLyBjdXJyZW50RGlzdGFuY2VBLnh4OwogICAgICAgIGRlcHRoID0gKGdidWZmZXJELlNhbXBsZUxldmVsKF9nYnVmZmVyRF9zYW1wbGVyLCB0ZXhDb29yZCArIGssIDAuMGYpLnggKiAyLjBmKSAtIDEuMGY7CiAgICAgICAgZmxvYXQyIHBhcmFtID0gdGV4Q29vcmQgKyBrOwogICAgICAgIGZsb2F0MyBfMjUzID0gZ2V0UG9zMk5vRXllKGV5ZSwgaW52VlAsIGRlcHRoLCBwYXJhbSk7CiAgICAgICAgZmxvYXQzIHBvcyA9IF8yNTMgLSBjdXJyZW50UG9zOwogICAgICAgIGZyYWdDb2xvciArPSAobWF4KDAuMGYsIGRvdChwb3MsIG4pIC0gY3VycmVudERpc3RhbmNlQikgLyAoZG90KHBvcywgcG9zKSArIDAuMDE0OTk5OTk5NjY0NzIzODczMTM4NDI3NzM0Mzc1ZikpOwogICAgfQogICAgZnJhZ0NvbG9yICo9IDAuMDM3NTAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1ZjsKICAgIGZyYWdDb2xvciA9IDEuMGYgLSBmcmFnQ29sb3I7Cn0KClNQSVJWX0Nyb3NzX091dHB1dCBtYWluKFNQSVJWX0Nyb3NzX0lucHV0IHN0YWdlX2lucHV0KQp7CiAgICB0ZXhDb29yZCA9IHN0YWdlX2lucHV0LnRleENvb3JkOwogICAgdmlld1JheSA9IHN0YWdlX2lucHV0LnZpZXdSYXk7CiAgICBmcmFnX21haW4oKTsKICAgIFNQSVJWX0Nyb3NzX091dHB1dCBzdGFnZV9vdXRwdXQ7CiAgICBzdGFnZV9vdXRwdXQuZnJhZ0NvbG9yID0gZnJhZ0NvbG9yOwogICAgcmV0dXJuIHN0YWdlX291dHB1dDsKfQoABwAAAD0AAAA8AAAAAAAAAAAAAAAAAAAAeAAAAAEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyjEBOAAAAAAQAAAEEAAAaAAAAAsA::8EAAAA::8DAAAAAAAQAAAAEAAAAAgAAAAYAAAAAAAAABYAARYAAAAAChAAAGZyYWdfbWFpbgDy8RoAARYAAAAADhAAAG9jdGFoZWRyb25XcmFwAPEWAAEWAAAAABEQAABnZXRQb3NOb0V5ZQAaAAEWAAAAABQQAABnZXRQb3MyTm9FeWUA8:LxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQzRFNIRFIAgAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGAQAAAACAAAABgAAAAAAAAAFgABFgAAAAAKEAAAZnJhZ19tYWluAPLxGgABFgAAAAAOEAAAb2N0YWhlZHJvbldyYXAA8RYAARYAAAAAERAAAGdldFBvc05vRXllABoAARYAAAAAFBAAAGdldFBvczJOb0V5ZQDz8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:::::xoJL:FYAAAAMAIAAOEAAAABAAAANQEAAAEAAAAVAAAAAQAAAAEAAAABAAAAXQAAAAEAAAAZAQAAAQAAAKUAAAABAAAAfQAAAAEAAAA1AAAAAQAAAMEAAAABAAAAAQEAAAEAAAAAAAAAAAAAAAAAAAAggAAAAkAAAAMAAAADwAAABIAAAAVAAAAGAAAABsAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAJREAAAAAgAAAAAEAbWFpbgAAHgBRERgQAAAHAP::::8AAP::::9nYnVmZmVyRAAAAAAmAFERGxAAAAYA::::::::AAD::19nYnVmZmVyRF9zYW1wbGVyAAAAHgBRERgQAAAHAP::::8BAP::::9nYnVmZmVyMAAAAAAmAFERGxAAAAYA::::::::AQD::19nYnVmZmVyMF9zYW1wbGVyAAAAGgBRERwQAAAIAAAAAAD:::::::9leWVMb29rAB4AUREdEAAACAAAABAA::::::::Y2FtZXJhUHJvagAAHgBRER0QAAAIAAAAGAD:::::::9zY3JlZW5TaXplAAAWAFERHBAAAAgAAAAgAP:::::::2V5ZQAaAFERHxAAAAgAAAAwAP:::::::2ludlZQAAAAHgBSEUAAAAAAAAAAKAD:::::::9mcmFnQ29sb3IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP::::8aCS:xdwkxAQEAAAANABSODgAUaw8AAQBMAAAAIAAAACwAAABIAAAAAAAAAAAAAAAWAAAAGQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAgAgAACAAAGAAAAAAAAAAAAAAAAACAAkAXA0AAAAAAAAkBwAAAQAAAAAAAAAAAAAAAAAAAG1haW4Abm9uZQAAAC26LvEBAAAAAAAAAIAIAAAgAABgAAAAAAAAAAAAAAAAAgACAAcAAAAAAAEA:::::wAAAACACAAACAIAAAAAAAD:::::AAAAAP::::8BAAEAAAABAAAAAABDOlxXb3Jrc3BhY2VcU3RlZWxTb3VsXEdhbWVcYnVpbGRcdGVtcFxzc2FvX3Bhc3MuZnJhZy5obHNsAAD%7:7vAQAAAAEAAAAAAQAAAAAAAAAAAAAA:::::::::::::wwA:::::::::::::wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQuMQEIW2JkAQAAAPLTEeydE6NFlC5zgpMPvN1oAAAAL0xpbmtJbmZvAC9uYW1lcwAvc3JjL2hlYWRlcmJsb2NrAC9zcmMvZmlsZXMvYzpcd29ya3NwYWNlXHN0ZWVsc291bFxnYW1lXGJ1aWxkXHRlbXBcc3Nhb19wYXNzLmZyYWcuaGxzbAAEAAAABgAAAAEAAAAeAAAAAAAAABEAAAAHAAAAIgAAAAgAAAAKAAAABgAAAAAAAAAFAAAAAAAAANxRMwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAADEAAAAlAIAAE8BAACgAAAAAAAAAPkMAACAAAAAUAwAALAUAACIAAAAGAAAACgAAACYAgAALAAAAFQBAAADAAAAKwAAAB0AAAAcAAAAKgAAACQAAAAPAAAABgAAAB8AAAAgAAAAIQAAACIAAAAjAAAAEAAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAARAAAAEgAAABMAAAAUAAAAFQAAABYAAAAXAAAAGAAAABkAAAAaAAAAGwAAAAcAAAAeAAAAJQAAACYAAAAnAAAAKQAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_System.dropFilesListeners = [];
kha_SystemImpl.maxGamepads = 4;
kha_SystemImpl.mouseLockListeners = [];
kha_Window.windows = [];
kha_WindowFeatures.None = 0;
kha_WindowFeatures.FeatureResizable = 1;
kha_WindowFeatures.FeatureMinimizable = 2;
kha_WindowFeatures.FeatureMaximizable = 4;
kha_WindowFeatures.FeatureBorderless = 8;
kha_WindowFeatures.FeatureOnTop = 16;
kha_arrays_ByteArray.LITTLE_ENDIAN = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x78;
kha_audio2_Audio.disableGcInteractions = false;
kha_audio2_Audio.intBox = new kha_internal_IntBox(0);
kha_audio2_Audio1.channelCount = 32;
kha_audio2_Audio1.lastAllocationCount = 0;
kha_audio2_ogg_tools_Crc32.POLY = 79764919;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.EOP = -1;
kha_audio2_ogg_vorbis_VorbisTools.M__PI = 3.14159265358979323846264;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_NUMER = 32;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_DENOM = 64;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_audio2_ogg_vorbis_data_Codebook.NO_CODE = 255;
kha_audio2_ogg_vorbis_data_Codebook.delay = 0;
kha_audio2_ogg_vorbis_data_Header.PACKET_ID = 1;
kha_audio2_ogg_vorbis_data_Header.PACKET_COMMENT = 3;
kha_audio2_ogg_vorbis_data_Header.PACKET_SETUP = 5;
kha_audio2_ogg_vorbis_data_PageFlag.CONTINUED_PACKET = 1;
kha_audio2_ogg_vorbis_data_PageFlag.FIRST_PAGE = 2;
kha_audio2_ogg_vorbis_data_PageFlag.LAST_PAGE = 4;
kha_audio2_ogg_vorbis_data_Setting.MAX_CHANNELS = 16;
kha_audio2_ogg_vorbis_data_Setting.PUSHDATA_CRC_COUNT = 4;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_LENGTH = 10;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_SIZE = 1024;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_MASK = 1023;
kha_graphics2_Graphics._hx_skip_constructor = false;
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	let _g = [];
	{
		let _g1 = 32;
		while(_g1 < 256) {
			let i = _g1++;
			_g.push(i);
		}
	}
	$r = _g;
	return $r;
}(this));
kha_graphics2_truetype_StbTruetype.STBTT_vmove = 1;
kha_graphics2_truetype_StbTruetype.STBTT_vline = 2;
kha_graphics2_truetype_StbTruetype.STBTT_vcurve = 3;
kha_graphics2_truetype_StbTruetype.STBTT_vcubic = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_BOLD = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_NONE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SYMBOL = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ROMAN = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ARABIC = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_HEBREW = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_GREEK = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_KOREAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
kha_graphics2_truetype_StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_RASTERIZER_VERSION = 2;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ImageShaderPainter.vertexSize = 6;
kha_graphics4_ColoredShaderPainter.bufferSize = 1000;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 1000;
kha_graphics4_TextShaderPainter.bufferSize = 1000;
kha_graphics4_VertexData.Float32_1X = 0;
kha_graphics4_VertexData.Float32_2X = 1;
kha_graphics4_VertexData.Float32_3X = 2;
kha_graphics4_VertexData.Float32_4X = 3;
kha_graphics4_VertexData.Float32_4X4 = 4;
kha_graphics4_VertexData.Int8_1X = 5;
kha_graphics4_VertexData.UInt8_1X = 6;
kha_graphics4_VertexData.Int8_1X_Normalized = 7;
kha_graphics4_VertexData.UInt8_1X_Normalized = 8;
kha_graphics4_VertexData.Int8_2X = 9;
kha_graphics4_VertexData.UInt8_2X = 10;
kha_graphics4_VertexData.Int8_2X_Normalized = 11;
kha_graphics4_VertexData.UInt8_2X_Normalized = 12;
kha_graphics4_VertexData.Int8_4X = 13;
kha_graphics4_VertexData.UInt8_4X = 14;
kha_graphics4_VertexData.Int8_4X_Normalized = 15;
kha_graphics4_VertexData.UInt8_4X_Normalized = 16;
kha_graphics4_VertexData.Int16_1X = 17;
kha_graphics4_VertexData.UInt16_1X = 18;
kha_graphics4_VertexData.Int16_1X_Normalized = 19;
kha_graphics4_VertexData.UInt16_1X_Normalized = 20;
kha_graphics4_VertexData.Int16_2X = 21;
kha_graphics4_VertexData.UInt16_2X = 22;
kha_graphics4_VertexData.Int16_2X_Normalized = 23;
kha_graphics4_VertexData.UInt16_2X_Normalized = 24;
kha_graphics4_VertexData.Int16_4X = 25;
kha_graphics4_VertexData.UInt16_4X = 26;
kha_graphics4_VertexData.Int16_4X_Normalized = 27;
kha_graphics4_VertexData.UInt16_4X_Normalized = 28;
kha_graphics4_VertexData.Int32_1X = 29;
kha_graphics4_VertexData.UInt32_1X = 30;
kha_graphics4_VertexData.Int32_2X = 31;
kha_graphics4_VertexData.UInt32_2X = 32;
kha_graphics4_VertexData.Int32_3X = 33;
kha_graphics4_VertexData.UInt32_3X = 34;
kha_graphics4_VertexData.Int32_4X = 35;
kha_graphics4_VertexData.UInt32_4X = 36;
kha_graphics4_VertexData.Float1 = 0;
kha_graphics4_VertexData.Float2 = 1;
kha_graphics4_VertexData.Float3 = 2;
kha_graphics4_VertexData.Float4 = 3;
kha_graphics4_VertexData.Float4x4 = 4;
kha_graphics4_VertexData.Short2Norm = 23;
kha_graphics4_VertexData.Short4Norm = 27;
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Keyboard.keyBehavior = kha_input_BlockInterventions.Default;
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Mouse.wheelEventBlockBehavior = kha_input_MouseEventBlockBehavior.Full;
kha_input_Surface.touchDownEventBlockBehavior = kha_input_TouchDownEventBlockBehavior.Full;
kha_internal_BytesBlob.bufferSize = 2000;
kha_krom_Graphics.mat = kha_arrays_Float32Array._new(16);
kha_math_Matrix3.width = 3;
kha_math_Matrix3.height = 3;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_netsync_ControllerBuilder.nextId = 0;
kha_netsync_Session.START = 0;
kha_netsync_Session.ENTITY_UPDATES = 1;
kha_netsync_Session.CONTROLLER_UPDATES = 2;
kha_netsync_Session.REMOTE_CALL = 3;
kha_netsync_Session.PING = 4;
kha_netsync_Session.SESSION_ERROR = 5;
kha_netsync_Session.PLAYER_UPDATES = 6;
kha_netsync_Session.RPC_SERVER = 0;
kha_netsync_Session.RPC_ALL = 1;
kha_netsync_SyncBuilder.nextId = 0;
kha_netsync_SyncBuilder.objects = [];
zui_Ext.dataPath = "";
zui_Ext.lastPath = "";
zui_Ext.textAreaLineNumbers = false;
zui_Ext.textAreaScrollPastEnd = false;
zui_Ext._ELEMENT_OFFSET = 0;
zui_Ext._BUTTON_COL = 0;
zui_Ext.kx = 1.0;
zui_Ext.ky = 0.66666666666666663;
zui_Ext.kz = 0.33333333333333331;
zui_Ext.kw = 3.0;
zui_Ext.ar = [0.0,0.0,0.0];
zui_Ext.Kx = 0.0;
zui_Ext.Ky = -0.33333333333333331;
zui_Ext.Kz = 0.66666666666666663;
zui_Ext.Kw = -1.0;
zui_Ext.e = 1.0e-10;
zui_Id.i = 0;
zui_Themes.dark = { NAME : "Default Dark", WINDOW_BG_COL : -14079703, WINDOW_TINT_COL : -1, ACCENT_COL : -13027015, ACCENT_HOVER_COL : -12369085, ACCENT_SELECT_COL : -11513776, BUTTON_COL : -13092808, BUTTON_TEXT_COL : -1513499, BUTTON_HOVER_COL : -11974327, BUTTON_PRESSED_COL : -15000805, TEXT_COL : -1513499, LABEL_COL : -3618616, SEPARATOR_COL : -14671840, HIGHLIGHT_COL : -14656100, CONTEXT_COL : -14540254, PANEL_BG_COL : -12895429, FONT_SIZE : 13, ELEMENT_W : 100, ELEMENT_H : 24, ELEMENT_OFFSET : 4, ARROW_SIZE : 5, BUTTON_H : 22, CHECK_SIZE : 15, CHECK_SELECT_SIZE : 8, SCROLL_W : 9, TEXT_OFFSET : 8, TAB_W : 6, FILL_WINDOW_BG : false, FILL_BUTTON_BG : true, FILL_ACCENT_BG : false, LINK_STYLE : 0, FULL_TABS : false};
zui_Zui.alwaysRedrawWindow = true;
zui_Zui.keyRepeat = true;
zui_Zui.dynamicGlyphLoad = true;
zui_Zui.touchScroll = false;
zui_Zui.touchHold = false;
zui_Zui.touchTooltip = false;
zui_Zui.keyRepeatTime = 0.0;
zui_Zui.textToPaste = "";
zui_Zui.textToCopy = "";
zui_Zui.isCut = false;
zui_Zui.isCopy = false;
zui_Zui.isPaste = false;
zui_Zui.copyFrame = 0;
zui_Zui.comboFirst = true;
Main.main();

//# sourceMappingURL=krom.js.temp.map